var N = null;var searchIndex = {};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting,…","items":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix","","Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style","","A style is a collection of properties that can format a…",N,N],[12,"foreground","","The style's foreground colour, if it has one.",0,N],[12,"background","","The style's background colour, if it has one.",0,N],[12,"is_bold","","Whether this style is bold.",0,N],[12,"is_dimmed","","Whether this style is dimmed.",0,N],[12,"is_italic","","Whether this style is italic.",0,N],[12,"is_underline","","Whether this style is underlined.",0,N],[12,"is_blink","","Whether this style is blinking.",0,N],[12,"is_reverse","","Whether this style has reverse colours.",0,N],[12,"is_hidden","","Whether this style is hidden.",0,N],[12,"is_strikethrough","","Whether this style is struckthrough.",0,N],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",N,N],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0","","",1,N],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",N,N],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",N,N],[11,"prefix","","The prefix for this style.",0,[[["self"]],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["self"],["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[["self"]],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[["self"]],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["self"],["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[["self"]],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[["self"]],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[["self"]],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["self"],["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[["self"],["i"]],["ansigenericstring"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[["self"],["i"]],["ansigenericstring"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",N,N],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",N,N],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",N,N],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["style"]],["bool"]]],[11,"ne","","",0,[[["self"],["style"]],["bool"]]],[11,"eq","","",2,[[["self"],["colour"]],["bool"]]],[11,"ne","","",2,[[["self"],["colour"]],["bool"]]],[11,"eq","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"ne","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"clone","","",3,[[["self"]],["prefix"]]],[11,"clone","","",4,[[["self"]],["infix"]]],[11,"clone","","",5,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",6,[[["self"]],["ansigenericstring"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from","","",6,[[["i"]],["ansigenericstring"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"deref","","",6,[[["self"]],["s"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["self"],["w"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["self"],["w"]],["result"]]]],"paths":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","items":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout","","",0,N],[13,"Stderr","","",0,N],[13,"Stdin","","",0,N],[5,"is","","returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"paths":[[4,"Stream"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",N,N],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",N,N],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",N,N],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",N,N],[4,"BytesOrWideString","","A platform independent representation of a string. When…",N,N],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,N],[13,"Wide","","Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",N,N],[5,"trace","","Inspects the current call-stack, passing all active frames…",N,[[["f"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",N,N],[11,"ip","","Returns the current instruction pointer of this frame.",1,N],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",1,N],[11,"name","","Returns the name of this function.",2,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",2,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],["option",["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",2,[[["self"]],["option",["u32"]]]],[11,"filename","","Returns the file name where this function was defined.",2,[[["self"]],["option",["path"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",3,N],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is…",3,[[["self"]],["option",["str"]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",3,N],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],["cow",["str"]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[["self"]],["pathbuf"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",4,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",4,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",4,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",5,N],[11,"symbol_address","","Same as `Frame::symbol_address`",5,N],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",5,N],[11,"name","","Same as `Symbol::name`",6,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",6,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",6,[[["self"]],["option",["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",6,[[["self"]],["option",["u32"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from","","",4,[[["vec",["backtraceframe"]]],["self"]]],[11,"clone","","",4,[[["self"]],["backtrace"]]],[11,"clone","","",5,[[["self"]],["backtraceframe"]]],[11,"clone","","",6,[[["self"]],["backtracesymbol"]]],[11,"default","","",4,[[],["backtrace"]]],[11,"into","","",4,[[["self"]],["vec",["backtraceframe"]]]]],"paths":[[4,"BytesOrWideString"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"]={"doc":"","items":[[4,"backtrace_state","backtrace_sys","",N,N],[5,"backtrace_create_state","","",N,N],[5,"backtrace_syminfo","","",N,N],[5,"backtrace_pcinfo","","",N,N],[6,"backtrace_syminfo_callback","","",N,N],[6,"backtrace_full_callback","","",N,N],[6,"backtrace_error_callback","","",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"backtrace_state"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["calloop"]={"doc":"Calloop, a Callback-based Event Loop","items":[[3,"EventLoop","calloop","An event loop",N,N],[3,"InsertError","","An error generated when trying to insert an event source",N,N],[12,"source","","The source that could not be inserted",0,N],[12,"error","","The generated error",0,N],[3,"LoopHandle","","An handle to an event loop",N,N],[3,"LoopSignal","","A signal that can be shared between thread to stop or…",N,N],[3,"Source","","An event source that has been inserted into the event loop",N,N],[3,"Idle","","An idle callback that was inserted in this loop",N,N],[0,"channel","","An MPSC channel whose receiving end is an event source",N,N],[4,"SendError","calloop::channel","An error returned from the `Sender::send` or…",N,N],[13,"Io","","An IO error.",1,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",1,N],[3,"Sender","","The sending half of a channel.",N,N],[3,"SyncSender","","The sending half of a synchronous channel.",N,N],[4,"TrySendError","","An error returned from the `SyncSender::try_send` function.",N,N],[13,"Io","","An IO error.",2,N],[13,"Full","","Data could not be sent because it would require the callee…",2,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",2,N],[3,"Channel","","The receiving end of the channel",N,N],[4,"Event","","The events generated by the channel event source",N,N],[13,"Msg","","A message was received and is bundled here",3,N],[13,"Closed","","The channel was closed",3,N],[5,"channel","","Create a new asynchronous channel",N,N],[5,"sync_channel","","Create a new synchronous, bounded channel",N,N],[0,"generic","calloop","A generic event source wrapping an `Evented` type",N,N],[3,"Generic","calloop::generic","A generic event source wrapping an `Evented` type",N,N],[3,"Event","","An event generated by the `Generic` source",N,N],[12,"source","","An access to the source that generated this event",4,N],[12,"readiness","","The associated rediness",4,N],[3,"EventedFd","","An owning wrapper implementing Evented for any file…",N,N],[12,"0","","",5,N],[3,"EventedRawFd","","A wrapper implementing Evented for any raw file descriptor.",N,N],[12,"0","","",6,N],[0,"signals","calloop","Event source for tracking Unix signals",N,N],[4,"Signal","calloop::signals","",N,N],[13,"SIGHUP","","",7,N],[13,"SIGINT","","",7,N],[13,"SIGQUIT","","",7,N],[13,"SIGILL","","",7,N],[13,"SIGTRAP","","",7,N],[13,"SIGABRT","","",7,N],[13,"SIGBUS","","",7,N],[13,"SIGFPE","","",7,N],[13,"SIGKILL","","",7,N],[13,"SIGUSR1","","",7,N],[13,"SIGSEGV","","",7,N],[13,"SIGUSR2","","",7,N],[13,"SIGPIPE","","",7,N],[13,"SIGALRM","","",7,N],[13,"SIGTERM","","",7,N],[13,"SIGSTKFLT","","",7,N],[13,"SIGCHLD","","",7,N],[13,"SIGCONT","","",7,N],[13,"SIGSTOP","","",7,N],[13,"SIGTSTP","","",7,N],[13,"SIGTTIN","","",7,N],[13,"SIGTTOU","","",7,N],[13,"SIGURG","","",7,N],[13,"SIGXCPU","","",7,N],[13,"SIGXFSZ","","",7,N],[13,"SIGVTALRM","","",7,N],[13,"SIGPROF","","",7,N],[13,"SIGWINCH","","",7,N],[13,"SIGIO","","",7,N],[13,"SIGPWR","","",7,N],[13,"SIGSYS","","",7,N],[3,"siginfo","","",N,N],[12,"ssi_signo","","",8,N],[12,"ssi_errno","","",8,N],[12,"ssi_code","","",8,N],[12,"ssi_pid","","",8,N],[12,"ssi_uid","","",8,N],[12,"ssi_fd","","",8,N],[12,"ssi_tid","","",8,N],[12,"ssi_band","","",8,N],[12,"ssi_overrun","","",8,N],[12,"ssi_trapno","","",8,N],[12,"ssi_status","","",8,N],[12,"ssi_int","","",8,N],[12,"ssi_ptr","","",8,N],[12,"ssi_utime","","",8,N],[12,"ssi_stime","","",8,N],[12,"ssi_addr","","",8,N],[12,"ssi_addr_lsb","","",8,N],[12,"ssi_syscall","","",8,N],[12,"ssi_call_addr","","",8,N],[12,"ssi_arch","","",8,N],[3,"Event","","An event generated by the signal event source",N,N],[3,"Signals","","An event source for receiving Unix signals",N,N],[0,"timer","calloop","Timer-based event sources",N,N],[3,"Timeout","calloop::timer","A timeout, as returned by `Timer::set_timeout`.",N,N],[3,"Timer","","A Timer event source",N,N],[3,"TimerHandle","","An handle to a timer, used to set or cancel timeouts",N,N],[11,"insert_source","calloop","Insert an new event source in the loop",9,[[["self"],["e"],["f"]],["result",["source","inserterror"]]]],[11,"insert_idle","","Insert an idle callback",9,[[["self"],["f"]],["idle"]]],[11,"new","","Create a new event loop",10,[[],["result",["eventloop"]]]],[11,"handle","","Retrieve a loop handle",10,[[["self"]],["loophandle"]]],[11,"dispatch","","Dispatch pending events to their callbacks",10,[[["self"],["option",["duration"]],["data"]],["result"]]],[11,"get_signal","","Get a signal to stop this event loop from running",10,[[["self"]],["loopsignal"]]],[11,"run","","Run this event loop",10,[[["self"],["option",["duration"]],["data"],["f"]],["result"]]],[11,"stop","","Stop the event loop",11,[[["self"]]]],[11,"wakeup","","Wake up the event loop",11,[[["self"]]]],[11,"new","calloop::generic","Wrap an `Evented` type into a `Generic` event source",12,[[["e"]],["generic"]]],[11,"from_rc","","Wrap an `Evented` type from an `Rc` into a `Generic` event…",12,[[["rc",["refcell"]]],["generic"]]],[11,"set_interest","","Change the interest for this evented source",12,[[["self"],["ready"]]]],[11,"set_pollopts","","Change the poll options for this evented source",12,[[["self"],["pollopt"]]]],[11,"clone_inner","","Get a clone of the inner `Rc` wrapping your event source",12,[[["self"]],["rc",["refcell"]]]],[11,"unwrap","","Unwrap the `Generic` source to retrieve the underlying…",12,[[["self"]],["rc",["refcell"]]]],[11,"from_fd_source","","Wrap a file descriptor based source into a `Generic` event…",12,[[["fd"]],["generic",["eventedfd"]]]],[11,"from_raw_fd","","Wrap a raw file descriptor into a `Generic` event source.",12,[[["rawfd"]],["generic",["eventedrawfd"]]]],[11,"signal","calloop::signals","Retrieve the signal number that was receive",13,[[["self"]],["signal"]]],[11,"full_info","","Access the full `siginfo_t` associated with this signal…",13,[[["self"]],["siginfo"]]],[11,"new","","Create a new signal event source listening on the…",14,N],[11,"add_signals","","Add a list of signals to the signals source",14,N],[11,"remove_signals","","Remove a list of signals to the signals source",14,N],[11,"set_signals","","Replace the list of signals of the source",14,N],[11,"new","calloop::timer","Create a new timer with default parameters",15,[[],["timer"]]],[11,"with_resolution","","Create a new timer with a specific time resolution",15,[[["duration"]],["timer"]]],[11,"handle","","Get an handle for this timer",15,[[["self"]],["timerhandle"]]],[11,"add_timeout","","Set a new timeout",16,[[["self"],["duration"],["t"]],["timeout"]]],[11,"cancel_timeout","","Cancel a previsouly set timeout and retrieve the…",16,[[["self"],["timeout"]],["option"]]],[11,"reregister","calloop","Refresh the registration of this event source to the loop",17,[[["self"]],["result"]]],[11,"remove","","Remove this source from the event loop",17,[[["self"]],["e"]]],[11,"cancel","","Cancel the idle callback if it was not already run",18,[[["self"]]]],[8,"EventSource","","Trait representing a source that can be inserted into an…",N,N],[16,"Event","","The type of events generated by your sources",19,N],[10,"interest","","The interest value that will be given to `mio` when…",19,[[["self"]],["ready"]]],[10,"pollopts","","The pollopt value that will be given to `mio` when…",19,[[["self"]],["pollopt"]]],[10,"make_dispatcher","","Wrap an user callback into a dispatcher, that will convert…",19,[[["self"],["f"]],["rc",["refcell"]]]],[8,"EventDispatcher","","An event dispatcher",N,N],[10,"ready","","The source has a readiness event",20,[[["self"],["ready"],["data"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_string","calloop::channel","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","calloop::generic","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","calloop::signals","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","calloop::timer","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"clone","calloop::signals","",8,[[["self"]],["signalfd_siginfo"]]],[11,"from","calloop::channel","",2,[[["trysenderror"]],["trysenderror"]]],[11,"from","","",2,[[["error"]],["trysenderror"]]],[11,"from","","",1,[[["error"]],["senderror"]]],[11,"from","","",1,[[["senderror"]],["senderror"]]],[11,"from","","",2,[[["senderror"]],["trysenderror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",22,[[["self"]],["syncsender"]]],[11,"clone","","",21,[[["self"]],["sender"]]],[11,"clone","calloop::timer","",24,[[["self"]],["timeout"]]],[11,"description","calloop::channel","",1,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","calloop::timer","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","calloop::signals","",7,N],[11,"cmp","","",7,[[["self"],["signal"]],["ordering"]]],[11,"as_ref","","",7,[[["self"]],["str"]]],[11,"partial_cmp","","",7,[[["self"],["signal"]],["option",["ordering"]]]],[11,"from_str","","",7,[[["str"]],["result",["signal","error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",7,[[["self"],["signal"]],["bool"]]],[11,"clone","","",7,[[["self"]],["signal"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"interest","calloop::channel","",23,[[["self"]],["ready"]]],[11,"pollopts","","",23,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",23,[[["self"],["f"]],["rc",["refcell"]]]],[11,"interest","calloop::generic","",12,[[["self"]],["ready"]]],[11,"pollopts","","",12,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",12,[[["self"],["f"]],["rc",["refcell"]]]],[11,"interest","calloop::signals","",14,[[["self"]],["ready"]]],[11,"pollopts","","",14,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",14,[[["self"],["f"]],["rc",["refcell"]]]],[11,"interest","calloop::timer","",15,[[["self"]],["ready"]]],[11,"pollopts","","",15,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",15,[[["self"],["f"]],["rc",["refcell"]]]],[11,"clone","calloop","",9,[[["self"]],["loophandle"]]],[11,"clone","","",11,[[["self"]],["loopsignal"]]],[11,"clone","calloop::signals","",13,[[["self"]],["event"]]],[11,"clone","calloop::timer","",16,[[["self"]],["timerhandle"]]],[11,"drop","calloop::signals","",14,[[["self"]]]],[11,"fmt","calloop","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","","",17,[[["self"]],["e"]]],[11,"deref","","",17,[[["self"]],["e"]]],[11,"register","calloop::channel","",23,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",23,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",23,[[["self"],["poll"]],["result"]]],[11,"register","calloop::generic","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"register","","",12,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",12,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",12,[[["self"],["poll"]],["result"]]],[11,"register","calloop::signals","",14,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",14,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",14,[[["self"],["poll"]],["result"]]],[11,"register","calloop::timer","",15,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",15,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",15,[[["self"],["poll"]],["result"]]],[11,"send","calloop::channel","Attempts to send a value on this channel, returning it…",21,[[["self"],["t"]],["result",["senderror"]]]],[11,"send","","Sends a value on this synchronous channel.",22,[[["self"],["t"]],["result",["senderror"]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",22,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"iterator","calloop::signals","",7,[[],["signaliterator"]]],[11,"from_c_int","","",7,[[["i32"]],["result",["signal","error"]]]]],"paths":[[3,"InsertError"],[4,"SendError"],[4,"TrySendError"],[4,"Event"],[3,"Event"],[3,"EventedFd"],[3,"EventedRawFd"],[4,"Signal"],[3,"siginfo"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Generic"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Source"],[3,"Idle"],[8,"EventSource"],[8,"EventDispatcher"],[3,"Sender"],[3,"SyncSender"],[3,"Channel"],[3,"Timeout"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["chrono"]={"doc":"Chrono: Date and Time for Rust","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,"Date","","ISO 8601 calendar date with time zone.",N,N],[3,"DateTime","","ISO 8601 combined date and time with time zone.",N,N],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with…",N,N],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",N,N],[13,"Secs","","Format whole seconds only, with no decimal point nor…",0,N],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",0,N],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",0,N],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",0,N],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,N],[4,"Weekday","","The day of week.",N,N],[13,"Mon","","Monday.",1,N],[13,"Tue","","Tuesday.",1,N],[13,"Wed","","Wednesday.",1,N],[13,"Thu","","Thursday.",1,N],[13,"Fri","","Friday.",1,N],[13,"Sat","","Saturday.",1,N],[13,"Sun","","Sunday.",1,N],[0,"prelude","","A convenience module appropriate for glob imports (`use…",N,N],[0,"offset","","The time zone, which calculates offsets from the local…",N,N],[3,"Utc","chrono::offset","The UTC time zone. This is the most efficient time zone…",N,N],[3,"FixedOffset","","The time zone with fixed offset, from UTC-23:59:59 to…",N,N],[3,"Local","","The local timescale. This is implemented via the standard…",N,N],[4,"LocalResult","","The conversion result from the local time to the…",N,N],[13,"None","","Given local time representation is invalid. This can occur…",2,N],[13,"Single","","Given local time representation has a single unique result.",2,N],[13,"Ambiguous","","Given local time representation has multiple results and…",2,N],[11,"today","","Returns a `Date` which corresponds to the current date.",3,[[],["date",["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",3,[[],["datetime",["utc"]]]],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",4,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",4,[[["i32"]],["option",["fixedoffset"]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",4,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",4,[[["i32"]],["option",["fixedoffset"]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",4,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",4,[[["self"]],["i32"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",5,[[],["date",["local"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",5,[[],["datetime",["local"]]]],[8,"Offset","","The offset from the local time to UTC.",N,N],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],["fixedoffset"]]],[8,"TimeZone","","The time zone.",N,N],[16,"Offset","","An associated offset type. This type is used to store the…",7,N],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",7,[[["self"],["i32"],["u32"],["u32"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",7,[[["self"],["i32"],["u32"],["u32"]],["localresult",["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",7,[[["self"],["i32"],["u32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",7,[[["self"],["i32"],["u32"]],["localresult",["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",7,[[["self"],["i32"],["u32"],["weekday"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",7,[[["self"],["i32"],["u32"],["weekday"]],["localresult",["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["self"],["i64"],["u32"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["self"],["i64"],["u32"]],["localresult",["datetime"]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",7,[[["self"],["i64"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",7,[[["self"],["i64"]],["localresult",["datetime"]]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",7,[[["self"],["str"],["str"]],["parseresult",["datetime"]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",7,N],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",7,[[["self"],["naivedate"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",7,[[["self"],["naivedate"]],["localresult",["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["self"],["naivedatetime"]],["localresult",["datetime"]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",7,N],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",7,N],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["self"],["naivedate"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["self"],["naivedatetime"]],["datetime"]]],[11,"single","","Returns `Some` only when the conversion result is unique,…",2,[[["self"]],["option"]]],[11,"earliest","","Returns `Some` for the earliest possible conversion…",2,[[["self"]],["option"]]],[11,"latest","","Returns `Some` for the latest possible conversion result,…",2,[[["self"]],["option"]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["self"],["f"]],["localresult"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",2,[[["self"],["naivetime"]],["localresult",["datetime"]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",2,[[["self"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"unwrap","","Returns the single unique conversion result, or panics…",2,[[["self"]],["t"]]],[0,"naive","chrono","Date and time types which do not concern about the…",N,N],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every…",N,N],[3,"IsoWeek","","ISO 8601 week.",N,N],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",N,N],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",N,N],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["i32"],["u32"],["u32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["i32"],["u32"],["u32"]],["option",["naivedate"]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["i32"],["u32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["i32"],["u32"]],["option",["naivedate"]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["i32"],["u32"],["weekday"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["i32"],["u32"],["weekday"]],["option",["naivedate"]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since…",8,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since…",8,[[["i32"]],["option",["naivedate"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",8,[[["str"],["str"]],["parseresult",["naivedate"]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],["naivetime"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["option",["naivedate"]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["option",["naivedate"]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",8,[[["self"],["oldduration"]],["option",["naivedate"]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",8,[[["self"],["oldduration"]],["option",["naivedate"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",8,[[["self"],["naivedate"]],["oldduration"]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",8,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",8,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[11,"year","","Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week","","Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0","","Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"],["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"],["u32"]],["option",["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",10,[[["str"],["str"]],["parseresult",["naivetime"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",10,N],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",10,N],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",10,[[["self"],["naivetime"]],["oldduration"]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",10,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the…",10,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",11,[[["naivedate"],["naivetime"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["option",["naivedatetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",11,[[["str"],["str"]],["parseresult",["naivedatetime"]]]],[11,"date","","Retrieves a date component.",11,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",11,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",11,[[["self"],["oldduration"]],["option",["naivedatetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",11,[[["self"],["oldduration"]],["option",["naivedatetime"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",11,[[["self"],["naivedatetime"]],["oldduration"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",11,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",11,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[17,"MIN_DATE","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",N,N],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",N,N],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,N],[11,"and_time","","Makes a new `DateTime` from the current date and given…",12,[[["self"],["naivetime"]],["option",["datetime"]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["self"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["self"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"succ","","Makes a new `Date` for the next date.",12,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",12,[[["self"]],["option",["date"]]]],[11,"pred","","Makes a new `Date` for the prior date.",12,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",12,[[["self"]],["option",["date"]]]],[11,"offset","","Retrieves an associated offset from UTC.",12,N],[11,"timezone","","Retrieves an associated time zone.",12,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",12,[[["self"],["tz2"]],["date"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",12,[[["self"],["oldduration"]],["option",["date"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",12,[[["self"],["oldduration"]],["option",["date"]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",12,[[["self"],["date"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",12,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",12,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",12,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",12,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",13,N],[11,"date","","Retrieves a date component.",13,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",13,N],[11,"timezone","","Retrieves an associated time zone.",13,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",13,[[["self"],["tz2"]],["datetime"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",13,[[["self"],["oldduration"]],["option",["datetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",13,[[["self"],["oldduration"]],["option",["datetime"]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",13,[[["self"],["datetime"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",13,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",13,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],["parseresult",["datetime"]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],["parseresult",["datetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",13,[[["str"],["str"]],["parseresult",["datetime"]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",13,[[["self"],["secondsformat"],["bool"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",13,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",13,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"format","","Formatting (and parsing) utilities for date and time.",N,N],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of…",N,N],[12,"year","","Year.",14,N],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE…",14,N],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,N],[12,"isoyear","","Year in the ISO week date.",14,N],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that…",14,N],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the…",14,N],[12,"month","","Month (1--12).",14,N],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday…",14,N],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday…",14,N],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,N],[12,"weekday","","Day of the week.",14,N],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,N],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,N],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,N],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,N],[12,"minute","","Minute number (0--59).",14,N],[12,"second","","Second number (0--60, accounting for leap seconds).",14,N],[12,"nanosecond","","The number of nanoseconds since the whole second…",14,N],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on…",14,N],[12,"offset","","Offset from the local time to UTC, in seconds.",14,N],[3,"InternalNumeric","","An opaque type representing numeric item types for…",N,N],[3,"InternalFixed","","An opaque type representing fixed-format item types for…",N,N],[3,"ParseError","","An error from the `parse` function.",N,N],[3,"DelayedFormat","","A temporary object which can be used as an argument to…",N,N],[4,"Pad","","Padding characters for numeric items.",N,N],[13,"None","","No padding.",15,N],[13,"Zero","","Zero (`0`) padding.",15,N],[13,"Space","","Space padding.",15,N],[4,"Numeric","","Numeric item types. They have associated formatting width…",N,N],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before…",16,N],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2).…",16,N],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,N],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years…",16,N],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2).…",16,N],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,N],[13,"Month","","Month (FW=PW=2).",16,N],[13,"Day","","Day of the month (FW=PW=2).",16,N],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday…",16,N],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday…",16,N],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,N],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6…",16,N],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,N],[13,"Ordinal","","Day of the year (FW=PW=3).",16,N],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,N],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,N],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,N],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,N],[13,"Nanosecond","","The number of nanoseconds since the last whole second…",16,N],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on…",16,N],[13,"Internal","","Internal uses only.",16,N],[4,"Fixed","","Fixed-format item types.",N,N],[13,"ShortMonthName","","Abbreviated month names.",17,N],[13,"LongMonthName","","Full month names.",17,N],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,N],[13,"LongWeekdayName","","Full day of the week names.",17,N],[13,"LowerAmPm","","AM/PM.",17,N],[13,"UpperAmPm","","AM/PM.",17,N],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned…",17,N],[13,"Nanosecond3","","Same to `Nanosecond` but the accuracy is fixed to 3.",17,N],[13,"Nanosecond6","","Same to `Nanosecond` but the accuracy is fixed to 6.",17,N],[13,"Nanosecond9","","Same to `Nanosecond` but the accuracy is fixed to 9.",17,N],[13,"TimezoneName","","Timezone name.",17,N],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,N],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,N],[13,"TimezoneOffset","","Same to `TimezoneOffsetColon` but prints no colon. Parsing…",17,N],[13,"TimezoneOffsetZ","","Same to `TimezoneOffsetColonZ` but prints no colon.…",17,N],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and…",17,N],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,N],[13,"Internal","","Internal uses only.",17,N],[4,"Item","","A single formatting item. This is used for both formatting…",N,N],[13,"Literal","","A literally printed and parsed text.",18,N],[13,"OwnedLiteral","","Same to `Literal` but with the string owned by the item.",18,N],[13,"Space","","Whitespace. Prints literally but reads zero or more…",18,N],[13,"OwnedSpace","","Same to `Space` but with the string owned by the item.",18,N],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal…",18,N],[13,"Fixed","","Fixed-format item.",18,N],[13,"Error","","Issues a formatting error. Used to signal an invalid…",18,N],[5,"parse","","Tries to parse given string into `parsed` with given…",N,[[["parsed"],["str"],["i"]],["parseresult"]]],[5,"format","","Tries to format given arguments with given formatting…",N,[[["formatter"],["option",["naivedate"]],["option",["naivetime"]],["option"],["i"]],["result"]]],[11,"new","","Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year","","Tries to set the `year` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_month","","Tries to set the `month` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,[[["self"],["weekday"]],["parseresult"]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_day","","Tries to set the `day` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],["parseresult"]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour…",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_minute","","Tries to set the `minute` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_second","","Tries to set the `second` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_offset","","Tries to set the `offset` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,[[["self"]],["parseresult",["naivedate"]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,[[["self"]],["parseresult",["naivetime"]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],["parseresult",["naivedatetime"]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],["parseresult",["fixedoffset"]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"]],["parseresult",["datetime"]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"],["tz"]],["parseresult",["datetime"]]]],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting…",N,N],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",N,N],[11,"new","","Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],["strftimeitems"]]],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",N,N],[11,"new","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivedate"]],["option",["naivetime"]],["i"]],["delayedformat"]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivedate"]],["option",["naivetime"]],["off"],["i"]],["delayedformat"]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",N,N],[17,"MAX_DATE","","The maximum possible `Date`.",N,N],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",N,N],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",21,[[["self"],["u16"]],["self"]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",21,[[["self"],["u16"]],["self"]]],[8,"Datelike","","The common set of methods for date component.",N,N],[10,"year","","Returns the year number in the calendar date.",22,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",22,N],[10,"month","","Returns the month number starting from 1.",22,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",22,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",22,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",22,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",22,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",22,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",22,[[["self"]],["weekday"]]],[10,"iso_week","","Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,"with_year","","Makes a new value with the year number changed.",22,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",22,[[["self"],["u32"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",22,[[["self"],["u32"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",22,[[["self"],["u32"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",22,[[["self"],["u32"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",22,[[["self"],["u32"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",22,[[["self"],["u32"]],["option"]]],[11,"num_days_from_ce","","Returns the number of days since January 1, Year 1 (aka…",22,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",N,N],[10,"hour","","Returns the hour number from 0 to 23.",23,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",23,N],[10,"minute","","Returns the minute number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",23,[[["self"],["u32"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",23,[[["self"],["u32"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",23,[[["self"],["u32"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",23,[[["self"],["u32"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",23,[[["self"]],["u32"]]],[11,"succ","","The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","chrono::offset","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","chrono::naive","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","chrono::format","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","chrono::format::strftime","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"sub","chrono","",24,[[["self"],["duration"]],["duration"]]],[11,"hash","","",24,N],[11,"mul","","",24,[[["self"],["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",24,[[["self"],["duration"]],["bool"]]],[11,"ne","","",24,[[["self"],["duration"]],["bool"]]],[11,"div","","",24,[[["self"],["i32"]],["duration"]]],[11,"clone","","",24,[[["self"]],["duration"]]],[11,"add","","",24,[[["self"],["duration"]],["duration"]]],[11,"cmp","","",24,[[["self"],["duration"]],["ordering"]]],[11,"neg","","",24,[[["self"]],["duration"]]],[11,"partial_cmp","","",24,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["duration"]],["bool"]]],[11,"le","","",24,[[["self"],["duration"]],["bool"]]],[11,"gt","","",24,[[["self"],["duration"]],["bool"]]],[11,"ge","","",24,[[["self"],["duration"]],["bool"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fix","chrono::offset","",3,[[["self"]],["fixedoffset"]]],[11,"fix","","",4,[[["self"]],["fixedoffset"]]],[11,"from_offset","","",3,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",3,[[["self"],["naivedate"]],["localresult",["utc"]]]],[11,"offset_from_local_datetime","","",3,[[["self"],["naivedatetime"]],["localresult",["utc"]]]],[11,"offset_from_utc_date","","",3,[[["self"],["naivedate"]],["utc"]]],[11,"offset_from_utc_datetime","","",3,[[["self"],["naivedatetime"]],["utc"]]],[11,"from_offset","","",4,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",4,[[["self"],["naivedate"]],["localresult",["fixedoffset"]]]],[11,"offset_from_local_datetime","","",4,[[["self"],["naivedatetime"]],["localresult",["fixedoffset"]]]],[11,"offset_from_utc_date","","",4,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",4,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_offset","","",5,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",5,[[["self"],["naivedate"]],["localresult",["fixedoffset"]]]],[11,"offset_from_local_datetime","","",5,[[["self"],["naivedatetime"]],["localresult",["fixedoffset"]]]],[11,"offset_from_utc_date","","",5,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",5,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_local_date","","",5,[[["self"],["naivedate"]],["localresult",["date"]]]],[11,"from_local_datetime","","",5,[[["self"],["naivedatetime"]],["localresult",["datetime"]]]],[11,"from_utc_date","","",5,[[["self"],["naivedate"]],["date",["local"]]]],[11,"from_utc_datetime","","",5,[[["self"],["naivedatetime"]],["datetime",["local"]]]],[11,"year","chrono::naive","Returns the year number in the calendar date.",8,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",8,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",8,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",8,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",8,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",8,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",8,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",8,[[["self"]],["weekday"]]],[11,"iso_week","","",8,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],["option",["naivedate"]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"year","","Returns the year number in the calendar date.",11,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",11,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",11,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",11,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",11,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",11,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",11,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",11,[[["self"]],["weekday"]]],[11,"iso_week","","",11,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],["option",["naivedatetime"]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"year","chrono","",12,[[["self"]],["i32"]]],[11,"month","","",12,[[["self"]],["u32"]]],[11,"month0","","",12,[[["self"]],["u32"]]],[11,"day","","",12,[[["self"]],["u32"]]],[11,"day0","","",12,[[["self"]],["u32"]]],[11,"ordinal","","",12,[[["self"]],["u32"]]],[11,"ordinal0","","",12,[[["self"]],["u32"]]],[11,"weekday","","",12,[[["self"]],["weekday"]]],[11,"iso_week","","",12,[[["self"]],["isoweek"]]],[11,"with_year","","",12,[[["self"],["i32"]],["option",["date"]]]],[11,"with_month","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_month0","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_day","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_day0","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_ordinal","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_ordinal0","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"year","","",13,[[["self"]],["i32"]]],[11,"month","","",13,[[["self"]],["u32"]]],[11,"month0","","",13,[[["self"]],["u32"]]],[11,"day","","",13,[[["self"]],["u32"]]],[11,"day0","","",13,[[["self"]],["u32"]]],[11,"ordinal","","",13,[[["self"]],["u32"]]],[11,"ordinal0","","",13,[[["self"]],["u32"]]],[11,"weekday","","",13,[[["self"]],["weekday"]]],[11,"iso_week","","",13,[[["self"]],["isoweek"]]],[11,"with_year","","",13,[[["self"],["i32"]],["option",["datetime"]]]],[11,"with_month","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_month0","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_day","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_day0","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_ordinal","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_ordinal0","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"hour","chrono::naive","Returns the hour number from 0 to 23.",10,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",10,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",10,[[["self"]],["u32"]]],[11,"hour","","Returns the hour number from 0 to 23.",11,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",11,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"hour","chrono","",13,[[["self"]],["u32"]]],[11,"minute","","",13,[[["self"]],["u32"]]],[11,"second","","",13,[[["self"]],["u32"]]],[11,"nanosecond","","",13,[[["self"]],["u32"]]],[11,"with_hour","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_minute","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_second","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_nanosecond","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"next","chrono::format::strftime","",19,[[["self"]],["option",["item"]]]],[11,"eq","chrono::offset","",2,[[["self"],["localresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["localresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["utc"]],["bool"]]],[11,"eq","","",4,[[["self"],["fixedoffset"]],["bool"]]],[11,"ne","","",4,[[["self"],["fixedoffset"]],["bool"]]],[11,"eq","chrono::naive","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ne","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"eq","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"ne","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"eq","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"ne","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"eq","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ne","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"eq","chrono","",12,[[["self"],["date"]],["bool"]]],[11,"eq","","",0,[[["self"],["secondsformat"]],["bool"]]],[11,"eq","","",13,[[["self"],["datetime"]],["bool"]]],[11,"eq","chrono::format","",15,[[["self"],["pad"]],["bool"]]],[11,"eq","","",16,[[["self"],["numeric"]],["bool"]]],[11,"ne","","",16,[[["self"],["numeric"]],["bool"]]],[11,"eq","","",26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq","","",17,[[["self"],["fixed"]],["bool"]]],[11,"ne","","",17,[[["self"],["fixed"]],["bool"]]],[11,"eq","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"ne","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"eq","","",18,[[["self"],["item"]],["bool"]]],[11,"ne","","",18,[[["self"],["item"]],["bool"]]],[11,"eq","","",28,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",28,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",14,[[["self"],["parsed"]],["bool"]]],[11,"ne","","",14,[[["self"],["parsed"]],["bool"]]],[11,"eq","chrono","",1,[[["self"],["weekday"]],["bool"]]],[11,"eq","","",25,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"ne","","",25,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"default","chrono::format","",14,[[],["parsed"]]],[11,"cmp","chrono::naive","",8,[[["self"],["naivedate"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["isoweek"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["naivetime"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["naivedatetime"]],["ordering"]]],[11,"cmp","chrono","",12,[[["self"],["date"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["datetime"]],["ordering"]]],[11,"clone","chrono::offset","",2,[[["self"]],["localresult"]]],[11,"clone","","",3,[[["self"]],["utc"]]],[11,"clone","","",4,[[["self"]],["fixedoffset"]]],[11,"clone","","",5,[[["self"]],["local"]]],[11,"clone","chrono::naive","",8,[[["self"]],["naivedate"]]],[11,"clone","","",9,[[["self"]],["isoweek"]]],[11,"clone","","",10,[[["self"]],["naivetime"]]],[11,"clone","","",11,[[["self"]],["naivedatetime"]]],[11,"clone","chrono","",12,[[["self"]],["date"]]],[11,"clone","","",0,[[["self"]],["secondsformat"]]],[11,"clone","","",13,[[["self"]],["datetime"]]],[11,"clone","chrono::format","",15,[[["self"]],["pad"]]],[11,"clone","","",16,[[["self"]],["numeric"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["fixed"]]],[11,"clone","","",27,[[["self"]],["internalfixed"]]],[11,"clone","","",18,[[["self"]],["item"]]],[11,"clone","","",28,[[["self"]],["parseerror"]]],[11,"clone","","",14,[[["self"]],["parsed"]]],[11,"clone","chrono::format::strftime","",19,[[["self"]],["strftimeitems"]]],[11,"clone","chrono","",1,[[["self"]],["weekday"]]],[11,"clone","","",25,[[["self"]],["parseweekdayerror"]]],[11,"from","","",13,[[["systemtime"]],["datetime",["utc"]]]],[11,"from","","",13,[[["systemtime"]],["datetime",["local"]]]],[11,"partial_cmp","chrono::naive","",8,[[["self"],["naivedate"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"le","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"gt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ge","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["isoweek"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"le","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"gt","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"ge","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["naivetime"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"le","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"gt","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"ge","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["naivedatetime"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"le","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"gt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ge","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"partial_cmp","chrono","",12,[[["self"],["date"]],["option",["ordering"]]]],[11,"partial_cmp","","",13,[[["self"],["datetime"]],["option",["ordering"]]]],[11,"fmt","chrono::offset","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format::strftime","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::offset","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"hash","chrono::offset","",4,N],[11,"hash","chrono::naive","",8,N],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","chrono","",12,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["h"]]]],[11,"hash","","",1,N],[11,"add","chrono::naive","",10,[[["self"],["fixedoffset"]],["naivetime"]]],[11,"add","","",11,[[["self"],["fixedoffset"]],["naivedatetime"]]],[11,"add","chrono","",13,[[["self"],["fixedoffset"]],["datetime"]]],[11,"add","chrono::naive","",8,[[["self"],["oldduration"]],["naivedate"]]],[11,"add","","",10,[[["self"],["oldduration"]],["naivetime"]]],[11,"add","","",11,[[["self"],["oldduration"]],["naivedatetime"]]],[11,"add","chrono","",12,[[["self"],["oldduration"]],["date"]]],[11,"add","","",13,[[["self"],["oldduration"]],["datetime"]]],[11,"sub","chrono::naive","",10,[[["self"],["fixedoffset"]],["naivetime"]]],[11,"sub","","",11,[[["self"],["fixedoffset"]],["naivedatetime"]]],[11,"sub","chrono","",13,[[["self"],["fixedoffset"]],["datetime"]]],[11,"sub","chrono::naive","",8,[[["self"],["oldduration"]],["naivedate"]]],[11,"sub","","",8,[[["self"],["naivedate"]],["oldduration"]]],[11,"sub","","",10,[[["self"],["oldduration"]],["naivetime"]]],[11,"sub","","",10,[[["self"],["naivetime"]],["oldduration"]]],[11,"sub","","",11,[[["self"],["oldduration"]],["naivedatetime"]]],[11,"sub","","",11,[[["self"],["naivedatetime"]],["oldduration"]]],[11,"sub","chrono","",12,[[["self"],["oldduration"]],["date"]]],[11,"sub","","",12,[[["self"],["date"]],["oldduration"]]],[11,"sub","","",13,[[["self"],["oldduration"]],["datetime"]]],[11,"sub","","",13,[[["self"],["datetime"]],["oldduration"]]],[11,"add_assign","chrono::naive","",8,[[["self"],["oldduration"]]]],[11,"add_assign","","",10,[[["self"],["oldduration"]]]],[11,"add_assign","","",11,[[["self"],["oldduration"]]]],[11,"sub_assign","","",8,[[["self"],["oldduration"]]]],[11,"sub_assign","","",10,[[["self"],["oldduration"]]]],[11,"sub_assign","","",11,[[["self"],["oldduration"]]]],[11,"from_str","","",8,[[["str"]],["parseresult",["naivedate"]]]],[11,"from_str","","",10,[[["str"]],["parseresult",["naivetime"]]]],[11,"from_str","","",11,[[["str"]],["parseresult",["naivedatetime"]]]],[11,"from_str","chrono","",13,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",13,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",13,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"description","chrono::format","",28,[[["self"]],["str"]]],[11,"from_i64","chrono","",1,[[["i64"]],["option",["weekday"]]]],[11,"from_u64","","",1,[[["u64"]],["option",["weekday"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",24,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",24,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",24,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",24,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",24,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",24,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",24,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",24,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",24,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",24,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",24,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",24,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",24,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",24,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",24,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",24,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",24,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",24,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",24,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",24,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",24,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",24,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",24,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",24,[[["duration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",24,[[["self"]],["result",["duration","outofrangeerror"]]]]],"paths":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"Utc"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"ParseWeekdayError"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"]]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","items":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"ArgMatches","","Used to get information about the arguments that where…",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument…",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[3,"Values","","An iterator for getting multiple values out of an argument…",N,N],[3,"App","","Used to create a representation of a command line program…",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",0,N],[12,"kind","","The type of error",0,N],[12,"info","","Any additional information passed along, such as the…",0,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",N,N],[13,"Required","","The argument must be used",1,N],[13,"Multiple","","The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,N],[13,"Global","","The argument should be propagated down through all child…",1,N],[13,"Hidden","","The argument should not be shown in help text",1,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",1,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues","","Hides the possible values from the help string",1,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,N],[13,"RequireEquals","","Require options use `--option=val` syntax",1,N],[13,"Last","","Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue","","Hides the default value from the help string",1,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues","","Hides ENV values in the help message",1,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,N],[4,"AppSettings","","Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",3,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",3,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",3,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format","","Represents a [Format error] (which is a part of…",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["s"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["s"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["self"],["s"]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["self"],["s"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["self"],["s"]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["self"],["s"]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["self"],["s"]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["self"],["s"]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["self"],["s"]],["self"]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["self"],["s"]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["self"],["s"]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["self"],["s"]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["self"],["s"]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["self"],["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,N],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["self"],["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["self"],["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[["self"],["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[["self"],["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["self"],["a"]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[["self"],["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["self"],["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["self"],["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[["self"],["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[["self"],["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["self"],["w"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["self"],["s"],["shell"],["t"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["self"],["s"],["shell"],["w"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[["self"]],["clapresult",["argmatches"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the…",6,[[["self"],["s"]],["self"]]],[11,"long","","Sets the long version of the argument without the…",6,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,N],[11,"help","","Sets the short help text of the argument that will be…",6,[[["self"],["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[["self"],["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[["self"],["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[["self"],["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[["self"],["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["self"],["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",6,[[["self"],["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",6,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",6,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[["self"],["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,N],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[["self"],["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[["self"],["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,N],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[["self"],["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,N],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["self"],["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[["self"],["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[["self"],["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["self"],["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[["self"],["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[["self"],["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[["self"],["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[["self"],["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["self"],["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,N],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[["self"],["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[["self"],["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[["self"],["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",6,N],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[["self"],["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[["self"],["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[["self"],["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[["self"],["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[["self"],["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[["self"],["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[["self"],["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[["self"],["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,N],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[["self"],["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[["self"],["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["self"],["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["self"],["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["self"],["str"],["option",["osstr"]],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,N],[11,"env","","Specifies that if the value is not passed in as an…",6,[[["self"],["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["self"],["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["self"],["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[["self"],["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[["self"],["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[["self"],["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["self"],["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["self"],["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument…",6,[[["self"],["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the…",6,[[["self"],["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,N],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",9,[[["self"],["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",9,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",9,[[["self"],["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will…",9,[[["self"],["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",9,[[["self"],["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",9,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",9,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",9,N],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,N],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[6,"Result","","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum","","Convenience macro to generate more complete enums with…",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors","","Allows you to pull the authors for the app from your…",N,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate","","Allows you to build the `App` instance from your…",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",11,[[["self"]],["option",["str"]]]],[11,"size_hint","","",11,N],[11,"next","","",10,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",10,N],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"next_back","","",11,[[["self"]],["option",["str"]]]],[11,"next_back","","",10,[[["self"]],["option",["osstr"]]]],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",9,[[],["arggroup"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["subcommand"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["argsettings"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",9,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["derive_more"]={"doc":"`derive_more` Rust has lots of builtin traits that are…","items":[],"paths":[]};
searchIndex["derive_new"]={"doc":"A custom derive implementation for `#[derive(new)]`","items":[[24,"new","derive_new","",N,N]],"paths":[]};
searchIndex["downcast_rs"]={"doc":"Rust enums are great for types where all variations are…","items":[[8,"Downcast","downcast_rs","Supports conversion to `Any`. Traits to be extended by…",N,N],[10,"into_any","","Convert `Box<Trait>` (where `Trait: Downcast`) to…",0,[[["box"]],["box",["any"]]]],[10,"as_any","","Convert `&Trait` (where `Trait: Downcast`) to `&Any`. This…",0,[[["self"]],["any"]]],[10,"as_any_mut","","Convert `&mut Trait` (where `Trait: Downcast`) to `&Any`.…",0,[[["self"]],["any"]]],[14,"impl_downcast","","Adds downcasting support to traits that extend…",N,N]],"paths":[[8,"Downcast"]]};
searchIndex["exitfailure"]={"doc":"Some newtype wrappers to help with using ? in main()","items":[[3,"ExitFailure","exitfailure","The newtype wrapper around `failure::Error`",N,N],[3,"ExitDisplay","","A newtype wrapper around `E: std::fmt::Display`",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",1,[[["e"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ExitFailure"],[3,"ExitDisplay"]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","items":[[3,"Backtrace","failure","A `Backtrace`.",N,N],[3,"Compat","","A compatibility wrapper around an error type from this…",N,N],[3,"Context","","An error with context around it.",N,N],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error","","The `Error` type, which can contain any failure.",N,N],[3,"Causes","","A iterator over the causes of a `Fail`",N,N],[5,"err_msg","","Constructs a `Fail` type from a string.",N,[[["d"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[["self"]],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["self"],["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name","","Returns the name of the underlying fail.",4,[[["self"]],["option",["str"]]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[["self"]],["compat",["error"]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["result",["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",N,N],[8,"AsFail","","The `AsFail` trait",N,N],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",N,N],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[["self"]],["result",["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["self"],["d"]],["result",["context"]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[["self"],["f"]],["result",["context"]]]],[8,"Fail","","The `Fail` trait.",N,N],[11,"name","","Returns the \"name\" of the error.",7,[[["self"]],["option",["str"]]]],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[["self"]],["option",["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],["option",["backtrace"]]]],[11,"context","","Provides context for this failure.",7,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[["self"]],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",N,N],[14,"ensure","","Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err","","Constructs an `Error` using the standard string…",N,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"name","","",2,[[["self"]],["option",["str"]]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"next","","",8,[[["self"]],["option",["fail"]]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":"","items":[[24,"Fail","failure_derive","",N,N]],"paths":[]};
searchIndex["fixedbitset"]={"doc":"`FixedBitSet` is a simple fixed size set of bits.","items":[[3,"FixedBitSet","fixedbitset","`FixedBitSet` is a simple fixed size set of bits that each…",N,N],[3,"Difference","","An iterator producing elements in the difference of two…",N,N],[3,"Intersection","","An iterator producing elements in the intersection of two…",N,N],[3,"Union","","An iterator producing elements in the union of two sets.",N,N],[3,"Ones","","An  iterator producing the indices of the set bit in a set.",N,N],[8,"IndexRange","","IndexRange is implemented by Rust's built-in range types,…",N,N],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]],[11,"with_capacity","","Create a new FixedBitSet with a specific number of bits,…",1,[[["usize"]],["self"]]],[11,"grow","","Grow capacity to bits, all new bits initialized to zero",1,[[["self"],["usize"]]]],[11,"len","","Return the length of the `FixedBitSet` in bits.",1,[[["self"]],["usize"]]],[11,"contains","","Return true if the bit is enabled in the FixedBitSet,…",1,[[["self"],["usize"]],["bool"]]],[11,"clear","","Clear all bits.",1,[[["self"]]]],[11,"insert","","Enable `bit`.",1,[[["self"],["usize"]]]],[11,"put","","Enable `bit`, and return its previous value.",1,[[["self"],["usize"]],["bool"]]],[11,"set","","Panics if bit is out of bounds.",1,[[["self"],["usize"],["bool"]]]],[11,"copy_bit","","Copies boolean value from specified bit to the specified…",1,[[["self"],["usize"],["usize"]]]],[11,"count_ones","","Count the number of set bits in the given bit range.",1,[[["self"],["t"]],["usize"]]],[11,"set_range","","Sets every bit in the given range to the given state…",1,[[["self"],["t"],["bool"]]]],[11,"insert_range","","Enables every bit in the given range.",1,[[["self"],["t"]]]],[11,"as_slice","","View the bitset as a slice of `u32` blocks",1,N],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks.…",1,N],[11,"ones","","Iterates over all enabled bits.",1,[[["self"]],["ones"]]],[11,"intersection","","Returns a lazy iterator over the intersection of two…",1,[[["self"],["fixedbitset"]],["intersection"]]],[11,"union","","Returns a lazy iterator over the union of two…",1,[[["self"],["fixedbitset"]],["union"]]],[11,"difference","","Returns a lazy iterator over the difference of two…",1,[[["self"],["fixedbitset"]],["difference"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"eq","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ne","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"default","","",1,[[],["fixedbitset"]]],[11,"cmp","","",1,[[["self"],["fixedbitset"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"partial_cmp","","",1,[[["self"],["fixedbitset"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"le","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"gt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ge","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"index","","",1,[[["self"],["usize"]],["bool"]]],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]]],"paths":[[8,"IndexRange"],[3,"FixedBitSet"],[3,"Difference"],[3,"Intersection"],[3,"Union"],[3,"Ones"]]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["heck"]={"doc":"heck is a case conversion library.","items":[[8,"CamelCase","heck","This trait defines a camel case conversion.",N,N],[10,"to_camel_case","","Convert this type to camel case.",0,N],[8,"KebabCase","","This trait defines a kebab case conversion.",N,N],[10,"to_kebab_case","","Convert this type to kebab case.",1,N],[8,"MixedCase","","This trait defines a mixed case conversion.",N,N],[10,"to_mixed_case","","Convert this type to mixed case.",2,N],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",N,N],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",3,N],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",N,N],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",4,N],[8,"SnakeCase","","This trait defines a camel case conversion.",N,N],[10,"to_snake_case","","Convert this type to snake case.",5,N],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",N,N],[10,"to_snek_case","","Convert this type to snek case.",6,N],[8,"TitleCase","","This trait defines a title case conversion.",N,N],[10,"to_title_case","","Convert this type to title case.",7,N]],"paths":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]};
searchIndex["iovec"]={"doc":"A specialized byte slice type for performing vectored I/O…","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…",N,N],[0,"unix","","IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,N],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",N,N],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes","","",0,N],[11,"from_bytes_mut","","",0,N],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref_mut","","",0,N],[11,"deref","","",0,N]],"paths":[[3,"IoVec"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",N,N],[14,"__lazy_static_create","","",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["lazycell"]={"doc":"This crate provides a `LazyCell` struct which acts as a…","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with mutable contents.",N,N],[3,"AtomicLazyCell","","A lazily filled and thread-safe `Cell`, with frozen…",N,N],[11,"new","","Creates a new, empty, `LazyCell`.",0,[[],["lazycell"]]],[11,"fill","","Put a value into this cell.",0,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",0,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",0,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"]],["option"]]],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the…",0,[[["self"]],["option"]]],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"],["f"]],["t"]]],[11,"borrow_mut_with","","Borrows the contents of this `LazyCell` mutably for the…",0,[[["self"],["f"]],["t"]]],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing…",0,[[["self"],["f"]],["result"]]],[11,"try_borrow_mut_with","","Same as `borrow_mut_with`, but allows the initializing…",0,[[["self"],["f"]],["result"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",0,[[["self"]],["option"]]],[18,"NONE","","An empty `AtomicLazyCell`.",1,N],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,[[],["atomiclazycell"]]],[11,"fill","","Put a value into this cell.",1,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",1,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",1,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",1,[[["self"]],["option"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",1,[[["self"]],["option"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","Create a clone of this `LazyCell`",0,[[["self"]],["lazycell"]]],[11,"clone","","Create a clone of this `AtomicLazyCell`",1,[[["self"]],["atomiclazycell"]]],[11,"default","","",0,[[],["lazycell"]]],[11,"default","","",1,[[],["atomiclazycell"]]]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",6,N],[12,"ipv6mr_interface","","",6,N],[3,"hostent","","",N,N],[12,"h_name","","",7,N],[12,"h_aliases","","",7,N],[12,"h_addrtype","","",7,N],[12,"h_length","","",7,N],[12,"h_addr_list","","",7,N],[3,"iovec","","",N,N],[12,"iov_base","","",8,N],[12,"iov_len","","",8,N],[3,"pollfd","","",N,N],[12,"fd","","",9,N],[12,"events","","",9,N],[12,"revents","","",9,N],[3,"winsize","","",N,N],[12,"ws_row","","",10,N],[12,"ws_col","","",10,N],[12,"ws_xpixel","","",10,N],[12,"ws_ypixel","","",10,N],[3,"linger","","",N,N],[12,"l_onoff","","",11,N],[12,"l_linger","","",11,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",12,N],[3,"itimerval","","",N,N],[12,"it_interval","","",13,N],[12,"it_value","","",13,N],[3,"tms","","",N,N],[12,"tms_utime","","",14,N],[12,"tms_stime","","",14,N],[12,"tms_cutime","","",14,N],[12,"tms_cstime","","",14,N],[3,"servent","","",N,N],[12,"s_name","","",15,N],[12,"s_aliases","","",15,N],[12,"s_port","","",15,N],[12,"s_proto","","",15,N],[3,"protoent","","",N,N],[12,"p_name","","",16,N],[12,"p_aliases","","",16,N],[12,"p_proto","","",16,N],[3,"in_addr","","",N,N],[12,"s_addr","","",17,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",18,N],[12,"imr_interface","","",18,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",19,N],[12,"sa_data","","",19,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",20,N],[12,"sin_port","","",20,N],[12,"sin_addr","","",20,N],[12,"sin_zero","","",20,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",21,N],[12,"sin6_port","","",21,N],[12,"sin6_flowinfo","","",21,N],[12,"sin6_addr","","",21,N],[12,"sin6_scope_id","","",21,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",22,N],[12,"ai_family","","",22,N],[12,"ai_socktype","","",22,N],[12,"ai_protocol","","",22,N],[12,"ai_addrlen","","",22,N],[12,"ai_addr","","",22,N],[12,"ai_canonname","","",22,N],[12,"ai_next","","",22,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",23,N],[12,"nl_pid","","",23,N],[12,"nl_groups","","",23,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",24,N],[12,"sll_protocol","","",24,N],[12,"sll_ifindex","","",24,N],[12,"sll_hatype","","",24,N],[12,"sll_pkttype","","",24,N],[12,"sll_halen","","",24,N],[12,"sll_addr","","",24,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",25,N],[12,"tm_min","","",25,N],[12,"tm_hour","","",25,N],[12,"tm_mday","","",25,N],[12,"tm_mon","","",25,N],[12,"tm_year","","",25,N],[12,"tm_wday","","",25,N],[12,"tm_yday","","",25,N],[12,"tm_isdst","","",25,N],[12,"tm_gmtoff","","",25,N],[12,"tm_zone","","",25,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",26,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",27,N],[12,"dli_fbase","","",27,N],[12,"dli_sname","","",27,N],[12,"dli_saddr","","",27,N],[3,"lconv","","",N,N],[12,"decimal_point","","",28,N],[12,"thousands_sep","","",28,N],[12,"grouping","","",28,N],[12,"int_curr_symbol","","",28,N],[12,"currency_symbol","","",28,N],[12,"mon_decimal_point","","",28,N],[12,"mon_thousands_sep","","",28,N],[12,"mon_grouping","","",28,N],[12,"positive_sign","","",28,N],[12,"negative_sign","","",28,N],[12,"int_frac_digits","","",28,N],[12,"frac_digits","","",28,N],[12,"p_cs_precedes","","",28,N],[12,"p_sep_by_space","","",28,N],[12,"n_cs_precedes","","",28,N],[12,"n_sep_by_space","","",28,N],[12,"p_sign_posn","","",28,N],[12,"n_sign_posn","","",28,N],[12,"int_p_cs_precedes","","",28,N],[12,"int_p_sep_by_space","","",28,N],[12,"int_n_cs_precedes","","",28,N],[12,"int_n_sep_by_space","","",28,N],[12,"int_p_sign_posn","","",28,N],[12,"int_n_sign_posn","","",28,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",29,N],[12,"sigev_signo","","",29,N],[12,"sigev_notify","","",29,N],[12,"sigev_notify_thread_id","","",29,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",30,N],[12,"ipi_spec_dst","","",30,N],[12,"ipi_addr","","",30,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",31,N],[12,"ifa_name","","",31,N],[12,"ifa_flags","","",31,N],[12,"ifa_addr","","",31,N],[12,"ifa_netmask","","",31,N],[12,"ifa_ifu","","",31,N],[12,"ifa_data","","",31,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",32,N],[12,"arp_ha","","",32,N],[12,"arp_flags","","",32,N],[12,"arp_netmask","","",32,N],[12,"arp_dev","","",32,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",33,N],[12,"arp_ha","","",33,N],[12,"arp_flags","","",33,N],[12,"arp_netmask","","",33,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",34,N],[12,"ar_pro","","",34,N],[12,"ar_hln","","",34,N],[12,"ar_pln","","",34,N],[12,"ar_op","","",34,N],[3,"inotify_event","","",N,N],[12,"wd","","",35,N],[12,"mask","","",35,N],[12,"cookie","","",35,N],[12,"len","","",35,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",36,N],[12,"msg_len","","",36,N],[3,"epoll_event","","",N,N],[12,"events","","",37,N],[12,"u64","","",37,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",38,N],[12,"sun_path","","",38,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",39,N],[3,"utsname","","",N,N],[12,"sysname","","",40,N],[12,"nodename","","",40,N],[12,"release","","",40,N],[12,"version","","",40,N],[12,"machine","","",40,N],[12,"domainname","","",40,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",41,N],[12,"rlim_max","","",41,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",42,N],[12,"gl_pathv","","",42,N],[12,"gl_offs","","",42,N],[12,"gl_flags","","",42,N],[3,"passwd","","",N,N],[12,"pw_name","","",43,N],[12,"pw_passwd","","",43,N],[12,"pw_uid","","",43,N],[12,"pw_gid","","",43,N],[12,"pw_gecos","","",43,N],[12,"pw_dir","","",43,N],[12,"pw_shell","","",43,N],[3,"spwd","","",N,N],[12,"sp_namp","","",44,N],[12,"sp_pwdp","","",44,N],[12,"sp_lstchg","","",44,N],[12,"sp_min","","",44,N],[12,"sp_max","","",44,N],[12,"sp_warn","","",44,N],[12,"sp_inact","","",44,N],[12,"sp_expire","","",44,N],[12,"sp_flag","","",44,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",45,N],[12,"dqb_bsoftlimit","","",45,N],[12,"dqb_curspace","","",45,N],[12,"dqb_ihardlimit","","",45,N],[12,"dqb_isoftlimit","","",45,N],[12,"dqb_curinodes","","",45,N],[12,"dqb_btime","","",45,N],[12,"dqb_itime","","",45,N],[12,"dqb_valid","","",45,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",46,N],[12,"ssi_errno","","",46,N],[12,"ssi_code","","",46,N],[12,"ssi_pid","","",46,N],[12,"ssi_uid","","",46,N],[12,"ssi_fd","","",46,N],[12,"ssi_tid","","",46,N],[12,"ssi_band","","",46,N],[12,"ssi_overrun","","",46,N],[12,"ssi_trapno","","",46,N],[12,"ssi_status","","",46,N],[12,"ssi_int","","",46,N],[12,"ssi_ptr","","",46,N],[12,"ssi_utime","","",46,N],[12,"ssi_stime","","",46,N],[12,"ssi_addr","","",46,N],[12,"ssi_addr_lsb","","",46,N],[12,"ssi_syscall","","",46,N],[12,"ssi_call_addr","","",46,N],[12,"ssi_arch","","",46,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",47,N],[12,"it_value","","",47,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",48,N],[12,"mq_maxmsg","","",48,N],[12,"mq_msgsize","","",48,N],[12,"mq_curmsgs","","",48,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",49,N],[12,"mr_type","","",49,N],[12,"mr_alen","","",49,N],[12,"mr_address","","",49,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",50,N],[12,"if_name","","",50,N],[3,"msginfo","","",N,N],[12,"msgpool","","",51,N],[12,"msgmap","","",51,N],[12,"msgmax","","",51,N],[12,"msgmnb","","",51,N],[12,"msgmni","","",51,N],[12,"msgssz","","",51,N],[12,"msgtql","","",51,N],[12,"msgseg","","",51,N],[3,"sembuf","","",N,N],[12,"sem_num","","",52,N],[12,"sem_op","","",52,N],[12,"sem_flg","","",52,N],[3,"input_event","","",N,N],[12,"time","","",53,N],[12,"type_","","",53,N],[12,"code","","",53,N],[12,"value","","",53,N],[3,"input_id","","",N,N],[12,"bustype","","",54,N],[12,"vendor","","",54,N],[12,"product","","",54,N],[12,"version","","",54,N],[3,"input_absinfo","","",N,N],[12,"value","","",55,N],[12,"minimum","","",55,N],[12,"maximum","","",55,N],[12,"fuzz","","",55,N],[12,"flat","","",55,N],[12,"resolution","","",55,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",56,N],[12,"len","","",56,N],[12,"index","","",56,N],[12,"keycode","","",56,N],[12,"scancode","","",56,N],[3,"input_mask","","",N,N],[12,"type_","","",57,N],[12,"codes_size","","",57,N],[12,"codes_ptr","","",57,N],[3,"ff_replay","","",N,N],[12,"length","","",58,N],[12,"delay","","",58,N],[3,"ff_trigger","","",N,N],[12,"button","","",59,N],[12,"interval","","",59,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",60,N],[12,"attack_level","","",60,N],[12,"fade_length","","",60,N],[12,"fade_level","","",60,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",61,N],[12,"envelope","","",61,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",62,N],[12,"end_level","","",62,N],[12,"envelope","","",62,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",63,N],[12,"left_saturation","","",63,N],[12,"right_coeff","","",63,N],[12,"left_coeff","","",63,N],[12,"deadband","","",63,N],[12,"center","","",63,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",64,N],[12,"period","","",64,N],[12,"magnitude","","",64,N],[12,"offset","","",64,N],[12,"phase","","",64,N],[12,"envelope","","",64,N],[12,"custom_len","","",64,N],[12,"custom_data","","",64,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",65,N],[12,"weak_magnitude","","",65,N],[3,"ff_effect","","",N,N],[12,"type_","","",66,N],[12,"id","","",66,N],[12,"direction","","",66,N],[12,"trigger","","",66,N],[12,"replay","","",66,N],[12,"u","","",66,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",67,N],[12,"dlpi_name","","",67,N],[12,"dlpi_phdr","","",67,N],[12,"dlpi_phnum","","",67,N],[12,"dlpi_adds","","",67,N],[12,"dlpi_subs","","",67,N],[12,"dlpi_tls_modid","","",67,N],[12,"dlpi_tls_data","","",67,N],[3,"Elf32_Ehdr","","",N,N],[12,"e_ident","","",68,N],[12,"e_type","","",68,N],[12,"e_machine","","",68,N],[12,"e_version","","",68,N],[12,"e_entry","","",68,N],[12,"e_phoff","","",68,N],[12,"e_shoff","","",68,N],[12,"e_flags","","",68,N],[12,"e_ehsize","","",68,N],[12,"e_phentsize","","",68,N],[12,"e_phnum","","",68,N],[12,"e_shentsize","","",68,N],[12,"e_shnum","","",68,N],[12,"e_shstrndx","","",68,N],[3,"Elf64_Ehdr","","",N,N],[12,"e_ident","","",69,N],[12,"e_type","","",69,N],[12,"e_machine","","",69,N],[12,"e_version","","",69,N],[12,"e_entry","","",69,N],[12,"e_phoff","","",69,N],[12,"e_shoff","","",69,N],[12,"e_flags","","",69,N],[12,"e_ehsize","","",69,N],[12,"e_phentsize","","",69,N],[12,"e_phnum","","",69,N],[12,"e_shentsize","","",69,N],[12,"e_shnum","","",69,N],[12,"e_shstrndx","","",69,N],[3,"Elf32_Sym","","",N,N],[12,"st_name","","",70,N],[12,"st_value","","",70,N],[12,"st_size","","",70,N],[12,"st_info","","",70,N],[12,"st_other","","",70,N],[12,"st_shndx","","",70,N],[3,"Elf64_Sym","","",N,N],[12,"st_name","","",71,N],[12,"st_info","","",71,N],[12,"st_other","","",71,N],[12,"st_shndx","","",71,N],[12,"st_value","","",71,N],[12,"st_size","","",71,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",72,N],[12,"p_offset","","",72,N],[12,"p_vaddr","","",72,N],[12,"p_paddr","","",72,N],[12,"p_filesz","","",72,N],[12,"p_memsz","","",72,N],[12,"p_flags","","",72,N],[12,"p_align","","",72,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",73,N],[12,"p_flags","","",73,N],[12,"p_offset","","",73,N],[12,"p_vaddr","","",73,N],[12,"p_paddr","","",73,N],[12,"p_filesz","","",73,N],[12,"p_memsz","","",73,N],[12,"p_align","","",73,N],[3,"Elf32_Shdr","","",N,N],[12,"sh_name","","",74,N],[12,"sh_type","","",74,N],[12,"sh_flags","","",74,N],[12,"sh_addr","","",74,N],[12,"sh_offset","","",74,N],[12,"sh_size","","",74,N],[12,"sh_link","","",74,N],[12,"sh_info","","",74,N],[12,"sh_addralign","","",74,N],[12,"sh_entsize","","",74,N],[3,"Elf64_Shdr","","",N,N],[12,"sh_name","","",75,N],[12,"sh_type","","",75,N],[12,"sh_flags","","",75,N],[12,"sh_addr","","",75,N],[12,"sh_offset","","",75,N],[12,"sh_size","","",75,N],[12,"sh_link","","",75,N],[12,"sh_info","","",75,N],[12,"sh_addralign","","",75,N],[12,"sh_entsize","","",75,N],[3,"Elf32_Chdr","","",N,N],[12,"ch_type","","",76,N],[12,"ch_size","","",76,N],[12,"ch_addralign","","",76,N],[3,"Elf64_Chdr","","",N,N],[12,"ch_type","","",77,N],[12,"ch_reserved","","",77,N],[12,"ch_size","","",77,N],[12,"ch_addralign","","",77,N],[3,"ucred","","",N,N],[12,"pid","","",78,N],[12,"uid","","",78,N],[12,"gid","","",78,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",79,N],[12,"mnt_dir","","",79,N],[12,"mnt_type","","",79,N],[12,"mnt_opts","","",79,N],[12,"mnt_freq","","",79,N],[12,"mnt_passno","","",79,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",80,N],[12,"version","","",80,N],[12,"reserved","","",80,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",81,N],[12,"ipi6_ifindex","","",81,N],[3,"arpd_request","","",N,N],[12,"req","","",82,N],[12,"ip","","",82,N],[12,"dev","","",82,N],[12,"stamp","","",82,N],[12,"updated","","",82,N],[12,"ha","","",82,N],[3,"dirent","","",N,N],[12,"d_ino","","",83,N],[12,"d_off","","",83,N],[12,"d_reclen","","",83,N],[12,"d_type","","",83,N],[12,"d_name","","",83,N],[3,"dirent64","","",N,N],[12,"d_ino","","",84,N],[12,"d_off","","",84,N],[12,"d_reclen","","",84,N],[12,"d_type","","",84,N],[12,"d_name","","",84,N],[3,"sockaddr_alg","","",N,N],[12,"salg_family","","",85,N],[12,"salg_type","","",85,N],[12,"salg_feat","","",85,N],[12,"salg_mask","","",85,N],[12,"salg_name","","",85,N],[3,"af_alg_iv","","",N,N],[12,"ivlen","","",86,N],[12,"iv","","",86,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",87,N],[12,"aio_lio_opcode","","",87,N],[12,"aio_reqprio","","",87,N],[12,"aio_buf","","",87,N],[12,"aio_nbytes","","",87,N],[12,"aio_sigevent","","",87,N],[12,"aio_offset","","",87,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",88,N],[12,"e_exit","","",88,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",89,N],[12,"tv_usec","","",89,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",90,N],[12,"sa_mask","","",90,N],[12,"sa_flags","","",90,N],[12,"sa_restorer","","",90,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",91,N],[12,"ss_flags","","",91,N],[12,"ss_size","","",91,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",92,N],[12,"si_errno","","",92,N],[12,"si_code","","",92,N],[12,"_pad","","",92,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",93,N],[12,"gl_pathv","","",93,N],[12,"gl_offs","","",93,N],[12,"gl_flags","","",93,N],[3,"statfs","","",N,N],[12,"f_type","","",94,N],[12,"f_bsize","","",94,N],[12,"f_blocks","","",94,N],[12,"f_bfree","","",94,N],[12,"f_bavail","","",94,N],[12,"f_files","","",94,N],[12,"f_ffree","","",94,N],[12,"f_fsid","","",94,N],[12,"f_namelen","","",94,N],[12,"f_frsize","","",94,N],[3,"msghdr","","",N,N],[12,"msg_name","","",95,N],[12,"msg_namelen","","",95,N],[12,"msg_iov","","",95,N],[12,"msg_iovlen","","",95,N],[12,"msg_control","","",95,N],[12,"msg_controllen","","",95,N],[12,"msg_flags","","",95,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",96,N],[12,"cmsg_level","","",96,N],[12,"cmsg_type","","",96,N],[3,"termios","","",N,N],[12,"c_iflag","","",97,N],[12,"c_oflag","","",97,N],[12,"c_cflag","","",97,N],[12,"c_lflag","","",97,N],[12,"c_line","","",97,N],[12,"c_cc","","",97,N],[12,"c_ispeed","","",97,N],[12,"c_ospeed","","",97,N],[3,"flock","","",N,N],[12,"l_type","","",98,N],[12,"l_whence","","",98,N],[12,"l_start","","",98,N],[12,"l_len","","",98,N],[12,"l_pid","","",98,N],[3,"mallinfo","","",N,N],[12,"arena","","",99,N],[12,"ordblks","","",99,N],[12,"smblks","","",99,N],[12,"hblks","","",99,N],[12,"hblkhd","","",99,N],[12,"usmblks","","",99,N],[12,"fsmblks","","",99,N],[12,"uordblks","","",99,N],[12,"fordblks","","",99,N],[12,"keepcost","","",99,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",100,N],[12,"nlmsg_type","","",100,N],[12,"nlmsg_flags","","",100,N],[12,"nlmsg_seq","","",100,N],[12,"nlmsg_pid","","",100,N],[3,"nlmsgerr","","",N,N],[12,"error","","",101,N],[12,"msg","","",101,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",102,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",103,N],[12,"nm_block_nr","","",103,N],[12,"nm_frame_size","","",103,N],[12,"nm_frame_nr","","",103,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",104,N],[12,"nm_len","","",104,N],[12,"nm_group","","",104,N],[12,"nm_pid","","",104,N],[12,"nm_uid","","",104,N],[12,"nm_gid","","",104,N],[3,"nlattr","","",N,N],[12,"nla_len","","",105,N],[12,"nla_type","","",105,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",106,N],[12,"rt_dst","","",106,N],[12,"rt_gateway","","",106,N],[12,"rt_genmask","","",106,N],[12,"rt_flags","","",106,N],[12,"rt_pad2","","",106,N],[12,"rt_pad3","","",106,N],[12,"rt_tos","","",106,N],[12,"rt_class","","",106,N],[12,"rt_pad4","","",106,N],[12,"rt_metric","","",106,N],[12,"rt_dev","","",106,N],[12,"rt_mtu","","",106,N],[12,"rt_window","","",106,N],[12,"rt_irtt","","",106,N],[3,"utmpx","","",N,N],[12,"ut_type","","",107,N],[12,"ut_pid","","",107,N],[12,"ut_line","","",107,N],[12,"ut_id","","",107,N],[12,"ut_user","","",107,N],[12,"ut_host","","",107,N],[12,"ut_exit","","",107,N],[12,"ut_session","","",107,N],[12,"ut_tv","","",107,N],[12,"ut_addr_v6","","",107,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",108,N],[12,"loads","","",108,N],[12,"totalram","","",108,N],[12,"freeram","","",108,N],[12,"sharedram","","",108,N],[12,"bufferram","","",108,N],[12,"totalswap","","",108,N],[12,"freeswap","","",108,N],[12,"procs","","",108,N],[12,"pad","","",108,N],[12,"totalhigh","","",108,N],[12,"freehigh","","",108,N],[12,"mem_unit","","",108,N],[12,"_f","","",108,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",109,N],[12,"msg_stime","","",109,N],[12,"msg_rtime","","",109,N],[12,"msg_ctime","","",109,N],[12,"msg_qnum","","",109,N],[12,"msg_qbytes","","",109,N],[12,"msg_lspid","","",109,N],[12,"msg_lrpid","","",109,N],[3,"stat","","",N,N],[12,"st_dev","","",110,N],[12,"st_ino","","",110,N],[12,"st_nlink","","",110,N],[12,"st_mode","","",110,N],[12,"st_uid","","",110,N],[12,"st_gid","","",110,N],[12,"st_rdev","","",110,N],[12,"st_size","","",110,N],[12,"st_blksize","","",110,N],[12,"st_blocks","","",110,N],[12,"st_atime","","",110,N],[12,"st_atime_nsec","","",110,N],[12,"st_mtime","","",110,N],[12,"st_mtime_nsec","","",110,N],[12,"st_ctime","","",110,N],[12,"st_ctime_nsec","","",110,N],[3,"stat64","","",N,N],[12,"st_dev","","",111,N],[12,"st_ino","","",111,N],[12,"st_nlink","","",111,N],[12,"st_mode","","",111,N],[12,"st_uid","","",111,N],[12,"st_gid","","",111,N],[12,"st_rdev","","",111,N],[12,"st_size","","",111,N],[12,"st_blksize","","",111,N],[12,"st_blocks","","",111,N],[12,"st_atime","","",111,N],[12,"st_atime_nsec","","",111,N],[12,"st_mtime","","",111,N],[12,"st_mtime_nsec","","",111,N],[12,"st_ctime","","",111,N],[12,"st_ctime_nsec","","",111,N],[3,"statfs64","","",N,N],[12,"f_type","","",112,N],[12,"f_bsize","","",112,N],[12,"f_blocks","","",112,N],[12,"f_bfree","","",112,N],[12,"f_bavail","","",112,N],[12,"f_files","","",112,N],[12,"f_ffree","","",112,N],[12,"f_fsid","","",112,N],[12,"f_namelen","","",112,N],[12,"f_frsize","","",112,N],[12,"f_flags","","",112,N],[12,"f_spare","","",112,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",113,N],[12,"f_frsize","","",113,N],[12,"f_blocks","","",113,N],[12,"f_bfree","","",113,N],[12,"f_bavail","","",113,N],[12,"f_files","","",113,N],[12,"f_ffree","","",113,N],[12,"f_favail","","",113,N],[12,"f_fsid","","",113,N],[12,"f_flag","","",113,N],[12,"f_namemax","","",113,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",114,N],[12,"exponent","","",114,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",115,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",116,N],[12,"swd","","",116,N],[12,"ftw","","",116,N],[12,"fop","","",116,N],[12,"rip","","",116,N],[12,"rdp","","",116,N],[12,"mxcsr","","",116,N],[12,"mxcr_mask","","",116,N],[12,"_st","","",116,N],[12,"_xmm","","",116,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",117,N],[12,"r14","","",117,N],[12,"r13","","",117,N],[12,"r12","","",117,N],[12,"rbp","","",117,N],[12,"rbx","","",117,N],[12,"r11","","",117,N],[12,"r10","","",117,N],[12,"r9","","",117,N],[12,"r8","","",117,N],[12,"rax","","",117,N],[12,"rcx","","",117,N],[12,"rdx","","",117,N],[12,"rsi","","",117,N],[12,"rdi","","",117,N],[12,"orig_rax","","",117,N],[12,"rip","","",117,N],[12,"cs","","",117,N],[12,"eflags","","",117,N],[12,"rsp","","",117,N],[12,"ss","","",117,N],[12,"fs_base","","",117,N],[12,"gs_base","","",117,N],[12,"ds","","",117,N],[12,"es","","",117,N],[12,"fs","","",117,N],[12,"gs","","",117,N],[3,"user","","",N,N],[12,"regs","","",118,N],[12,"u_fpvalid","","",118,N],[12,"i387","","",118,N],[12,"u_tsize","","",118,N],[12,"u_dsize","","",118,N],[12,"u_ssize","","",118,N],[12,"start_code","","",118,N],[12,"start_stack","","",118,N],[12,"signal","","",118,N],[12,"u_ar0","","",118,N],[12,"u_fpstate","","",118,N],[12,"magic","","",118,N],[12,"u_comm","","",118,N],[12,"u_debugreg","","",118,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",119,N],[12,"fpregs","","",119,N],[3,"ipc_perm","","",N,N],[12,"__key","","",120,N],[12,"uid","","",120,N],[12,"gid","","",120,N],[12,"cuid","","",120,N],[12,"cgid","","",120,N],[12,"mode","","",120,N],[12,"__seq","","",120,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",121,N],[12,"shm_segsz","","",121,N],[12,"shm_atime","","",121,N],[12,"shm_dtime","","",121,N],[12,"shm_ctime","","",121,N],[12,"shm_cpid","","",121,N],[12,"shm_lpid","","",121,N],[12,"shm_nattch","","",121,N],[3,"termios2","","",N,N],[12,"c_iflag","","",122,N],[12,"c_oflag","","",122,N],[12,"c_cflag","","",122,N],[12,"c_lflag","","",122,N],[12,"c_line","","",122,N],[12,"c_cc","","",122,N],[12,"c_ispeed","","",122,N],[12,"c_ospeed","","",122,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",123,N],[12,"swd","","",123,N],[12,"ftw","","",123,N],[12,"fop","","",123,N],[12,"rip","","",123,N],[12,"rdp","","",123,N],[12,"mxcsr","","",123,N],[12,"mxcr_mask","","",123,N],[12,"st_space","","",123,N],[12,"xmm_space","","",123,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",124,N],[12,"uc_link","","",124,N],[12,"uc_stack","","",124,N],[12,"uc_mcontext","","",124,N],[12,"uc_sigmask","","",124,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",125,N],[12,"f_frsize","","",125,N],[12,"f_blocks","","",125,N],[12,"f_bfree","","",125,N],[12,"f_bavail","","",125,N],[12,"f_files","","",125,N],[12,"f_ffree","","",125,N],[12,"f_favail","","",125,N],[12,"f_fsid","","",125,N],[12,"f_flag","","",125,N],[12,"f_namemax","","",125,N],[3,"sem_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",126,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",N,[[["u8"]],["u8"]]],[5,"CMSG_NXTHDR","","",N,N],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetspeed","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_init","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"uname","","",N,N],[5,"inotify_init","","",N,N],[5,"inotify_init1","","",N,N],[5,"inotify_add_watch","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"fallocate64","","",N,N],[5,"posix_fallocate","","",N,N],[5,"posix_fallocate64","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"inotify_rm_watch","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"mallopt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"Elf64_Sxword","","",N,N],[6,"Elf32_Section","","",N,N],[6,"Elf64_Section","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_ALG","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TOS","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_RECVTOS","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_FLOWINFO","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_FLOWLABEL_MGR","","",N,N],[17,"IPV6_FLOWINFO_SEND","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVTCLASS","","",N,N],[17,"IPV6_TCLASS","","",N,N],[17,"IPV6_FLOWINFO_FLOWLABEL","","",N,N],[17,"IPV6_FLOWINFO_PRIORITY","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPTOS_ECN_MASK","","",N,N],[17,"IPTOS_ECN_ECT1","","",N,N],[17,"IPTOS_ECN_ECT0","","",N,N],[17,"IPTOS_ECN_CE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"IN_ACCESS","","",N,N],[17,"IN_MODIFY","","",N,N],[17,"IN_ATTRIB","","",N,N],[17,"IN_CLOSE_WRITE","","",N,N],[17,"IN_CLOSE_NOWRITE","","",N,N],[17,"IN_CLOSE","","",N,N],[17,"IN_OPEN","","",N,N],[17,"IN_MOVED_FROM","","",N,N],[17,"IN_MOVED_TO","","",N,N],[17,"IN_MOVE","","",N,N],[17,"IN_CREATE","","",N,N],[17,"IN_DELETE","","",N,N],[17,"IN_DELETE_SELF","","",N,N],[17,"IN_MOVE_SELF","","",N,N],[17,"IN_UNMOUNT","","",N,N],[17,"IN_Q_OVERFLOW","","",N,N],[17,"IN_IGNORED","","",N,N],[17,"IN_ONLYDIR","","",N,N],[17,"IN_DONT_FOLLOW","","",N,N],[17,"IN_ISDIR","","",N,N],[17,"IN_ONESHOT","","",N,N],[17,"IN_ALL_EVENTS","","",N,N],[17,"IN_CLOEXEC","","",N,N],[17,"IN_NONBLOCK","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"AF_XDP","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"PF_XDP","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IP_ORIGDSTADDR","","",N,N],[17,"IP_RECVORIGDSTADDR","","",N,N],[17,"IPV6_ORIGDSTADDR","","",N,N],[17,"IPV6_RECVORIGDSTADDR","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"MFD_HUGETLB","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"IPTOS_ECN_NOT_ECT","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",N,N],[17,"ALG_SET_KEY","","",N,N],[17,"ALG_SET_IV","","",N,N],[17,"ALG_SET_OP","","",N,N],[17,"ALG_SET_AEAD_ASSOCLEN","","",N,N],[17,"ALG_SET_AEAD_AUTHSIZE","","",N,N],[17,"ALG_OP_DECRYPT","","",N,N],[17,"ALG_OP_ENCRYPT","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_NFC","","",N,N],[17,"SOL_XDP","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"M_MXFAST","","",N,N],[17,"M_NLBLKS","","",N,N],[17,"M_GRAIN","","",N,N],[17,"M_KEEP","","",N,N],[17,"M_TRIM_THRESHOLD","","",N,N],[17,"M_TOP_PAD","","",N,N],[17,"M_MMAP_THRESHOLD","","",N,N],[17,"M_MMAP_MAX","","",N,N],[17,"M_CHECK_ACTION","","",N,N],[17,"M_PERTURB","","",N,N],[17,"M_ARENA_TEST","","",N,N],[17,"M_ARENA_MAX","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"REG_R8","","",N,N],[17,"REG_R9","","",N,N],[17,"REG_R10","","",N,N],[17,"REG_R11","","",N,N],[17,"REG_R12","","",N,N],[17,"REG_R13","","",N,N],[17,"REG_R14","","",N,N],[17,"REG_R15","","",N,N],[17,"REG_RDI","","",N,N],[17,"REG_RSI","","",N,N],[17,"REG_RBP","","",N,N],[17,"REG_RBX","","",N,N],[17,"REG_RDX","","",N,N],[17,"REG_RAX","","",N,N],[17,"REG_RCX","","",N,N],[17,"REG_RSP","","",N,N],[17,"REG_RIP","","",N,N],[17,"REG_EFL","","",N,N],[17,"REG_CSGSFS","","",N,N],[17,"REG_ERR","","",N,N],[17,"REG_TRAPNO","","",N,N],[17,"REG_OLDMASK","","",N,N],[17,"REG_CR2","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",143,[[["self"]],["dir"]]],[11,"clone","","",144,[[["self"]],["locale_t"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",145,[[["self"]],["file"]]],[11,"clone","","",146,[[["self"]],["fpos_t"]]],[11,"clone","","",147,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["sockaddr"]]],[11,"clone","","",20,[[["self"]],["sockaddr_in"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",22,[[["self"]],["addrinfo"]]],[11,"clone","","",23,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",128,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["sigevent"]]],[11,"clone","","",30,[[["self"]],["in_pktinfo"]]],[11,"clone","","",31,[[["self"]],["ifaddrs"]]],[11,"clone","","",129,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",32,[[["self"]],["arpreq"]]],[11,"clone","","",33,[[["self"]],["arpreq_old"]]],[11,"clone","","",34,[[["self"]],["arphdr"]]],[11,"clone","","",35,[[["self"]],["inotify_event"]]],[11,"clone","","",36,[[["self"]],["mmsghdr"]]],[11,"clone","","",37,[[["self"]],["epoll_event"]]],[11,"clone","","",38,[[["self"]],["sockaddr_un"]]],[11,"clone","","",39,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",40,[[["self"]],["utsname"]]],[11,"clone","","",148,[[["self"]],["fpos64_t"]]],[11,"clone","","",41,[[["self"]],["rlimit64"]]],[11,"clone","","",42,[[["self"]],["glob_t"]]],[11,"clone","","",43,[[["self"]],["passwd"]]],[11,"clone","","",44,[[["self"]],["spwd"]]],[11,"clone","","",45,[[["self"]],["dqblk"]]],[11,"clone","","",46,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",47,[[["self"]],["itimerspec"]]],[11,"clone","","",130,[[["self"]],["fsid_t"]]],[11,"clone","","",48,[[["self"]],["mq_attr"]]],[11,"clone","","",49,[[["self"]],["packet_mreq"]]],[11,"clone","","",131,[[["self"]],["cpu_set_t"]]],[11,"clone","","",50,[[["self"]],["if_nameindex"]]],[11,"clone","","",51,[[["self"]],["msginfo"]]],[11,"clone","","",52,[[["self"]],["sembuf"]]],[11,"clone","","",53,[[["self"]],["input_event"]]],[11,"clone","","",54,[[["self"]],["input_id"]]],[11,"clone","","",55,[[["self"]],["input_absinfo"]]],[11,"clone","","",56,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",57,[[["self"]],["input_mask"]]],[11,"clone","","",58,[[["self"]],["ff_replay"]]],[11,"clone","","",59,[[["self"]],["ff_trigger"]]],[11,"clone","","",60,[[["self"]],["ff_envelope"]]],[11,"clone","","",61,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",62,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",63,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",64,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",65,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",66,[[["self"]],["ff_effect"]]],[11,"clone","","",67,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",68,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",69,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",70,[[["self"]],["elf32_sym"]]],[11,"clone","","",71,[[["self"]],["elf64_sym"]]],[11,"clone","","",72,[[["self"]],["elf32_phdr"]]],[11,"clone","","",73,[[["self"]],["elf64_phdr"]]],[11,"clone","","",74,[[["self"]],["elf32_shdr"]]],[11,"clone","","",75,[[["self"]],["elf64_shdr"]]],[11,"clone","","",76,[[["self"]],["elf32_chdr"]]],[11,"clone","","",77,[[["self"]],["elf64_chdr"]]],[11,"clone","","",78,[[["self"]],["ucred"]]],[11,"clone","","",79,[[["self"]],["mntent"]]],[11,"clone","","",132,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",133,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",80,[[["self"]],["genlmsghdr"]]],[11,"clone","","",81,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",82,[[["self"]],["arpd_request"]]],[11,"clone","","",83,[[["self"]],["dirent"]]],[11,"clone","","",84,[[["self"]],["dirent64"]]],[11,"clone","","",85,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",86,[[["self"]],["af_alg_iv"]]],[11,"clone","","",87,[[["self"]],["aiocb"]]],[11,"clone","","",88,[[["self"]],["__exit_status"]]],[11,"clone","","",89,[[["self"]],["__timeval"]]],[11,"clone","","",90,[[["self"]],["sigaction"]]],[11,"clone","","",91,[[["self"]],["stack_t"]]],[11,"clone","","",92,[[["self"]],["siginfo_t"]]],[11,"clone","","",93,[[["self"]],["glob64_t"]]],[11,"clone","","",94,[[["self"]],["statfs"]]],[11,"clone","","",95,[[["self"]],["msghdr"]]],[11,"clone","","",96,[[["self"]],["cmsghdr"]]],[11,"clone","","",97,[[["self"]],["termios"]]],[11,"clone","","",98,[[["self"]],["flock"]]],[11,"clone","","",99,[[["self"]],["mallinfo"]]],[11,"clone","","",100,[[["self"]],["nlmsghdr"]]],[11,"clone","","",101,[[["self"]],["nlmsgerr"]]],[11,"clone","","",102,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",104,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",105,[[["self"]],["nlattr"]]],[11,"clone","","",106,[[["self"]],["rtentry"]]],[11,"clone","","",107,[[["self"]],["utmpx"]]],[11,"clone","","",134,[[["self"]],["sigset_t"]]],[11,"clone","","",108,[[["self"]],["sysinfo"]]],[11,"clone","","",109,[[["self"]],["msqid_ds"]]],[11,"clone","","",110,[[["self"]],["stat"]]],[11,"clone","","",111,[[["self"]],["stat64"]]],[11,"clone","","",112,[[["self"]],["statfs64"]]],[11,"clone","","",113,[[["self"]],["statvfs64"]]],[11,"clone","","",135,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",114,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",115,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",116,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",117,[[["self"]],["user_regs_struct"]]],[11,"clone","","",118,[[["self"]],["user"]]],[11,"clone","","",119,[[["self"]],["mcontext_t"]]],[11,"clone","","",120,[[["self"]],["ipc_perm"]]],[11,"clone","","",121,[[["self"]],["shmid_ds"]]],[11,"clone","","",122,[[["self"]],["termios2"]]],[11,"clone","","",123,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",124,[[["self"]],["ucontext_t"]]],[11,"clone","","",125,[[["self"]],["statvfs"]]],[11,"clone","","",136,[[["self"]],["sem_t"]]],[11,"clone","","",137,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",138,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",139,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",140,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",141,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",142,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",126,[[["self"]],["in6_addr"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"inotify_event"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"locale_t"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,"RecordBuilder","","Builder for `Record`.",N,N],[3,"Metadata","","Metadata about a log message.",N,N],[3,"MetadataBuilder","","Builder for `Metadata`.",N,N],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level","","An enum representing the available verbosity levels of the…",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LevelFilter","","An enum representing the available verbosity level filters…",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"set_max_level","","Sets the global maximum log level.",N,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",N,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",N,[[["box",["log"]]],["result",["setloggererror"]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",N,[[["log"]],["result",["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",N,N],[8,"Log","","A trait encapsulating the operations required of a logger.",N,N],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],["option",["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],["option",["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],["option",["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],["option",["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"from_str","","",0,[[["str"]],["result",["level"]]]],[11,"from_str","","",1,[[["str"]],["result",["levelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["mime"]={"doc":"Mime","items":[[3,"Mime","mime","A parsed mime or media type.",N,N],[3,"Name","","A section of a `Mime`.",N,N],[3,"FromStrError","","An error when parsing a `Mime` from a string.",N,N],[3,"Params","","An iterator over the parameters of a MIME.",N,N],[17,"STAR","","",N,N],[17,"TEXT","","text",N,N],[17,"IMAGE","","image",N,N],[17,"AUDIO","","audio",N,N],[17,"VIDEO","","video",N,N],[17,"APPLICATION","","application",N,N],[17,"MULTIPART","","multipart",N,N],[17,"MESSAGE","","message",N,N],[17,"MODEL","","model",N,N],[17,"FONT","","font",N,N],[17,"PLAIN","","plain",N,N],[17,"HTML","","html",N,N],[17,"XML","","xml",N,N],[17,"JAVASCRIPT","","javascript",N,N],[17,"CSS","","css",N,N],[17,"CSV","","csv",N,N],[17,"EVENT_STREAM","","event-stream",N,N],[17,"VCARD","","vcard",N,N],[17,"JSON","","json",N,N],[17,"WWW_FORM_URLENCODED","","x-www-form-urlencoded",N,N],[17,"MSGPACK","","msgpack",N,N],[17,"OCTET_STREAM","","octet-stream",N,N],[17,"PDF","","pdf",N,N],[17,"WOFF","","woff",N,N],[17,"WOFF2","","woff2",N,N],[17,"FORM_DATA","","form-data",N,N],[17,"BMP","","bmp",N,N],[17,"GIF","","gif",N,N],[17,"JPEG","","jpeg",N,N],[17,"PNG","","png",N,N],[17,"SVG","","svg",N,N],[17,"BASIC","","basic",N,N],[17,"MPEG","","mpeg",N,N],[17,"MP4","","mp4",N,N],[17,"OGG","","ogg",N,N],[17,"CHARSET","","charset",N,N],[17,"BOUNDARY","","boundary",N,N],[17,"UTF_8","","utf-8",N,N],[17,"STAR_STAR","","`*/*`",N,N],[17,"TEXT_STAR","","`text/*`",N,N],[17,"TEXT_PLAIN","","`text/plain`",N,N],[17,"TEXT_PLAIN_UTF_8","","`text/plain; charset=utf-8`",N,N],[17,"TEXT_HTML","","`text/html`",N,N],[17,"TEXT_HTML_UTF_8","","`text/html; charset=utf-8`",N,N],[17,"TEXT_CSS","","`text/css`",N,N],[17,"TEXT_CSS_UTF_8","","`text/css; charset=utf-8`",N,N],[17,"TEXT_JAVASCRIPT","","`text/javascript`",N,N],[17,"TEXT_XML","","`text/xml`",N,N],[17,"TEXT_EVENT_STREAM","","`text/event-stream`",N,N],[17,"TEXT_CSV","","`text/csv`",N,N],[17,"TEXT_CSV_UTF_8","","`text/csv; charset=utf-8`",N,N],[17,"TEXT_TAB_SEPARATED_VALUES","","`text/tab-separated-values`",N,N],[17,"TEXT_TAB_SEPARATED_VALUES_UTF_8","","`text/tab-separated-values; charset=utf-8`",N,N],[17,"TEXT_VCARD","","`text/vcard`",N,N],[17,"IMAGE_STAR","","`image/*`",N,N],[17,"IMAGE_JPEG","","`image/jpeg`",N,N],[17,"IMAGE_GIF","","`image/gif`",N,N],[17,"IMAGE_PNG","","`image/png`",N,N],[17,"IMAGE_BMP","","`image/bmp`",N,N],[17,"IMAGE_SVG","","`image/svg+xml`",N,N],[17,"FONT_WOFF","","`font/woff`",N,N],[17,"FONT_WOFF2","","`font/woff2`",N,N],[17,"APPLICATION_JSON","","`application/json`",N,N],[17,"APPLICATION_JAVASCRIPT","","`application/javascript`",N,N],[17,"APPLICATION_JAVASCRIPT_UTF_8","","`application/javascript; charset=utf-8`",N,N],[17,"APPLICATION_WWW_FORM_URLENCODED","","`application/x-www-form-urlencoded`",N,N],[17,"APPLICATION_OCTET_STREAM","","`application/octet-stream`",N,N],[17,"APPLICATION_MSGPACK","","`application/msgpack`",N,N],[17,"APPLICATION_PDF","","`application/pdf`",N,N],[17,"MULTIPART_FORM_DATA","","`multipart/form-data`",N,N],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],["option",["name"]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],["option",["name"]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]],[11,"as_str","","Get the value of this `Name` as a string.",1,[[["self"]],["str"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,N],[11,"eq","","",1,[[["self"],["name"]],["bool"]]],[11,"ne","","",1,[[["self"],["name"]],["bool"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"cmp","","",1,[[["self"],["name"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"clone","","",1,[[["self"]],["name"]]],[11,"partial_cmp","","",1,[[["self"],["name"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["name"]],["bool"]]],[11,"le","","",1,[[["self"],["name"]],["bool"]]],[11,"gt","","",1,[[["self"],["name"]],["bool"]]],[11,"ge","","",1,[[["self"],["name"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"hash","","",0,[[["self"],["t"]]]],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Mime"],[3,"Name"],[3,"FromStrError"],[3,"Params"]]};
searchIndex["mime_guess"]={"doc":"Guessing of MIME types by file extension.","items":[[3,"Mime","mime_guess","A parsed mime or media type.",N,N],[5,"guess_mime_type","","Guess the MIME type of `path` by its extension (as defined…",N,[[["p"]],["mime"]]],[5,"guess_mime_type_opt","","Guess the MIME type of `path` by its extension (as defined…",N,[[["p"]],["option",["mime"]]]],[5,"get_mime_type","","Get the MIME type associated with a file extension.",N,[[["str"]],["mime"]]],[5,"get_mime_type_opt","","Get the MIME type associated with a file extension.",N,[[["str"]],["option",["mime"]]]],[5,"get_mime_type_str","","Get the MIME type string associated with a file extension.…",N,[[["str"]],["option",["str"]]]],[5,"get_mime_extensions","","Get a list of known extensions for a given `Mime`.",N,[[["mime"]],["option"]]],[5,"get_mime_extensions_str","","Get a list of known extensions for a MIME type string.",N,[[["str"]],["option"]]],[5,"get_extensions","","Get the extensions for a given top-level and sub-level of…",N,[[["str"],["str"]],["option"]]],[5,"octet_stream","","Get the MIME type for `application/octet-stream` (generic…",N,[[],["mime"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"hash","","",0,N],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],["option",["name"]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],["option",["name"]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]]],"paths":[[3,"Mime"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,"Registration","","Handle to a user space `Poll` registration.",N,N],[3,"SetReadiness","","Updates the readiness state of the associated…",N,N],[3,"PollOpt","","Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready","","A set of readiness event kinds",N,N],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0","","",0,N],[3,"Events","","A collection of readiness events.",N,N],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["self"],["pollopt"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["t"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["t"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["t"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize`…",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"new","","Return a new `Poll` handle.",3,[[],["result",["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity`…",4,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2","","Create and return a new `Registration` and the associated…",5,N],[11,"readiness","","Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",6,[[["self"],["ready"]],["result"]]],[0,"net","","Networking primitives",N,N],[3,"TcpListener","mio::net","A structure representing a socket server",N,N],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a…",N,N],[3,"UdpSocket","","A User Datagram Protocol socket.",N,N],[11,"connect","","Create a new TCP stream and issue a non-blocking connect…",7,[[["socketaddr"]],["result",["tcpstream"]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside…",7,[[["tcpstream"],["socketaddr"]],["result",["tcpstream"]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],["result",["tcpstream"]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",7,[[["self"]],["result",["tcpstream"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",7,[[["self"],["option",["duration"]]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",7,[[["self"]],["result",["option"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["self"],["option",["duration"]]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"peek","","Receives data on the socket from the remote address to…",7,N],[11,"read_bufs","","Read in a list of buffers all at once.",7,N],[11,"write_bufs","","Write a list of buffers all at once.",7,N],[11,"bind","","Convenience method to bind a new TCP listener to the…",8,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a…",8,[[["tcplistener"]],["result",["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",8,[[["self"]],["result",["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],["result",["option"]]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],["result",["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and…",9,[[["udpsocket"]],["result",["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created…",9,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",9,[[["self"]],["result",["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",9,N],[11,"recv_from","","Receives data from the socket. On success, returns the…",9,N],[11,"send","","Sends data on the socket to the address previously bound…",9,N],[11,"recv","","Receives data from the socket previously bound with…",9,N],[11,"connect","","Connects the UDP socket setting the default destination…",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"],["u32"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"]],["result",["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"]],["result",["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],["result",["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],["result",["option"]]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events","mio::event","A collection of readiness events.",N,N],[3,"Iter","","[`Events`] iterator.",N,N],[3,"Event","","An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented","","A value that may be registered with `Poll`",N,N],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],["result"]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",N,N],[12,"0","","",11,N],[3,"UnixReady","","Unix specific extensions to `Ready`",N,N],[11,"from","mio","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","mio::event","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","mio::unix","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","mio::net","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"register","mio","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","mio::unix","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",11,[[["self"],["poll"]],["result"]]],[11,"register","mio::net","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",7,[[["self"],["poll"]],["result"]]],[11,"register","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",8,[[["self"],["poll"]],["result"]]],[11,"register","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",9,[[["self"],["poll"]],["result"]]],[11,"next","mio::event","",13,[[["self"]],["option",["event"]]]],[11,"eq","mio","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ne","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"eq","","",2,[[["self"],["ready"]],["bool"]]],[11,"ne","","",2,[[["self"],["ready"]],["bool"]]],[11,"eq","mio::event","",12,[[["self"],["event"]],["bool"]]],[11,"ne","","",12,[[["self"],["event"]],["bool"]]],[11,"eq","mio::unix","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"eq","mio","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"into_iter","","",4,N],[11,"cmp","","",1,[[["self"],["pollopt"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["ready"]],["ordering"]]],[11,"cmp","mio::unix","",14,[[["self"],["unixready"]],["ordering"]]],[11,"cmp","mio","",0,[[["self"],["token"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["pollopt"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"clone","mio::event","",12,[[["self"]],["event"]]],[11,"clone","mio","",6,[[["self"]],["setreadiness"]]],[11,"clone","mio::event","",13,[[["self"]],["iter"]]],[11,"clone","mio::unix","",14,[[["self"]],["unixready"]]],[11,"clone","mio","",0,[[["self"]],["token"]]],[11,"from","mio::unix","",14,[[["ready"]],["unixready"]]],[11,"from","mio","",2,[[["unixready"]],["ready"]]],[11,"from","","",0,[[["usize"]],["token"]]],[11,"drop","","",5,[[["self"]]]],[11,"partial_cmp","","",1,[[["self"],["pollopt"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"le","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"gt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ge","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["ready"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["ready"]],["bool"]]],[11,"le","","",2,[[["self"],["ready"]],["bool"]]],[11,"gt","","",2,[[["self"],["ready"]],["bool"]]],[11,"ge","","",2,[[["self"],["ready"]],["bool"]]],[11,"partial_cmp","mio::unix","",14,[[["self"],["unixready"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"partial_cmp","mio","",0,[[["self"],["token"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::unix","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::net","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","mio::unix","",14,[[["self"]],["ready"]]],[11,"hash","mio","",0,N],[11,"sub","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"sub","","",2,[[["self"],["t"]],["ready"]]],[11,"sub","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"sub_assign","mio","",2,[[["self"],["t"]]]],[11,"bitand","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitand","","",2,[[["self"],["t"]],["ready"]]],[11,"bitand","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitxor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitxor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitxor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitand_assign","mio","",2,[[["self"],["t"]]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"deref","mio::unix","",14,[[["self"]],["ready"]]],[11,"as_raw_fd","mio","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","mio::net","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",7,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"read","","",7,N],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[11,"new","mio::event","Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"error","mio::unix","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"priority","","Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],["unixready"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority","","Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"SetReadiness"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_extras"]={"doc":"Extra components for use with Mio.","items":[[0,"channel","mio_extras","Thread safe communication channel implementing `Evented`",N,N],[3,"Sender","mio_extras::channel","The sending half of a channel.",N,N],[3,"SyncSender","","The sending half of a synchronous channel.",N,N],[3,"Receiver","","The receiving half of a channel.",N,N],[4,"SendError","","An error returned from the `Sender::send` or…",N,N],[13,"Io","","An IO error.",0,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",0,N],[4,"TrySendError","","An error returned from the `SyncSender::try_send` function.",N,N],[13,"Io","","An IO error.",1,N],[13,"Full","","Data could not be sent because it would require the callee…",1,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",1,N],[5,"channel","","Creates a new asynchronous channel, where the `Receiver`…",N,N],[5,"sync_channel","","Creates a new synchronous, bounded channel where the…",N,N],[11,"send","","Attempts to send a value on this channel, returning it…",2,[[["self"],["t"]],["result",["senderror"]]]],[11,"send","","Sends a value on this synchronous channel.",3,[[["self"],["t"]],["result",["senderror"]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",3,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",4,[[["self"]],["result",["tryrecverror"]]]],[0,"timer","mio_extras","Timer optimized for I/O related operations",N,N],[3,"Timer","mio_extras::timer","A timer.",N,N],[3,"Builder","","Used to create a `Timer`.",N,N],[3,"Timeout","","A timeout, as returned by `Timer::set_timeout`.",N,N],[11,"tick_duration","","Set the tick duration.  Default is 100ms.",5,[[["self"],["duration"]],["builder"]]],[11,"num_slots","","Set the number of slots.  Default is 256.",5,[[["self"],["usize"]],["builder"]]],[11,"capacity","","Set the capacity.  Default is 65536.",5,[[["self"],["usize"]],["builder"]]],[11,"build","","Build a `Timer` with the parameters set on this `Builder`.",5,[[["self"]],["timer"]]],[11,"set_timeout","","Set a timeout.",6,[[["self"],["duration"],["t"]],["timeout"]]],[11,"cancel_timeout","","Cancel a timeout.",6,[[["self"],["timeout"]],["option"]]],[11,"poll","","Poll for an expired timer.",6,[[["self"]],["option"]]],[11,"from","mio_extras::channel","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","mio_extras::timer","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"default","","",5,[[],["builder"]]],[11,"default","","",6,[[],["timer"]]],[11,"clone","mio_extras::channel","",2,[[["self"]],["sender"]]],[11,"clone","","",3,[[["self"]],["syncsender"]]],[11,"clone","mio_extras::timer","",7,[[["self"]],["timeout"]]],[11,"from","mio_extras::channel","",0,[[["senderror"]],["senderror"]]],[11,"from","","",0,[[["error"]],["senderror"]]],[11,"from","","",1,[[["trysenderror"]],["trysenderror"]]],[11,"from","","",1,[[["senderror"]],["trysenderror"]]],[11,"from","","",1,[[["error"]],["trysenderror"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio_extras::timer","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio_extras::channel","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"register","","",4,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",4,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",4,[[["self"],["poll"]],["result"]]],[11,"register","mio_extras::timer","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]]],"paths":[[4,"SendError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Builder"],[3,"Timer"],[3,"Timeout"]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],["result",["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],["result",["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],["result",["tcpbuilder"]]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],["result",["tcplistener"]]]],[11,"connect","","Initiate a connection on this socket to the specified…",0,[[["self"],["t"]],["result",["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],["result",["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],["result",["socketaddr"]]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],["result",["udpbuilder"]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],["result",["udpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],["result",["udpsocket"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],["result",["option"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],["result",["option"]]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",N,N],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],["result",["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],["result",["bool"]]]],[8,"TcpStreamExt","net2","Extension methods for the standard [`TcpStream`…",N,N],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],["result",["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["u32"]]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],["result",["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket,…",4,[[["self"],["t"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",4,[[["self"]],["result",["option"]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],["result",["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",5,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",5,[[["self"]],["result",["option"]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket`…",N,N],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],["result",["ipv4addr"]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["self"],["u32"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],["result",["option"]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the…",6,[[["self"],["a"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it…",6,N],[10,"recv","","Receives data on the socket from the remote address to…",6,N],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"reuse_port","","",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",0,[[["self"]],["result",["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",1,[[["self"]],["result",["bool"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","items":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys","","",0,N],[13,"InvalidPath","","",0,N],[13,"InvalidUtf8","","The operation involved a conversion to Rust's native…",0,N],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance…",0,N],[0,"dir","","",N,N],[3,"Dir","nix::dir","An open directory.",N,N],[3,"Iter","","",N,N],[3,"Entry","","A directory entry, similar to `std::fs::DirEntry`.",N,N],[4,"Type","","",N,N],[13,"Fifo","","",1,N],[13,"CharacterDevice","","",1,N],[13,"Directory","","",1,N],[13,"BlockDevice","","",1,N],[13,"File","","",1,N],[13,"Symlink","","",1,N],[13,"Socket","","",1,N],[11,"open","","Opens the given path as with `fcntl::open`.",2,[[["p"],["oflag"],["mode"]],["result"]]],[11,"openat","","Opens the given path as with `fcntl::openat`.",2,[[["rawfd"],["p"],["oflag"],["mode"]],["result"]]],[11,"from","","Converts from a descriptor-based object, closing the…",2,[[["f"]],["result"]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or…",2,[[["rawfd"]],["result"]]],[11,"iter","","Returns an iterator of `Result<Entry>` which rewinds when…",2,[[["self"]],["iter"]]],[11,"ino","","Returns the inode number (`d_ino`) of the underlying…",3,[[["self"]],["u64"]]],[11,"file_name","","Returns the bare file name of this directory entry without…",3,[[["self"]],["cstr"]]],[11,"file_type","","Returns the type of this directory entry, if known.",3,[[["self"]],["option",["type"]]]],[0,"errno","nix","",N,N],[4,"Errno","nix::errno","",N,N],[13,"UnknownErrno","","",4,N],[13,"EPERM","","",4,N],[13,"ENOENT","","",4,N],[13,"ESRCH","","",4,N],[13,"EINTR","","",4,N],[13,"EIO","","",4,N],[13,"ENXIO","","",4,N],[13,"E2BIG","","",4,N],[13,"ENOEXEC","","",4,N],[13,"EBADF","","",4,N],[13,"ECHILD","","",4,N],[13,"EAGAIN","","",4,N],[13,"ENOMEM","","",4,N],[13,"EACCES","","",4,N],[13,"EFAULT","","",4,N],[13,"ENOTBLK","","",4,N],[13,"EBUSY","","",4,N],[13,"EEXIST","","",4,N],[13,"EXDEV","","",4,N],[13,"ENODEV","","",4,N],[13,"ENOTDIR","","",4,N],[13,"EISDIR","","",4,N],[13,"EINVAL","","",4,N],[13,"ENFILE","","",4,N],[13,"EMFILE","","",4,N],[13,"ENOTTY","","",4,N],[13,"ETXTBSY","","",4,N],[13,"EFBIG","","",4,N],[13,"ENOSPC","","",4,N],[13,"ESPIPE","","",4,N],[13,"EROFS","","",4,N],[13,"EMLINK","","",4,N],[13,"EPIPE","","",4,N],[13,"EDOM","","",4,N],[13,"ERANGE","","",4,N],[13,"EDEADLK","","",4,N],[13,"ENAMETOOLONG","","",4,N],[13,"ENOLCK","","",4,N],[13,"ENOSYS","","",4,N],[13,"ENOTEMPTY","","",4,N],[13,"ELOOP","","",4,N],[13,"ENOMSG","","",4,N],[13,"EIDRM","","",4,N],[13,"ECHRNG","","",4,N],[13,"EL2NSYNC","","",4,N],[13,"EL3HLT","","",4,N],[13,"EL3RST","","",4,N],[13,"ELNRNG","","",4,N],[13,"EUNATCH","","",4,N],[13,"ENOCSI","","",4,N],[13,"EL2HLT","","",4,N],[13,"EBADE","","",4,N],[13,"EBADR","","",4,N],[13,"EXFULL","","",4,N],[13,"ENOANO","","",4,N],[13,"EBADRQC","","",4,N],[13,"EBADSLT","","",4,N],[13,"EBFONT","","",4,N],[13,"ENOSTR","","",4,N],[13,"ENODATA","","",4,N],[13,"ETIME","","",4,N],[13,"ENOSR","","",4,N],[13,"ENONET","","",4,N],[13,"ENOPKG","","",4,N],[13,"EREMOTE","","",4,N],[13,"ENOLINK","","",4,N],[13,"EADV","","",4,N],[13,"ESRMNT","","",4,N],[13,"ECOMM","","",4,N],[13,"EPROTO","","",4,N],[13,"EMULTIHOP","","",4,N],[13,"EDOTDOT","","",4,N],[13,"EBADMSG","","",4,N],[13,"EOVERFLOW","","",4,N],[13,"ENOTUNIQ","","",4,N],[13,"EBADFD","","",4,N],[13,"EREMCHG","","",4,N],[13,"ELIBACC","","",4,N],[13,"ELIBBAD","","",4,N],[13,"ELIBSCN","","",4,N],[13,"ELIBMAX","","",4,N],[13,"ELIBEXEC","","",4,N],[13,"EILSEQ","","",4,N],[13,"ERESTART","","",4,N],[13,"ESTRPIPE","","",4,N],[13,"EUSERS","","",4,N],[13,"ENOTSOCK","","",4,N],[13,"EDESTADDRREQ","","",4,N],[13,"EMSGSIZE","","",4,N],[13,"EPROTOTYPE","","",4,N],[13,"ENOPROTOOPT","","",4,N],[13,"EPROTONOSUPPORT","","",4,N],[13,"ESOCKTNOSUPPORT","","",4,N],[13,"EOPNOTSUPP","","",4,N],[13,"EPFNOSUPPORT","","",4,N],[13,"EAFNOSUPPORT","","",4,N],[13,"EADDRINUSE","","",4,N],[13,"EADDRNOTAVAIL","","",4,N],[13,"ENETDOWN","","",4,N],[13,"ENETUNREACH","","",4,N],[13,"ENETRESET","","",4,N],[13,"ECONNABORTED","","",4,N],[13,"ECONNRESET","","",4,N],[13,"ENOBUFS","","",4,N],[13,"EISCONN","","",4,N],[13,"ENOTCONN","","",4,N],[13,"ESHUTDOWN","","",4,N],[13,"ETOOMANYREFS","","",4,N],[13,"ETIMEDOUT","","",4,N],[13,"ECONNREFUSED","","",4,N],[13,"EHOSTDOWN","","",4,N],[13,"EHOSTUNREACH","","",4,N],[13,"EALREADY","","",4,N],[13,"EINPROGRESS","","",4,N],[13,"ESTALE","","",4,N],[13,"EUCLEAN","","",4,N],[13,"ENOTNAM","","",4,N],[13,"ENAVAIL","","",4,N],[13,"EISNAM","","",4,N],[13,"EREMOTEIO","","",4,N],[13,"EDQUOT","","",4,N],[13,"ENOMEDIUM","","",4,N],[13,"EMEDIUMTYPE","","",4,N],[13,"ECANCELED","","",4,N],[13,"ENOKEY","","",4,N],[13,"EKEYEXPIRED","","",4,N],[13,"EKEYREVOKED","","",4,N],[13,"EKEYREJECTED","","",4,N],[13,"EOWNERDEAD","","",4,N],[13,"ENOTRECOVERABLE","","",4,N],[13,"ERFKILL","","",4,N],[13,"EHWPOISON","","",4,N],[5,"from_i32","","",N,[[["i32"]],["errno"]]],[5,"errno","","Returns the platform-specific value of errno",N,[[],["i32"]]],[17,"EWOULDBLOCK","","",N,N],[17,"EDEADLOCK","","",N,N],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and…",N,N],[10,"sentinel","","",5,[[],["self"]]],[11,"last","","",4,[[],["self"]]],[11,"desc","","",4,[[["self"]],["str"]]],[11,"from_i32","","",4,[[["i32"]],["errno"]]],[11,"clear","","",4,N],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel…",4,[[["s"]],["result"]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix","",N,N],[3,"AtFlags","nix::fcntl","",N,N],[3,"OFlag","","Configuration options for opened files.",N,N],[3,"SealFlag","","Additional flags for file sealing, which allows for…",N,N],[3,"FdFlag","","Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[3,"SpliceFFlags","","Additional flags to `splice` and friends.",N,N],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation…",N,N],[4,"FcntlArg","","",N,N],[13,"F_DUPFD","","",6,N],[13,"F_DUPFD_CLOEXEC","","",6,N],[13,"F_GETFD","","",6,N],[13,"F_SETFD","","",6,N],[13,"F_GETFL","","",6,N],[13,"F_SETFL","","",6,N],[13,"F_SETLK","","",6,N],[13,"F_SETLKW","","",6,N],[13,"F_GETLK","","",6,N],[13,"F_OFD_SETLK","","",6,N],[13,"F_OFD_SETLKW","","",6,N],[13,"F_OFD_GETLK","","",6,N],[13,"F_ADD_SEALS","","",6,N],[13,"F_GET_SEALS","","",6,N],[13,"F_GETPIPE_SZ","","",6,N],[13,"F_SETPIPE_SZ","","",6,N],[4,"FlockArg","","",N,N],[13,"LockShared","","",7,N],[13,"LockExclusive","","",7,N],[13,"Unlock","","",7,N],[13,"LockSharedNonblock","","",7,N],[13,"LockExclusiveNonblock","","",7,N],[13,"UnlockNonblock","","",7,N],[5,"open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"openat","","",N,[[["rawfd"],["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"readlink","","",N,N],[5,"readlinkat","","",N,N],[5,"fcntl","","",N,[[["rawfd"],["fcntlarg"]],["result",["c_int"]]]],[5,"flock","","",N,[[["rawfd"],["flockarg"]],["result"]]],[5,"splice","","",N,[[["rawfd"],["option",["loff_t"]],["rawfd"],["option",["loff_t"]],["usize"],["splicefflags"]],["result",["usize"]]]],[5,"tee","","",N,[[["rawfd"],["rawfd"],["usize"],["splicefflags"]],["result",["usize"]]]],[5,"vmsplice","","",N,N],[5,"fallocate","","Manipulates file space.",N,[[["rawfd"],["fallocateflags"],["off_t"],["off_t"]],["result",["c_int"]]]],[18,"AT_SYMLINK_NOFOLLOW","","",8,N],[18,"AT_NO_AUTOMOUNT","","",8,N],[18,"AT_EMPTY_PATH","","",8,N],[11,"empty","","Returns an empty set of flags.",8,[[],["atflags"]]],[11,"all","","Returns the set containing all flags.",8,[[],["atflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",8,[[["c_int"]],["option",["atflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",8,[[["c_int"]],["atflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",8,[[["self"],["atflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",8,[[["self"],["atflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",8,[[["self"],["atflags"],["bool"]]]],[18,"O_ACCMODE","","Mask for the access mode of the file.",9,N],[18,"O_APPEND","","Open the file in append-only mode.",9,N],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",9,N],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",9,N],[18,"O_CREAT","","Create the file if it does not exist.",9,N],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",9,N],[18,"O_DIRECTORY","","If the specified path isn't a directory, fail.",9,N],[18,"O_DSYNC","","Implicitly follow each `write()` with an `fdatasync()`.",9,N],[18,"O_EXCL","","Error out if a file was not created.",9,N],[18,"O_FSYNC","","Same as `O_SYNC`.",9,N],[18,"O_LARGEFILE","","Allow files whose sizes can't be represented in an `off_t`…",9,N],[18,"O_NOATIME","","Do not update the file last access time during `read(2)`s.",9,N],[18,"O_NOCTTY","","Don't attach the device as the process' controlling…",9,N],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",9,N],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",9,N],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",9,N],[18,"O_PATH","","Obtain a file descriptor for low-level access.",9,N],[18,"O_RDONLY","","Only allow reading.",9,N],[18,"O_RDWR","","Allow both reading and writing.",9,N],[18,"O_RSYNC","","Similar to `O_DSYNC` but applies to `read`s instead.",9,N],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",9,N],[18,"O_TMPFILE","","Create an unnamed temporary file.",9,N],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows…",9,N],[18,"O_WRONLY","","Only allow writing.",9,N],[11,"empty","","Returns an empty set of flags.",9,[[],["oflag"]]],[11,"all","","Returns the set containing all flags.",9,[[],["oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["c_int"]],["option",["oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["c_int"]],["oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["self"],["oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["self"],["oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["self"],["oflag"],["bool"]]]],[18,"F_SEAL_SEAL","","Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",10,N],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",10,N],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",10,N],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",10,N],[11,"empty","","Returns an empty set of flags.",10,[[],["sealflag"]]],[11,"all","","Returns the set containing all flags.",10,[[],["sealflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[["c_int"]],["option",["sealflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[["c_int"]],["sealflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["self"],["sealflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["self"],["sealflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["sealflag"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["sealflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["sealflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["self"],["sealflag"],["bool"]]]],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a…",11,N],[11,"empty","","Returns an empty set of flags.",11,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",11,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",11,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",11,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",11,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",11,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",11,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",11,[[["self"],["fdflag"],["bool"]]]],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",12,N],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",12,N],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",12,N],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",12,N],[11,"empty","","Returns an empty set of flags.",12,[[],["splicefflags"]]],[11,"all","","Returns the set containing all flags.",12,[[],["splicefflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[["c_uint"]],["option",["splicefflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[["c_uint"]],["splicefflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["self"],["splicefflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["self"],["splicefflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["self"],["splicefflags"]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["self"],["splicefflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["self"],["splicefflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["self"],["splicefflags"],["bool"]]]],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",13,N],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",13,N],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",13,N],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",13,N],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file…",13,N],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",13,N],[11,"empty","","Returns an empty set of flags.",13,[[],["fallocateflags"]]],[11,"all","","Returns the set containing all flags.",13,[[],["fallocateflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[["c_int"]],["option",["fallocateflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[["c_int"]],["fallocateflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["self"],["fallocateflags"]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["self"],["fallocateflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["self"],["fallocateflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["self"],["fallocateflags"],["bool"]]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by…",N,N],[12,"interface_name","","Name of the network interface",14,N],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",14,N],[12,"address","","Network address of this interface",14,N],[12,"netmask","","Netmask of this interface",14,N],[12,"broadcast","","Broadcast address of this interface, if applicable",14,N],[12,"destination","","Point-to-point destination address",14,N],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs","","Get interface addresses using libc's `getifaddrs`",N,[[],["result",["interfaceaddressiterator"]]]],[0,"kmod","nix","Load and unload kernel modules.",N,N],[3,"ModuleInitFlags","nix::kmod","Flags used by the `finit_module` function.",N,N],[3,"DeleteModuleFlags","","Flags used by `delete_module`.",N,N],[5,"init_module","","Loads a kernel module from a buffer.",N,N],[5,"finit_module","","Loads a kernel module from a given file descriptor.",N,[[["t"],["cstr"],["moduleinitflags"]],["result"]]],[5,"delete_module","","Unloads the kernel module with the given name.",N,[[["cstr"],["deletemoduleflags"]],["result"]]],[18,"MODULE_INIT_IGNORE_MODVERSIONS","","Ignore symbol version hashes.",15,N],[18,"MODULE_INIT_IGNORE_VERMAGIC","","Ignore kernel version magic.",15,N],[11,"empty","","Returns an empty set of flags.",15,[[],["moduleinitflags"]]],[11,"all","","Returns the set containing all flags.",15,[[],["moduleinitflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",15,[[["c_uint"]],["option",["moduleinitflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",15,[[["c_uint"]],["moduleinitflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["self"],["moduleinitflags"]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["self"],["moduleinitflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["self"],["moduleinitflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",15,[[["self"],["moduleinitflags"],["bool"]]]],[18,"O_NONBLOCK","","",16,N],[18,"O_TRUNC","","",16,N],[11,"empty","","Returns an empty set of flags.",16,[[],["deletemoduleflags"]]],[11,"all","","Returns the set containing all flags.",16,[[],["deletemoduleflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",16,[[["c_int"]],["option",["deletemoduleflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",16,[[["c_int"]],["deletemoduleflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["self"],["deletemoduleflags"]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["self"],["deletemoduleflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["self"],["deletemoduleflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",16,[[["self"],["deletemoduleflags"],["bool"]]]],[0,"mount","nix","",N,N],[3,"MsFlags","nix::mount","",N,N],[3,"MntFlags","","",N,N],[5,"mount","","",N,[[["option"],["p2"],["option"],["msflags"],["option"]],["result"]]],[5,"umount","","",N,[[["p"]],["result"]]],[5,"umount2","","",N,[[["p"],["mntflags"]],["result"]]],[18,"MS_RDONLY","","Mount read-only",17,N],[18,"MS_NOSUID","","Ignore suid and sgid bits",17,N],[18,"MS_NODEV","","Disallow access to device special files",17,N],[18,"MS_NOEXEC","","Disallow program execution",17,N],[18,"MS_SYNCHRONOUS","","Writes are synced at once",17,N],[18,"MS_REMOUNT","","Alter flags of a mounted FS",17,N],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",17,N],[18,"MS_DIRSYNC","","Directory modifications are synchronous",17,N],[18,"MS_NOATIME","","Do not update access times",17,N],[18,"MS_NODIRATIME","","Do not update directory access times",17,N],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",17,N],[18,"MS_MOVE","","",17,N],[18,"MS_REC","","",17,N],[18,"MS_SILENT","","",17,N],[18,"MS_POSIXACL","","",17,N],[18,"MS_UNBINDABLE","","",17,N],[18,"MS_PRIVATE","","",17,N],[18,"MS_SLAVE","","",17,N],[18,"MS_SHARED","","",17,N],[18,"MS_RELATIME","","",17,N],[18,"MS_KERNMOUNT","","",17,N],[18,"MS_I_VERSION","","",17,N],[18,"MS_STRICTATIME","","",17,N],[18,"MS_ACTIVE","","",17,N],[18,"MS_NOUSER","","",17,N],[18,"MS_RMT_MASK","","",17,N],[18,"MS_MGC_VAL","","",17,N],[18,"MS_MGC_MSK","","",17,N],[11,"empty","","Returns an empty set of flags.",17,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",17,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[["c_ulong"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[["c_ulong"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["self"],["msflags"],["bool"]]]],[18,"MNT_FORCE","","",18,N],[18,"MNT_DETACH","","",18,N],[18,"MNT_EXPIRE","","",18,N],[11,"empty","","Returns an empty set of flags.",18,[[],["mntflags"]]],[11,"all","","Returns the set containing all flags.",18,[[],["mntflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[["c_int"]],["option",["mntflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[["c_int"]],["mntflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["self"],["mntflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["self"],["mntflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["self"],["mntflags"]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["self"],["mntflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["self"],["mntflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["self"],["mntflags"],["bool"]]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag","nix::mqueue","",N,N],[3,"FdFlag","","",N,N],[3,"MqAttr","","",N,N],[5,"mq_open","","Open a message queue",N,[[["cstring"],["mq_oflag"],["mode"],["option",["mqattr"]]],["result",["mqd_t"]]]],[5,"mq_unlink","","Remove a message queue",N,[[["cstring"]],["result"]]],[5,"mq_close","","Close a message queue",N,[[["mqd_t"]],["result"]]],[5,"mq_receive","","Receive a message from a message queue",N,N],[5,"mq_send","","Send a message to a message queue",N,N],[5,"mq_getattr","","Get message queue attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK`…",N,[[["mqd_t"],["mqattr"]],["result",["mqattr"]]]],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for…",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a…",N,[[["mqd_t"]],["result",["mqattr"]]]],[18,"O_RDONLY","","",19,N],[18,"O_WRONLY","","",19,N],[18,"O_RDWR","","",19,N],[18,"O_CREAT","","",19,N],[18,"O_EXCL","","",19,N],[18,"O_NONBLOCK","","",19,N],[18,"O_CLOEXEC","","",19,N],[11,"empty","","Returns an empty set of flags.",19,[[],["mq_oflag"]]],[11,"all","","Returns the set containing all flags.",19,[[],["mq_oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",19,[[["c_int"]],["option",["mq_oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",19,[[["c_int"]],["mq_oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["self"],["mq_oflag"]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["self"],["mq_oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["self"],["mq_oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",19,[[["self"],["mq_oflag"],["bool"]]]],[18,"FD_CLOEXEC","","",20,N],[11,"empty","","Returns an empty set of flags.",20,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",20,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",20,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",20,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",20,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",20,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",20,[[["self"],["fdflag"],["bool"]]]],[11,"new","","",21,[[["c_long"],["c_long"],["c_long"],["c_long"]],["mqattr"]]],[11,"flags","","",21,[[["self"]],["c_long"]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,"InterfaceFlags","nix::net::if_","Standard interface flags, used by `getifaddrs`",N,N],[5,"if_nametoindex","","Resolve an interface into a interface number.",N,[[["p"]],["result",["c_uint"]]]],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",22,N],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",22,N],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",22,N],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",22,N],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",22,N],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see `netdevice(7)`)",22,N],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",22,N],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see…",22,N],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",22,N],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",22,N],[18,"IFF_MASTER","","Master of a load balancing bundle. (see `netdevice(7)`)",22,N],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see `netdevice(7)`)",22,N],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",22,N],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see `netdevice(7)`)",22,N],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see `netdevice(7)`)",22,N],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see…",22,N],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",22,N],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",22,N],[18,"IFF_ECHO","","Echo sent packets. Volatile.",22,N],[18,"IFF_NO_PI","","Do not provide packet information",22,N],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",22,N],[18,"IFF_TAP","","TAP device",22,N],[11,"empty","","Returns an empty set of flags.",22,[[],["interfaceflags"]]],[11,"all","","Returns the set containing all flags.",22,[[],["interfaceflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",22,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",22,[[["c_int"]],["option",["interfaceflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",22,[[["c_int"]],["interfaceflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",22,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",22,[[["self"],["interfaceflags"]]]],[11,"remove","","Removes the specified flags in-place.",22,[[["self"],["interfaceflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",22,[[["self"],["interfaceflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",22,[[["self"],["interfaceflags"],["bool"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",N,N],[3,"EventFlags","","These flags define the different events that can be…",N,N],[5,"poll","","`poll` waits for one of a set of file descriptors to…",N,N],[5,"ppoll","","`ppoll()` allows an application to safely wait until…",N,N],[11,"new","","Creates a new `PollFd` specifying the events of interest…",23,[[["rawfd"],["eventflags"]],["pollfd"]]],[11,"revents","","Returns the events that occured in the last call to `poll`…",23,[[["self"]],["option",["eventflags"]]]],[18,"POLLIN","","There is data to read.",24,N],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",24,N],[18,"POLLOUT","","Writing is now possible, though a write larger that the…",24,N],[18,"POLLRDNORM","","Equivalent to `POLLIN`",24,N],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",24,N],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",24,N],[18,"POLLWRBAND","","Priority data may be written.",24,N],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`;…",24,N],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in…",24,N],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in…",24,N],[11,"empty","","Returns an empty set of flags.",24,[[],["eventflags"]]],[11,"all","","Returns the set containing all flags.",24,[[],["eventflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[["self"]],["c_short"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",24,[[["c_short"]],["option",["eventflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",24,[[["c_short"]],["eventflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",24,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",24,[[["self"],["eventflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",24,[[["self"],["eventflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["self"],["eventflags"]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["self"],["eventflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["self"],["eventflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",24,[[["self"],["eventflags"],["bool"]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId","nix::pty","",N,N],[3,"Winsize","","",N,N],[12,"ws_row","","",25,N],[12,"ws_col","","",25,N],[12,"ws_xpixel","","",25,N],[12,"ws_ypixel","","",25,N],[3,"OpenptyResult","","Representation of a master/slave pty pair",N,N],[12,"master","","The master port in a virtual pty pair",26,N],[12,"slave","","The slave port in a virtual pty pair",26,N],[3,"PtyMaster","","Representation of the Master device in a master/slave pty…",N,N],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],["result",["ptymaster"]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair…",N,[[["ptymaster"]],["result"]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and…",N,[[["t"],["u"]],["result",["openptyresult"]]]],[0,"sched","nix","",N,N],[3,"CloneFlags","nix::sched","",N,N],[3,"CpuSet","","",N,N],[5,"sched_setaffinity","","",N,[[["pid"],["cpuset"]],["result"]]],[5,"clone","","",N,N],[5,"unshare","","",N,[[["cloneflags"]],["result"]]],[5,"setns","","",N,[[["rawfd"],["cloneflags"]],["result"]]],[6,"CloneCb","","",N,N],[18,"CLONE_VM","","",27,N],[18,"CLONE_FS","","",27,N],[18,"CLONE_FILES","","",27,N],[18,"CLONE_SIGHAND","","",27,N],[18,"CLONE_PTRACE","","",27,N],[18,"CLONE_VFORK","","",27,N],[18,"CLONE_PARENT","","",27,N],[18,"CLONE_THREAD","","",27,N],[18,"CLONE_NEWNS","","",27,N],[18,"CLONE_SYSVSEM","","",27,N],[18,"CLONE_SETTLS","","",27,N],[18,"CLONE_PARENT_SETTID","","",27,N],[18,"CLONE_CHILD_CLEARTID","","",27,N],[18,"CLONE_DETACHED","","",27,N],[18,"CLONE_UNTRACED","","",27,N],[18,"CLONE_CHILD_SETTID","","",27,N],[18,"CLONE_NEWCGROUP","","",27,N],[18,"CLONE_NEWUTS","","",27,N],[18,"CLONE_NEWIPC","","",27,N],[18,"CLONE_NEWUSER","","",27,N],[18,"CLONE_NEWPID","","",27,N],[18,"CLONE_NEWNET","","",27,N],[18,"CLONE_IO","","",27,N],[11,"empty","","Returns an empty set of flags.",27,[[],["cloneflags"]]],[11,"all","","Returns the set containing all flags.",27,[[],["cloneflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",27,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",27,[[["c_int"]],["option",["cloneflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",27,[[["c_int"]],["cloneflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",27,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",27,[[["self"],["cloneflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",27,[[["self"],["cloneflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",27,[[["self"],["cloneflags"]]]],[11,"remove","","Removes the specified flags in-place.",27,[[["self"],["cloneflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",27,[[["self"],["cloneflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",27,[[["self"],["cloneflags"],["bool"]]]],[11,"new","","",28,[[],["cpuset"]]],[11,"is_set","","",28,[[["self"],["usize"]],["result",["bool"]]]],[11,"set","","",28,[[["self"],["usize"]],["result"]]],[11,"unset","","",28,[[["self"],["usize"]],["result"]]],[0,"sys","nix","",N,N],[0,"aio","nix::sys","POSIX Asynchronous I/O",N,N],[3,"AioCb","nix::sys::aio","AIO Control Block.",N,N],[3,"LioCb","","LIO Control Block.",N,N],[12,"aiocbs","","A collection of [`AioCb`]s. All of these will be issued…",29,N],[4,"AioFsyncMode","","Mode for `AioCb::fsync`. Controls whether only data or…",N,N],[13,"O_SYNC","","do it like `fsync`",30,N],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",30,N],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given…",N,N],[13,"LIO_NOP","","",31,N],[13,"LIO_WRITE","","",31,N],[13,"LIO_READ","","",31,N],[4,"LioMode","","Mode for `lio_listio`",N,N],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested…",32,N],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",32,N],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled","","All outstanding requests were canceled",33,N],[13,"AioNotCanceled","","Some requests were not canceled. Their status should be…",33,N],[13,"AioAllDone","","All of the requests have already finished",33,N],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from…",N,N],[13,"None","","No buffer to own.",34,N],[13,"Phantom","","Keeps a reference to a slice",34,N],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",34,N],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",34,N],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file…",N,[[["rawfd"]],["result",["aiocancelstat"]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the…",N,N],[11,"buffer","","Remove the inner `Buffer` and return it",35,[[["self"]],["buffer"]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",35,[[["self"]],["option",["box"]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",35,[[["self"]],["option",["box"]]]],[11,"fd","","Returns the underlying file descriptor associated with the…",35,[[["self"]],["rawfd"]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",35,[[["rawfd"],["c_int"],["sigevnotify"]],["aiocb"]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",35,N],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",35,[[["rawfd"],["off_t"],["box",["borrow"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for…",35,[[["rawfd"],["off_t"],["box",["borrowmut"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",35,N],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",35,N],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather…",35,N],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",35,[[["self"],["sigevnotify"]]]],[11,"cancel","","Cancels an outstanding AIO request.",35,[[["self"]],["result",["aiocancelstat"]]]],[11,"error","","Retrieve error status of an asynchronous operation.",35,[[["self"]],["result"]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",35,[[["self"],["aiofsyncmode"]],["result"]]],[11,"lio_opcode","","Returns the `aiocb`'s `LioOpcode` field",35,[[["self"]],["option",["lioopcode"]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",35,[[["self"]],["usize"]]],[11,"offset","","Returns the file offset stored in the `AioCb`",35,[[["self"]],["off_t"]]],[11,"priority","","Returns the priority of the `AioCb`",35,[[["self"]],["c_int"]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",35,[[["self"]],["result"]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",35,[[["self"]],["sigevent"]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",35,[[["self"]],["result",["isize"]]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",35,[[["self"]],["result"]]],[11,"with_capacity","","Initialize an empty `LioCb`",29,[[["usize"]],["liocb"]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single…",29,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"listio_resubmit","","Resubmits any incomplete operations with [`lio_listio`].",29,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"aio_return","","Collect final status for an individual `AioCb` submitted…",29,[[["self"],["usize"]],["result",["isize"]]]],[11,"error","","Retrieve error status of an individual `AioCb` submitted…",29,[[["self"],["usize"]],["result"]]],[0,"epoll","nix::sys","",N,N],[3,"EpollFlags","nix::sys::epoll","",N,N],[3,"EpollCreateFlags","","",N,N],[3,"EpollEvent","","",N,N],[4,"EpollOp","","",N,N],[13,"EpollCtlAdd","","",36,N],[13,"EpollCtlDel","","",36,N],[13,"EpollCtlMod","","",36,N],[5,"epoll_create","","",N,[[],["result",["rawfd"]]]],[5,"epoll_create1","","",N,[[["epollcreateflags"]],["result",["rawfd"]]]],[5,"epoll_ctl","","",N,[[["rawfd"],["epollop"],["rawfd"],["t"]],["result"]]],[5,"epoll_wait","","",N,N],[18,"EPOLLIN","","",37,N],[18,"EPOLLPRI","","",37,N],[18,"EPOLLOUT","","",37,N],[18,"EPOLLRDNORM","","",37,N],[18,"EPOLLRDBAND","","",37,N],[18,"EPOLLWRNORM","","",37,N],[18,"EPOLLWRBAND","","",37,N],[18,"EPOLLMSG","","",37,N],[18,"EPOLLERR","","",37,N],[18,"EPOLLHUP","","",37,N],[18,"EPOLLRDHUP","","",37,N],[18,"EPOLLEXCLUSIVE","","",37,N],[18,"EPOLLWAKEUP","","",37,N],[18,"EPOLLONESHOT","","",37,N],[18,"EPOLLET","","",37,N],[11,"empty","","Returns an empty set of flags.",37,[[],["epollflags"]]],[11,"all","","Returns the set containing all flags.",37,[[],["epollflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",37,[[["c_int"]],["option",["epollflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",37,[[["c_int"]],["epollflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",37,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",37,[[["self"],["epollflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",37,[[["self"],["epollflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["self"],["epollflags"]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["self"],["epollflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["self"],["epollflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",37,[[["self"],["epollflags"],["bool"]]]],[18,"EPOLL_CLOEXEC","","",38,N],[11,"empty","","Returns an empty set of flags.",38,[[],["epollcreateflags"]]],[11,"all","","Returns the set containing all flags.",38,[[],["epollcreateflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",38,[[["c_int"]],["option",["epollcreateflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",38,[[["c_int"]],["epollcreateflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",38,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["self"],["epollcreateflags"]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["self"],["epollcreateflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["self"],["epollcreateflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",38,[[["self"],["epollcreateflags"],["bool"]]]],[11,"new","","",39,[[["epollflags"],["u64"]],["self"]]],[11,"empty","","",39,[[],["self"]]],[11,"events","","",39,[[["self"]],["epollflags"]]],[11,"data","","",39,[[["self"]],["u64"]]],[0,"eventfd","nix::sys","",N,N],[3,"EfdFlags","nix::sys::eventfd","",N,N],[5,"eventfd","","",N,[[["c_uint"],["efdflags"]],["result",["rawfd"]]]],[18,"EFD_CLOEXEC","","",40,N],[18,"EFD_NONBLOCK","","",40,N],[18,"EFD_SEMAPHORE","","",40,N],[11,"empty","","Returns an empty set of flags.",40,[[],["efdflags"]]],[11,"all","","Returns the set containing all flags.",40,[[],["efdflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",40,[[["c_int"]],["option",["efdflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",40,[[["c_int"]],["efdflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",40,[[["self"],["efdflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",40,[[["self"],["efdflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["self"],["efdflags"]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["self"],["efdflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["self"],["efdflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",40,[[["self"],["efdflags"],["bool"]]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",N,N],[0,"memfd","","",N,N],[3,"MemFdCreateFlag","nix::sys::memfd","",N,N],[5,"memfd_create","","",N,[[["cstr"],["memfdcreateflag"]],["result",["rawfd"]]]],[18,"MFD_CLOEXEC","","",41,N],[18,"MFD_ALLOW_SEALING","","",41,N],[11,"empty","","Returns an empty set of flags.",41,[[],["memfdcreateflag"]]],[11,"all","","Returns the set containing all flags.",41,[[],["memfdcreateflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",41,[[["c_uint"]],["option",["memfdcreateflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",41,[[["c_uint"]],["memfdcreateflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",41,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["self"],["memfdcreateflag"]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["self"],["memfdcreateflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["self"],["memfdcreateflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",41,[[["self"],["memfdcreateflag"],["bool"]]]],[0,"mman","nix::sys","",N,N],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",N,N],[3,"MapFlags","","Additional parameters for `mmap()`.",N,N],[3,"MsFlags","","Configuration flags for `msync`.",N,N],[3,"MlockAllFlags","","Flags for `mlockall`.",N,N],[4,"MmapAdvise","","Usage information for a range of memory to allow for…",N,N],[13,"MADV_NORMAL","","No further special treatment. This is the default.",42,N],[13,"MADV_RANDOM","","Expect random page references.",42,N],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",42,N],[13,"MADV_WILLNEED","","Expect access in the near future.",42,N],[13,"MADV_DONTNEED","","Do not expect access in the near future.",42,N],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing…",42,N],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child…",42,N],[13,"MADV_DOFORK","","Undo the effect of `MADV_DONTFORK`.",42,N],[13,"MADV_HWPOISON","","Poison the given pages.",42,N],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",42,N],[13,"MADV_UNMERGEABLE","","Undo the effect of `MADV_MERGEABLE`",42,N],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original…",42,N],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the given…",42,N],[13,"MADV_NOHUGEPAGE","","Undo the effect of `MADV_HUGEPAGE`.",42,N],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",42,N],[13,"MADV_DODUMP","","Undo the effect of an earlier `MADV_DONTDUMP`.",42,N],[13,"MADV_FREE","","Specify that the application no longer needs the pages in…",42,N],[5,"mlock","","Locks all memory pages that contain part of the address…",N,N],[5,"munlock","","Unlocks all memory pages that contain part of the address…",N,N],[5,"mlockall","","Locks all memory pages mapped into this process' address…",N,[[["mlockallflags"]],["result"]]],[5,"munlockall","","Unlocks all memory pages mapped into this process' address…",N,[[],["result"]]],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made…",N,N],[5,"munmap","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"shm_open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"shm_unlink","","",N,[[["p"]],["result"]]],[18,"PROT_NONE","","Pages cannot be accessed.",43,N],[18,"PROT_READ","","Pages can be read.",43,N],[18,"PROT_WRITE","","Pages can be written.",43,N],[18,"PROT_EXEC","","Pages can be executed",43,N],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows…",43,N],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that…",43,N],[11,"empty","","Returns an empty set of flags.",43,[[],["protflags"]]],[11,"all","","Returns the set containing all flags.",43,[[],["protflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",43,[[["c_int"]],["option",["protflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",43,[[["c_int"]],["protflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",43,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",43,[[["self"],["protflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",43,[[["self"],["protflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["self"],["protflags"]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["self"],["protflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["self"],["protflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",43,[[["self"],["protflags"],["bool"]]]],[18,"MAP_FILE","","Compatibility flag. Ignored.",44,N],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",44,N],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive…",44,N],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in…",44,N],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",44,N],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",44,N],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address…",44,N],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping…",44,N],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",44,N],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",44,N],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as…",44,N],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",44,N],[18,"MAP_POPULATE","","Populate page tables for a mapping.",44,N],[18,"MAP_NONBLOCK","","Only meaningful when used with `MAP_POPULATE`. Don't…",44,N],[18,"MAP_HUGETLB","","Allocate the mapping using \"huge pages.\"",44,N],[18,"MAP_STACK","","Region grows down, like a stack.",44,N],[11,"empty","","Returns an empty set of flags.",44,[[],["mapflags"]]],[11,"all","","Returns the set containing all flags.",44,[[],["mapflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",44,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",44,[[["c_int"]],["option",["mapflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",44,[[["c_int"]],["mapflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",44,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",44,[[["self"],["mapflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",44,[[["self"],["mapflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",44,[[["self"],["mapflags"]]]],[11,"remove","","Removes the specified flags in-place.",44,[[["self"],["mapflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",44,[[["self"],["mapflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",44,[[["self"],["mapflags"],["bool"]]]],[18,"MS_ASYNC","","Schedule an update but return immediately.",45,N],[18,"MS_INVALIDATE","","Invalidate all cached data.",45,N],[18,"MS_SYNC","","Perform an update and wait for it to complete.",45,N],[11,"empty","","Returns an empty set of flags.",45,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",45,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",45,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",45,[[["c_int"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",45,[[["c_int"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",45,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",45,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",45,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",45,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",45,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",45,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",45,[[["self"],["msflags"],["bool"]]]],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address…",46,N],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space…",46,N],[11,"empty","","Returns an empty set of flags.",46,[[],["mlockallflags"]]],[11,"all","","Returns the set containing all flags.",46,[[],["mlockallflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",46,[[["c_int"]],["option",["mlockallflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",46,[[["c_int"]],["mlockallflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["self"],["mlockallflags"]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["self"],["mlockallflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["self"],["mlockallflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",46,[[["self"],["mlockallflags"],["bool"]]]],[0,"pthread","nix::sys","",N,N],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread","","",N,N],[0,"ptrace","nix::sys","",N,N],[3,"Options","nix::sys::ptrace","Ptrace options used in conjunction with the…",N,N],[4,"Request","","Ptrace Request enum defining the action to be taken.",N,N],[13,"PTRACE_TRACEME","","",47,N],[13,"PTRACE_PEEKTEXT","","",47,N],[13,"PTRACE_PEEKDATA","","",47,N],[13,"PTRACE_PEEKUSER","","",47,N],[13,"PTRACE_POKETEXT","","",47,N],[13,"PTRACE_POKEDATA","","",47,N],[13,"PTRACE_POKEUSER","","",47,N],[13,"PTRACE_CONT","","",47,N],[13,"PTRACE_KILL","","",47,N],[13,"PTRACE_SINGLESTEP","","",47,N],[13,"PTRACE_GETREGS","","",47,N],[13,"PTRACE_SETREGS","","",47,N],[13,"PTRACE_GETFPREGS","","",47,N],[13,"PTRACE_SETFPREGS","","",47,N],[13,"PTRACE_ATTACH","","",47,N],[13,"PTRACE_DETACH","","",47,N],[13,"PTRACE_GETFPXREGS","","",47,N],[13,"PTRACE_SETFPXREGS","","",47,N],[13,"PTRACE_SYSCALL","","",47,N],[13,"PTRACE_SETOPTIONS","","",47,N],[13,"PTRACE_GETEVENTMSG","","",47,N],[13,"PTRACE_GETSIGINFO","","",47,N],[13,"PTRACE_SETSIGINFO","","",47,N],[13,"PTRACE_GETREGSET","","",47,N],[13,"PTRACE_SETREGSET","","",47,N],[13,"PTRACE_SEIZE","","",47,N],[13,"PTRACE_INTERRUPT","","",47,N],[13,"PTRACE_LISTEN","","",47,N],[13,"PTRACE_PEEKSIGINFO","","",47,N],[4,"Event","","Using the ptrace options the tracer can configure the…",N,N],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",48,N],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",48,N],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",48,N],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",48,N],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",48,N],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit…",48,N],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",48,N],[5,"ptrace","","Performs a ptrace request. If the request in question is…",N,N],[5,"setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",N,[[["pid"],["options"]],["result"]]],[5,"getevent","","Gets a ptrace event as described by…",N,[[["pid"]],["result",["c_long"]]]],[5,"getsiginfo","","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",N,[[["pid"]],["result",["siginfo_t"]]]],[5,"setsiginfo","","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",N,[[["pid"],["siginfo_t"]],["result"]]],[5,"traceme","","Sets the process as traceable, as with…",N,[[],["result"]]],[5,"syscall","","Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",N,[[["pid"]],["result"]]],[5,"attach","","Attach to a running process, as with…",N,[[["pid"]],["result"]]],[5,"detach","","Detaches the current running process, as with…",N,[[["pid"]],["result"]]],[5,"cont","","Restart the stopped tracee process, as with…",N,[[["pid"],["t"]],["result"]]],[5,"kill","","Issues a kill request as with `ptrace(PTRACE_KILL, ...)`",N,[[["pid"]],["result"]]],[5,"step","","Move the stopped tracee process forward by a single step…",N,[[["pid"],["t"]],["result"]]],[5,"read","","Reads a word from a processes memory at the given address",N,[[["pid"],["addresstype"]],["result",["c_long"]]]],[5,"write","","Writes a word into the processes memory at the given address",N,N],[18,"PTRACE_O_TRACESYSGOOD","","When delivering system call traps set a bit to allow…",49,N],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked…",49,N],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked…",49,N],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned process.",49,N],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",49,N],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",49,N],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit commences…",49,N],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered.…",49,N],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits. This is…",49,N],[11,"empty","","Returns an empty set of flags.",49,[[],["options"]]],[11,"all","","Returns the set containing all flags.",49,[[],["options"]]],[11,"bits","","Returns the raw value of the flags currently stored.",49,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",49,[[["c_int"]],["option",["options"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",49,[[["c_int"]],["options"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",49,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",49,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",49,[[["self"],["options"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",49,[[["self"],["options"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",49,[[["self"],["options"]]]],[11,"remove","","Removes the specified flags in-place.",49,[[["self"],["options"]]]],[11,"toggle","","Toggles the specified flags in-place.",49,[[["self"],["options"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",49,[[["self"],["options"],["bool"]]]],[6,"AddressType","","",N,N],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or…",N,N],[3,"QuotaValidFlags","nix::sys::quota","Indicates the quota fields that are valid to read from.",N,N],[3,"Dqblk","","Wrapper type for `if_dqblk`",N,N],[4,"QuotaType","","The scope of the quota.",N,N],[13,"USRQUOTA","","Specify a user quota",50,N],[13,"GRPQUOTA","","Specify a group quota",50,N],[4,"QuotaFmt","","The type of quota format to use.",N,N],[13,"QFMT_VFS_OLD","","Use the original quota format.",51,N],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",51,N],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",51,N],[5,"quotactl_on","","Turn on disk quotas for a block device.",N,[[["quotatype"],["p"],["quotafmt"],["p"]],["result"]]],[5,"quotactl_off","","Disable disk quotas for a block device.",N,[[["quotatype"],["p"]],["result"]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",N,[[["quotatype"],["option"]],["result"]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given…",N,[[["quotatype"],["p"],["c_int"]],["result",["dqblk"]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a…",N,[[["quotatype"],["p"],["c_int"],["dqblk"],["quotavalidflags"]],["result"]]],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",52,N],[18,"QIF_SPACE","","The current space field.",52,N],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",52,N],[18,"QIF_INODES","","The current inodes field.",52,N],[18,"QIF_BTIME","","The disk use time limit field.",52,N],[18,"QIF_ITIME","","The file quote time limit field.",52,N],[18,"QIF_LIMITS","","All block & inode limits.",52,N],[18,"QIF_USAGE","","The space & inodes usage fields.",52,N],[18,"QIF_TIMES","","The time limit fields.",52,N],[18,"QIF_ALL","","All fields.",52,N],[11,"empty","","Returns an empty set of flags.",52,[[],["quotavalidflags"]]],[11,"all","","Returns the set containing all flags.",52,[[],["quotavalidflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",52,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",52,[[["u32"]],["option",["quotavalidflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",52,[[["u32"]],["quotavalidflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",52,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",52,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",52,[[["self"],["quotavalidflags"]]]],[11,"remove","","Removes the specified flags in-place.",52,[[["self"],["quotavalidflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",52,[[["self"],["quotavalidflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",52,[[["self"],["quotavalidflags"],["bool"]]]],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",53,[[["self"]],["option",["u64"]]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",53,[[["self"],["u64"]]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",53,[[["self"]],["option",["u64"]]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",53,[[["self"],["u64"]]]],[11,"occupied_space","","Current occupied space (bytes).",53,[[["self"]],["option",["u64"]]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",53,[[["self"]],["option",["u64"]]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",53,[[["self"],["u64"]]]],[11,"inodes_soft_limit","","Preferred inode limit",53,[[["self"]],["option",["u64"]]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",53,[[["self"],["u64"]]]],[11,"allocated_inodes","","Current number of allocated inodes.",53,[[["self"]],["option",["u64"]]]],[11,"block_time_limit","","Time limit for excessive disk use.",53,[[["self"]],["option",["u64"]]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",53,[[["self"],["u64"]]]],[11,"inode_time_limit","","Time limit for excessive files.",53,[[["self"]],["option",["u64"]]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",53,[[["self"],["u64"]]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",N,N],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",N,N],[13,"RB_HALT_SYSTEM","","",54,N],[13,"RB_KEXEC","","",54,N],[13,"RB_POWER_OFF","","",54,N],[13,"RB_AUTOBOOT","","",54,N],[13,"RB_SW_SUSPEND","","",54,N],[5,"reboot","","",N,[[["rebootmode"]],["result",["void"]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",N,[[["bool"]],["result"]]],[0,"select","nix::sys","",N,N],[17,"FD_SETSIZE","nix::sys::select","",N,N],[3,"FdSet","","",N,N],[5,"select","","Monitors file descriptors for readiness",N,[[["n"],["r"],["w"],["e"],["t"]],["result",["c_int"]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered…",N,[[["n"],["r"],["w"],["e"],["t"],["s"]],["result",["c_int"]]]],[11,"new","","",55,[[],["fdset"]]],[11,"insert","","",55,[[["self"],["rawfd"]]]],[11,"remove","","",55,[[["self"],["rawfd"]]]],[11,"contains","","",55,[[["self"],["rawfd"]],["bool"]]],[11,"clear","","",55,[[["self"]]]],[11,"highest","","Finds the highest file descriptor in the set.",55,[[["self"]],["option",["rawfd"]]]],[0,"sendfile","nix::sys","",N,N],[5,"sendfile","nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting…",N,[[["rawfd"],["rawfd"],["option",["off_t"]],["usize"]],["result",["usize"]]]],[0,"signal","nix::sys","",N,N],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the…",N,N],[3,"SignalIterator","","",N,N],[3,"SaFlags","","",N,N],[3,"SigSet","","",N,N],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to…",N,N],[4,"Signal","","",N,N],[13,"SIGHUP","","",56,N],[13,"SIGINT","","",56,N],[13,"SIGQUIT","","",56,N],[13,"SIGILL","","",56,N],[13,"SIGTRAP","","",56,N],[13,"SIGABRT","","",56,N],[13,"SIGBUS","","",56,N],[13,"SIGFPE","","",56,N],[13,"SIGKILL","","",56,N],[13,"SIGUSR1","","",56,N],[13,"SIGSEGV","","",56,N],[13,"SIGUSR2","","",56,N],[13,"SIGPIPE","","",56,N],[13,"SIGALRM","","",56,N],[13,"SIGTERM","","",56,N],[13,"SIGSTKFLT","","",56,N],[13,"SIGCHLD","","",56,N],[13,"SIGCONT","","",56,N],[13,"SIGSTOP","","",56,N],[13,"SIGTSTP","","",56,N],[13,"SIGTTIN","","",56,N],[13,"SIGTTOU","","",56,N],[13,"SIGURG","","",56,N],[13,"SIGXCPU","","",56,N],[13,"SIGXFSZ","","",56,N],[13,"SIGVTALRM","","",56,N],[13,"SIGPROF","","",56,N],[13,"SIGWINCH","","",56,N],[13,"SIGIO","","",56,N],[13,"SIGPWR","","",56,N],[13,"SIGSYS","","",56,N],[4,"SigmaskHow","","",N,N],[13,"SIG_BLOCK","","",57,N],[13,"SIG_UNBLOCK","","",57,N],[13,"SIG_SETMASK","","",57,N],[4,"SigHandler","","A signal handler.",N,N],[13,"SigDfl","","Default signal handling.",58,N],[13,"SigIgn","","Request that the signal be ignored.",58,N],[13,"Handler","","Use the given signal-catching function, which takes in the…",58,N],[13,"SigAction","","Use the given signal-catching function, which takes in the…",58,N],[4,"SigevNotify","","Used to request asynchronous notification of certain…",N,N],[13,"SigevNone","","No notification will be delivered",59,N],[13,"SigevSignal","","The signal given by `signal` will be delivered to the…",59,N],[12,"signal","nix::sys::signal::SigevNotify","",59,N],[12,"si_value","","",59,N],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID…",59,N],[12,"signal","nix::sys::signal::SigevNotify","",59,N],[12,"thread_id","","",59,N],[12,"si_value","","",59,N],[5,"sigaction","nix::sys::signal","Changes the action taken by a process on receipt of a…",N,[[["signal"],["sigaction"]],["result",["sigaction"]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the…",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"sigprocmask","","Examine and change blocked signals.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"kill","","",N,[[["pid"],["t"]],["result"]]],[5,"raise","","",N,[[["signal"]],["result"]]],[11,"new","","Note: this constructor does not allow the user to set the…",60,[[["sigevnotify"]],["sigevent"]]],[11,"sigevent","","",60,[[["self"]],["sigevent"]]],[6,"type_of_thread_id","","",N,N],[17,"NSIG","","",N,N],[17,"SIGIOT","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGUNUSED","","",N,N],[11,"iterator","","",56,[[],["signaliterator"]]],[11,"from_c_int","","",56,[[["c_int"]],["result",["signal"]]]],[18,"SA_NOCLDSTOP","","",61,N],[18,"SA_NOCLDWAIT","","",61,N],[18,"SA_NODEFER","","",61,N],[18,"SA_ONSTACK","","",61,N],[18,"SA_RESETHAND","","",61,N],[18,"SA_RESTART","","",61,N],[18,"SA_SIGINFO","","",61,N],[11,"empty","","Returns an empty set of flags.",61,[[],["saflags"]]],[11,"all","","Returns the set containing all flags.",61,[[],["saflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",61,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",61,[[["c_int"]],["option",["saflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",61,[[["c_int"]],["saflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",61,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",61,[[["self"],["saflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",61,[[["self"],["saflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",61,[[["self"],["saflags"]]]],[11,"remove","","Removes the specified flags in-place.",61,[[["self"],["saflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",61,[[["self"],["saflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",61,[[["self"],["saflags"],["bool"]]]],[11,"all","","",62,[[],["sigset"]]],[11,"empty","","",62,[[],["sigset"]]],[11,"add","","",62,[[["self"],["signal"]]]],[11,"clear","","",62,[[["self"]]]],[11,"remove","","",62,[[["self"],["signal"]]]],[11,"contains","","",62,[[["self"],["signal"]],["bool"]]],[11,"extend","","",62,[[["self"],["sigset"]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the…",62,[[],["result",["sigset"]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling…",62,[[["self"]],["result"]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling…",62,[[["self"]],["result"]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the…",62,[[["self"]],["result"]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns…",62,[[["self"],["sigmaskhow"]],["result",["sigset"]]]],[11,"wait","","Suspends execution of the calling thread until one of the…",62,[[["self"]],["result",["signal"]]]],[11,"new","","Creates a new action.",63,[[["sighandler"],["saflags"],["sigset"]],["sigaction"]]],[11,"flags","","Returns the flags set on the action.",63,[[["self"]],["saflags"]]],[11,"mask","","Returns the set of signals that are blocked during…",63,[[["self"]],["sigset"]]],[11,"handler","","Returns the action's handler.",63,[[["self"]],["sighandler"]]],[0,"signalfd","nix::sys","Interface for the `signalfd` syscall.",N,N],[3,"siginfo","nix::sys::signalfd","",N,N],[12,"ssi_signo","","",64,N],[12,"ssi_errno","","",64,N],[12,"ssi_code","","",64,N],[12,"ssi_pid","","",64,N],[12,"ssi_uid","","",64,N],[12,"ssi_fd","","",64,N],[12,"ssi_tid","","",64,N],[12,"ssi_band","","",64,N],[12,"ssi_overrun","","",64,N],[12,"ssi_trapno","","",64,N],[12,"ssi_status","","",64,N],[12,"ssi_int","","",64,N],[12,"ssi_ptr","","",64,N],[12,"ssi_utime","","",64,N],[12,"ssi_stime","","",64,N],[12,"ssi_addr","","",64,N],[12,"ssi_addr_lsb","","",64,N],[12,"ssi_syscall","","",64,N],[12,"ssi_call_addr","","",64,N],[12,"ssi_arch","","",64,N],[3,"SfdFlags","","",N,N],[3,"SignalFd","","A helper struct for creating, reading and closing a…",N,N],[5,"signalfd","","Creates a new file descriptor for reading signals.",N,[[["rawfd"],["sigset"],["sfdflags"]],["result",["rawfd"]]]],[17,"SIGNALFD_NEW","","",N,N],[17,"SIGNALFD_SIGINFO_SIZE","","",N,N],[18,"SFD_NONBLOCK","","",65,N],[18,"SFD_CLOEXEC","","",65,N],[11,"empty","","Returns an empty set of flags.",65,[[],["sfdflags"]]],[11,"all","","Returns the set containing all flags.",65,[[],["sfdflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",65,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",65,[[["c_int"]],["option",["sfdflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",65,[[["c_int"]],["sfdflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",65,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",65,[[["self"],["sfdflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",65,[[["self"],["sfdflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",65,[[["self"],["sfdflags"]]]],[11,"remove","","Removes the specified flags in-place.",65,[[["self"],["sfdflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",65,[[["self"],["sfdflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",65,[[["self"],["sfdflags"],["bool"]]]],[11,"new","","",66,[[["sigset"]],["result",["signalfd"]]]],[11,"with_flags","","",66,[[["sigset"],["sfdflags"]],["result",["signalfd"]]]],[11,"set_mask","","",66,[[["self"],["sigset"]],["result"]]],[11,"read_signal","","",66,[[["self"]],["result",["option"]]]],[0,"socket","nix::sys","Socket interface functions",N,N],[3,"cmsghdr","nix::sys::socket","",N,N],[12,"cmsg_len","","",67,N],[12,"cmsg_level","","",67,N],[12,"cmsg_type","","",67,N],[3,"msghdr","","",N,N],[12,"msg_name","","",68,N],[12,"msg_namelen","","",68,N],[12,"msg_iov","","",68,N],[12,"msg_iovlen","","",68,N],[12,"msg_control","","",68,N],[12,"msg_controllen","","",68,N],[12,"msg_flags","","",68,N],[6,"sa_family_t","","",N,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",69,N],[12,"sa_data","","",69,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",70,N],[12,"sin_port","","",70,N],[12,"sin_addr","","",70,N],[12,"sin_zero","","",70,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",71,N],[12,"sin6_port","","",71,N],[12,"sin6_flowinfo","","",71,N],[12,"sin6_addr","","",71,N],[12,"sin6_scope_id","","",71,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",72,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",73,N],[12,"sun_path","","",73,N],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",N,N],[12,"0","","",74,N],[12,"1","","",74,N],[3,"Ipv4Addr","","",N,N],[12,"0","","",75,N],[3,"Ipv6Addr","","",N,N],[12,"0","","",76,N],[3,"LinkAddr","","Hardware Address",N,N],[12,"0","","",77,N],[3,"NetlinkAddr","","",N,N],[12,"0","","",78,N],[3,"SockFlag","","Additional socket options",N,N],[3,"MsgFlags","","Flags for send/recv and their relatives",N,N],[3,"UnixCredentials","","Unix credentials of the sending process.",N,N],[3,"IpMembershipRequest","","Request for multicast socket operations",N,N],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to…",N,N],[3,"RecvMsg","","",N,N],[12,"bytes","","",79,N],[12,"address","","",79,N],[12,"flags","","",79,N],[3,"CmsgIterator","","",N,N],[4,"AddressFamily","","These constants specify the protocol family to be used in…",N,N],[13,"Unix","","Local communication (see `unix(7)`)",80,N],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",80,N],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",80,N],[13,"Netlink","","Kernel user interface device (see `netlink(7)`)",80,N],[13,"Packet","","Low level packet interface (see `packet(7)`)",80,N],[13,"Ax25","","Amateur radio AX.25 protocol",80,N],[13,"Ipx","","IPX - Novell protocols",80,N],[13,"AppleTalk","","AppleTalk",80,N],[13,"NetRom","","",80,N],[13,"Bridge","","",80,N],[13,"AtmPvc","","Access to raw ATM PVCs",80,N],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",80,N],[13,"Rose","","",80,N],[13,"Decnet","","",80,N],[13,"NetBeui","","",80,N],[13,"Security","","",80,N],[13,"Key","","",80,N],[13,"Ash","","",80,N],[13,"Econet","","",80,N],[13,"AtmSvc","","",80,N],[13,"Rds","","",80,N],[13,"Sna","","",80,N],[13,"Irda","","",80,N],[13,"Pppox","","",80,N],[13,"Wanpipe","","",80,N],[13,"Llc","","",80,N],[13,"Ib","","",80,N],[13,"Mpls","","",80,N],[13,"Can","","",80,N],[13,"Tipc","","",80,N],[13,"Bluetooth","","",80,N],[13,"Iucv","","",80,N],[13,"RxRpc","","",80,N],[13,"Isdn","","",80,N],[13,"Phonet","","",80,N],[13,"Ieee802154","","",80,N],[13,"Caif","","",80,N],[13,"Alg","","Interface to kernel crypto API",80,N],[13,"Nfc","","",80,N],[13,"Vsock","","",80,N],[13,"Unspec","","Unspecified address family, (see `getaddrinfo(3)`)",80,N],[4,"SockAddr","","Represents a socket address",N,N],[13,"Inet","","",81,N],[13,"Unix","","",81,N],[13,"Netlink","","",81,N],[13,"Link","","Datalink address (MAC)",81,N],[4,"InetAddr","","",N,N],[13,"V4","","",82,N],[13,"V6","","",82,N],[4,"IpAddr","","",N,N],[13,"V4","","",83,N],[13,"V6","","",83,N],[4,"SockType","","These constants are used to specify the communication…",N,N],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based…",84,N],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of…",84,N],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based…",84,N],[13,"Raw","","Provides raw network protocol access.",84,N],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee…",84,N],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the…",N,N],[13,"Tcp","","TCP protocol (ip(7))",85,N],[13,"Udp","","UDP protocol (ip(7))",85,N],[4,"ControlMessage","","A type-safe wrapper around a single control message. More…",N,N],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of…",86,N],[13,"ScmCredentials","","A message of type `SCM_CREDENTIALS`, containing the pid,…",86,N],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the…",86,N],[4,"SockLevel","","The protocol level at which to get / set socket options.…",N,N],[13,"Socket","","",87,N],[13,"Tcp","","",87,N],[13,"Ip","","",87,N],[13,"Ipv6","","",87,N],[13,"Udp","","",87,N],[13,"Netlink","","",87,N],[4,"Shutdown","","",N,N],[13,"Read","","Further receptions will be disallowed.",88,N],[13,"Write","","Further  transmissions will be disallowed.",88,N],[13,"Both","","Further receptions and transmissions will be disallowed.",88,N],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly…",N,N],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket,…",N,N],[5,"socket","","Create an endpoint for communication",N,[[["addressfamily"],["socktype"],["sockflag"],["t"]],["result",["rawfd"]]]],[5,"socketpair","","Create a pair of connected sockets",N,[[["addressfamily"],["socktype"],["t"],["sockflag"]],["result"]]],[5,"listen","","Listen for connections on a socket",N,[[["rawfd"],["usize"]],["result"]]],[5,"bind","","Bind a name to a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"accept","","Accept a connection on a socket",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"accept4","","Accept a connection on a socket",N,[[["rawfd"],["sockflag"]],["result",["rawfd"]]]],[5,"connect","","Initiate a connection on a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"recv","","Receive data from a connection-oriented socket. Returns…",N,N],[5,"recvfrom","","Receive data from a connectionless or connection-oriented…",N,N],[5,"sendto","","Send a message to a socket",N,N],[5,"send","","Send data to a connection-oriented socket. Returns the…",N,N],[5,"getsockopt","","Get the current value for the requested socket option",N,[[["rawfd"],["o"]],["result"]]],[5,"setsockopt","","Sets the value for the requested socket option",N,N],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a…",N,[[["sockaddr_storage"],["usize"]],["result",["sockaddr"]]]],[5,"shutdown","","Shut down part of a full-duplex connection.",N,[[["rawfd"],["shutdown"]],["result"]]],[11,"new","","",78,[[["u32"],["u32"]],["netlinkaddr"]]],[11,"pid","","",78,[[["self"]],["u32"]]],[11,"groups","","",78,[[["self"]],["u32"]]],[11,"family","","Always AF_PACKET",77,[[["self"]],["addressfamily"]]],[11,"protocol","","Physical-layer protocol",77,[[["self"]],["u16"]]],[11,"ifindex","","Interface number",77,[[["self"]],["usize"]]],[11,"hatype","","ARP hardware type",77,[[["self"]],["u16"]]],[11,"pkttype","","Packet type",77,[[["self"]],["u8"]]],[11,"halen","","Length of MAC address",77,[[["self"]],["usize"]]],[11,"addr","","Physical-layer address (MAC)",77,N],[11,"from_i32","","Create a new `AddressFamily` from an integer value…",80,[[["i32"]],["option",["addressfamily"]]]],[11,"from_std","","",82,[[["socketaddr"]],["inetaddr"]]],[11,"new","","",82,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip","","Gets the IP address associated with this socket address.",82,[[["self"]],["ipaddr"]]],[11,"port","","Gets the port number associated with this socket address",82,[[["self"]],["u16"]]],[11,"to_std","","",82,[[["self"]],["socketaddr"]]],[11,"to_str","","",82,[[["self"]],["string"]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",83,[[["u8"],["u8"],["u8"],["u8"]],["ipaddr"]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",83,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipaddr"]]],[11,"new","","",75,[[["u8"],["u8"],["u8"],["u8"]],["ipv4addr"]]],[11,"from_std","","",75,[[["ipv4addr"]],["ipv4addr"]]],[11,"any","","",75,[[],["ipv4addr"]]],[11,"octets","","",75,N],[11,"to_std","","",75,[[["self"]],["ipv4addr"]]],[11,"new","","",76,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipv6addr"]]],[11,"from_std","","",76,[[["ipv6addr"]],["ipv6addr"]]],[11,"segments","","Return the eight 16-bit segments that make up this address",76,N],[11,"to_std","","",76,[[["self"]],["ipv6addr"]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",74,[[["p"]],["result",["unixaddr"]]]],[11,"new_abstract","","Create a new `sockaddr_un` representing an address in the…",74,N],[11,"path","","If this address represents a filesystem path, return that…",74,[[["self"]],["option",["path"]]]],[11,"as_abstract","","If this address represents an abstract socket, return its…",74,[[["self"]],["option"]]],[11,"new_inet","","",81,[[["inetaddr"]],["sockaddr"]]],[11,"new_unix","","",81,[[["p"]],["result",["sockaddr"]]]],[11,"new_netlink","","",81,[[["u32"],["u32"]],["sockaddr"]]],[11,"family","","",81,[[["self"]],["addressfamily"]]],[11,"to_str","","",81,[[["self"]],["string"]]],[11,"from_libc_sockaddr","","Creates a `SockAddr` struct from libc's sockaddr.",81,N],[11,"as_ffi_pair","","Conversion from nix's SockAddr type to the underlying libc…",81,N],[0,"sockopt","","",N,N],[3,"ReuseAddr","nix::sys::socket::sockopt","",N,N],[3,"ReusePort","","",N,N],[3,"TcpNoDelay","","",N,N],[3,"Linger","","",N,N],[3,"IpAddMembership","","",N,N],[3,"IpDropMembership","","",N,N],[3,"Ipv6AddMembership","","",N,N],[3,"Ipv6DropMembership","","",N,N],[3,"IpMulticastTtl","","",N,N],[3,"IpMulticastLoop","","",N,N],[3,"ReceiveTimeout","","",N,N],[3,"SendTimeout","","",N,N],[3,"Broadcast","","",N,N],[3,"OobInline","","",N,N],[3,"SocketError","","",N,N],[3,"KeepAlive","","",N,N],[3,"PeerCredentials","","",N,N],[3,"TcpKeepIdle","","",N,N],[3,"RcvBuf","","",N,N],[3,"SndBuf","","",N,N],[3,"RcvBufForce","","",N,N],[3,"SndBufForce","","",N,N],[3,"SockType","","",N,N],[3,"AcceptConn","","",N,N],[3,"OriginalDst","","",N,N],[3,"ReceiveTimestamp","","",N,N],[3,"IpTransparent","","",N,N],[3,"Mark","","",N,N],[3,"PassCred","","",N,N],[8,"GetSockOpt","nix::sys::socket","Represents a socket option that can be accessed or set.…",N,N],[16,"Val","","",89,N],[8,"SetSockOpt","","Represents a socket option that can be accessed or set.…",N,N],[16,"Val","","",90,N],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",91,N],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",91,N],[11,"empty","","Returns an empty set of flags.",91,[[],["sockflag"]]],[11,"all","","Returns the set containing all flags.",91,[[],["sockflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",91,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",91,[[["c_int"]],["option",["sockflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",91,[[["c_int"]],["sockflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",91,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",91,[[["self"],["sockflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",91,[[["self"],["sockflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",91,[[["self"],["sockflag"]]]],[11,"remove","","Removes the specified flags in-place.",91,[[["self"],["sockflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",91,[[["self"],["sockflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",91,[[["self"],["sockflag"],["bool"]]]],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support…",92,N],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as…",92,N],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would…",92,N],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",92,N],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux…",92,N],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for…",92,N],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received…",92,N],[18,"MSG_CMSG_CLOEXEC","","Set the `close-on-exec` flag for the file descriptor…",92,N],[11,"empty","","Returns an empty set of flags.",92,[[],["msgflags"]]],[11,"all","","Returns the set containing all flags.",92,[[],["msgflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",92,[[["c_int"]],["option",["msgflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",92,[[["c_int"]],["msgflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",92,[[["self"],["msgflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",92,[[["self"],["msgflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["msgflags"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["msgflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["msgflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",92,[[["self"],["msgflags"],["bool"]]]],[11,"pid","","Returns the process identifier",93,[[["self"]],["pid_t"]]],[11,"uid","","Returns the user identifier",93,[[["self"]],["uid_t"]]],[11,"gid","","Returns the group identifier",93,[[["self"]],["gid_t"]]],[11,"new","","Instantiate a new `IpMembershipRequest`",94,[[["ipv4addr"],["option",["ipv4addr"]]],["self"]]],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",95,[[["ipv6addr"]],["self"]]],[11,"new","","Create a CmsgSpace. The structure is used only for space,…",96,[[],["self"]]],[11,"cmsgs","","Iterate over the valid control messages pointed to by this…",79,[[["self"]],["cmsgiterator"]]],[0,"stat","nix::sys","",N,N],[6,"dev_t","nix::sys::stat","",N,N],[6,"mode_t","","",N,N],[3,"FileStat","","",N,N],[12,"st_dev","","",97,N],[12,"st_ino","","",97,N],[12,"st_nlink","","",97,N],[12,"st_mode","","",97,N],[12,"st_uid","","",97,N],[12,"st_gid","","",97,N],[12,"st_rdev","","",97,N],[12,"st_size","","",97,N],[12,"st_blksize","","",97,N],[12,"st_blocks","","",97,N],[12,"st_atime","","",97,N],[12,"st_atime_nsec","","",97,N],[12,"st_mtime","","",97,N],[12,"st_mtime_nsec","","",97,N],[12,"st_ctime","","",97,N],[12,"st_ctime_nsec","","",97,N],[5,"FileStat","","",N,N],[3,"SFlag","","",N,N],[3,"Mode","","",N,N],[4,"FchmodatFlags","","Flags for `fchmodat` function.",N,N],[13,"FollowSymlink","","",98,N],[13,"NoFollowSymlink","","",98,N],[4,"UtimensatFlags","","Flags for `utimensat` function.",N,N],[13,"FollowSymlink","","",99,N],[13,"NoFollowSymlink","","",99,N],[5,"mknod","","",N,[[["p"],["sflag"],["mode"],["dev_t"]],["result"]]],[5,"major","","",N,[[["dev_t"]],["u64"]]],[5,"minor","","",N,[[["dev_t"]],["u64"]]],[5,"makedev","","",N,[[["u64"],["u64"]],["dev_t"]]],[5,"umask","","",N,[[["mode"]],["mode"]]],[5,"stat","","",N,[[["p"]],["result",["filestat"]]]],[5,"lstat","","",N,[[["p"]],["result",["filestat"]]]],[5,"fstat","","",N,[[["rawfd"]],["result",["filestat"]]]],[5,"fstatat","","",N,[[["rawfd"],["p"],["atflags"]],["result",["filestat"]]]],[5,"fchmod","","Change the file permission bits of the file specified by a…",N,[[["rawfd"],["mode"]],["result"]]],[5,"fchmodat","","Change the file permission bits.",N,[[["option",["rawfd"]],["p"],["mode"],["fchmodatflags"]],["result"]]],[5,"utimes","","Change the access and modification times of a file.",N,[[["p"],["timeval"],["timeval"]],["result"]]],[5,"lutimes","","Change the access and modification times of a file without…",N,[[["p"],["timeval"],["timeval"]],["result"]]],[5,"futimens","","Change the access and modification times of the file…",N,[[["rawfd"],["timespec"],["timespec"]],["result"]]],[5,"utimensat","","Change the access and modification times of a file.",N,[[["option",["rawfd"]],["p"],["timespec"],["timespec"],["utimensatflags"]],["result"]]],[18,"S_IFIFO","","",100,N],[18,"S_IFCHR","","",100,N],[18,"S_IFDIR","","",100,N],[18,"S_IFBLK","","",100,N],[18,"S_IFREG","","",100,N],[18,"S_IFLNK","","",100,N],[18,"S_IFSOCK","","",100,N],[18,"S_IFMT","","",100,N],[11,"empty","","Returns an empty set of flags.",100,[[],["sflag"]]],[11,"all","","Returns the set containing all flags.",100,[[],["sflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",100,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",100,[[["mode_t"]],["option",["sflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",100,[[["mode_t"]],["sflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",100,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",100,[[["self"],["sflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",100,[[["self"],["sflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",100,[[["self"],["sflag"]]]],[11,"remove","","Removes the specified flags in-place.",100,[[["self"],["sflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",100,[[["self"],["sflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",100,[[["self"],["sflag"],["bool"]]]],[18,"S_IRWXU","","",101,N],[18,"S_IRUSR","","",101,N],[18,"S_IWUSR","","",101,N],[18,"S_IXUSR","","",101,N],[18,"S_IRWXG","","",101,N],[18,"S_IRGRP","","",101,N],[18,"S_IWGRP","","",101,N],[18,"S_IXGRP","","",101,N],[18,"S_IRWXO","","",101,N],[18,"S_IROTH","","",101,N],[18,"S_IWOTH","","",101,N],[18,"S_IXOTH","","",101,N],[18,"S_ISUID","","",101,N],[18,"S_ISGID","","",101,N],[18,"S_ISVTX","","",101,N],[11,"empty","","Returns an empty set of flags.",101,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",101,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",101,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",101,[[["mode_t"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",101,[[["mode_t"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",101,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",101,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",101,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",101,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",101,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",101,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",101,[[["self"],["mode"],["bool"]]]],[0,"statfs","nix::sys","",N,N],[5,"statfs","nix::sys::statfs","",N,[[["p"],["statfs"]],["result"]]],[5,"fstatfs","","",N,[[["t"],["statfs"]],["result"]]],[0,"statvfs","nix::sys","Get filesystem statistics",N,N],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",N,N],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",N,[[["p"]],["result",["statvfs"]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",N,[[["t"]],["result",["statvfs"]]]],[18,"ST_RDONLY","","Read Only",102,N],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",102,N],[18,"ST_NODEV","","Do not interpret character or block-special devices",102,N],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",102,N],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",102,N],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",102,N],[18,"ST_WRITE","","Write on file/directory/symlink",102,N],[18,"ST_APPEND","","Append-only file",102,N],[18,"ST_IMMUTABLE","","Immutable file",102,N],[18,"ST_NOATIME","","Do not update access times on files",102,N],[18,"ST_NODIRATIME","","Do not update access times on files",102,N],[18,"ST_RELATIME","","Update access time relative to modify/change time",102,N],[11,"empty","","Returns an empty set of flags.",102,[[],["fsflags"]]],[11,"all","","Returns the set containing all flags.",102,[[],["fsflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",102,[[["c_ulong"]],["option",["fsflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",102,[[["c_ulong"]],["fsflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",102,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",102,[[["self"],["fsflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",102,[[["self"],["fsflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["self"],["fsflags"]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["self"],["fsflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["self"],["fsflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",102,[[["self"],["fsflags"],["bool"]]]],[11,"block_size","","get the file system block size",103,[[["self"]],["c_ulong"]]],[11,"fragment_size","","Get the fundamental file system block size",103,[[["self"]],["c_ulong"]]],[11,"blocks","","Get the number of blocks.",103,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_free","","Get the number of free blocks in the file system",103,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",103,[[["self"]],["fsblkcnt_t"]]],[11,"files","","Get the total number of file inodes",103,[[["self"]],["fsfilcnt_t"]]],[11,"files_free","","Get the number of free file inodes",103,[[["self"]],["fsfilcnt_t"]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",103,[[["self"]],["fsfilcnt_t"]]],[11,"filesystem_id","","Get the file system id",103,[[["self"]],["c_ulong"]]],[11,"flags","","Get the mount flags",103,[[["self"]],["fsflags"]]],[11,"name_max","","Get the maximum filename length",103,[[["self"]],["c_ulong"]]],[0,"sysinfo","nix::sys","",N,N],[3,"SysInfo","nix::sys::sysinfo","System info structure returned by `sysinfo`.",N,N],[5,"sysinfo","","Returns system information.",N,[[],["result",["sysinfo"]]]],[11,"load_average","","Returns the load average tuple.",104,N],[11,"uptime","","Returns the time since system boot.",104,[[["self"]],["duration"]]],[11,"process_count","","Current number of processes.",104,[[["self"]],["u16"]]],[11,"swap_total","","Returns the amount of swap memory in Bytes.",104,[[["self"]],["u64"]]],[11,"swap_free","","Returns the amount of unused swap memory in Bytes.",104,[[["self"]],["u64"]]],[11,"ram_total","","Returns the total amount of installed RAM in Bytes.",104,[[["self"]],["u64"]]],[11,"ram_unused","","Returns the amount of completely unused RAM in Bytes.",104,[[["self"]],["u64"]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication…",N,N],[17,"NCCS","nix::sys::termios","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[3,"Termios","","Stores settings for the termios API",N,N],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",105,N],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",105,N],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",105,N],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",105,N],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",105,N],[3,"InputFlags","","Flags for configuring the input mode of a terminal",N,N],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",N,N],[3,"ControlFlags","","Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags","","Flags for setting any local modes",N,N],[4,"BaudRate","","Baud rates supported by the system.",N,N],[13,"B0","","",106,N],[13,"B50","","",106,N],[13,"B75","","",106,N],[13,"B110","","",106,N],[13,"B134","","",106,N],[13,"B150","","",106,N],[13,"B200","","",106,N],[13,"B300","","",106,N],[13,"B600","","",106,N],[13,"B1200","","",106,N],[13,"B1800","","",106,N],[13,"B2400","","",106,N],[13,"B4800","","",106,N],[13,"B9600","","",106,N],[13,"B19200","","",106,N],[13,"B38400","","",106,N],[13,"B57600","","",106,N],[13,"B115200","","",106,N],[13,"B230400","","",106,N],[13,"B460800","","",106,N],[13,"B500000","","",106,N],[13,"B576000","","",106,N],[13,"B921600","","",106,N],[13,"B1000000","","",106,N],[13,"B1152000","","",106,N],[13,"B1500000","","",106,N],[13,"B2000000","","",106,N],[13,"B2500000","","",106,N],[13,"B3000000","","",106,N],[13,"B3500000","","",106,N],[13,"B4000000","","",106,N],[4,"SetArg","","Specify when a port configuration change should occur.",N,N],[13,"TCSANOW","","The change will occur immediately",107,N],[13,"TCSADRAIN","","The change occurs after all output has been written",107,N],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",107,N],[4,"FlushArg","","Specify a combination of the input and output buffers to…",N,N],[13,"TCIFLUSH","","Flush data that was received but not read",108,N],[13,"TCOFLUSH","","Flush data written but not transmitted",108,N],[13,"TCIOFLUSH","","Flush both received data not read and written data not…",108,N],[4,"FlowArg","","Specify how transmission flow should be altered",N,N],[13,"TCOOFF","","Suspend transmission",109,N],[13,"TCOON","","Resume transmission",109,N],[13,"TCIOFF","","Transmit a STOP character, which should disable a…",109,N],[13,"TCION","","Transmit a START character, which should re-enable a…",109,N],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special…",N,N],[13,"VDISCARD","","",110,N],[13,"VEOF","","",110,N],[13,"VEOL","","",110,N],[13,"VEOL2","","",110,N],[13,"VERASE","","",110,N],[13,"VINTR","","",110,N],[13,"VKILL","","",110,N],[13,"VLNEXT","","",110,N],[13,"VMIN","","",110,N],[13,"VQUIT","","",110,N],[13,"VREPRINT","","",110,N],[13,"VSTART","","",110,N],[13,"VSTOP","","",110,N],[13,"VSUSP","","",110,N],[13,"VSWTC","","",110,N],[13,"VTIME","","",110,N],[13,"VWERASE","","",110,N],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],["baudrate"]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],["baudrate"]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfmakeraw","","Configures the port to something like the \"raw\" mode of…",N,[[["termios"]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],["result",["termios"]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["rawfd"],["setarg"],["termios"]],["result"]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],["result"]]],[5,"tcflow","","Suspend or resume the transmission or reception of data…",N,[[["rawfd"],["flowarg"]],["result"]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",N,[[["rawfd"],["flusharg"]],["result"]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["rawfd"],["c_int"]],["result"]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see…",N,[[["rawfd"]],["result",["pid"]]]],[18,"IGNBRK","","",111,N],[18,"BRKINT","","",111,N],[18,"IGNPAR","","",111,N],[18,"PARMRK","","",111,N],[18,"INPCK","","",111,N],[18,"ISTRIP","","",111,N],[18,"INLCR","","",111,N],[18,"IGNCR","","",111,N],[18,"ICRNL","","",111,N],[18,"IXON","","",111,N],[18,"IXOFF","","",111,N],[18,"IXANY","","",111,N],[18,"IMAXBEL","","",111,N],[18,"IUTF8","","",111,N],[11,"empty","","Returns an empty set of flags.",111,[[],["inputflags"]]],[11,"all","","Returns the set containing all flags.",111,[[],["inputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",111,[[["tcflag_t"]],["option",["inputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",111,[[["tcflag_t"]],["inputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",111,[[["self"],["inputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",111,[[["self"],["inputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,[[["self"],["inputflags"]]]],[11,"remove","","Removes the specified flags in-place.",111,[[["self"],["inputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",111,[[["self"],["inputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",111,[[["self"],["inputflags"],["bool"]]]],[18,"OPOST","","",112,N],[18,"OLCUC","","",112,N],[18,"ONLCR","","",112,N],[18,"OCRNL","","",112,N],[18,"ONOCR","","",112,N],[18,"ONLRET","","",112,N],[18,"OFILL","","",112,N],[18,"OFDEL","","",112,N],[18,"NL0","","",112,N],[18,"NL1","","",112,N],[18,"CR0","","",112,N],[18,"CR1","","",112,N],[18,"CR2","","",112,N],[18,"CR3","","",112,N],[18,"TAB0","","",112,N],[18,"TAB1","","",112,N],[18,"TAB2","","",112,N],[18,"TAB3","","",112,N],[18,"XTABS","","",112,N],[18,"BS0","","",112,N],[18,"BS1","","",112,N],[18,"VT0","","",112,N],[18,"VT1","","",112,N],[18,"FF0","","",112,N],[18,"FF1","","",112,N],[18,"NLDLY","","",112,N],[18,"CRDLY","","",112,N],[18,"TABDLY","","",112,N],[18,"BSDLY","","",112,N],[18,"VTDLY","","",112,N],[18,"FFDLY","","",112,N],[11,"empty","","Returns an empty set of flags.",112,[[],["outputflags"]]],[11,"all","","Returns the set containing all flags.",112,[[],["outputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",112,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",112,[[["tcflag_t"]],["option",["outputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",112,[[["tcflag_t"]],["outputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",112,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",112,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",112,[[["self"],["outputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",112,[[["self"],["outputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",112,[[["self"],["outputflags"]]]],[11,"remove","","Removes the specified flags in-place.",112,[[["self"],["outputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",112,[[["self"],["outputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",112,[[["self"],["outputflags"],["bool"]]]],[18,"CS5","","",113,N],[18,"CS6","","",113,N],[18,"CS7","","",113,N],[18,"CS8","","",113,N],[18,"CSTOPB","","",113,N],[18,"CREAD","","",113,N],[18,"PARENB","","",113,N],[18,"PARODD","","",113,N],[18,"HUPCL","","",113,N],[18,"CLOCAL","","",113,N],[18,"CRTSCTS","","",113,N],[18,"CBAUD","","",113,N],[18,"CMSPAR","","",113,N],[18,"CIBAUD","","",113,N],[18,"CBAUDEX","","",113,N],[18,"CSIZE","","",113,N],[11,"empty","","Returns an empty set of flags.",113,[[],["controlflags"]]],[11,"all","","Returns the set containing all flags.",113,[[],["controlflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",113,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",113,[[["tcflag_t"]],["option",["controlflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",113,[[["tcflag_t"]],["controlflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",113,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",113,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",113,[[["self"],["controlflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",113,[[["self"],["controlflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",113,[[["self"],["controlflags"]]]],[11,"remove","","Removes the specified flags in-place.",113,[[["self"],["controlflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",113,[[["self"],["controlflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",113,[[["self"],["controlflags"],["bool"]]]],[18,"ECHOKE","","",114,N],[18,"ECHOE","","",114,N],[18,"ECHOK","","",114,N],[18,"ECHO","","",114,N],[18,"ECHONL","","",114,N],[18,"ECHOPRT","","",114,N],[18,"ECHOCTL","","",114,N],[18,"ISIG","","",114,N],[18,"ICANON","","",114,N],[18,"IEXTEN","","",114,N],[18,"EXTPROC","","",114,N],[18,"TOSTOP","","",114,N],[18,"FLUSHO","","",114,N],[18,"PENDIN","","",114,N],[18,"NOFLSH","","",114,N],[11,"empty","","Returns an empty set of flags.",114,[[],["localflags"]]],[11,"all","","Returns the set containing all flags.",114,[[],["localflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",114,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",114,[[["tcflag_t"]],["option",["localflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",114,[[["tcflag_t"]],["localflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",114,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",114,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",114,[[["self"],["localflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",114,[[["self"],["localflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",114,[[["self"],["localflags"]]]],[11,"remove","","Removes the specified flags in-place.",114,[[["self"],["localflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",114,[[["self"],["localflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",114,[[["self"],["localflags"],["bool"]]]],[0,"time","nix::sys","",N,N],[6,"time_t","nix::sys::time","",N,N],[6,"suseconds_t","","",N,N],[3,"TimeSpec","","",N,N],[3,"TimeVal","","",N,N],[8,"TimeValLike","","",N,N],[11,"zero","","",115,[[],["self"]]],[11,"hours","","",115,[[["i64"]],["self"]]],[11,"minutes","","",115,[[["i64"]],["self"]]],[10,"seconds","","",115,[[["i64"]],["self"]]],[10,"milliseconds","","",115,[[["i64"]],["self"]]],[10,"microseconds","","",115,[[["i64"]],["self"]]],[10,"nanoseconds","","",115,[[["i64"]],["self"]]],[11,"num_hours","","",115,[[["self"]],["i64"]]],[11,"num_minutes","","",115,[[["self"]],["i64"]]],[10,"num_seconds","","",115,[[["self"]],["i64"]]],[10,"num_milliseconds","","",115,[[["self"]],["i64"]]],[10,"num_microseconds","","",115,[[["self"]],["i64"]]],[10,"num_nanoseconds","","",115,[[["self"]],["i64"]]],[11,"tv_sec","","",116,[[["self"]],["time_t"]]],[11,"tv_nsec","","",116,[[["self"]],["c_long"]]],[11,"tv_sec","","",117,[[["self"]],["time_t"]]],[11,"tv_usec","","",117,[[["self"]],["suseconds_t"]]],[0,"uio","nix::sys","",N,N],[3,"RemoteIoVec","nix::sys::uio","A slice of memory in a remote process, starting at address…",N,N],[12,"base","","The starting address of this slice (`iov_base`).",118,N],[12,"len","","The number of bytes in this slice (`iov_len`).",118,N],[3,"IoVec","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"pwritev","","Write to `fd` at `offset` from buffers in `iov`.",N,N],[5,"preadv","","Read from `fd` at `offset` filling buffers in `iov`.",N,N],[5,"pwrite","","",N,N],[5,"pread","","",N,N],[5,"process_vm_writev","","Write data directly to another process's virtual memory…",N,N],[5,"process_vm_readv","","Read data directly from another process's virtual memory…",N,N],[11,"as_slice","","",119,N],[11,"from_slice","","",119,N],[11,"from_mut_slice","","",119,N],[0,"utsname","nix::sys","",N,N],[3,"UtsName","nix::sys::utsname","",N,N],[5,"uname","","",N,[[],["utsname"]]],[11,"sysname","","",120,[[["self"]],["str"]]],[11,"nodename","","",120,[[["self"]],["str"]]],[11,"release","","",120,[[["self"]],["str"]]],[11,"version","","",120,[[["self"]],["str"]]],[11,"machine","","",120,[[["self"]],["str"]]],[0,"wait","nix::sys","",N,N],[3,"WaitPidFlag","nix::sys::wait","",N,N],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited","","The process exited normally (as with `exit()` or returning…",121,N],[13,"Signaled","","The process was killed by the given signal. The third…",121,N],[13,"Stopped","","The process is alive, but was stopped by the given signal.…",121,N],[13,"PtraceEvent","","The traced process was stopped by a `PTRACE_EVENT_*`…",121,N],[13,"PtraceSyscall","","The traced process was stopped by execution of a system…",121,N],[13,"Continued","","The process was previously stopped but has resumed…",121,N],[13,"StillAlive","","There are currently no state changes to report in any…",121,N],[5,"waitpid","","",N,[[["p"],["option",["waitpidflag"]]],["result",["waitstatus"]]]],[5,"wait","","",N,[[],["result",["waitstatus"]]]],[18,"WNOHANG","","",122,N],[18,"WUNTRACED","","",122,N],[18,"WEXITED","","",122,N],[18,"WCONTINUED","","",122,N],[18,"WSTOPPED","","",122,N],[18,"WNOWAIT","","Don't reap, just poll status.",122,N],[18,"__WNOTHREAD","","Don't wait on children of other threads in this group",122,N],[18,"__WALL","","Wait on all children, regardless of type",122,N],[18,"__WCLONE","","",122,N],[11,"empty","","Returns an empty set of flags.",122,[[],["waitpidflag"]]],[11,"all","","Returns the set containing all flags.",122,[[],["waitpidflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",122,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",122,[[["c_int"]],["option",["waitpidflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",122,[[["c_int"]],["waitpidflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",122,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",122,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",122,[[["self"],["waitpidflag"]]]],[11,"remove","","Removes the specified flags in-place.",122,[[["self"],["waitpidflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",122,[[["self"],["waitpidflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",122,[[["self"],["waitpidflag"],["bool"]]]],[11,"pid","","Extracts the PID from the WaitStatus unless it equals…",121,[[["self"]],["option",["pid"]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait`…",121,[[["pid"],["i32"]],["result",["waitstatus"]]]],[0,"ucontext","nix","",N,N],[3,"UContext","nix::ucontext","",N,N],[11,"get","","",123,[[],["result",["ucontext"]]]],[11,"set","","",123,[[["self"]],["result"]]],[11,"sigmask_mut","","",123,[[["self"]],["sigset"]]],[11,"sigmask","","",123,[[["self"]],["sigset"]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\"…",N,N],[3,"Uid","nix::unistd","User identifier",N,N],[3,"Gid","","Group identifier",N,N],[3,"Pid","","Process identifier",N,N],[4,"ForkResult","","Represents the successful result of calling `fork`",N,N],[13,"Parent","","",124,N],[12,"child","nix::unistd::ForkResult","",124,N],[13,"Child","nix::unistd","",124,N],[4,"FchownatFlags","","Flags for `fchownat` function.",N,N],[13,"FollowSymlink","","",125,N],[13,"NoFollowSymlink","","",125,N],[4,"Whence","","Directive that tells [`lseek`] and [`lseek64`] what the…",N,N],[13,"SeekSet","","Specify an offset relative to the start of the file.",126,N],[13,"SeekCur","","Specify an offset relative to the current file location.",126,N],[13,"SeekEnd","","Specify an offset relative to the end of the file.",126,N],[13,"SeekData","","Specify an offset relative to the next location in the…",126,N],[13,"SeekHole","","Specify an offset relative to the next hole in the file…",126,N],[4,"PathconfVar","","Variable names for `pathconf`",N,N],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed…",127,N],[13,"LINK_MAX","","Maximum number of links to a single file.",127,N],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",127,N],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a…",127,N],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the…",127,N],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a…",127,N],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic…",127,N],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",127,N],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for…",127,N],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the…",127,N],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",127,N],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",127,N],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",127,N],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",127,N],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process…",127,N],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an…",127,N],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a…",127,N],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed…",127,N],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed…",127,N],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed…",127,N],[4,"SysconfVar","","Variable names for `sysconf`",N,N],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call…",128,N],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations…",128,N],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its…",128,N],[13,"ARG_MAX","","Maximum length of argument to the exec functions including…",128,N],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with…",128,N],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",128,N],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc…",128,N],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",128,N],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc…",128,N],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",128,N],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry…",128,N],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",128,N],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within…",128,N],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the…",128,N],[13,"IOV_MAX","","Maximum number of iovec structures that one process has…",128,N],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a…",128,N],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",128,N],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per…",128,N],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",128,N],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",128,N],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a…",128,N],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the…",128,N],[13,"OPEN_MAX","","A value one greater than the maximum value that the system…",128,N],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",128,N],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",128,N],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",128,N],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",128,N],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks…",128,N],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",128,N],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",128,N],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",128,N],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",128,N],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking…",128,N],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",128,N],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",128,N],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",128,N],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",128,N],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and…",128,N],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",128,N],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",128,N],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",128,N],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",128,N],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression…",128,N],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved…",128,N],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",128,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects…",128,N],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",128,N],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",128,N],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",128,N],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server…",128,N],[13,"_POSIX_SS_REPL_MAX","","",128,N],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and…",128,N],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address…",128,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size…",128,N],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks…",128,N],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority…",128,N],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority…",128,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution…",128,N],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared…",128,N],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority…",128,N],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority…",128,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",128,N],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server…",128,N],[13,"_POSIX_THREADS","","The implementation supports threads.",128,N],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",128,N],[13,"_POSIX_TIMERS","","The implementation supports timers.",128,N],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",128,N],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",128,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",128,N],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",128,N],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",128,N],[13,"_POSIX_TRACE_NAME_MAX","","",128,N],[13,"_POSIX_TRACE_SYS_MAX","","",128,N],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",128,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",128,N],[13,"_POSIX_VERSION","","Integer value indicating version of this standard…",128,N],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation…",128,N],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation…",128,N],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation…",128,N],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation…",128,N],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",128,N],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development…",128,N],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics…",128,N],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development…",128,N],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities…",128,N],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the…",128,N],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services…",128,N],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",128,N],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart…",128,N],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request…",128,N],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request…",128,N],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request…",128,N],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development…",128,N],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities…",128,N],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and…",128,N],[13,"PAGE_SIZE","","The size of a system page in bytes.",128,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",128,N],[13,"PTHREAD_KEYS_MAX","","",128,N],[13,"PTHREAD_STACK_MIN","","",128,N],[13,"PTHREAD_THREADS_MAX","","",128,N],[13,"RE_DUP_MAX","","",128,N],[13,"RTSIG_MAX","","",128,N],[13,"SEM_NSEMS_MAX","","",128,N],[13,"SEM_VALUE_MAX","","",128,N],[13,"SIGQUEUE_MAX","","",128,N],[13,"STREAM_MAX","","",128,N],[13,"SYMLOOP_MAX","","",128,N],[13,"TIMER_MAX","","",128,N],[13,"TTY_NAME_MAX","","",128,N],[13,"TZNAME_MAX","","",128,N],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option…",128,N],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2…",128,N],[13,"_XOPEN_LEGACY","","",128,N],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option…",128,N],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads…",128,N],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared…",128,N],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",128,N],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",128,N],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability…",128,N],[5,"pivot_root","","",N,[[["p1"],["p2"]],["result"]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",N,[[["uid"],["uid"],["uid"]],["result"]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",N,[[["gid"],["gid"],["gid"]],["result"]]],[5,"fork","","Create a new child process duplicating the parent process…",N,[[],["result",["forkresult"]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",N,[[["pid"],["pid"]],["result"]]],[5,"getpgid","","",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",N,[[],["result",["pid"]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see…",N,[[["c_int"]],["result",["pid"]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see…",N,[[["c_int"],["pid"]],["result"]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"gettid","","Get the caller's thread ID (see gettid(2).",N,[[],["pid"]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"dup2","","Create a copy of the specified file descriptor using the…",N,[[["rawfd"],["rawfd"]],["result",["rawfd"]]]],[5,"dup3","","Create a new copy of the specified file descriptor using…",N,[[["rawfd"],["rawfd"],["oflag"]],["result",["rawfd"]]]],[5,"chdir","","Change the current working directory of the calling…",N,[[["p"]],["result"]]],[5,"fchdir","","Change the current working directory of the process to the…",N,[[["rawfd"]],["result"]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.…",N,[[["p"],["mode"]],["result"]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path…",N,[[["p"],["mode"]],["result"]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",N,[[],["result",["pathbuf"]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by…",N,[[["p"],["option",["uid"]],["option",["gid"]]],["result"]]],[5,"fchownat","","Change the ownership of the file at `path` to be owned by…",N,[[["option",["rawfd"]],["p"],["option",["uid"]],["option",["gid"]],["fchownatflags"]],["result"]]],[5,"execv","","Replace the current process image with a new one (see…",N,N],[5,"execve","","Replace the current process image with a new one (see…",N,N],[5,"execvp","","Replace the current process image with a new one and…",N,N],[5,"execvpe","","Replace the current process image with a new one and…",N,N],[5,"fexecve","","Replace the current process image with a new one (see…",N,N],[5,"execveat","","Execute program relative to a directory file descriptor…",N,N],[5,"daemon","","Daemonize this process by detaching from the controlling…",N,[[["bool"],["bool"]],["result"]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",N,[[["s"]],["result"]]],[5,"gethostname","","Get the host name and store it in the provided buffer,…",N,N],[5,"close","","Close a raw file descriptor",N,[[["rawfd"]],["result"]]],[5,"read","","Read from a raw file descriptor.",N,N],[5,"write","","Write to a raw file descriptor.",N,N],[5,"lseek","","Move the read/write file offset.",N,[[["rawfd"],["off_t"],["whence"]],["result",["off_t"]]]],[5,"lseek64","","",N,[[["rawfd"],["off64_t"],["whence"]],["result",["off64_t"]]]],[5,"pipe","","Create an interprocess channel.",N,[[],["result"]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor…",N,[[["oflag"]],["result"]]],[5,"truncate","","Truncate a file to a specified length",N,[[["p"],["off_t"]],["result"]]],[5,"ftruncate","","Truncate a file to a specified length",N,[[["rawfd"],["off_t"]],["result"]]],[5,"isatty","","",N,[[["rawfd"]],["result",["bool"]]]],[5,"unlink","","Remove a directory entry",N,[[["p"]],["result"]]],[5,"chroot","","",N,[[["p"]],["result"]]],[5,"sync","","Commit filesystem caches to disk",N,N],[5,"fsync","","Synchronize changes to a file",N,[[["rawfd"]],["result"]]],[5,"fdatasync","","Synchronize the data of a file",N,[[["rawfd"]],["result"]]],[5,"getuid","","Get a real user ID",N,[[],["uid"]]],[5,"geteuid","","Get the effective user ID",N,[[],["uid"]]],[5,"getgid","","Get the real group ID",N,[[],["gid"]]],[5,"getegid","","Get the effective group ID",N,[[],["gid"]]],[5,"setuid","","Set the user ID",N,[[["uid"]],["result"]]],[5,"setgid","","Set the user ID",N,[[["gid"]],["result"]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling…",N,[[],["result",["vec"]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling…",N,N],[5,"getgrouplist","","Calculate the supplementary group access list.",N,[[["cstr"],["gid"]],["result",["vec"]]]],[5,"initgroups","","Initialize the supplementary group access list.",N,[[["cstr"],["gid"]],["result"]]],[5,"pause","","Suspend the thread until a signal is received.",N,[[]]],[5,"sleep","","Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp","","Creates a regular file which persists even after process…",N,[[["p"]],["result"]]],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead…",N,[[["rawfd"],["pathconfvar"]],["result",["option"]]]],[5,"pathconf","","Get path-dependent configurable system variables (see…",N,[[["p"],["pathconfvar"]],["result",["option"]]]],[5,"sysconf","","Get configurable system variables (see sysconf(3))",N,[[["sysconfvar"]],["result",["option"]]]],[0,"alarm","","Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],["option",["c_uint"]]]],[5,"cancel","","Cancel an previously set alarm signal.",N,[[],["option",["c_uint"]]]],[0,"acct","nix::unistd","",N,N],[5,"enable","nix::unistd::acct","Enable process accounting",N,[[["p"]],["result"]]],[5,"disable","","Disable process accounting",N,[[],["result"]]],[17,"ROOT","nix::unistd","Constant for UID = 0",N,N],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",129,[[["uid_t"]],["self"]]],[11,"current","","Returns Uid of calling process. This is practically a more…",129,[[],["self"]]],[11,"effective","","Returns effective Uid of calling process. This is…",129,[[],["self"]]],[11,"is_root","","Returns true if the `Uid` represents privileged user -…",129,[[["self"]],["bool"]]],[11,"as_raw","","Get the raw `uid_t` wrapped by `self`.",129,[[["self"]],["uid_t"]]],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",130,[[["gid_t"]],["self"]]],[11,"current","","Returns Gid of calling process. This is practically a more…",130,[[],["self"]]],[11,"effective","","Returns effective Gid of calling process. This is…",130,[[],["self"]]],[11,"as_raw","","Get the raw `gid_t` wrapped by `self`.",130,[[["self"]],["gid_t"]]],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",131,[[["pid_t"]],["self"]]],[11,"this","","Returns PID of calling process",131,[[],["self"]]],[11,"parent","","Returns PID of parent of calling process",131,[[],["self"]]],[11,"as_raw","","Get the raw `pid_t` wrapped by `self`.",131,[[["self"]],["pid_t"]]],[11,"is_child","","Return `true` if this is the child process of the `fork()`",124,[[["self"]],["bool"]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",124,[[["self"]],["bool"]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath","","",N,N],[10,"len","","",132,[[["self"]],["usize"]]],[10,"with_nix_path","","",132,[[["self"],["f"]],["result"]]],[11,"as_errno","","Convert this `Error` to an `Errno`.",0,[[["self"]],["option",["errno"]]]],[11,"from_errno","","Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last","","Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes…",N,N],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads…",N,N],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no…",N,N],[14,"ioctl_none_bad","","Generates a wrapper function for a \"bad\" ioctl that passes…",N,N],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data…",N,N],[14,"ioctl_read_bad","","Generates a wrapper function for a \"bad\" ioctl that reads…",N,N],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data…",N,N],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \"bad\" ioctl that writes…",N,N],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an…",N,N],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \"bad\" ioctl that writes…",N,N],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and…",N,N],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \"bad\" ioctl that reads…",N,N],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an…",N,N],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an…",N,N],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and…",N,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","nix::dir","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",133,[[["self"]],["i"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","nix::errno","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","nix::fcntl","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","nix::ifaddrs","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_iter","","",134,[[["self"]],["i"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","nix::kmod","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","nix::mount","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","nix::mqueue","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","nix::net::if_","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","nix::poll","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","nix::pty","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","nix::sched","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","nix::sys::aio","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","nix::sys::epoll","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","nix::sys::eventfd","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","nix::sys::memfd","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","nix::sys::mman","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","nix::sys::ptrace","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","nix::sys::quota","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","nix::sys::reboot","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","nix::sys::select","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","nix::sys::signal","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_iter","","",136,[[["self"]],["i"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","nix::sys::signalfd","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_iter","","",66,[[["self"]],["i"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","nix::sys::socket","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_iter","","",137,[[["self"]],["i"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","nix::sys::socket::sockopt","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"from","nix::sys::stat","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","nix::sys::statvfs","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","nix::sys::sysinfo","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","nix::sys::termios","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_string","nix::sys::time","",116,[[["self"]],["string"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"to_string","","",117,[[["self"]],["string"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","nix::sys::uio","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","nix::sys::utsname","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","nix::sys::wait","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","nix::ucontext","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_string","nix::unistd","",129,[[["self"]],["string"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_string","","",130,[[["self"]],["string"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_string","","",131,[[["self"]],["string"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"clone","nix::sys::socket","",70,[[["self"]],["sockaddr_in"]]],[11,"clone","","",71,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",72,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",69,[[["self"]],["sockaddr"]]],[11,"clone","","",67,[[["self"]],["cmsghdr"]]],[11,"clone","nix::sys::stat","",97,[[["self"]],["stat"]]],[11,"clone","nix::pty","",25,[[["self"]],["winsize"]]],[11,"clone","nix::sys::signalfd","",64,[[["self"]],["signalfd_siginfo"]]],[11,"clone","nix::sys::socket","",73,[[["self"]],["sockaddr_un"]]],[11,"clone","","",68,[[["self"]],["msghdr"]]],[11,"get","nix::sys::socket::sockopt","",138,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",139,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",140,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",141,[[["self"],["rawfd"]],["result",["linger"]]]],[11,"get","","",146,[[["self"],["rawfd"]],["result",["u8"]]]],[11,"get","","",147,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",148,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"get","","",149,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"get","","",150,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",151,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",152,[[["self"],["rawfd"]],["result",["i32"]]]],[11,"get","","",153,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",154,[[["self"],["rawfd"]],["result",["unixcredentials"]]]],[11,"get","","",155,[[["self"],["rawfd"]],["result",["u32"]]]],[11,"get","","",156,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"get","","",157,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"get","","",160,[[["self"],["rawfd"]],["result",["socktype"]]]],[11,"get","","",161,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",162,[[["self"],["rawfd"]],["result",["sockaddr_in"]]]],[11,"get","","",163,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",164,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",165,[[["self"],["rawfd"]],["result",["u32"]]]],[11,"get","","",166,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"set","","",138,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",139,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",140,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",141,[[["self"],["rawfd"],["linger"]],["result"]]],[11,"set","","",142,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"set","","",143,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"set","","",144,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"set","","",145,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"set","","",146,[[["self"],["rawfd"],["u8"]],["result"]]],[11,"set","","",147,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",148,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"set","","",149,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"set","","",150,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",151,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",153,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",155,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"set","","",156,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"set","","",157,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"set","","",158,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"set","","",159,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"set","","",163,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",164,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",165,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"set","","",166,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"seconds","nix::sys::time","",116,[[["i64"]],["timespec"]]],[11,"milliseconds","","",116,[[["i64"]],["timespec"]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",116,[[["i64"]],["timespec"]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",116,[[["i64"]],["timespec"]]],[11,"num_seconds","","",116,[[["self"]],["i64"]]],[11,"num_milliseconds","","",116,[[["self"]],["i64"]]],[11,"num_microseconds","","",116,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",116,[[["self"]],["i64"]]],[11,"seconds","","",117,[[["i64"]],["timeval"]]],[11,"milliseconds","","",117,[[["i64"]],["timeval"]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",117,[[["i64"]],["timeval"]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.…",117,[[["i64"]],["timeval"]]],[11,"num_seconds","","",117,[[["self"]],["i64"]]],[11,"num_milliseconds","","",117,[[["self"]],["i64"]]],[11,"num_microseconds","","",117,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",117,[[["self"]],["i64"]]],[11,"next","nix::dir","",133,[[["self"]],["option"]]],[11,"next","nix::ifaddrs","",134,[[["self"]],["option"]]],[11,"next","nix::sys::signal","",136,[[["self"]],["option",["signal"]]]],[11,"next","nix::sys::signalfd","",66,[[["self"]],["option"]]],[11,"next","nix::sys::socket","",137,[[["self"]],["option",["controlmessage"]]]],[11,"eq","nix::dir","",1,[[["self"],["type"]],["bool"]]],[11,"eq","nix::errno","",4,[[["self"],["errno"]],["bool"]]],[11,"eq","nix::fcntl","",8,[[["self"],["atflags"]],["bool"]]],[11,"ne","","",8,[[["self"],["atflags"]],["bool"]]],[11,"eq","","",9,[[["self"],["oflag"]],["bool"]]],[11,"ne","","",9,[[["self"],["oflag"]],["bool"]]],[11,"eq","","",10,[[["self"],["sealflag"]],["bool"]]],[11,"ne","","",10,[[["self"],["sealflag"]],["bool"]]],[11,"eq","","",11,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",11,[[["self"],["fdflag"]],["bool"]]],[11,"eq","","",12,[[["self"],["splicefflags"]],["bool"]]],[11,"ne","","",12,[[["self"],["splicefflags"]],["bool"]]],[11,"eq","","",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"ne","","",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"eq","nix::ifaddrs","",14,[[["self"],["interfaceaddress"]],["bool"]]],[11,"ne","","",14,[[["self"],["interfaceaddress"]],["bool"]]],[11,"eq","","",134,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"ne","","",134,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"eq","nix::kmod","",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"ne","","",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"eq","","",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"ne","","",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"eq","nix::mount","",17,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",17,[[["self"],["msflags"]],["bool"]]],[11,"eq","","",18,[[["self"],["mntflags"]],["bool"]]],[11,"ne","","",18,[[["self"],["mntflags"]],["bool"]]],[11,"eq","nix::mqueue","",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"ne","","",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"eq","","",20,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",20,[[["self"],["fdflag"]],["bool"]]],[11,"eq","","",21,[[["self"],["mqattr"]],["bool"]]],[11,"eq","nix::net::if_","",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"ne","","",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"eq","nix::poll","",24,[[["self"],["eventflags"]],["bool"]]],[11,"ne","","",24,[[["self"],["eventflags"]],["bool"]]],[11,"eq","nix::sched","",27,[[["self"],["cloneflags"]],["bool"]]],[11,"ne","","",27,[[["self"],["cloneflags"]],["bool"]]],[11,"eq","nix::sys::aio","",30,[[["self"],["aiofsyncmode"]],["bool"]]],[11,"eq","","",31,[[["self"],["lioopcode"]],["bool"]]],[11,"eq","","",32,[[["self"],["liomode"]],["bool"]]],[11,"eq","","",33,[[["self"],["aiocancelstat"]],["bool"]]],[11,"eq","nix::sys::epoll","",37,[[["self"],["epollflags"]],["bool"]]],[11,"ne","","",37,[[["self"],["epollflags"]],["bool"]]],[11,"eq","","",36,[[["self"],["epollop"]],["bool"]]],[11,"eq","","",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"ne","","",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"eq","nix::sys::eventfd","",40,[[["self"],["efdflags"]],["bool"]]],[11,"ne","","",40,[[["self"],["efdflags"]],["bool"]]],[11,"eq","nix::sys::memfd","",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"ne","","",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"eq","nix::sys::mman","",43,[[["self"],["protflags"]],["bool"]]],[11,"ne","","",43,[[["self"],["protflags"]],["bool"]]],[11,"eq","","",44,[[["self"],["mapflags"]],["bool"]]],[11,"ne","","",44,[[["self"],["mapflags"]],["bool"]]],[11,"eq","","",42,[[["self"],["mmapadvise"]],["bool"]]],[11,"eq","","",45,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",45,[[["self"],["msflags"]],["bool"]]],[11,"eq","","",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"ne","","",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"eq","nix::sys::ptrace","",47,[[["self"],["request"]],["bool"]]],[11,"eq","","",48,[[["self"],["event"]],["bool"]]],[11,"eq","","",49,[[["self"],["options"]],["bool"]]],[11,"ne","","",49,[[["self"],["options"]],["bool"]]],[11,"eq","nix::sys::quota","",50,[[["self"],["quotatype"]],["bool"]]],[11,"eq","","",51,[[["self"],["quotafmt"]],["bool"]]],[11,"eq","","",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"ne","","",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"eq","nix::sys::reboot","",54,[[["self"],["rebootmode"]],["bool"]]],[11,"eq","nix::sys::signal","",56,[[["self"],["signal"]],["bool"]]],[11,"eq","","",61,[[["self"],["saflags"]],["bool"]]],[11,"ne","","",61,[[["self"],["saflags"]],["bool"]]],[11,"eq","","",57,[[["self"],["sigmaskhow"]],["bool"]]],[11,"eq","","",58,[[["self"],["sighandler"]],["bool"]]],[11,"ne","","",58,[[["self"],["sighandler"]],["bool"]]],[11,"eq","","",59,[[["self"],["sigevnotify"]],["bool"]]],[11,"ne","","",59,[[["self"],["sigevnotify"]],["bool"]]],[11,"eq","nix::sys::signalfd","",65,[[["self"],["sfdflags"]],["bool"]]],[11,"ne","","",65,[[["self"],["sfdflags"]],["bool"]]],[11,"eq","","",66,[[["self"],["signalfd"]],["bool"]]],[11,"ne","","",66,[[["self"],["signalfd"]],["bool"]]],[11,"eq","nix::sys::socket","",80,[[["self"],["addressfamily"]],["bool"]]],[11,"eq","","",82,[[["self"],["inetaddr"]],["bool"]]],[11,"eq","","",75,[[["self"],["ipv4addr"]],["bool"]]],[11,"eq","","",74,[[["self"],["unixaddr"]],["bool"]]],[11,"eq","","",81,[[["self"],["sockaddr"]],["bool"]]],[11,"eq","","",78,[[["self"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["self"]],["bool"]]],[11,"eq","","",84,[[["self"],["socktype"]],["bool"]]],[11,"eq","","",85,[[["self"],["sockprotocol"]],["bool"]]],[11,"eq","","",91,[[["self"],["sockflag"]],["bool"]]],[11,"ne","","",91,[[["self"],["sockflag"]],["bool"]]],[11,"eq","","",92,[[["self"],["msgflags"]],["bool"]]],[11,"ne","","",92,[[["self"],["msgflags"]],["bool"]]],[11,"eq","","",93,[[["self"],["self"]],["bool"]]],[11,"eq","","",94,[[["self"],["self"]],["bool"]]],[11,"eq","","",95,[[["self"],["self"]],["bool"]]],[11,"eq","","",87,[[["self"],["socklevel"]],["bool"]]],[11,"eq","","",88,[[["self"],["shutdown"]],["bool"]]],[11,"eq","nix::sys::stat","",100,[[["self"],["sflag"]],["bool"]]],[11,"ne","","",100,[[["self"],["sflag"]],["bool"]]],[11,"eq","","",101,[[["self"],["mode"]],["bool"]]],[11,"ne","","",101,[[["self"],["mode"]],["bool"]]],[11,"eq","nix::sys::statvfs","",102,[[["self"],["fsflags"]],["bool"]]],[11,"ne","","",102,[[["self"],["fsflags"]],["bool"]]],[11,"eq","nix::sys::termios","",106,[[["self"],["baudrate"]],["bool"]]],[11,"eq","","",107,[[["self"],["setarg"]],["bool"]]],[11,"eq","","",108,[[["self"],["flusharg"]],["bool"]]],[11,"eq","","",109,[[["self"],["flowarg"]],["bool"]]],[11,"eq","","",110,[[["self"],["specialcharacterindices"]],["bool"]]],[11,"eq","","",111,[[["self"],["inputflags"]],["bool"]]],[11,"ne","","",111,[[["self"],["inputflags"]],["bool"]]],[11,"eq","","",112,[[["self"],["outputflags"]],["bool"]]],[11,"ne","","",112,[[["self"],["outputflags"]],["bool"]]],[11,"eq","","",113,[[["self"],["controlflags"]],["bool"]]],[11,"ne","","",113,[[["self"],["controlflags"]],["bool"]]],[11,"eq","","",114,[[["self"],["localflags"]],["bool"]]],[11,"ne","","",114,[[["self"],["localflags"]],["bool"]]],[11,"eq","nix::sys::time","",116,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",117,[[["self"],["timeval"]],["bool"]]],[11,"eq","nix::sys::wait","",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"ne","","",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"eq","","",121,[[["self"],["waitstatus"]],["bool"]]],[11,"ne","","",121,[[["self"],["waitstatus"]],["bool"]]],[11,"eq","nix::unistd","",129,[[["self"],["uid"]],["bool"]]],[11,"ne","","",129,[[["self"],["uid"]],["bool"]]],[11,"eq","","",130,[[["self"],["gid"]],["bool"]]],[11,"ne","","",130,[[["self"],["gid"]],["bool"]]],[11,"eq","","",131,[[["self"],["pid"]],["bool"]]],[11,"ne","","",131,[[["self"],["pid"]],["bool"]]],[11,"eq","","",127,[[["self"],["pathconfvar"]],["bool"]]],[11,"eq","","",128,[[["self"],["sysconfvar"]],["bool"]]],[11,"eq","nix","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"as_ref","nix::sys::signal","",56,[[["self"]],["str"]]],[11,"as_ref","","",62,[[["self"]],["sigset_t"]]],[11,"as_ref","nix::sys::time","",116,[[["self"]],["timespec"]]],[11,"as_ref","","",117,[[["self"]],["timeval"]]],[11,"default","nix::sys::quota","",52,[[],["quotavalidflags"]]],[11,"default","","",53,[[],["dqblk"]]],[11,"default","nix::sys::statvfs","",102,[[],["fsflags"]]],[11,"cmp","nix::fcntl","",8,[[["self"],["atflags"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["oflag"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["sealflag"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["fdflag"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["splicefflags"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["fallocateflags"]],["ordering"]]],[11,"cmp","nix::kmod","",15,[[["self"],["moduleinitflags"]],["ordering"]]],[11,"cmp","","",16,[[["self"],["deletemoduleflags"]],["ordering"]]],[11,"cmp","nix::mount","",17,[[["self"],["msflags"]],["ordering"]]],[11,"cmp","","",18,[[["self"],["mntflags"]],["ordering"]]],[11,"cmp","nix::mqueue","",19,[[["self"],["mq_oflag"]],["ordering"]]],[11,"cmp","","",20,[[["self"],["fdflag"]],["ordering"]]],[11,"cmp","nix::net::if_","",22,[[["self"],["interfaceflags"]],["ordering"]]],[11,"cmp","nix::poll","",24,[[["self"],["eventflags"]],["ordering"]]],[11,"cmp","nix::sched","",27,[[["self"],["cloneflags"]],["ordering"]]],[11,"cmp","nix::sys::aio","",30,[[["self"],["aiofsyncmode"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["lioopcode"]],["ordering"]]],[11,"cmp","","",32,[[["self"],["liomode"]],["ordering"]]],[11,"cmp","nix::sys::epoll","",37,[[["self"],["epollflags"]],["ordering"]]],[11,"cmp","","",38,[[["self"],["epollcreateflags"]],["ordering"]]],[11,"cmp","nix::sys::eventfd","",40,[[["self"],["efdflags"]],["ordering"]]],[11,"cmp","nix::sys::memfd","",41,[[["self"],["memfdcreateflag"]],["ordering"]]],[11,"cmp","nix::sys::mman","",43,[[["self"],["protflags"]],["ordering"]]],[11,"cmp","","",44,[[["self"],["mapflags"]],["ordering"]]],[11,"cmp","","",42,[[["self"],["mmapadvise"]],["ordering"]]],[11,"cmp","","",45,[[["self"],["msflags"]],["ordering"]]],[11,"cmp","","",46,[[["self"],["mlockallflags"]],["ordering"]]],[11,"cmp","nix::sys::ptrace","",47,[[["self"],["request"]],["ordering"]]],[11,"cmp","","",48,[[["self"],["event"]],["ordering"]]],[11,"cmp","","",49,[[["self"],["options"]],["ordering"]]],[11,"cmp","nix::sys::quota","",50,[[["self"],["quotatype"]],["ordering"]]],[11,"cmp","","",51,[[["self"],["quotafmt"]],["ordering"]]],[11,"cmp","","",52,[[["self"],["quotavalidflags"]],["ordering"]]],[11,"cmp","nix::sys::reboot","",54,[[["self"],["rebootmode"]],["ordering"]]],[11,"cmp","nix::sys::signal","",56,[[["self"],["signal"]],["ordering"]]],[11,"cmp","","",61,[[["self"],["saflags"]],["ordering"]]],[11,"cmp","","",57,[[["self"],["sigmaskhow"]],["ordering"]]],[11,"cmp","nix::sys::signalfd","",65,[[["self"],["sfdflags"]],["ordering"]]],[11,"cmp","nix::sys::socket","",91,[[["self"],["sockflag"]],["ordering"]]],[11,"cmp","","",92,[[["self"],["msgflags"]],["ordering"]]],[11,"cmp","nix::sys::stat","",100,[[["self"],["sflag"]],["ordering"]]],[11,"cmp","","",101,[[["self"],["mode"]],["ordering"]]],[11,"cmp","nix::sys::statvfs","",102,[[["self"],["fsflags"]],["ordering"]]],[11,"cmp","nix::sys::termios","",106,[[["self"],["baudrate"]],["ordering"]]],[11,"cmp","","",107,[[["self"],["setarg"]],["ordering"]]],[11,"cmp","","",108,[[["self"],["flusharg"]],["ordering"]]],[11,"cmp","","",109,[[["self"],["flowarg"]],["ordering"]]],[11,"cmp","","",110,[[["self"],["specialcharacterindices"]],["ordering"]]],[11,"cmp","","",111,[[["self"],["inputflags"]],["ordering"]]],[11,"cmp","","",112,[[["self"],["outputflags"]],["ordering"]]],[11,"cmp","","",113,[[["self"],["controlflags"]],["ordering"]]],[11,"cmp","","",114,[[["self"],["localflags"]],["ordering"]]],[11,"cmp","nix::sys::time","",116,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",117,[[["self"],["timeval"]],["ordering"]]],[11,"cmp","nix::sys::wait","",122,[[["self"],["waitpidflag"]],["ordering"]]],[11,"clone","nix::dir","",3,[[["self"]],["entry"]]],[11,"clone","","",1,[[["self"]],["type"]]],[11,"clone","nix::errno","",4,[[["self"]],["errno"]]],[11,"clone","nix::fcntl","",8,[[["self"]],["atflags"]]],[11,"clone","","",9,[[["self"]],["oflag"]]],[11,"clone","","",10,[[["self"]],["sealflag"]]],[11,"clone","","",11,[[["self"]],["fdflag"]]],[11,"clone","","",7,[[["self"]],["flockarg"]]],[11,"clone","","",12,[[["self"]],["splicefflags"]]],[11,"clone","","",13,[[["self"]],["fallocateflags"]]],[11,"clone","nix::ifaddrs","",14,[[["self"]],["interfaceaddress"]]],[11,"clone","nix::kmod","",15,[[["self"]],["moduleinitflags"]]],[11,"clone","","",16,[[["self"]],["deletemoduleflags"]]],[11,"clone","nix::mount","",17,[[["self"]],["msflags"]]],[11,"clone","","",18,[[["self"]],["mntflags"]]],[11,"clone","nix::mqueue","",19,[[["self"]],["mq_oflag"]]],[11,"clone","","",20,[[["self"]],["fdflag"]]],[11,"clone","","",21,[[["self"]],["mqattr"]]],[11,"clone","nix::net::if_","",22,[[["self"]],["interfaceflags"]]],[11,"clone","nix::poll","",23,[[["self"]],["pollfd"]]],[11,"clone","","",24,[[["self"]],["eventflags"]]],[11,"clone","nix::pty","",26,[[["self"]],["openptyresult"]]],[11,"clone","nix::sched","",27,[[["self"]],["cloneflags"]]],[11,"clone","","",28,[[["self"]],["cpuset"]]],[11,"clone","nix::sys::aio","",30,[[["self"]],["aiofsyncmode"]]],[11,"clone","","",31,[[["self"]],["lioopcode"]]],[11,"clone","","",32,[[["self"]],["liomode"]]],[11,"clone","","",33,[[["self"]],["aiocancelstat"]]],[11,"clone","nix::sys::epoll","",37,[[["self"]],["epollflags"]]],[11,"clone","","",36,[[["self"]],["epollop"]]],[11,"clone","","",38,[[["self"]],["epollcreateflags"]]],[11,"clone","","",39,[[["self"]],["epollevent"]]],[11,"clone","nix::sys::eventfd","",40,[[["self"]],["efdflags"]]],[11,"clone","nix::sys::memfd","",41,[[["self"]],["memfdcreateflag"]]],[11,"clone","nix::sys::mman","",43,[[["self"]],["protflags"]]],[11,"clone","","",44,[[["self"]],["mapflags"]]],[11,"clone","","",42,[[["self"]],["mmapadvise"]]],[11,"clone","","",45,[[["self"]],["msflags"]]],[11,"clone","","",46,[[["self"]],["mlockallflags"]]],[11,"clone","nix::sys::ptrace","",47,[[["self"]],["request"]]],[11,"clone","","",48,[[["self"]],["event"]]],[11,"clone","","",49,[[["self"]],["options"]]],[11,"clone","nix::sys::quota","",50,[[["self"]],["quotatype"]]],[11,"clone","","",51,[[["self"]],["quotafmt"]]],[11,"clone","","",52,[[["self"]],["quotavalidflags"]]],[11,"clone","","",53,[[["self"]],["dqblk"]]],[11,"clone","nix::sys::reboot","",54,[[["self"]],["rebootmode"]]],[11,"clone","nix::sys::select","",55,[[["self"]],["fdset"]]],[11,"clone","nix::sys::signal","",56,[[["self"]],["signal"]]],[11,"clone","","",136,[[["self"]],["signaliterator"]]],[11,"clone","","",61,[[["self"]],["saflags"]]],[11,"clone","","",57,[[["self"]],["sigmaskhow"]]],[11,"clone","","",62,[[["self"]],["sigset"]]],[11,"clone","","",58,[[["self"]],["sighandler"]]],[11,"clone","","",63,[[["self"]],["sigaction"]]],[11,"clone","","",59,[[["self"]],["sigevnotify"]]],[11,"clone","","",60,[[["self"]],["sigevent"]]],[11,"clone","nix::sys::signalfd","",65,[[["self"]],["sfdflags"]]],[11,"clone","","",66,[[["self"]],["signalfd"]]],[11,"clone","nix::sys::socket","",80,[[["self"]],["addressfamily"]]],[11,"clone","","",82,[[["self"]],["inetaddr"]]],[11,"clone","","",83,[[["self"]],["ipaddr"]]],[11,"clone","","",75,[[["self"]],["ipv4addr"]]],[11,"clone","","",76,[[["self"]],["ipv6addr"]]],[11,"clone","","",74,[[["self"]],["unixaddr"]]],[11,"clone","","",81,[[["self"]],["sockaddr"]]],[11,"clone","","",78,[[["self"]],["netlinkaddr"]]],[11,"clone","","",77,[[["self"]],["linkaddr"]]],[11,"clone","nix::sys::socket::sockopt","",138,[[["self"]],["reuseaddr"]]],[11,"clone","","",139,[[["self"]],["reuseport"]]],[11,"clone","","",140,[[["self"]],["tcpnodelay"]]],[11,"clone","","",141,[[["self"]],["linger"]]],[11,"clone","","",142,[[["self"]],["ipaddmembership"]]],[11,"clone","","",143,[[["self"]],["ipdropmembership"]]],[11,"clone","","",144,[[["self"]],["ipv6addmembership"]]],[11,"clone","","",145,[[["self"]],["ipv6dropmembership"]]],[11,"clone","","",146,[[["self"]],["ipmulticastttl"]]],[11,"clone","","",147,[[["self"]],["ipmulticastloop"]]],[11,"clone","","",148,[[["self"]],["receivetimeout"]]],[11,"clone","","",149,[[["self"]],["sendtimeout"]]],[11,"clone","","",150,[[["self"]],["broadcast"]]],[11,"clone","","",151,[[["self"]],["oobinline"]]],[11,"clone","","",152,[[["self"]],["socketerror"]]],[11,"clone","","",153,[[["self"]],["keepalive"]]],[11,"clone","","",154,[[["self"]],["peercredentials"]]],[11,"clone","","",155,[[["self"]],["tcpkeepidle"]]],[11,"clone","","",156,[[["self"]],["rcvbuf"]]],[11,"clone","","",157,[[["self"]],["sndbuf"]]],[11,"clone","","",158,[[["self"]],["rcvbufforce"]]],[11,"clone","","",159,[[["self"]],["sndbufforce"]]],[11,"clone","","",160,[[["self"]],["socktype"]]],[11,"clone","","",161,[[["self"]],["acceptconn"]]],[11,"clone","","",162,[[["self"]],["originaldst"]]],[11,"clone","","",163,[[["self"]],["receivetimestamp"]]],[11,"clone","","",164,[[["self"]],["iptransparent"]]],[11,"clone","","",165,[[["self"]],["mark"]]],[11,"clone","","",166,[[["self"]],["passcred"]]],[11,"clone","nix::sys::socket","",84,[[["self"]],["socktype"]]],[11,"clone","","",85,[[["self"]],["sockprotocol"]]],[11,"clone","","",91,[[["self"]],["sockflag"]]],[11,"clone","","",92,[[["self"]],["msgflags"]]],[11,"clone","","",93,[[["self"]],["unixcredentials"]]],[11,"clone","","",94,[[["self"]],["ipmembershiprequest"]]],[11,"clone","","",95,[[["self"]],["ipv6membershiprequest"]]],[11,"clone","","",87,[[["self"]],["socklevel"]]],[11,"clone","","",88,[[["self"]],["shutdown"]]],[11,"clone","nix::sys::stat","",100,[[["self"]],["sflag"]]],[11,"clone","","",101,[[["self"]],["mode"]]],[11,"clone","","",98,[[["self"]],["fchmodatflags"]]],[11,"clone","","",99,[[["self"]],["utimensatflags"]]],[11,"clone","nix::sys::statvfs","",102,[[["self"]],["fsflags"]]],[11,"clone","","",103,[[["self"]],["statvfs"]]],[11,"clone","nix::sys::sysinfo","",104,[[["self"]],["sysinfo"]]],[11,"clone","nix::sys::termios","",105,[[["self"]],["termios"]]],[11,"clone","","",106,[[["self"]],["baudrate"]]],[11,"clone","","",107,[[["self"]],["setarg"]]],[11,"clone","","",108,[[["self"]],["flusharg"]]],[11,"clone","","",109,[[["self"]],["flowarg"]]],[11,"clone","","",110,[[["self"]],["specialcharacterindices"]]],[11,"clone","","",111,[[["self"]],["inputflags"]]],[11,"clone","","",112,[[["self"]],["outputflags"]]],[11,"clone","","",113,[[["self"]],["controlflags"]]],[11,"clone","","",114,[[["self"]],["localflags"]]],[11,"clone","nix::sys::time","",116,[[["self"]],["timespec"]]],[11,"clone","","",117,[[["self"]],["timeval"]]],[11,"clone","nix::sys::uio","",118,[[["self"]],["remoteiovec"]]],[11,"clone","nix::sys::utsname","",120,[[["self"]],["utsname"]]],[11,"clone","nix::sys::wait","",122,[[["self"]],["waitpidflag"]]],[11,"clone","","",121,[[["self"]],["waitstatus"]]],[11,"clone","nix::ucontext","",123,[[["self"]],["ucontext"]]],[11,"clone","nix::unistd","",129,[[["self"]],["uid"]]],[11,"clone","","",130,[[["self"]],["gid"]]],[11,"clone","","",131,[[["self"]],["pid"]]],[11,"clone","","",124,[[["self"]],["forkresult"]]],[11,"clone","","",125,[[["self"]],["fchownatflags"]]],[11,"clone","","",126,[[["self"]],["whence"]]],[11,"clone","","",127,[[["self"]],["pathconfvar"]]],[11,"clone","","",128,[[["self"]],["sysconfvar"]]],[11,"clone","nix","",0,[[["self"]],["error"]]],[11,"extend","nix::fcntl","",8,[[["self"],["t"]]]],[11,"extend","","",9,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"extend","","",12,[[["self"],["t"]]]],[11,"extend","","",13,[[["self"],["t"]]]],[11,"extend","nix::kmod","",15,[[["self"],["t"]]]],[11,"extend","","",16,[[["self"],["t"]]]],[11,"extend","nix::mount","",17,[[["self"],["t"]]]],[11,"extend","","",18,[[["self"],["t"]]]],[11,"extend","nix::mqueue","",19,[[["self"],["t"]]]],[11,"extend","","",20,[[["self"],["t"]]]],[11,"extend","nix::net::if_","",22,[[["self"],["t"]]]],[11,"extend","nix::poll","",24,[[["self"],["t"]]]],[11,"extend","nix::sched","",27,[[["self"],["t"]]]],[11,"extend","nix::sys::epoll","",37,[[["self"],["t"]]]],[11,"extend","","",38,[[["self"],["t"]]]],[11,"extend","nix::sys::eventfd","",40,[[["self"],["t"]]]],[11,"extend","nix::sys::memfd","",41,[[["self"],["t"]]]],[11,"extend","nix::sys::mman","",43,[[["self"],["t"]]]],[11,"extend","","",44,[[["self"],["t"]]]],[11,"extend","","",45,[[["self"],["t"]]]],[11,"extend","","",46,[[["self"],["t"]]]],[11,"extend","nix::sys::ptrace","",49,[[["self"],["t"]]]],[11,"extend","nix::sys::quota","",52,[[["self"],["t"]]]],[11,"extend","nix::sys::signal","",61,[[["self"],["t"]]]],[11,"extend","nix::sys::signalfd","",65,[[["self"],["t"]]]],[11,"extend","nix::sys::socket","",91,[[["self"],["t"]]]],[11,"extend","","",92,[[["self"],["t"]]]],[11,"extend","nix::sys::stat","",100,[[["self"],["t"]]]],[11,"extend","","",101,[[["self"],["t"]]]],[11,"extend","nix::sys::statvfs","",102,[[["self"],["t"]]]],[11,"extend","nix::sys::termios","",111,[[["self"],["t"]]]],[11,"extend","","",112,[[["self"],["t"]]]],[11,"extend","","",113,[[["self"],["t"]]]],[11,"extend","","",114,[[["self"],["t"]]]],[11,"extend","nix::sys::wait","",122,[[["self"],["t"]]]],[11,"from","nix::sys::aio","",29,[[["vec",["aiocb"]]],["liocb"]]],[11,"from","nix::sys::signal","",60,[[["sigevent"]],["self"]]],[11,"from","nix::sys::socket","",93,[[["ucred"]],["self"]]],[11,"from","nix::sys::termios","",105,[[["termios"]],["self"]]],[11,"from","","",106,[[["speed_t"]],["baudrate"]]],[11,"from","nix","",167,[[["pid"]],["self"]]],[11,"from","","",0,[[["errno"]],["error"]]],[11,"from","","",0,[[["fromutf8error"]],["error"]]],[11,"drop","nix::dir","",2,[[["self"]]]],[11,"drop","","",133,[[["self"]]]],[11,"drop","nix::ifaddrs","",134,[[["self"]]]],[11,"drop","nix::pty","",135,[[["self"]]]],[11,"drop","nix::sys::aio","If the `AioCb` has no remaining state in the kernel, just…",35,[[["self"]]]],[11,"drop","nix::sys::signalfd","",66,[[["self"]]]],[11,"into","nix::sys::socket","",93,[[["self"]],["ucred"]]],[11,"partial_cmp","nix::fcntl","",8,[[["self"],["atflags"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["atflags"]],["bool"]]],[11,"le","","",8,[[["self"],["atflags"]],["bool"]]],[11,"gt","","",8,[[["self"],["atflags"]],["bool"]]],[11,"ge","","",8,[[["self"],["atflags"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["oflag"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["oflag"]],["bool"]]],[11,"le","","",9,[[["self"],["oflag"]],["bool"]]],[11,"gt","","",9,[[["self"],["oflag"]],["bool"]]],[11,"ge","","",9,[[["self"],["oflag"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["sealflag"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["sealflag"]],["bool"]]],[11,"le","","",10,[[["self"],["sealflag"]],["bool"]]],[11,"gt","","",10,[[["self"],["sealflag"]],["bool"]]],[11,"ge","","",10,[[["self"],["sealflag"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",11,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",11,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",11,[[["self"],["fdflag"]],["bool"]]],[11,"partial_cmp","","",12,[[["self"],["splicefflags"]],["option",["ordering"]]]],[11,"lt","","",12,[[["self"],["splicefflags"]],["bool"]]],[11,"le","","",12,[[["self"],["splicefflags"]],["bool"]]],[11,"gt","","",12,[[["self"],["splicefflags"]],["bool"]]],[11,"ge","","",12,[[["self"],["splicefflags"]],["bool"]]],[11,"partial_cmp","","",13,[[["self"],["fallocateflags"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"le","","",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"gt","","",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"ge","","",13,[[["self"],["fallocateflags"]],["bool"]]],[11,"partial_cmp","nix::kmod","",15,[[["self"],["moduleinitflags"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"le","","",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"gt","","",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"ge","","",15,[[["self"],["moduleinitflags"]],["bool"]]],[11,"partial_cmp","","",16,[[["self"],["deletemoduleflags"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"le","","",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"gt","","",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"ge","","",16,[[["self"],["deletemoduleflags"]],["bool"]]],[11,"partial_cmp","nix::mount","",17,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",17,[[["self"],["msflags"]],["bool"]]],[11,"le","","",17,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",17,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",17,[[["self"],["msflags"]],["bool"]]],[11,"partial_cmp","","",18,[[["self"],["mntflags"]],["option",["ordering"]]]],[11,"lt","","",18,[[["self"],["mntflags"]],["bool"]]],[11,"le","","",18,[[["self"],["mntflags"]],["bool"]]],[11,"gt","","",18,[[["self"],["mntflags"]],["bool"]]],[11,"ge","","",18,[[["self"],["mntflags"]],["bool"]]],[11,"partial_cmp","nix::mqueue","",19,[[["self"],["mq_oflag"]],["option",["ordering"]]]],[11,"lt","","",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"le","","",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"gt","","",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"ge","","",19,[[["self"],["mq_oflag"]],["bool"]]],[11,"partial_cmp","","",20,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",20,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",20,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",20,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",20,[[["self"],["fdflag"]],["bool"]]],[11,"partial_cmp","nix::net::if_","",22,[[["self"],["interfaceflags"]],["option",["ordering"]]]],[11,"lt","","",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"le","","",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"gt","","",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"ge","","",22,[[["self"],["interfaceflags"]],["bool"]]],[11,"partial_cmp","nix::poll","",24,[[["self"],["eventflags"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["eventflags"]],["bool"]]],[11,"le","","",24,[[["self"],["eventflags"]],["bool"]]],[11,"gt","","",24,[[["self"],["eventflags"]],["bool"]]],[11,"ge","","",24,[[["self"],["eventflags"]],["bool"]]],[11,"partial_cmp","nix::sched","",27,[[["self"],["cloneflags"]],["option",["ordering"]]]],[11,"lt","","",27,[[["self"],["cloneflags"]],["bool"]]],[11,"le","","",27,[[["self"],["cloneflags"]],["bool"]]],[11,"gt","","",27,[[["self"],["cloneflags"]],["bool"]]],[11,"ge","","",27,[[["self"],["cloneflags"]],["bool"]]],[11,"partial_cmp","nix::sys::aio","",30,[[["self"],["aiofsyncmode"]],["option",["ordering"]]]],[11,"partial_cmp","","",31,[[["self"],["lioopcode"]],["option",["ordering"]]]],[11,"partial_cmp","","",32,[[["self"],["liomode"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::epoll","",37,[[["self"],["epollflags"]],["option",["ordering"]]]],[11,"lt","","",37,[[["self"],["epollflags"]],["bool"]]],[11,"le","","",37,[[["self"],["epollflags"]],["bool"]]],[11,"gt","","",37,[[["self"],["epollflags"]],["bool"]]],[11,"ge","","",37,[[["self"],["epollflags"]],["bool"]]],[11,"partial_cmp","","",38,[[["self"],["epollcreateflags"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"le","","",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"gt","","",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"ge","","",38,[[["self"],["epollcreateflags"]],["bool"]]],[11,"partial_cmp","nix::sys::eventfd","",40,[[["self"],["efdflags"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["efdflags"]],["bool"]]],[11,"le","","",40,[[["self"],["efdflags"]],["bool"]]],[11,"gt","","",40,[[["self"],["efdflags"]],["bool"]]],[11,"ge","","",40,[[["self"],["efdflags"]],["bool"]]],[11,"partial_cmp","nix::sys::memfd","",41,[[["self"],["memfdcreateflag"]],["option",["ordering"]]]],[11,"lt","","",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"le","","",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"gt","","",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"ge","","",41,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"partial_cmp","nix::sys::mman","",43,[[["self"],["protflags"]],["option",["ordering"]]]],[11,"lt","","",43,[[["self"],["protflags"]],["bool"]]],[11,"le","","",43,[[["self"],["protflags"]],["bool"]]],[11,"gt","","",43,[[["self"],["protflags"]],["bool"]]],[11,"ge","","",43,[[["self"],["protflags"]],["bool"]]],[11,"partial_cmp","","",44,[[["self"],["mapflags"]],["option",["ordering"]]]],[11,"lt","","",44,[[["self"],["mapflags"]],["bool"]]],[11,"le","","",44,[[["self"],["mapflags"]],["bool"]]],[11,"gt","","",44,[[["self"],["mapflags"]],["bool"]]],[11,"ge","","",44,[[["self"],["mapflags"]],["bool"]]],[11,"partial_cmp","","",42,[[["self"],["mmapadvise"]],["option",["ordering"]]]],[11,"partial_cmp","","",45,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",45,[[["self"],["msflags"]],["bool"]]],[11,"le","","",45,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",45,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",45,[[["self"],["msflags"]],["bool"]]],[11,"partial_cmp","","",46,[[["self"],["mlockallflags"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"le","","",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"gt","","",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"ge","","",46,[[["self"],["mlockallflags"]],["bool"]]],[11,"partial_cmp","nix::sys::ptrace","",47,[[["self"],["request"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["event"]],["option",["ordering"]]]],[11,"partial_cmp","","",49,[[["self"],["options"]],["option",["ordering"]]]],[11,"lt","","",49,[[["self"],["options"]],["bool"]]],[11,"le","","",49,[[["self"],["options"]],["bool"]]],[11,"gt","","",49,[[["self"],["options"]],["bool"]]],[11,"ge","","",49,[[["self"],["options"]],["bool"]]],[11,"partial_cmp","nix::sys::quota","",50,[[["self"],["quotatype"]],["option",["ordering"]]]],[11,"partial_cmp","","",51,[[["self"],["quotafmt"]],["option",["ordering"]]]],[11,"partial_cmp","","",52,[[["self"],["quotavalidflags"]],["option",["ordering"]]]],[11,"lt","","",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"le","","",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"gt","","",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"ge","","",52,[[["self"],["quotavalidflags"]],["bool"]]],[11,"partial_cmp","nix::sys::reboot","",54,[[["self"],["rebootmode"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::signal","",56,[[["self"],["signal"]],["option",["ordering"]]]],[11,"partial_cmp","","",61,[[["self"],["saflags"]],["option",["ordering"]]]],[11,"lt","","",61,[[["self"],["saflags"]],["bool"]]],[11,"le","","",61,[[["self"],["saflags"]],["bool"]]],[11,"gt","","",61,[[["self"],["saflags"]],["bool"]]],[11,"ge","","",61,[[["self"],["saflags"]],["bool"]]],[11,"partial_cmp","","",57,[[["self"],["sigmaskhow"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::signalfd","",65,[[["self"],["sfdflags"]],["option",["ordering"]]]],[11,"lt","","",65,[[["self"],["sfdflags"]],["bool"]]],[11,"le","","",65,[[["self"],["sfdflags"]],["bool"]]],[11,"gt","","",65,[[["self"],["sfdflags"]],["bool"]]],[11,"ge","","",65,[[["self"],["sfdflags"]],["bool"]]],[11,"partial_cmp","nix::sys::socket","",91,[[["self"],["sockflag"]],["option",["ordering"]]]],[11,"lt","","",91,[[["self"],["sockflag"]],["bool"]]],[11,"le","","",91,[[["self"],["sockflag"]],["bool"]]],[11,"gt","","",91,[[["self"],["sockflag"]],["bool"]]],[11,"ge","","",91,[[["self"],["sockflag"]],["bool"]]],[11,"partial_cmp","","",92,[[["self"],["msgflags"]],["option",["ordering"]]]],[11,"lt","","",92,[[["self"],["msgflags"]],["bool"]]],[11,"le","","",92,[[["self"],["msgflags"]],["bool"]]],[11,"gt","","",92,[[["self"],["msgflags"]],["bool"]]],[11,"ge","","",92,[[["self"],["msgflags"]],["bool"]]],[11,"partial_cmp","nix::sys::stat","",100,[[["self"],["sflag"]],["option",["ordering"]]]],[11,"lt","","",100,[[["self"],["sflag"]],["bool"]]],[11,"le","","",100,[[["self"],["sflag"]],["bool"]]],[11,"gt","","",100,[[["self"],["sflag"]],["bool"]]],[11,"ge","","",100,[[["self"],["sflag"]],["bool"]]],[11,"partial_cmp","","",101,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",101,[[["self"],["mode"]],["bool"]]],[11,"le","","",101,[[["self"],["mode"]],["bool"]]],[11,"gt","","",101,[[["self"],["mode"]],["bool"]]],[11,"ge","","",101,[[["self"],["mode"]],["bool"]]],[11,"partial_cmp","nix::sys::statvfs","",102,[[["self"],["fsflags"]],["option",["ordering"]]]],[11,"lt","","",102,[[["self"],["fsflags"]],["bool"]]],[11,"le","","",102,[[["self"],["fsflags"]],["bool"]]],[11,"gt","","",102,[[["self"],["fsflags"]],["bool"]]],[11,"ge","","",102,[[["self"],["fsflags"]],["bool"]]],[11,"partial_cmp","nix::sys::termios","",106,[[["self"],["baudrate"]],["option",["ordering"]]]],[11,"partial_cmp","","",107,[[["self"],["setarg"]],["option",["ordering"]]]],[11,"partial_cmp","","",108,[[["self"],["flusharg"]],["option",["ordering"]]]],[11,"partial_cmp","","",109,[[["self"],["flowarg"]],["option",["ordering"]]]],[11,"partial_cmp","","",110,[[["self"],["specialcharacterindices"]],["option",["ordering"]]]],[11,"partial_cmp","","",111,[[["self"],["inputflags"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["inputflags"]],["bool"]]],[11,"le","","",111,[[["self"],["inputflags"]],["bool"]]],[11,"gt","","",111,[[["self"],["inputflags"]],["bool"]]],[11,"ge","","",111,[[["self"],["inputflags"]],["bool"]]],[11,"partial_cmp","","",112,[[["self"],["outputflags"]],["option",["ordering"]]]],[11,"lt","","",112,[[["self"],["outputflags"]],["bool"]]],[11,"le","","",112,[[["self"],["outputflags"]],["bool"]]],[11,"gt","","",112,[[["self"],["outputflags"]],["bool"]]],[11,"ge","","",112,[[["self"],["outputflags"]],["bool"]]],[11,"partial_cmp","","",113,[[["self"],["controlflags"]],["option",["ordering"]]]],[11,"lt","","",113,[[["self"],["controlflags"]],["bool"]]],[11,"le","","",113,[[["self"],["controlflags"]],["bool"]]],[11,"gt","","",113,[[["self"],["controlflags"]],["bool"]]],[11,"ge","","",113,[[["self"],["controlflags"]],["bool"]]],[11,"partial_cmp","","",114,[[["self"],["localflags"]],["option",["ordering"]]]],[11,"lt","","",114,[[["self"],["localflags"]],["bool"]]],[11,"le","","",114,[[["self"],["localflags"]],["bool"]]],[11,"gt","","",114,[[["self"],["localflags"]],["bool"]]],[11,"ge","","",114,[[["self"],["localflags"]],["bool"]]],[11,"partial_cmp","nix::sys::time","",116,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"partial_cmp","","",117,[[["self"],["timeval"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::wait","",122,[[["self"],["waitpidflag"]],["option",["ordering"]]]],[11,"lt","","",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"le","","",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"gt","","",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"ge","","",122,[[["self"],["waitpidflag"]],["bool"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::kmod","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mount","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sched","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::epoll","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::eventfd","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::memfd","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::ptrace","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::quota","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signalfd","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::dir","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::errno","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::ifaddrs","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::kmod","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mount","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::pty","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sched","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::aio","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::epoll","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::eventfd","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::memfd","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::ptrace","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::quota","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::reboot","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signalfd","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket::sockopt","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::time","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::unistd","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::errno","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::time","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::unistd","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::kmod","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mount","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sched","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::epoll","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::eventfd","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::memfd","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::ptrace","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::quota","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signalfd","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::kmod","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mount","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sched","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::epoll","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::eventfd","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::memfd","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::ptrace","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::quota","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signalfd","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::kmod","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mount","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sched","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::epoll","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::eventfd","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::memfd","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::ptrace","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::quota","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signalfd","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",122,[[["self"],["formatter"]],["result"]]],[11,"hash","nix::fcntl","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"hash","","",11,N],[11,"hash","","",12,N],[11,"hash","","",13,N],[11,"hash","nix::ifaddrs","",14,N],[11,"hash","","",134,N],[11,"hash","nix::kmod","",15,N],[11,"hash","","",16,N],[11,"hash","nix::mount","",17,N],[11,"hash","","",18,N],[11,"hash","nix::mqueue","",19,N],[11,"hash","","",20,N],[11,"hash","nix::net::if_","",22,N],[11,"hash","nix::poll","",24,N],[11,"hash","nix::sched","",27,N],[11,"hash","nix::sys::aio","",30,N],[11,"hash","","",31,N],[11,"hash","","",32,N],[11,"hash","nix::sys::epoll","",37,N],[11,"hash","","",36,N],[11,"hash","","",38,N],[11,"hash","nix::sys::eventfd","",40,N],[11,"hash","nix::sys::memfd","",41,N],[11,"hash","nix::sys::mman","",43,N],[11,"hash","","",44,N],[11,"hash","","",42,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","nix::sys::ptrace","",47,N],[11,"hash","","",48,N],[11,"hash","","",49,N],[11,"hash","nix::sys::quota","",50,N],[11,"hash","","",51,N],[11,"hash","","",52,N],[11,"hash","nix::sys::reboot","",54,N],[11,"hash","nix::sys::signal","",56,N],[11,"hash","","",61,N],[11,"hash","","",57,N],[11,"hash","nix::sys::signalfd","",65,N],[11,"hash","","",66,N],[11,"hash","nix::sys::socket","",80,N],[11,"hash","","",82,[[["self"],["h"]]]],[11,"hash","","",75,[[["self"],["h"]]]],[11,"hash","","",74,[[["self"],["h"]]]],[11,"hash","","",81,[[["self"],["h"]]]],[11,"hash","","",78,[[["self"],["h"]]]],[11,"hash","","",77,[[["self"],["h"]]]],[11,"hash","","",85,N],[11,"hash","","",91,N],[11,"hash","","",92,N],[11,"hash","","",87,N],[11,"hash","","",88,N],[11,"hash","nix::sys::stat","",100,N],[11,"hash","","",101,N],[11,"hash","nix::sys::statvfs","",102,N],[11,"hash","nix::sys::termios","",106,N],[11,"hash","","",107,N],[11,"hash","","",108,N],[11,"hash","","",109,N],[11,"hash","","",110,N],[11,"hash","","",111,N],[11,"hash","","",112,N],[11,"hash","","",113,N],[11,"hash","","",114,N],[11,"hash","nix::sys::wait","",122,N],[11,"hash","nix::unistd","",129,N],[11,"hash","","",130,N],[11,"hash","","",131,N],[11,"hash","","",127,N],[11,"hash","","",128,N],[11,"add","nix::sys::time","",116,[[["self"],["timespec"]],["timespec"]]],[11,"add","","",117,[[["self"],["timeval"]],["timeval"]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",8,[[["self"],["atflags"]],["atflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["self"],["oflag"]],["oflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["self"],["sealflag"]],["sealflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"sub","nix::kmod","Returns the set difference of the two sets of flags.",15,[[["self"],["moduleinitflags"]],["moduleinitflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["self"],["deletemoduleflags"]],["deletemoduleflags"]]],[11,"sub","nix::mount","Returns the set difference of the two sets of flags.",17,[[["self"],["msflags"]],["msflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["self"],["mntflags"]],["mntflags"]]],[11,"sub","nix::mqueue","Returns the set difference of the two sets of flags.",19,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",22,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",24,[[["self"],["eventflags"]],["eventflags"]]],[11,"sub","nix::sched","Returns the set difference of the two sets of flags.",27,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"sub","nix::sys::epoll","Returns the set difference of the two sets of flags.",37,[[["self"],["epollflags"]],["epollflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",38,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"sub","nix::sys::eventfd","Returns the set difference of the two sets of flags.",40,[[["self"],["efdflags"]],["efdflags"]]],[11,"sub","nix::sys::memfd","Returns the set difference of the two sets of flags.",41,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",43,[[["self"],["protflags"]],["protflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",44,[[["self"],["mapflags"]],["mapflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",45,[[["self"],["msflags"]],["msflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",46,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"sub","nix::sys::ptrace","Returns the set difference of the two sets of flags.",49,[[["self"],["options"]],["options"]]],[11,"sub","nix::sys::quota","Returns the set difference of the two sets of flags.",52,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",61,[[["self"],["saflags"]],["saflags"]]],[11,"sub","nix::sys::signalfd","Returns the set difference of the two sets of flags.",65,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",91,[[["self"],["sockflag"]],["sockflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["self"],["msgflags"]],["msgflags"]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",100,[[["self"],["sflag"]],["sflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",101,[[["self"],["mode"]],["mode"]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",102,[[["self"],["fsflags"]],["fsflags"]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",111,[[["self"],["inputflags"]],["inputflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",112,[[["self"],["outputflags"]],["outputflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",113,[[["self"],["controlflags"]],["controlflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",114,[[["self"],["localflags"]],["localflags"]]],[11,"sub","nix::sys::time","",116,[[["self"],["timespec"]],["timespec"]]],[11,"sub","","",117,[[["self"],["timeval"]],["timeval"]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",122,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"mul","nix::sys::time","",116,[[["self"],["i32"]],["timespec"]]],[11,"mul","","",117,[[["self"],["i32"]],["timeval"]]],[11,"div","","",116,[[["self"],["i32"]],["timespec"]]],[11,"div","","",117,[[["self"],["i32"]],["timeval"]]],[11,"neg","","",116,[[["self"]],["timespec"]]],[11,"neg","","",117,[[["self"]],["timeval"]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",8,[[["self"],["atflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["self"],["oflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["self"],["sealflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[["self"],["fdflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["self"],["splicefflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["self"],["fallocateflags"]]]],[11,"sub_assign","nix::kmod","Disables all flags enabled in the set.",15,[[["self"],["moduleinitflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["self"],["deletemoduleflags"]]]],[11,"sub_assign","nix::mount","Disables all flags enabled in the set.",17,[[["self"],["msflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["self"],["mntflags"]]]],[11,"sub_assign","nix::mqueue","Disables all flags enabled in the set.",19,[[["self"],["mq_oflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["self"],["fdflag"]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",22,[[["self"],["interfaceflags"]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",24,[[["self"],["eventflags"]]]],[11,"sub_assign","nix::sched","Disables all flags enabled in the set.",27,[[["self"],["cloneflags"]]]],[11,"sub_assign","nix::sys::epoll","Disables all flags enabled in the set.",37,[[["self"],["epollflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",38,[[["self"],["epollcreateflags"]]]],[11,"sub_assign","nix::sys::eventfd","Disables all flags enabled in the set.",40,[[["self"],["efdflags"]]]],[11,"sub_assign","nix::sys::memfd","Disables all flags enabled in the set.",41,[[["self"],["memfdcreateflag"]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",43,[[["self"],["protflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",44,[[["self"],["mapflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",45,[[["self"],["msflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",46,[[["self"],["mlockallflags"]]]],[11,"sub_assign","nix::sys::ptrace","Disables all flags enabled in the set.",49,[[["self"],["options"]]]],[11,"sub_assign","nix::sys::quota","Disables all flags enabled in the set.",52,[[["self"],["quotavalidflags"]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",61,[[["self"],["saflags"]]]],[11,"sub_assign","nix::sys::signalfd","Disables all flags enabled in the set.",65,[[["self"],["sfdflags"]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",91,[[["self"],["sockflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["self"],["msgflags"]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",100,[[["self"],["sflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",101,[[["self"],["mode"]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",102,[[["self"],["fsflags"]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",111,[[["self"],["inputflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",112,[[["self"],["outputflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",113,[[["self"],["controlflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",114,[[["self"],["localflags"]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",122,[[["self"],["waitpidflag"]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",8,[[["self"]],["atflags"]]],[11,"not","","Returns the complement of this set of flags.",9,[[["self"]],["oflag"]]],[11,"not","","Returns the complement of this set of flags.",10,[[["self"]],["sealflag"]]],[11,"not","","Returns the complement of this set of flags.",11,[[["self"]],["fdflag"]]],[11,"not","","Returns the complement of this set of flags.",12,[[["self"]],["splicefflags"]]],[11,"not","","Returns the complement of this set of flags.",13,[[["self"]],["fallocateflags"]]],[11,"not","nix::kmod","Returns the complement of this set of flags.",15,[[["self"]],["moduleinitflags"]]],[11,"not","","Returns the complement of this set of flags.",16,[[["self"]],["deletemoduleflags"]]],[11,"not","nix::mount","Returns the complement of this set of flags.",17,[[["self"]],["msflags"]]],[11,"not","","Returns the complement of this set of flags.",18,[[["self"]],["mntflags"]]],[11,"not","nix::mqueue","Returns the complement of this set of flags.",19,[[["self"]],["mq_oflag"]]],[11,"not","","Returns the complement of this set of flags.",20,[[["self"]],["fdflag"]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",22,[[["self"]],["interfaceflags"]]],[11,"not","nix::poll","Returns the complement of this set of flags.",24,[[["self"]],["eventflags"]]],[11,"not","nix::sched","Returns the complement of this set of flags.",27,[[["self"]],["cloneflags"]]],[11,"not","nix::sys::epoll","Returns the complement of this set of flags.",37,[[["self"]],["epollflags"]]],[11,"not","","Returns the complement of this set of flags.",38,[[["self"]],["epollcreateflags"]]],[11,"not","nix::sys::eventfd","Returns the complement of this set of flags.",40,[[["self"]],["efdflags"]]],[11,"not","nix::sys::memfd","Returns the complement of this set of flags.",41,[[["self"]],["memfdcreateflag"]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",43,[[["self"]],["protflags"]]],[11,"not","","Returns the complement of this set of flags.",44,[[["self"]],["mapflags"]]],[11,"not","","Returns the complement of this set of flags.",45,[[["self"]],["msflags"]]],[11,"not","","Returns the complement of this set of flags.",46,[[["self"]],["mlockallflags"]]],[11,"not","nix::sys::ptrace","Returns the complement of this set of flags.",49,[[["self"]],["options"]]],[11,"not","nix::sys::quota","Returns the complement of this set of flags.",52,[[["self"]],["quotavalidflags"]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",61,[[["self"]],["saflags"]]],[11,"not","nix::sys::signalfd","Returns the complement of this set of flags.",65,[[["self"]],["sfdflags"]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",91,[[["self"]],["sockflag"]]],[11,"not","","Returns the complement of this set of flags.",92,[[["self"]],["msgflags"]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",100,[[["self"]],["sflag"]]],[11,"not","","Returns the complement of this set of flags.",101,[[["self"]],["mode"]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",102,[[["self"]],["fsflags"]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",111,[[["self"]],["inputflags"]]],[11,"not","","Returns the complement of this set of flags.",112,[[["self"]],["outputflags"]]],[11,"not","","Returns the complement of this set of flags.",113,[[["self"]],["controlflags"]]],[11,"not","","Returns the complement of this set of flags.",114,[[["self"]],["localflags"]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",122,[[["self"]],["waitpidflag"]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",8,[[["self"],["atflags"]],["atflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["self"],["oflag"]],["oflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitand","nix::kmod","Returns the intersection between the two sets of flags.",15,[[["self"],["moduleinitflags"]],["moduleinitflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["self"],["deletemoduleflags"]],["deletemoduleflags"]]],[11,"bitand","nix::mount","Returns the intersection between the two sets of flags.",17,[[["self"],["msflags"]],["msflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitand","nix::mqueue","Returns the intersection between the two sets of flags.",19,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",22,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",24,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitand","nix::sched","Returns the intersection between the two sets of flags.",27,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitand","nix::sys::epoll","Returns the intersection between the two sets of flags.",37,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",38,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitand","nix::sys::eventfd","Returns the intersection between the two sets of flags.",40,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitand","nix::sys::memfd","Returns the intersection between the two sets of flags.",41,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",43,[[["self"],["protflags"]],["protflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",44,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",45,[[["self"],["msflags"]],["msflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",46,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitand","nix::sys::ptrace","Returns the intersection between the two sets of flags.",49,[[["self"],["options"]],["options"]]],[11,"bitand","nix::sys::quota","Returns the intersection between the two sets of flags.",52,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",61,[[["self"],["saflags"]],["saflags"]]],[11,"bitand","nix::sys::signalfd","Returns the intersection between the two sets of flags.",65,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",91,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",100,[[["self"],["sflag"]],["sflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",101,[[["self"],["mode"]],["mode"]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",102,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",111,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",112,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",113,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",114,[[["self"],["localflags"]],["localflags"]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",122,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",8,[[["self"],["atflags"]],["atflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["self"],["oflag"]],["oflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitor","nix::kmod","Returns the union of the two sets of flags.",15,[[["self"],["moduleinitflags"]],["moduleinitflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["self"],["deletemoduleflags"]],["deletemoduleflags"]]],[11,"bitor","nix::mount","Returns the union of the two sets of flags.",17,[[["self"],["msflags"]],["msflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitor","nix::mqueue","Returns the union of the two sets of flags.",19,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",22,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",24,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitor","nix::sched","Returns the union of the two sets of flags.",27,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitor","nix::sys::epoll","Returns the union of the two sets of flags.",37,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",38,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitor","nix::sys::eventfd","Returns the union of the two sets of flags.",40,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitor","nix::sys::memfd","Returns the union of the two sets of flags.",41,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",43,[[["self"],["protflags"]],["protflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",44,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",45,[[["self"],["msflags"]],["msflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",46,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitor","nix::sys::ptrace","Returns the union of the two sets of flags.",49,[[["self"],["options"]],["options"]]],[11,"bitor","nix::sys::quota","Returns the union of the two sets of flags.",52,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",61,[[["self"],["saflags"]],["saflags"]]],[11,"bitor","nix::sys::signalfd","Returns the union of the two sets of flags.",65,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",91,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",100,[[["self"],["sflag"]],["sflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",101,[[["self"],["mode"]],["mode"]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",102,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",111,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",112,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",113,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",114,[[["self"],["localflags"]],["localflags"]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",122,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags…",8,[[["self"],["atflags"]],["atflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["self"],["oflag"]],["oflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",11,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",12,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitxor","nix::kmod","Returns the left flags, but with all the right flags…",15,[[["self"],["moduleinitflags"]],["moduleinitflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",16,[[["self"],["deletemoduleflags"]],["deletemoduleflags"]]],[11,"bitxor","nix::mount","Returns the left flags, but with all the right flags…",17,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",18,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitxor","nix::mqueue","Returns the left flags, but with all the right flags…",19,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",20,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags…",22,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags…",24,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitxor","nix::sched","Returns the left flags, but with all the right flags…",27,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitxor","nix::sys::epoll","Returns the left flags, but with all the right flags…",37,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",38,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitxor","nix::sys::eventfd","Returns the left flags, but with all the right flags…",40,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitxor","nix::sys::memfd","Returns the left flags, but with all the right flags…",41,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags…",43,[[["self"],["protflags"]],["protflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",44,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",45,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",46,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitxor","nix::sys::ptrace","Returns the left flags, but with all the right flags…",49,[[["self"],["options"]],["options"]]],[11,"bitxor","nix::sys::quota","Returns the left flags, but with all the right flags…",52,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags…",61,[[["self"],["saflags"]],["saflags"]]],[11,"bitxor","nix::sys::signalfd","Returns the left flags, but with all the right flags…",65,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags…",91,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",92,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags…",100,[[["self"],["sflag"]],["sflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",101,[[["self"],["mode"]],["mode"]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags…",102,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags…",111,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",112,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",113,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",114,[[["self"],["localflags"]],["localflags"]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags…",122,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",8,[[["self"],["atflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["self"],["oflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["self"],["sealflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[["self"],["fdflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["self"],["splicefflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["self"],["fallocateflags"]]]],[11,"bitand_assign","nix::kmod","Disables all flags disabled in the set.",15,[[["self"],["moduleinitflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["self"],["deletemoduleflags"]]]],[11,"bitand_assign","nix::mount","Disables all flags disabled in the set.",17,[[["self"],["msflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["self"],["mntflags"]]]],[11,"bitand_assign","nix::mqueue","Disables all flags disabled in the set.",19,[[["self"],["mq_oflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["self"],["fdflag"]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",22,[[["self"],["interfaceflags"]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",24,[[["self"],["eventflags"]]]],[11,"bitand_assign","nix::sched","Disables all flags disabled in the set.",27,[[["self"],["cloneflags"]]]],[11,"bitand_assign","nix::sys::epoll","Disables all flags disabled in the set.",37,[[["self"],["epollflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",38,[[["self"],["epollcreateflags"]]]],[11,"bitand_assign","nix::sys::eventfd","Disables all flags disabled in the set.",40,[[["self"],["efdflags"]]]],[11,"bitand_assign","nix::sys::memfd","Disables all flags disabled in the set.",41,[[["self"],["memfdcreateflag"]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",43,[[["self"],["protflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",44,[[["self"],["mapflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",45,[[["self"],["msflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",46,[[["self"],["mlockallflags"]]]],[11,"bitand_assign","nix::sys::ptrace","Disables all flags disabled in the set.",49,[[["self"],["options"]]]],[11,"bitand_assign","nix::sys::quota","Disables all flags disabled in the set.",52,[[["self"],["quotavalidflags"]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",61,[[["self"],["saflags"]]]],[11,"bitand_assign","nix::sys::signalfd","Disables all flags disabled in the set.",65,[[["self"],["sfdflags"]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",91,[[["self"],["sockflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["self"],["msgflags"]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",100,[[["self"],["sflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",101,[[["self"],["mode"]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",102,[[["self"],["fsflags"]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",111,[[["self"],["inputflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",112,[[["self"],["outputflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",113,[[["self"],["controlflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",114,[[["self"],["localflags"]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",122,[[["self"],["waitpidflag"]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",8,[[["self"],["atflags"]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["self"],["oflag"]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["self"],["sealflag"]]]],[11,"bitor_assign","","Adds the set of flags.",11,[[["self"],["fdflag"]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["self"],["splicefflags"]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["self"],["fallocateflags"]]]],[11,"bitor_assign","nix::kmod","Adds the set of flags.",15,[[["self"],["moduleinitflags"]]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["self"],["deletemoduleflags"]]]],[11,"bitor_assign","nix::mount","Adds the set of flags.",17,[[["self"],["msflags"]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["self"],["mntflags"]]]],[11,"bitor_assign","nix::mqueue","Adds the set of flags.",19,[[["self"],["mq_oflag"]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["self"],["fdflag"]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",22,[[["self"],["interfaceflags"]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",24,[[["self"],["eventflags"]]]],[11,"bitor_assign","nix::sched","Adds the set of flags.",27,[[["self"],["cloneflags"]]]],[11,"bitor_assign","nix::sys::epoll","Adds the set of flags.",37,[[["self"],["epollflags"]]]],[11,"bitor_assign","","Adds the set of flags.",38,[[["self"],["epollcreateflags"]]]],[11,"bitor_assign","nix::sys::eventfd","Adds the set of flags.",40,[[["self"],["efdflags"]]]],[11,"bitor_assign","nix::sys::memfd","Adds the set of flags.",41,[[["self"],["memfdcreateflag"]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",43,[[["self"],["protflags"]]]],[11,"bitor_assign","","Adds the set of flags.",44,[[["self"],["mapflags"]]]],[11,"bitor_assign","","Adds the set of flags.",45,[[["self"],["msflags"]]]],[11,"bitor_assign","","Adds the set of flags.",46,[[["self"],["mlockallflags"]]]],[11,"bitor_assign","nix::sys::ptrace","Adds the set of flags.",49,[[["self"],["options"]]]],[11,"bitor_assign","nix::sys::quota","Adds the set of flags.",52,[[["self"],["quotavalidflags"]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",61,[[["self"],["saflags"]]]],[11,"bitor_assign","nix::sys::signalfd","Adds the set of flags.",65,[[["self"],["sfdflags"]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",91,[[["self"],["sockflag"]]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["self"],["msgflags"]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",100,[[["self"],["sflag"]]]],[11,"bitor_assign","","Adds the set of flags.",101,[[["self"],["mode"]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",102,[[["self"],["fsflags"]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",111,[[["self"],["inputflags"]]]],[11,"bitor_assign","","Adds the set of flags.",112,[[["self"],["outputflags"]]]],[11,"bitor_assign","","Adds the set of flags.",113,[[["self"],["controlflags"]]]],[11,"bitor_assign","","Adds the set of flags.",114,[[["self"],["localflags"]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",122,[[["self"],["waitpidflag"]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",8,[[["self"],["atflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["self"],["oflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["self"],["sealflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[["self"],["fdflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["self"],["splicefflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["self"],["fallocateflags"]]]],[11,"bitxor_assign","nix::kmod","Toggles the set of flags.",15,[[["self"],["moduleinitflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["self"],["deletemoduleflags"]]]],[11,"bitxor_assign","nix::mount","Toggles the set of flags.",17,[[["self"],["msflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["self"],["mntflags"]]]],[11,"bitxor_assign","nix::mqueue","Toggles the set of flags.",19,[[["self"],["mq_oflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["self"],["fdflag"]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",22,[[["self"],["interfaceflags"]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",24,[[["self"],["eventflags"]]]],[11,"bitxor_assign","nix::sched","Toggles the set of flags.",27,[[["self"],["cloneflags"]]]],[11,"bitxor_assign","nix::sys::epoll","Toggles the set of flags.",37,[[["self"],["epollflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",38,[[["self"],["epollcreateflags"]]]],[11,"bitxor_assign","nix::sys::eventfd","Toggles the set of flags.",40,[[["self"],["efdflags"]]]],[11,"bitxor_assign","nix::sys::memfd","Toggles the set of flags.",41,[[["self"],["memfdcreateflag"]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",43,[[["self"],["protflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",44,[[["self"],["mapflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",45,[[["self"],["msflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",46,[[["self"],["mlockallflags"]]]],[11,"bitxor_assign","nix::sys::ptrace","Toggles the set of flags.",49,[[["self"],["options"]]]],[11,"bitxor_assign","nix::sys::quota","Toggles the set of flags.",52,[[["self"],["quotavalidflags"]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",61,[[["self"],["saflags"]]]],[11,"bitxor_assign","nix::sys::signalfd","Toggles the set of flags.",65,[[["self"],["sfdflags"]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",91,[[["self"],["sockflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["self"],["msgflags"]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",100,[[["self"],["sflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",101,[[["self"],["mode"]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",102,[[["self"],["fsflags"]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",111,[[["self"],["inputflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",112,[[["self"],["outputflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",113,[[["self"],["controlflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",114,[[["self"],["localflags"]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",122,[[["self"],["waitpidflag"]]]],[11,"from_iter","nix::fcntl","",8,[[["t"]],["atflags"]]],[11,"from_iter","","",9,[[["t"]],["oflag"]]],[11,"from_iter","","",10,[[["t"]],["sealflag"]]],[11,"from_iter","","",11,[[["t"]],["fdflag"]]],[11,"from_iter","","",12,[[["t"]],["splicefflags"]]],[11,"from_iter","","",13,[[["t"]],["fallocateflags"]]],[11,"from_iter","nix::kmod","",15,[[["t"]],["moduleinitflags"]]],[11,"from_iter","","",16,[[["t"]],["deletemoduleflags"]]],[11,"from_iter","nix::mount","",17,[[["t"]],["msflags"]]],[11,"from_iter","","",18,[[["t"]],["mntflags"]]],[11,"from_iter","nix::mqueue","",19,[[["t"]],["mq_oflag"]]],[11,"from_iter","","",20,[[["t"]],["fdflag"]]],[11,"from_iter","nix::net::if_","",22,[[["t"]],["interfaceflags"]]],[11,"from_iter","nix::poll","",24,[[["t"]],["eventflags"]]],[11,"from_iter","nix::sched","",27,[[["t"]],["cloneflags"]]],[11,"from_iter","nix::sys::epoll","",37,[[["t"]],["epollflags"]]],[11,"from_iter","","",38,[[["t"]],["epollcreateflags"]]],[11,"from_iter","nix::sys::eventfd","",40,[[["t"]],["efdflags"]]],[11,"from_iter","nix::sys::memfd","",41,[[["t"]],["memfdcreateflag"]]],[11,"from_iter","nix::sys::mman","",43,[[["t"]],["protflags"]]],[11,"from_iter","","",44,[[["t"]],["mapflags"]]],[11,"from_iter","","",45,[[["t"]],["msflags"]]],[11,"from_iter","","",46,[[["t"]],["mlockallflags"]]],[11,"from_iter","nix::sys::ptrace","",49,[[["t"]],["options"]]],[11,"from_iter","nix::sys::quota","",52,[[["t"]],["quotavalidflags"]]],[11,"from_iter","nix::sys::signal","",61,[[["t"]],["saflags"]]],[11,"from_iter","nix::sys::signalfd","",65,[[["t"]],["sfdflags"]]],[11,"from_iter","nix::sys::socket","",91,[[["t"]],["sockflag"]]],[11,"from_iter","","",92,[[["t"]],["msgflags"]]],[11,"from_iter","nix::sys::stat","",100,[[["t"]],["sflag"]]],[11,"from_iter","","",101,[[["t"]],["mode"]]],[11,"from_iter","nix::sys::statvfs","",102,[[["t"]],["fsflags"]]],[11,"from_iter","nix::sys::termios","",111,[[["t"]],["inputflags"]]],[11,"from_iter","","",112,[[["t"]],["outputflags"]]],[11,"from_iter","","",113,[[["t"]],["controlflags"]]],[11,"from_iter","","",114,[[["t"]],["localflags"]]],[11,"from_iter","nix::sys::wait","",122,[[["t"]],["waitpidflag"]]],[11,"from_str","nix::sys::signal","",56,[[["str"]],["result",["signal"]]]],[11,"as_raw_fd","nix::dir","",2,[[["self"]],["rawfd"]]],[11,"as_raw_fd","nix::pty","",135,[[["self"]],["rawfd"]]],[11,"as_raw_fd","nix::sys::signalfd","",66,[[["self"]],["rawfd"]]],[11,"into_raw_fd","nix::pty","",135,[[["self"]],["rawfd"]]],[11,"description","nix::errno","",4,[[["self"]],["str"]]],[11,"description","nix","",0,[[["self"]],["str"]]]],"paths":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"EventFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"CloneFlags"],[3,"CpuSet"],[3,"LioCb"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[4,"Event"],[3,"Options"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"RecvMsg"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"SockProtocol"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"CmsgSpace"],[3,"FileStat"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"UContext"],[4,"ForkResult"],[4,"FchownatFlags"],[4,"Whence"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[8,"NixPath"],[3,"Iter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"SignalIterator"],[3,"CmsgIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[6,"SessionId"]]};
searchIndex["nom"]={"doc":"nom, eating data byte by byte","items":[[3,"ProducerRepeat","nom","ProducerRepeat takes a single value, and generates it at…",N,N],[3,"MemProducer","","A MemProducer generates values from an in memory byte buffer",N,N],[3,"FileProducer","","",N,N],[3,"MapConsumer","","MapConsumer takes a function S -> T and applies it on a…",N,N],[3,"ChainConsumer","","ChainConsumer takes a consumer C1 R -> S, and a consumer…",N,N],[4,"ErrorKind","","indicates which parser returned an error",N,N],[13,"Custom","","",0,N],[13,"Tag","","",0,N],[13,"MapRes","","",0,N],[13,"MapOpt","","",0,N],[13,"Alt","","",0,N],[13,"IsNot","","",0,N],[13,"IsA","","",0,N],[13,"SeparatedList","","",0,N],[13,"SeparatedNonEmptyList","","",0,N],[13,"Many0","","",0,N],[13,"Many1","","",0,N],[13,"ManyTill","","",0,N],[13,"Count","","",0,N],[13,"TakeUntilAndConsume","","",0,N],[13,"TakeUntil","","",0,N],[13,"TakeUntilEitherAndConsume","","",0,N],[13,"TakeUntilEither","","",0,N],[13,"LengthValue","","",0,N],[13,"TagClosure","","",0,N],[13,"Alpha","","",0,N],[13,"Digit","","",0,N],[13,"HexDigit","","",0,N],[13,"OctDigit","","",0,N],[13,"AlphaNumeric","","",0,N],[13,"Space","","",0,N],[13,"MultiSpace","","",0,N],[13,"LengthValueFn","","",0,N],[13,"Eof","","",0,N],[13,"ExprOpt","","",0,N],[13,"ExprRes","","",0,N],[13,"CondReduce","","",0,N],[13,"Switch","","",0,N],[13,"TagBits","","",0,N],[13,"OneOf","","",0,N],[13,"NoneOf","","",0,N],[13,"Char","","",0,N],[13,"CrLf","","",0,N],[13,"RegexpMatch","","",0,N],[13,"RegexpMatches","","",0,N],[13,"RegexpFind","","",0,N],[13,"RegexpCapture","","",0,N],[13,"RegexpCaptures","","",0,N],[13,"TakeWhile1","","",0,N],[13,"Complete","","",0,N],[13,"Fix","","",0,N],[13,"Escaped","","",0,N],[13,"EscapedTransform","","",0,N],[13,"TagStr","","",0,N],[13,"IsNotStr","","",0,N],[13,"IsAStr","","",0,N],[13,"TakeWhile1Str","","",0,N],[13,"NonEmpty","","",0,N],[13,"ManyMN","","",0,N],[13,"TakeUntilAndConsumeStr","","",0,N],[13,"TakeUntilStr","","",0,N],[13,"Not","","",0,N],[13,"Permutation","","",0,N],[13,"Verify","","",0,N],[13,"TakeTill1","","",0,N],[4,"CompareResult","","indicates wether a comparison was successful, an error, or…",N,N],[13,"Ok","","",1,N],[13,"Incomplete","","",1,N],[13,"Error","","",1,N],[4,"Needed","","Contains information on needed data if a parser returned…",N,N],[13,"Unknown","","needs more data, but we do not know how much",2,N],[13,"Size","","contains the required data size",2,N],[4,"IResult","","Holds the result of parsing functions",N,N],[13,"Done","","indicates a correct parsing, the first field containing…",3,N],[13,"Error","","contains a Err, an enum that can indicate an error code, a…",3,N],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a…",3,N],[4,"IError","","This is the same as IResult, but without Done",N,N],[13,"Error","","",4,N],[13,"Incomplete","","",4,N],[4,"Endianness","","Configurable endianness",N,N],[13,"Big","","",5,N],[13,"Little","","",5,N],[4,"Input","","",N,N],[13,"Element","","",6,N],[13,"Empty","","",6,N],[13,"Eof","","",6,N],[4,"ConsumerState","","Stores a consumer's current computation state",N,N],[13,"Done","","A value of type O has been produced",7,N],[13,"Error","","An error of type E has been encountered",7,N],[13,"Continue","","Continue applying, and pass a message of type M to the…",7,N],[4,"Move","","",N,N],[13,"Consume","","indcates how much data was consumed",8,N],[13,"Seek","","indicates where in the input the consumer must seek",8,N],[13,"Await","","indicates more data is needed",8,N],[4,"FileProducerState","","",N,N],[13,"Normal","","",9,N],[13,"Error","","",9,N],[13,"Eof","","",9,N],[5,"slice_to_offsets","","",N,N],[5,"code_from_offset","","",N,N],[5,"reset_color","","",N,[[["vec"]]]],[5,"write_color","","",N,[[["vec"],["u8"]]]],[5,"print_codes","","",N,[[["hashmap",["u32","u8"]],["hashmap",["u32","str"]]],["string"]]],[5,"error_to_u32","","",N,[[["errorkind"]],["u32"]]],[5,"tag_cl","","",N,N],[5,"print","","",N,[[["t"]],["iresult"]]],[5,"begin","","",N,N],[5,"crlf","","",N,[[["t"]],["iresult"]]],[5,"not_line_ending","","",N,[[["t"]],["iresult"]]],[5,"line_ending","","Recognizes an end of line (both '\\n' and '\\r\\n')",N,[[["t"]],["iresult"]]],[5,"eol","","",N,[[["t"]],["iresult"]]],[5,"is_alphabetic","","Tests if byte is ASCII alphabetic: A-Z, a-z",N,[[["u8"]],["bool"]]],[5,"is_digit","","Tests if byte is ASCII digit: 0-9",N,[[["u8"]],["bool"]]],[5,"is_hex_digit","","Tests if byte is ASCII hex digit: 0-9, A-F, a-f",N,[[["u8"]],["bool"]]],[5,"is_oct_digit","","Tests if byte is ASCII octal digit: 0-7",N,[[["u8"]],["bool"]]],[5,"is_alphanumeric","","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9",N,[[["u8"]],["bool"]]],[5,"is_space","","Tests if byte is ASCII space or tab",N,[[["u8"]],["bool"]]],[5,"alpha","","Recognizes one or more lowercase and uppercase alphabetic…",N,[[["t"]],["iresult"]]],[5,"digit","","Recognizes one or more numerical characters: 0-9",N,[[["t"]],["iresult"]]],[5,"hex_digit","","Recognizes one or more hexadecimal numerical characters:…",N,[[["t"]],["iresult"]]],[5,"oct_digit","","Recognizes one or more octal characters: 0-7",N,[[["t"]],["iresult"]]],[5,"alphanumeric","","Recognizes one or more numerical and alphabetic…",N,[[["t"]],["iresult"]]],[5,"space","","Recognizes one or more spaces and tabs",N,[[["t"]],["iresult"]]],[5,"multispace","","Recognizes one or more spaces, tabs, carriage returns and…",N,[[["t"]],["iresult"]]],[5,"sized_buffer","","",N,N],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to…",N,N],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",N,N],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",N,N],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",N,N],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",N,N],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",N,N],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",N,N],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",N,N],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to…",N,N],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",N,N],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",N,N],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",N,N],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",N,N],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",N,N],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",N,N],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",N,N],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",N,N],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",N,N],[5,"le_f32","","Recognizes little endian 4 bytes floating point number",N,N],[5,"le_f64","","Recognizes little endian 8 bytes floating point number",N,N],[5,"hex_u32","","Recognizes a hex-encoded integer",N,N],[5,"non_empty","","Recognizes non empty buffers",N,[[["t"]],["iresult"]]],[5,"rest","","Return the remaining input.",N,N],[5,"rest_s","","Return the remaining input, for strings.",N,[[["str"]],["iresult",["str","str"]]]],[5,"float","","Recognizes floating point number in a byte string and…",N,N],[5,"float_s","","Recognizes floating point number in a string and returs a…",N,[[["str"]],["iresult",["str","f32"]]]],[5,"double","","Recognizes floating point number in a byte string and…",N,N],[5,"double_s","","Recognizes floating point number in a string and returs a…",N,[[["str"]],["iresult",["str","f64"]]]],[5,"newline","","Matches a newline character '\\n'",N,N],[5,"tab","","Matches a tab character '\\t'",N,N],[5,"anychar","","",N,N],[5,"shift","","",N,N],[11,"description","","",0,[[["self"]],["str"]]],[0,"simple_errors","","Error management",N,N],[6,"Err","nom::simple_errors","",N,N],[11,"map_err","nom","Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling…",3,[[["self"],["f"]],["iresult"]]],[11,"unwrap_err","","Unwrap the contained `Error(E)` value, or panic if the…",3,[[["self"]],["err"]]],[11,"to_full_result","","Convert the IResult to a std::result::Result",3,[[["self"]],["result",["ierror"]]]],[11,"to_result","","Convert the IResult to a std::result::Result, or panic if…",3,[[["self"]],["result",["err"]]]],[11,"is_known","","",2,[[["self"]],["bool"]]],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a…",2,[[["self"],["f"]],["needed"]]],[11,"is_done","","",3,[[["self"]],["bool"]]],[11,"is_err","","",3,[[["self"]],["bool"]]],[11,"is_incomplete","","",3,[[["self"]],["bool"]]],[11,"or","","",3,[[["self"],["iresult"]],["iresult"]]],[11,"map","","Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling…",3,[[["self"],["f"]],["iresult"]]],[11,"map_inc","","Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling…",3,[[["self"],["f"]],["iresult"]]],[11,"unwrap","","Unwrap the contained `Done(I, O)` value, or panic if the…",3,N],[11,"unwrap_inc","","Unwrap the contained `Incomplete(n)` value, or panic if…",3,[[["self"]],["needed"]]],[0,"methods","","Method macro combinators",N,N],[0,"bits","","Bit level parsers and combinators",N,N],[0,"whitespace","","Support for whitespace delimited formats",N,N],[5,"sp","nom::whitespace","",N,[[["t"]],["iresult"]]],[11,"map","nom","",7,[[["self"],["f"]],["consumerstate"]]],[11,"flat_map","","",7,[[["self"],["f"]],["consumerstate"]]],[11,"new","","",10,N],[11,"new","","",11,[[["str"],["usize"]],["result",["fileproducer"]]]],[11,"state","","",11,[[["self"]],["fileproducerstate"]]],[11,"refill","","",11,[[["self"]],["option",["usize"]]]],[11,"resize","","Resize the internal buffer, copy the data to the new one…",11,[[["self"],["usize"]],["usize"]]],[11,"new","","",12,[[["c"],["f"]],["mapconsumer"]]],[11,"new","","",13,[[["c1"],["c2"]],["chainconsumer"]]],[8,"Offset","","useful functions to calculate the offset between slices…",N,N],[10,"offset","","offset between the first byte of self and the first byte…",14,[[["self"],["self"]],["usize"]]],[8,"HexDisplay","","",N,N],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the…",15,[[["self"],["usize"]],["string"]]],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at…",15,[[["self"],["usize"],["usize"]],["string"]]],[8,"AsBytes","","",N,N],[10,"as_bytes","","",16,N],[8,"InputLength","","abstract method to calculate the input length",N,N],[10,"input_len","","calculates the input length, as indicated by its name, and…",17,[[["self"]],["usize"]]],[8,"AsChar","","transforms common types to a char for basic token parsing",N,N],[10,"as_char","","makes a char from self",18,[[["self"]],["char"]]],[10,"is_alpha","","tests that self is an alphabetic character",18,[[["self"]],["bool"]]],[10,"is_alphanum","","tests that self is an alphabetic character or a decimal…",18,[[["self"]],["bool"]]],[10,"is_dec_digit","","tests that self is a decimal digit",18,[[["self"]],["bool"]]],[10,"is_hex_digit","","tests that self is an hex digit",18,[[["self"]],["bool"]]],[10,"is_oct_digit","","tests that self is an octal digit",18,[[["self"]],["bool"]]],[8,"InputIter","","abstracts common iteration operations on the input type",N,N],[16,"Item","","",19,N],[16,"RawItem","","",19,N],[16,"Iter","","",19,N],[16,"IterElem","","",19,N],[10,"iter_indices","","returns an iterator over the elements and their byte offsets",19,N],[10,"iter_elements","","returns an iterator over the elements",19,N],[10,"position","","finds the byte position of the element",19,[[["self"],["p"]],["option",["usize"]]]],[10,"slice_index","","get the byte offset from the element's position in the…",19,[[["self"],["usize"]],["option",["usize"]]]],[8,"InputTake","","abstracts slicing operations",N,N],[10,"take","","returns a slice of `count` bytes",20,[[["self"],["usize"]],["option"]]],[10,"take_split","","split the stream at the `count` byte offset",20,[[["self"],["usize"]],["option"]]],[8,"Compare","","abstracts comparison operations",N,N],[10,"compare","","compares self to another value for equality",21,[[["self"],["t"]],["compareresult"]]],[10,"compare_no_case","","compares self to another value for equality independently…",21,[[["self"],["t"]],["compareresult"]]],[8,"FindToken","","look for self in the given input stream",N,N],[10,"find_token","","",22,[[["self"],["t"]],["bool"]]],[8,"FindSubstring","","look for a substring in self",N,N],[10,"find_substring","","",23,[[["self"],["t"]],["option",["usize"]]]],[8,"ParseTo","","abstract method to calculate the input length",N,N],[10,"parse_to","","",24,[[["self"]],["option"]]],[8,"Slice","","slicing operations using ranges",N,N],[10,"slice","","",25,[[["self"],["r"]],["self"]]],[8,"GetInput","","",N,N],[10,"remaining_input","","",26,[[["self"]],["option"]]],[8,"GetOutput","","",N,N],[10,"output","","",27,[[["self"]],["option"]]],[8,"Consumer","","The Consumer trait wraps a computation and its state",N,N],[10,"handle","","implement handle for the current computation, returning…",28,[[["self"],["input"]],["consumerstate"]]],[10,"state","","returns the current state",28,[[["self"]],["consumerstate"]]],[8,"Producer","","The producer wraps a data source, like file or network,…",N,N],[10,"apply","","Applies a consumer once on the produced data, and return…",29,[[["self"],["consumer"]],["consumerstate"]]],[11,"run","","Applies a consumer once on the produced data, and returns…",29,[[["self"],["consumer"]],["option"]]],[14,"dbg","","Prints a message if the parser fails",N,N],[14,"dbg_dmp","","Prints a message and the input if the parser fails",N,N],[14,"fix_error","","translate parser result from IResult<I,O,u32> to…",N,N],[14,"flat_map","","`flat_map!(R -> IResult<R,S>, S -> IResult<S,T>) => R ->…",N,N],[14,"error_code","","creates a parse error from a `nom::ErrorKind`",N,N],[14,"error_node","","creates a parse error from a `nom::ErrorKind` and the next…",N,N],[14,"error_position","","creates a parse error from a `nom::ErrorKind` and the…",N,N],[14,"error_node_position","","creates a parse error from a `nom::ErrorKind`, the…",N,N],[14,"closure","","Wraps a parser in a closure",N,N],[14,"named","","Makes a function from a parser combination",N,N],[14,"named_args","","Makes a function from a parser combination with arguments.",N,N],[14,"named_attr","","Makes a function from a parser combination, with attributes",N,N],[14,"call","","Used to wrap common expressions and function as macros",N,N],[14,"apply","","emulate function currying: `apply!(my_function, arg1,…",N,N],[14,"return_error","","Prevents backtracking if the child parser fails",N,N],[14,"add_return_error","","Add an error if the child parser fails",N,N],[14,"complete","","replaces a `Incomplete` returned by the child parser with…",N,N],[14,"try_parse","","A bit like `std::try!`, this macro will return the…",N,N],[14,"map","","`map!(I -> IResult<I,O>, O -> P) => I -> IResult<I, P>`…",N,N],[14,"map_res","","`map_res!(I -> IResult<I,O>, O -> Result<P>) => I ->…",N,N],[14,"map_opt","","`map_opt!(I -> IResult<I,O>, O -> Option<P>) => I ->…",N,N],[14,"parse_to","","`parse_to!(O) => I -> IResult<I, O>` uses the `parse`…",N,N],[14,"verify","","`verify!(I -> IResult<I,O>, O -> bool) => I -> IResult<I,…",N,N],[14,"value","","`value!(T, R -> IResult<R, S> ) => R -> IResult<R, T>`",N,N],[14,"expr_res","","`expr_res!(Result<E,O>) => I -> IResult<I, O>` evaluate an…",N,N],[14,"expr_opt","","`expr_opt!(Option<O>) => I -> IResult<I, O>` evaluate an…",N,N],[14,"opt","","`opt!(I -> IResult<I,O>) => I -> IResult<I, Option<O>>`…",N,N],[14,"opt_res","","`opt_res!(I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"cond_with_error","","`cond_with_error!(bool, I -> IResult<I,O>) => I ->…",N,N],[14,"cond","","`cond!(bool, I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"cond_reduce","","`cond_reduce!(bool, I -> IResult<I,O>) => I -> IResult<I,…",N,N],[14,"peek","","`peek!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a…",N,N],[14,"not","","`not!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a…",N,N],[14,"tap","","`tap!(name: I -> IResult<I,O> => { block }) => I ->…",N,N],[14,"eof","","`eof!(i)` returns `i` if it is at the end of input data",N,N],[14,"recognize","","`recognize!(&[T] -> IResult<&[T], O> ) => &[T] ->…",N,N],[14,"alt","","`alt!(I -> IResult<I,O> | I -> IResult<I,O> | ... | I ->…",N,N],[14,"alt_complete","","This is a combination of the `alt!` and `complete!`…",N,N],[14,"switch","","`switch!(I -> IResult<I,P>, P => I -> IResult<I,O> | ... |…",N,N],[14,"permutation","","`permutation!(I -> IResult<I,A>, I -> IResult<I,B>, ... I…",N,N],[14,"chain","","`chain!(I->IResult<I,A> ~ I->IResult<I,B> ~ ...…",N,N],[14,"tuple","","`tuple!(I->IResult<I,A>, I->IResult<I,B>, ...…",N,N],[14,"pair","","`pair!(I -> IResult<I,O>, I -> IResult<I,P>) => I ->…",N,N],[14,"separated_pair","","`separated_pair!(I -> IResult<I,O>, I -> IResult<I, T>, I…",N,N],[14,"preceded","","`preceded!(I -> IResult<I,T>, I -> IResult<I,O>) => I ->…",N,N],[14,"terminated","","`terminated!(I -> IResult<I,O>, I -> IResult<I,T>) => I ->…",N,N],[14,"delimited","","`delimited!(I -> IResult<I,T>, I -> IResult<I,O>, I ->…",N,N],[14,"do_parse","","`do_parse!(I->IResult<I,A> >> I->IResult<I,B> >> ...…",N,N],[14,"separated_list","","`separated_list!(I -> IResult<I,T>, I -> IResult<I,O>) =>…",N,N],[14,"separated_nonempty_list","","`separated_nonempty_list!(I -> IResult<I,T>, I ->…",N,N],[14,"many0","","`many0!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>`…",N,N],[14,"many1","","`many1!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>`…",N,N],[14,"many_till","","`many_till!(I -> IResult<I,O>, I -> IResult<I,P>) => I ->…",N,N],[14,"many_m_n","","`many_m_n!(usize, usize, I -> IResult<I,O>) => I ->…",N,N],[14,"count","","`count!(I -> IResult<I,O>, nb) => I -> IResult<I, Vec<O>>`…",N,N],[14,"count_fixed","","`count_fixed!(O, I -> IResult<I,O>, nb) => I -> IResult<I,…",N,N],[14,"length_count","","`length_count!(I -> IResult<I, nb>, I -> IResult<I,O>) =>…",N,N],[14,"length_data","","`length_data!(I -> IResult<I, nb>) => O`",N,N],[14,"length_value","","`length_value!(I -> IResult<I, nb>, I -> IResult<I,O>) =>…",N,N],[14,"fold_many0","","`fold_many0!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I ->…",N,N],[14,"fold_many1","","`fold_many1!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I ->…",N,N],[14,"fold_many_m_n","","`fold_many_m_n!(usize, usize, I -> IResult<I,O>, R, Fn(R,…",N,N],[14,"method","","Makes a method from a parser combination",N,N],[14,"call_m","","Used to called methods then move self back into self",N,N],[14,"apply_m","","emulate function currying for method calls on structs…",N,N],[14,"tag","","`tag!(&[T]: nom::AsBytes) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"tag_no_case","","`tag_no_case!(&[T]) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"is_not","","`is_not!(&[T:AsBytes]) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"is_a","","`is_a!(&[T]) => &[T] -> IResult<&[T], &[T]>` returns the…",N,N],[14,"escaped","","`escaped!(&[T] -> IResult<&[T], &[T]>, T, &[T] ->…",N,N],[14,"escaped_transform","","`escaped_transform!(&[T] -> IResult<&[T], &[T]>, T, &[T]…",N,N],[14,"take_while","","`take_while!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_while1","","`take_while1!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_till","","`take_till!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_till1","","`take_till1!(T -> bool) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take","","`take!(nb) => &[T] -> IResult<&[T], &[T]>` generates a…",N,N],[14,"take_str","","`take!(nb) => &[T] -> IResult<&[T], &str>` same as take!…",N,N],[14,"take_until_and_consume","","`take_until_and_consume!(tag) => &[T] -> IResult<&[T],…",N,N],[14,"take_until_and_consume1","","`take_until_and_consume1!(tag) => &[T] -> IResult<&[T],…",N,N],[14,"take_until","","`take_until!(tag) => &[T] -> IResult<&[T], &[T]>` consumes…",N,N],[14,"take_until1","","`take_until1!(tag) => &[T] -> IResult<&[T], &[T]>`…",N,N],[14,"take_until_either_and_consume","","`take_until_either_and_consume!(tag) => &[T] ->…",N,N],[14,"take_until_either","","`take_until_either!(tag) => &[T] -> IResult<&[T], &[T]>`",N,N],[14,"length_bytes","","`length_bytes!(&[T] -> IResult<&[T], nb>) => &[T] ->…",N,N],[14,"bits","","`bits!( parser ) => ( &[u8], (&[u8], usize) ->…",N,N],[14,"take_bits","","`take_bits!(type, nb) => ( (&[T], usize), U, usize) ->…",N,N],[14,"tag_bits","","matches an integer pattern to a bitstream. The number of…",N,N],[14,"u16","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"u32","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"u64","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i16","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i32","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"i64","","if the parameter is nom::Endianness::Big, parse a big…",N,N],[14,"one_of","","matches one of the provided characters",N,N],[14,"none_of","","matches anything but the provided characters",N,N],[14,"char","","matches one character: `char!(char) => &[u8] ->…",N,N],[14,"wrap_sep","","",N,N],[14,"eat_separator","","helper macros to build a separator parser",N,N],[14,"sep","","sep is the parser rewriting macro for whitespace separated…",N,N],[14,"ws","","`ws!(I -> IResult<I,O>) => I -> IResult<I, O>`",N,N],[14,"consumer_from_parser","","",N,N],[14,"tag_s","","`tag_s!(&str) => &str -> IResult<&str, &str>` declares a…",N,N],[14,"tag_no_case_s","","`tag_no_case_s!(&str) => &str -> IResult<&str, &str>`…",N,N],[14,"take_s","","`take_s!(nb) => &str -> IResult<&str, &str>` generates a…",N,N],[14,"is_not_s","","`is_not_s!(&str) => &str -> IResult<&str, &str>` returns…",N,N],[14,"is_a_s","","`is_a_s!(&str) => &str -> IResult<&str, &str>` returns the…",N,N],[14,"take_while_s","","`take_while_s!(char -> bool) => &str -> IResult<&str,…",N,N],[14,"take_while1_s","","`take_while1_s!(char -> bool) => &str -> IResult<&str,…",N,N],[14,"take_till_s","","`take_till_s!(&str -> bool) => &str -> IResult<&str,…",N,N],[14,"take_till1_s","","`take_till1_s!(&str -> bool) => &str -> IResult<&str,…",N,N],[14,"take_until_and_consume_s","","`take_until_and_consume_s!(&str) => &str -> IResult<&str,…",N,N],[14,"take_until_s","","`take_until_s!(&str) => &str -> IResult<&str, &str>`…",N,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"remaining_input","","",3,[[["self"]],["option"]]],[11,"remaining_input","","",3,[[["self"]],["option"]]],[11,"remaining_input","","",3,[[["self"]],["option",["str"]]]],[11,"output","","",3,[[["self"]],["option"]]],[11,"output","","",3,[[["self"]],["option"]]],[11,"output","","",3,[[["self"]],["option",["str"]]]],[11,"handle","","",12,[[["self"],["input"]],["consumerstate"]]],[11,"state","","",12,[[["self"]],["consumerstate"]]],[11,"handle","","",13,[[["self"],["input"]],["consumerstate"]]],[11,"state","","",13,[[["self"]],["consumerstate"]]],[11,"apply","","",30,[[["self"],["consumer"]],["consumerstate"]]],[11,"apply","","",10,[[["self"],["consumer"]],["consumerstate"]]],[11,"apply","","",11,[[["self"],["consumer"]],["consumerstate"]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["compareresult"]],["bool"]]],[11,"eq","","",2,[[["self"],["needed"]],["bool"]]],[11,"ne","","",2,[[["self"],["needed"]],["bool"]]],[11,"eq","","",3,[[["self"],["iresult"]],["bool"]]],[11,"ne","","",3,[[["self"],["iresult"]],["bool"]]],[11,"eq","","",4,[[["self"],["ierror"]],["bool"]]],[11,"ne","","",4,[[["self"],["ierror"]],["bool"]]],[11,"eq","","",5,[[["self"],["endianness"]],["bool"]]],[11,"eq","","",8,[[["self"],["move"]],["bool"]]],[11,"ne","","",8,[[["self"],["move"]],["bool"]]],[11,"eq","","",9,[[["self"],["fileproducerstate"]],["bool"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"clone","","",2,[[["self"]],["needed"]]],[11,"clone","","",3,[[["self"]],["iresult"]]],[11,"clone","","",4,[[["self"]],["ierror"]]],[11,"clone","","",6,[[["self"]],["input"]]],[11,"clone","","",7,[[["self"]],["consumerstate"]]],[11,"clone","","",8,[[["self"]],["move"]]],[11,"clone","","",9,[[["self"]],["fileproducerstate"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"description","","",31,[[["self"]],["str"]]],[11,"run","","Applies a consumer once on the produced data, and returns…",29,[[["self"],["consumer"]],["option"]]]],"paths":[[4,"ErrorKind"],[4,"CompareResult"],[4,"Needed"],[4,"IResult"],[4,"IError"],[4,"Endianness"],[4,"Input"],[4,"ConsumerState"],[4,"Move"],[4,"FileProducerState"],[3,"MemProducer"],[3,"FileProducer"],[3,"MapConsumer"],[3,"ChainConsumer"],[8,"Offset"],[8,"HexDisplay"],[8,"AsBytes"],[8,"InputLength"],[8,"AsChar"],[8,"InputIter"],[8,"InputTake"],[8,"Compare"],[8,"FindToken"],[8,"FindSubstring"],[8,"ParseTo"],[8,"Slice"],[8,"GetInput"],[8,"GetOutput"],[8,"Consumer"],[8,"Producer"],[3,"ProducerRepeat"],[6,"Err"]]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"sqrt","","Returns the truncated principal square root of an integer…",N,[[["t"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",N,[[["t"],["u32"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",0,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[11,"new","","For a given n, iterate over all binomial coefficients…",2,[[["t"]],["iterbinomial"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[["self"]],["self"]]]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bounds","","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",3,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",3,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",3,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",3,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",3,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",3,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",3,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",3,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",3,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",3,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",3,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",3,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",3,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",4,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",4,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",4,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",4,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",4,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",4,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[["self"]],["t"]]],[0,"float","num_traits","",N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",8,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[],["self"]]],[0,"identities","num_traits","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",9,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["self"],["u32"]],["self"]]],[0,"ops","num_traits","",N,N],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",17,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If…",18,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If…",19,[[["self"],["u32"]],["option"]]],[0,"inv","num_traits::ops","",N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output","","The result after applying the operator.",20,N],[10,"inv","","Returns the multiplicative inverse of `self`.",20,N],[0,"mul_add","num_traits::ops","",N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",21,N],[10,"mul_add","","Performs the fused multiply-add operation.",21,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[["self"],["a"],["b"]]]],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",23,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",23,[[["self"],["self"]],["self"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",26,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",28,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[8,"Pow","","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",29,N],[10,"pow","","Returns `self` to the power `rhs`.",29,N],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",30,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",30,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",31,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum","","The trait for references which implement numeric…",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["ordermap"]={"doc":"[`OrderMap`] is a hash table where the iteration order of…","items":[[3,"OrderMap","ordermap","A hash table where the iteration order of the key-value…",N,N],[3,"OccupiedEntry","","",N,N],[3,"VacantEntry","","",N,N],[3,"Keys","","",N,N],[3,"Values","","",N,N],[3,"ValuesMut","","",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"IntoIter","","",N,N],[3,"Drain","","",N,N],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied","","Existing slot with equivalent key.",0,N],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,N],[0,"set","","A hash set implemented using `OrderMap`",N,N],[3,"OrderSet","ordermap::set","A hash set where the iteration order of the values is…",N,N],[3,"IntoIter","","",N,N],[3,"Iter","","",N,N],[3,"Drain","","",N,N],[3,"Difference","","",N,N],[3,"Intersection","","",N,N],[3,"SymmetricDifference","","",N,N],[3,"Union","","",N,N],[11,"new","","Create a new set. (Does not allocate.)",1,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",1,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",1,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of elements in the set.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",1,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",1,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",1,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",1,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",1,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",1,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",1,[[["self"],["t"]],["bool"]]],[11,"iter","","Return an iterator over the values of the set, in their…",1,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",1,[[["self"],["orderset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",1,[[["self"],["orderset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",1,[[["self"],["orderset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",1,[[["self"],["orderset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",1,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index and value",1,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",1,[[["self"],["t"]],["option"]]],[11,"remove","","FIXME Same as .swap_remove",1,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",1,[[["self"],["q"]],["bool"]]],[11,"take","","FIXME Same as .swap_take",1,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",1,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",1,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",1,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",1,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",1,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",1,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",1,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `OrderSet`, returning all values as a drain…",1,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",1,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",1,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",1,[[["self"],["orderset"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",1,[[["self"],["orderset"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",1,[[["self"],["orderset"]],["bool"]]],[8,"Equivalent","ordermap","Key equivalence trait.",N,N],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",2,[[["self"],["k"]],["bool"]]],[8,"MutableKeys","","Opt-in mutable access to keys.",N,N],[16,"Key","","",3,N],[16,"Value","","",3,N],[10,"get_full_mut2","","Return item index, mutable reference to key and value",3,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",3,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",3,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",4,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",4,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",4,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",4,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",4,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",4,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["self"],["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"key","","",5,[[["self"]],["k"]]],[11,"get","","",5,[[["self"]],["v"]]],[11,"get_mut","","",5,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",5,[[["self"]],["usize"]]],[11,"into_mut","","",5,[[["self"]],["v"]]],[11,"insert","","",5,[[["self"],["v"]],["v"]]],[11,"remove","","",5,[[["self"]],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",5,N],[11,"key","","",6,[[["self"]],["k"]]],[11,"into_key","","",6,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",6,[[["self"]],["usize"]]],[11,"insert","","",6,[[["self"],["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",4,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",4,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",4,[[["self"],["k"],["v"]],["option"]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",4,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",4,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",4,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",4,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",4,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",4,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if and equivalent to `key` exists in the map.",4,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",4,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index, key and value",4,[[["self"],["q"]],["option"]]],[11,"get_mut","","",4,[[["self"],["q"]],["option"]]],[11,"get_full_mut","","",4,[[["self"],["q"]],["option"]]],[11,"remove","","NOTE: Same as .swap_remove",4,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",4,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",4,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",4,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",4,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",4,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",4,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",4,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `OrderMap`, returning all key-value pairs as a…",4,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",4,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",4,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",4,[[["self"],["usize"]],["option"]]],[14,"ordermap","","Create an `OrderMap` from a list of key-value pairs",N,N],[14,"orderset","","Create an `OrderSet` from a list of values",N,N],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","ordermap::set","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","ordermap","",4,[[["self"],["q"]],["option"]]],[11,"retain2","","",4,[[["self"],["f"]]]],[11,"__private_marker","","",4,[[["self"]],["privatemarker"]]],[11,"next","ordermap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"count","","",14,[[["self"]],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[["self"]],["option"]]],[11,"collect","","",14,[[["self"]],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"count","","",15,[[["self"]],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[["self"]],["option"]]],[11,"collect","","",15,[[["self"]],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"count","","",16,[[["self"]],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[["self"]],["option"]]],[11,"collect","","",16,[[["self"]],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"fold","","",19,[[["self"],["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"fold","","",20,[[["self"],["b"],["f"]],["b"]]],[11,"next","ordermap","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"count","","",7,[[["self"]],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[["self"]],["option"]]],[11,"collect","","",7,[[["self"]],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"count","","",8,[[["self"]],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[["self"]],["option"]]],[11,"collect","","",8,[[["self"]],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"count","","",9,[[["self"]],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[["self"]],["option"]]],[11,"collect","","",9,[[["self"]],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"count","","",10,[[["self"]],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[["self"]],["option"]]],[11,"collect","","",10,[[["self"]],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"count","","",11,[[["self"]],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[["self"]],["option"]]],[11,"collect","","",11,[[["self"]],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"count","","",12,[[["self"]],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[["self"]],["option"]]],[11,"collect","","",12,[[["self"]],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"count","","",13,[[["self"]],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[["self"]],["option"]]],[11,"collect","","",13,[[["self"]],["c"]]],[11,"len","ordermap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","ordermap","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"eq","ordermap::set","",1,[[["self"],["orderset"]],["bool"]]],[11,"eq","ordermap","",4,[[["self"],["ordermap"]],["bool"]]],[11,"next_back","ordermap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","ordermap","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"into_iter","ordermap::set","",1,N],[11,"into_iter","ordermap","",4,N],[11,"default","ordermap::set","Return an empty `OrderSet`",1,[[],["self"]]],[11,"default","ordermap","Return an empty `OrderMap`",4,[[],["self"]]],[11,"clone","ordermap::set","",1,[[["self"]],["orderset"]]],[11,"clone","ordermap","",4,[[["self"]],["ordermap"]]],[11,"extend","ordermap::set","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","ordermap","Extend the map with all key-value pairs in the iterable.",4,[[["self"],["i"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",4,[[["self"],["i"]]]],[11,"fmt","ordermap::set","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","ordermap","",4,[[["self"],["formatter"]],["result"]]],[11,"index","","Panics if `key` is not present in the map.",4,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",4,[[["self"],["q"]],["v"]]],[11,"from_iter","ordermap::set","",1,[[["i"]],["self"]]],[11,"from_iter","ordermap","Create an `OrderMap` from the sequence of key-value pairs…",4,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"OrderSet"],[8,"Equivalent"],[8,"MutableKeys"],[3,"OrderMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["os_pipe"]={"doc":"A cross-platform library for opening OS pipes.","items":[[3,"PipeReader","os_pipe","The reading end of a pipe, returned by `pipe`.",N,N],[3,"PipeWriter","","The writing end of a pipe, returned by `pipe`.",N,N],[5,"pipe","","Open a new pipe and return a [`PipeReader`] and…",N,[[],["result"]]],[5,"dup_stdin","","Get a duplicated copy of the current process's standard…",N,[[],["result",["pipereader"]]]],[5,"dup_stdout","","Get a duplicated copy of the current process's standard…",N,[[],["result",["pipewriter"]]]],[5,"dup_stderr","","Get a duplicated copy of the current process's standard…",N,[[],["result",["pipewriter"]]]],[11,"try_clone","","",0,[[["self"]],["result",["pipereader"]]]],[11,"try_clone","","",1,[[["self"]],["result",["pipewriter"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"read","","",0,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"from_raw_fd","","",0,[[["rawfd"]],["pipereader"]]],[11,"from_raw_fd","","",1,[[["rawfd"]],["pipewriter"]]]],"paths":[[3,"PipeReader"],[3,"PipeWriter"]]};
searchIndex["owning_ref"]={"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the…",N,N],[3,"OwningRef","","An owning reference.",N,N],[3,"OwningRefMut","","An mutable owning reference.",N,N],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased","","Helper trait for an erased concrete type an owner…",N,N],[8,"IntoErased","","Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased","","Perform the type erasure.",0,N],[8,"ToHandle","","Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,N],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves,…",1,N],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,N],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves,…",2,N],[11,"new","","Creates a new owning reference from a owner initialized to…",3,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",3,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new owning reference that points at…",3,[[["self"],["f"]],["owningref"]]],[11,"try_map","","Tries to convert `self` into a new owning reference that…",3,[[["self"],["f"]],["result",["owningref"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",3,[[["self"],["f"]],["owningref"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",3,[[["self"]],["owningref",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",3,[[["self"]],["owningref"]]],[11,"owner","","A getter for the underlying owner.",3,[[["self"]],["o"]]],[11,"into_inner","","Discards the reference and retrieves the owner.",3,[[["self"]],["o"]]],[11,"new","","Creates a new owning reference from a owner initialized to…",4,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",4,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new shared owning reference that…",4,[[["self"],["f"]],["owningref"]]],[11,"map_mut","","Converts `self` into a new mutable owning reference that…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"try_map","","Tries to convert `self` into a new shared owning reference…",4,[[["self"],["f"]],["result",["owningref"]]]],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning…",4,[[["self"],["f"]],["result",["owningrefmut"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",4,[[["self"]],["owningrefmut",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",4,[[["self"]],["owningrefmut"]]],[11,"owner","","A getter for the underlying owner.",4,[[["self"]],["o"]]],[11,"into_inner","","Discards the reference and retrieves the owner.",4,[[["self"]],["o"]]],[11,"new","","Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["self"]]],[11,"try_new","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"as_ref","","",3,[[["self"]],["t"]]],[11,"as_ref","","",4,[[["self"]],["t"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["self"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"from","","",3,[[["o"]],["self"]]],[11,"from","","",4,[[["o"]],["self"]]],[11,"from","","",3,[[["owningrefmut"]],["self"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","","",5,N],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"deref","","",5,N],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"borrow","","",3,[[["self"]],["t"]]]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","items":[[3,"Once","parking_lot","A synchronization primitive which can be used to run a…",N,N],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[3,"Condvar","","A Condition Variable",N,N],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",N,N],[3,"RwLock","","A reader-writer lock",N,N],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[4,"OnceState","","Current state of a `Once`.",N,N],[13,"New","","A closure has not been executed yet",0,N],[13,"Poisoned","","A closure was executed but panicked.",0,N],[13,"InProgress","","A thread is currently executing a closure.",0,N],[13,"Done","","A closure has completed sucessfully.",0,N],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["instant"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["duration"]],["waittimeoutresult"]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",3,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[["self"]],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",3,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],["option",["mutexguard"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,[[["self"],["duration"]],["option",["mutexguard"]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,[[["self"],["instant"]],["option",["mutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"raw_unlock","","Releases the mutex.",3,[[["self"]]]],[11,"raw_unlock_fair","","Releases the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,"raw_lock","","Acquires a mutex, blocking the current thread until it is…",3,[[["self"]]]],[11,"raw_try_lock","","Attempts to acquire this lock.",3,[[["self"]],["bool"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[["self"]]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",5,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this reentrant mutex, returning the underlying…",5,[[["self"]],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",5,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",5,[[["self"]],["option",["reentrantmutexguard"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",5,[[["self"],["duration"]],["option",["reentrantmutexguard"]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",5,[[["self"],["instant"]],["option",["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",5,[[["self"]],["t"]]],[11,"raw_unlock","","Releases the mutex.",5,[[["self"]]]],[11,"raw_unlock_fair","","Releases the mutex using a fair unlock protocol.",5,[[["self"]]]],[11,"raw_lock","","Acquires a mutex, blocking the current thread until it is…",5,[[["self"]]]],[11,"raw_try_lock","","Attempts to acquire this lock.",5,[[["self"]],["bool"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",6,[[["self"]]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",7,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",7,[[["self"]],["t"]]],[11,"read","","Locks this rwlock with shared read access, blocking the…",7,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",7,[[["self"]],["option",["rwlockreadguard"]]]],[11,"try_read_for","","Attempts to acquire this rwlock with shared read access…",7,[[["self"],["duration"]],["option",["rwlockreadguard"]]]],[11,"try_read_until","","Attempts to acquire this rwlock with shared read access…",7,[[["self"],["instant"]],["option",["rwlockreadguard"]]]],[11,"read_recursive","","Locks this rwlock with shared read access, blocking the…",7,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this rwlock with shared read access.",7,[[["self"]],["option",["rwlockreadguard"]]]],[11,"try_read_recursive_for","","Attempts to acquire this rwlock with shared read access…",7,[[["self"],["duration"]],["option",["rwlockreadguard"]]]],[11,"try_read_recursive_until","","Attempts to acquire this rwlock with shared read access…",7,[[["self"],["instant"]],["option",["rwlockreadguard"]]]],[11,"write","","Locks this rwlock with exclusive write access, blocking…",7,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",7,[[["self"]],["option",["rwlockwriteguard"]]]],[11,"try_write_for","","Attempts to acquire this rwlock with exclusive write…",7,[[["self"],["duration"]],["option",["rwlockwriteguard"]]]],[11,"try_write_until","","Attempts to acquire this rwlock with exclusive write…",7,[[["self"],["instant"]],["option",["rwlockwriteguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",7,[[["self"]],["t"]]],[11,"raw_unlock_read","","Releases shared read access of the rwlock.",7,[[["self"]]]],[11,"raw_unlock_write","","Releases exclusive write access of the rwlock.",7,[[["self"]]]],[11,"raw_unlock_read_fair","","Releases shared read access of the rwlock using a fair…",7,[[["self"]]]],[11,"raw_unlock_write_fair","","Releases exclusive write access of the rwlock using a fair…",7,[[["self"]]]],[11,"raw_downgrade","","Atomically downgrades a write lock into a read lock…",7,[[["self"]]]],[11,"raw_read","","Locks this rwlock with shared read access, blocking the…",7,[[["self"]]]],[11,"raw_try_read","","Attempts to acquire this rwlock with shared read access.",7,[[["self"]],["bool"]]],[11,"raw_read_recursive","","Locks this rwlock with shared read access, blocking the…",7,[[["self"]]]],[11,"raw_try_read_recursive","","Attempts to acquire this rwlock with shared read access.",7,[[["self"]],["bool"]]],[11,"raw_write","","Locks this rwlock with exclusive write access, blocking…",7,[[["self"]]]],[11,"raw_try_write","","Attempts to lock this rwlock with exclusive write access.",7,[[["self"]],["bool"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[["self"]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",9,[[["self"]],["rwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[["self"]]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfullly…",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",10,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",10,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",10,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",10,[[["self"],["f"]]]],[6,"MutexGuardRef","","Typedef of an owning reference that uses a `MutexGuard` as…",N,N],[6,"ReentrantMutexGuardRef","","Typedef of an owning reference that uses a…",N,N],[6,"RwLockReadGuardRef","","Typedef of an owning reference that uses a…",N,N],[6,"RwLockWriteGuardRef","","Typedef of an owning reference that uses a…",N,N],[17,"ONCE_INIT","","Initialization value for static `Once` values.",N,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"default","","",2,[[],["condvar"]]],[11,"default","","",3,[[],["mutex"]]],[11,"default","","",5,[[],["reentrantmutex"]]],[11,"default","","",7,[[],["rwlock"]]],[11,"default","","",10,[[],["once"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"deref_mut","","",9,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",6,[[["self"]],["t"]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref","","",9,[[["self"]],["t"]]]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Mutex"],[3,"MutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Once"]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",N,N],[12,"0","","",0,N],[3,"UnparkResult","","Result of an unpark operation.",N,N],[12,"unparked_threads","","The number of threads that were unparked.",1,N],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,N],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",N,N],[12,"0","","",2,N],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip","","Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop","","Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult","","Result of a park operation.",N,N],[13,"Unparked","","We were unparked by another thread with the given token.",4,N],[13,"Invalid","","The validation callback returned false.",4,N],[13,"TimedOut","","The timeout expired.",4,N],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",N,N],[13,"Abort","","Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,N],[5,"park","","Parks the current thread in the queue associated with the…",N,[[["usize"],["v"],["b"],["t"],["parktoken"],["option",["instant"]]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",N,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",N,[[["usize"],["f"],["c"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",N,[[["usize"],["c"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",N,[[["usize"],["usize"],["v"],["c"]],["unparkresult"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[["self"]],["bool"]]],[0,"deadlock","","[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"eq","","",5,[[["self"],["requeueop"]],["bool"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"eq","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"ne","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"default","","",6,[[],["spinwait"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["petgraph"]={"doc":"petgraph is a graph data structure library.","items":[[4,"Direction","petgraph","Edge direction.",N,N],[13,"Outgoing","","An `Outgoing` edge is an outward edge from the current node.",0,N],[13,"Incoming","","An `Incoming` edge is an inbound edge to the current node.",0,N],[4,"Directed","","Marker type for a directed graph.",N,N],[4,"Undirected","","Marker type for an undirected graph.",N,N],[0,"visit","","Graph traits and graph traversals.",N,N],[3,"NodeFiltered","petgraph::visit","A node-filtering graph adaptor.",N,N],[12,"0","","",1,N],[12,"1","","",1,N],[3,"NodeFilteredNeighbors","","A filtered neighbors iterator.",N,N],[3,"NodeFilteredNodes","","A filtered node references iterator.",N,N],[3,"NodeFilteredEdgeReferences","","A filtered edges iterator.",N,N],[3,"NodeFilteredEdges","","A filtered edges iterator.",N,N],[3,"EdgeFiltered","","An edge-filtering graph adaptor.",N,N],[12,"0","","",2,N],[12,"1","","",2,N],[3,"EdgeFilteredNeighbors","","A filtered neighbors iterator.",N,N],[3,"EdgeFilteredEdges","","A filtered edges iterator.",N,N],[3,"Reversed","","An edge-reversing graph adaptor.",N,N],[12,"0","","",3,N],[3,"ReversedEdgeReference","","A reversed edge reference",N,N],[3,"ReversedEdgeReferences","","A reversed edge references iterator.",N,N],[3,"Time","","Strictly monotonically increasing event time for a depth…",N,N],[12,"0","","",4,N],[3,"Dfs","","Visit nodes of a graph in a depth-first-search (DFS)…",N,N],[12,"stack","","The stack of nodes to visit",5,N],[12,"discovered","","The map of discovered nodes",5,N],[3,"DfsPostOrder","","Visit nodes in a depth-first-search (DFS) emitting nodes…",N,N],[12,"stack","","The stack of nodes to visit",6,N],[12,"discovered","","The map of discovered nodes",6,N],[12,"finished","","The map of finished nodes",6,N],[3,"Bfs","","A breadth first search (BFS) of a graph.",N,N],[12,"stack","","The queue of nodes to visit",7,N],[12,"discovered","","The map of discovered nodes",7,N],[3,"Topo","","A topological order traversal for a graph.",N,N],[3,"WalkerIter","","A walker and its context wrapped into an iterator.",N,N],[4,"DfsEvent","","A depth first search (DFS) visitor event.",N,N],[13,"Discover","","",8,N],[13,"TreeEdge","","An edge of the tree formed by the traversal.",8,N],[13,"BackEdge","","An edge to an already visited node.",8,N],[13,"CrossForwardEdge","","A cross or forward edge.",8,N],[13,"Finish","","",8,N],[4,"Control","","Control flow for callbacks.",N,N],[13,"Continue","","",9,N],[13,"Break","","",9,N],[5,"depth_first_search","","A recursive depth first search.",N,[[["g"],["i"],["f"]],["c"]]],[11,"breaking","","",9,[[],["control"]]],[11,"break_value","","Get the value in `Control::Break(_)`, if present.",9,[[["self"]],["option"]]],[11,"new","","Create a new Dfs, using the graph's visitor map, and put…",5,[[["g"],["n"]],["self"]]],[11,"from_parts","","Create a `Dfs` from a vector and a visit map",5,[[["vec"],["vm"]],["self"]]],[11,"reset","","Clear the visit state",5,[[["self"],["g"]]]],[11,"empty","","Create a new Dfs using the graph's visitor map, and no…",5,[[["g"]],["self"]]],[11,"move_to","","Keep the discovered map, but clear the visit stack and…",5,[[["self"],["n"]]]],[11,"next","","Return the next node in the dfs, or None if the traversal…",5,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"],["n"]],["self"]]],[11,"empty","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"]],["self"]]],[11,"reset","","Clear the visit state",6,[[["self"],["g"]]]],[11,"move_to","","Keep the discovered and finished map, but clear the visit…",6,[[["self"],["n"]]]],[11,"next","","Return the next node in the traversal, or `None` if the…",6,[[["self"],["g"]],["option"]]],[11,"new","","Create a new Bfs, using the graph's visitor map, and put…",7,[[["g"],["n"]],["self"]]],[11,"next","","Return the next node in the bfs, or None if the traversal…",7,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `Topo`, using the graph's visitor map, and…",10,[[["g"]],["self"]]],[11,"reset","","Clear visited state, and put all initial nodes in the to…",10,[[["self"],["g"]]]],[11,"next","","Return the next node in the current topological order…",10,[[["self"],["g"]],["option"]]],[11,"context","","",11,[[["self"]],["c"]]],[11,"inner_ref","","",11,[[["self"]],["w"]]],[11,"inner_mut","","",11,[[["self"]],["w"]]],[11,"from_fn","","Create an `NodeFiltered` adaptor from the closure `filter`.",1,[[["g"],["f"]],["self"]]],[11,"from_fn","","Create an `EdgeFiltered` adaptor from the closure `filter`.",2,[[["g"],["f"]],["self"]]],[8,"FilterNode","","A graph filter for nodes.",N,N],[10,"include_node","","Return true to have the node be part of the graph",12,[[["self"],["n"]],["bool"]]],[8,"FilterEdge","","A graph filter for edges",N,N],[10,"include_edge","","Return true to have the edge be part of the graph",13,[[["self"],["edge"]],["bool"]]],[8,"ControlFlow","","Control flow for callbacks.",N,N],[10,"continuing","","",14,[[],["self"]]],[10,"should_break","","",14,[[["self"]],["bool"]]],[8,"Walker","","A walker is a traversal state, but where part of the…",N,N],[16,"Item","","",15,N],[10,"walk_next","","Advance to the next item",15,[[["self"],["context"]],["option"]]],[11,"iter","","Create an iterator out of the walker and given `context`.",15,[[["self"],["context"]],["walkeriter"]]],[8,"GraphBase","","Base graph trait: defines the associated node identifier…",N,N],[16,"EdgeId","","edge identifier",16,N],[16,"NodeId","","node identifier",16,N],[8,"GraphRef","","A copyable reference to a graph.",N,N],[8,"IntoNeighbors","","Access to the neighbors of each node",N,N],[16,"Neighbors","","",17,N],[10,"neighbors","","Return an iterator of the neighbors of node `a`.",17,N],[8,"IntoNeighborsDirected","","Access to the neighbors of each node, through incoming or…",N,N],[16,"NeighborsDirected","","",18,N],[10,"neighbors_directed","","",18,N],[8,"IntoEdges","","Access to the edges of each node.",N,N],[16,"Edges","","",19,N],[10,"edges","","",19,N],[8,"IntoEdgesDirected","","Access to all edges of each node, in the specified…",N,N],[16,"EdgesDirected","","",20,N],[10,"edges_directed","","",20,N],[8,"IntoNodeIdentifiers","","Access to the sequence of the graph’s `NodeId`s.",N,N],[16,"NodeIdentifiers","","",21,N],[10,"node_identifiers","","",21,N],[8,"Data","","Define associated data for nodes and edges",N,N],[16,"NodeWeight","","",22,N],[16,"EdgeWeight","","",22,N],[8,"EdgeRef","","An edge reference.",N,N],[16,"NodeId","","",23,N],[16,"EdgeId","","",23,N],[16,"Weight","","",23,N],[10,"source","","The source node of the edge.",23,N],[10,"target","","The target node of the edge.",23,N],[10,"weight","","A reference to the weight of the edge.",23,N],[10,"id","","The edge’s identifier.",23,N],[8,"NodeRef","","A node reference.",N,N],[16,"NodeId","","",24,N],[16,"Weight","","",24,N],[10,"id","","",24,N],[10,"weight","","",24,N],[8,"IntoNodeReferences","","Access to the sequence of the graph’s nodes",N,N],[16,"NodeRef","","",25,N],[16,"NodeReferences","","",25,N],[10,"node_references","","",25,N],[8,"IntoEdgeReferences","","Access to the sequence of the graph’s edges",N,N],[16,"EdgeRef","","",26,N],[16,"EdgeReferences","","",26,N],[10,"edge_references","","",26,N],[8,"GraphProp","","Edge kind property (directed or undirected edges)",N,N],[16,"EdgeType","","The kind edges in the graph.",27,N],[11,"is_directed","","",27,[[["self"]],["bool"]]],[8,"NodeIndexable","","The graph’s `NodeId`s map to indices",N,N],[10,"node_bound","","Return an upper bound of the node indices in the graph…",28,[[["self"]],["usize"]]],[10,"to_index","","Convert `a` to an integer index.",28,N],[10,"from_index","","Convert `i` to a node index",28,N],[8,"NodeCount","","A graph with a known node count.",N,N],[10,"node_count","","",29,[[["self"]],["usize"]]],[8,"NodeCompactIndexable","","The graph’s `NodeId`s map to indices, in a range without…",N,N],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",N,N],[10,"visit","","Mark `a` as visited.",30,[[["self"],["n"]],["bool"]]],[10,"is_visited","","Return whether `a` has been visited before.",30,[[["self"],["n"]],["bool"]]],[8,"Visitable","","A graph that can create a map that tracks the visited…",N,N],[16,"Map","","The associated map type",31,N],[10,"visit_map","","Create a new visitor map",31,N],[10,"reset_map","","Reset the visitor map (and resize to new size of graph if…",31,N],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph.",N,N],[16,"AdjMatrix","","The associated adjacency matrix type",32,N],[10,"adjacency_matrix","","Create the adjacency matrix",32,N],[10,"is_adjacent","","Return true if there is an edge from `a` to `b`, false…",32,N],[0,"data","petgraph","Graph traits for associated data and graph construction.",N,N],[3,"FilterElements","petgraph::data","An iterator that filters graph elements.",N,N],[4,"Element","","A graph element.",N,N],[13,"Node","","A graph node.",33,N],[12,"weight","petgraph::data::Element","",33,N],[13,"Edge","petgraph::data","A graph edge.",33,N],[12,"source","petgraph::data::Element","",33,N],[12,"target","","",33,N],[12,"weight","","",33,N],[8,"DataMap","petgraph::data","Access node and edge weights (associated data).",N,N],[10,"node_weight","","",34,N],[10,"edge_weight","","",34,N],[8,"DataMapMut","","Access node and edge weights mutably.",N,N],[10,"node_weight_mut","","",35,N],[10,"edge_weight_mut","","",35,N],[8,"Build","","A graph that can be extended with further nodes and edges",N,N],[10,"add_node","","",36,N],[11,"add_edge","","Add a new edge. If parallel edges (duplicate) are not…",36,N],[10,"update_edge","","Add or update the edge from `a` to `b`. Return the id of…",36,N],[8,"Create","","A graph that can be created",N,N],[10,"with_capacity","","",37,[[["usize"],["usize"]],["self"]]],[8,"FromElements","","Create a graph from an iterator of elements.",N,N],[11,"from_elements","","",38,[[["i"]],["self"]]],[8,"ElementIterator","","Iterator adaptors for iterators of `Element`.",N,N],[11,"filter_elements","","Create an iterator adaptor that filters graph elements.",39,[[["self"],["f"]],["filterelements"]]],[0,"algo","petgraph","Graph algorithms.",N,N],[3,"DfsSpace","petgraph::algo","Workspace for a graph traversal.",N,N],[3,"MinSpanningTree","","An iterator producing a minimum spanning forest of a graph.",N,N],[3,"Cycle","","An algorithm error: a cycle was found in the graph.",N,N],[3,"NegativeCycle","","An algorithm error: a cycle of negative weights was found…",N,N],[5,"is_isomorphic","","[Graph] Return `true` if the graphs `g0` and `g1` are…",N,[[["graph"],["graph"]],["bool"]]],[5,"is_isomorphic_matching","","[Graph] Return `true` if the graphs `g0` and `g1` are…",N,[[["graph"],["graph"],["f"],["g"]],["bool"]]],[5,"dijkstra","","[Generic] Dijkstra's shortest path algorithm.",N,N],[5,"astar","","[Generic] A* shortest path algorithm.",N,N],[5,"connected_components","","[Generic] Return the number of connected components of the…",N,[[["g"]],["usize"]]],[5,"is_cyclic_undirected","","[Generic] Return `true` if the input graph contains a cycle.",N,[[["g"]],["bool"]]],[5,"toposort","","[Generic] Perform a topological sort of a directed graph.",N,[[["g"],["option",["dfsspace"]]],["result",["vec","cycle"]]]],[5,"is_cyclic_directed","","[Generic] Return `true` if the input directed graph…",N,[[["g"]],["bool"]]],[5,"has_path_connecting","","[Generic] Check if there exists a path starting at `from`…",N,N],[5,"scc","","Renamed to `kosaraju_scc`.",N,[[["g"]],["vec",["vec"]]]],[5,"kosaraju_scc","","[Generic] Compute the strongly connected components using…",N,[[["g"]],["vec",["vec"]]]],[5,"tarjan_scc","","[Generic] Compute the strongly connected components using…",N,[[["g"]],["vec",["vec"]]]],[5,"condensation","","[Graph] Condense every strongly connected component into a…",N,[[["graph"],["bool"]],["graph",["vec"]]]],[5,"min_spanning_tree","","[Generic] Compute a minimum spanning tree of a graph.",N,[[["g"]],["minspanningtree"]]],[5,"bellman_ford","","[Generic] Compute shortest paths from node `source` to all…",N,N],[0,"dominators","","Compute dominators of a control-flow graph.",N,N],[3,"Dominators","petgraph::algo::dominators","The dominance relation for some graph and root.",N,N],[3,"DominatorsIter","","Iterator for a node's dominators.",N,N],[5,"simple_fast","","This is an implementation of the engineered [\"Simple, Fast…",N,N],[11,"root","","Get the root node used to construct these dominance…",40,[[["self"]],["n"]]],[11,"immediate_dominator","","Get the immediate dominator of the given node.",40,[[["self"],["n"]],["option"]]],[11,"strict_dominators","","Iterate over the given node's that strict dominators.",40,[[["self"],["n"]],["option",["dominatorsiter"]]]],[11,"dominators","","Iterate over all of the given node's dominators (including…",40,[[["self"],["n"]],["option",["dominatorsiter"]]]],[8,"Measure","petgraph::algo","Associated data that can be used for measures (such as…",N,N],[8,"FloatMeasure","","A floating-point measure.",N,N],[10,"zero","","",41,[[],["self"]]],[10,"infinite","","",41,[[],["self"]]],[11,"new","","",42,[[["g"]],["self"]]],[11,"node_id","","Return a node id that participates in the cycle",43,[[["self"]],["n"]]],[0,"graphmap","petgraph","`GraphMap<N, E, Ty>` is a graph datastructure where node…",N,N],[3,"GraphMap","petgraph::graphmap","`GraphMap<N, E, Ty>` is a graph datastructure using an…",N,N],[3,"Nodes","","",N,N],[3,"Neighbors","","",N,N],[3,"NeighborsDirected","","",N,N],[3,"Edges","","",N,N],[3,"AllEdges","","",N,N],[3,"AllEdgesMut","","",N,N],[3,"Ptr","","A reference that is hashed and compared by its pointer…",N,N],[12,"0","","",44,N],[3,"NodeIdentifiers","","",N,N],[3,"NodeReferences","","",N,N],[6,"UnGraphMap","","A `GraphMap` with undirected edges.",N,N],[6,"DiGraphMap","","A `GraphMap` with directed edges.",N,N],[8,"NodeTrait","","A trait group for `GraphMap`'s node identifier.",N,N],[11,"new","","Create a new `GraphMap`",45,[[],["self"]]],[11,"with_capacity","","Create a new `GraphMap` with estimated capacity.",45,[[["usize"],["usize"]],["self"]]],[11,"capacity","","Return the current node and edge capacity of the graph.",45,N],[11,"is_directed","","Whether the graph has directed edges.",45,[[["self"]],["bool"]]],[11,"from_edges","","Create a new `GraphMap` from an iterable of edges.",45,[[["i"]],["self"]]],[11,"node_count","","Return the number of nodes in the graph.",45,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",45,[[["self"]],["usize"]]],[11,"clear","","Remove all nodes and edges",45,[[["self"]]]],[11,"add_node","","Add node `n` to the graph.",45,[[["self"],["n"]],["n"]]],[11,"remove_node","","Return `true` if node `n` was removed.",45,[[["self"],["n"]],["bool"]]],[11,"contains_node","","Return `true` if the node is contained in the graph.",45,[[["self"],["n"]],["bool"]]],[11,"add_edge","","Add an edge connecting `a` and `b` to the graph, with…",45,[[["self"],["n"],["n"],["e"]],["option"]]],[11,"remove_edge","","Remove edge from `a` to `b` from the graph and return the…",45,[[["self"],["n"],["n"]],["option"]]],[11,"contains_edge","","Return `true` if the edge connecting `a` with `b` is…",45,[[["self"],["n"],["n"]],["bool"]]],[11,"nodes","","Return an iterator over the nodes of the graph.",45,[[["self"]],["nodes"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",45,[[["self"],["n"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",45,[[["self"],["n"],["direction"]],["neighborsdirected"]]],[11,"edges","","Return an iterator of target nodes with an edge starting…",45,[[["self"],["n"]],["edges"]]],[11,"edge_weight","","Return a reference to the edge weight connecting `a` with…",45,[[["self"],["n"],["n"]],["option"]]],[11,"edge_weight_mut","","Return a mutable reference to the edge weight connecting…",45,[[["self"],["n"],["n"]],["option"]]],[11,"all_edges","","Return an iterator over all edges of the graph with their…",45,[[["self"]],["alledges"]]],[11,"all_edges_mut","","Return an iterator over all edges of the graph in…",45,[[["self"]],["alledgesmut"]]],[11,"into_graph","","Return a `Graph` that corresponds to this `GraphMap`.",45,[[["self"]],["graph"]]],[0,"dot","petgraph","Simple graphviz dot file format output.",N,N],[3,"Dot","petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",N,N],[4,"Config","","`Dot` configuration.",N,N],[13,"NodeIndexLabel","","Use indices for node labels.",46,N],[13,"EdgeIndexLabel","","Use indices for edge labels.",46,N],[13,"EdgeNoLabel","","Use no edge labels.",46,N],[11,"new","","Create a `Dot` formatting wrapper with default…",47,[[["g"]],["self"]]],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",47,N],[0,"unionfind","petgraph","`UnionFind<K>` is a disjoint-set data structure.",N,N],[3,"UnionFind","petgraph::unionfind","`UnionFind<K>` is a disjoint-set data structure. It tracks…",N,N],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",48,[[["usize"]],["self"]]],[11,"find","","Return the representative for `x`.",48,[[["self"],["k"]],["k"]]],[11,"find_mut","","Return the representative for `x`.",48,[[["self"],["k"]],["k"]]],[11,"union","","Unify the two sets containing `x` and `y`.",48,[[["self"],["k"],["k"]],["bool"]]],[11,"into_labeling","","Return a vector mapping each element to its representative.",48,[[["self"]],["vec"]]],[0,"csr","petgraph","Compressed Sparse Row (CSR) is a sparse adjacency matrix…",N,N],[3,"Csr","petgraph::csr","Compressed Sparse Row ([`CSR`]) is a sparse adjacency…",N,N],[3,"EdgesNotSorted","","Csr creation error: edges were not in sorted order.",N,N],[3,"Edges","","",N,N],[3,"EdgeReference","","",N,N],[3,"EdgeReferences","","",N,N],[3,"Neighbors","","",N,N],[3,"NodeIdentifiers","","",N,N],[6,"NodeIndex","","Csr node index type, a plain integer.",N,N],[6,"EdgeIndex","","Csr edge index type, a plain integer.",N,N],[11,"new","","Create an empty `Csr`.",49,[[],["self"]]],[11,"with_nodes","","Create a new [`Csr`] with `n` nodes. `N` must implement…",49,[[["usize"]],["self"]]],[11,"from_sorted_edges","","Create a new `Csr` from a sorted sequence of edges",49,N],[11,"node_count","","",49,[[["self"]],["usize"]]],[11,"edge_count","","",49,[[["self"]],["usize"]]],[11,"is_directed","","",49,[[["self"]],["bool"]]],[11,"clear_edges","","Remove all edges",49,[[["self"]]]],[11,"add_node","","Adds a new node with the given weight, returning the…",49,[[["self"],["n"]],["nodeindex"]]],[11,"add_edge","","Return `true` if the edge was added",49,[[["self"],["nodeindex"],["nodeindex"],["e"]],["bool"]]],[11,"contains_edge","","Computes in O(log |V|) time.",49,[[["self"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"out_degree","","Computes in O(1) time.",49,[[["self"],["nodeindex"]],["usize"]]],[11,"neighbors_slice","","Computes in O(1) time.",49,N],[11,"edges_slice","","Computes in O(1) time.",49,N],[11,"edges","","Return an iterator of all edges of `a`.",49,[[["self"],["nodeindex"]],["edges"]]],[11,"weight","","Access the edge’s weight.",50,[[["self"]],["e"]]],[0,"prelude","petgraph","Commonly used items.",N,N],[0,"graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",N,N],[3,"Edge","petgraph::graph","The graph's edge type.",N,N],[12,"weight","","Associated edge data.",51,N],[3,"EdgeIndex","","Edge identifier.",N,N],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",N,N],[3,"EdgeReference","","Reference to a `Graph` edge.",N,N],[3,"EdgeReferences","","Iterator over all edges of a graph.",N,N],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",N,N],[3,"Edges","","Iterator over the edges of from or to a node",N,N],[3,"Externals","","An iterator over either the nodes without edges to them or…",N,N],[3,"Frozen","","`Frozen` is a graph wrapper.",N,N],[3,"Graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",N,N],[3,"Neighbors","","Iterator over the neighbors of a node.",N,N],[3,"Node","","The graph's node type.",N,N],[12,"weight","","Associated node data.",52,N],[3,"NodeIndex","","Node identifier.",N,N],[3,"NodeIndices","","Iterator over the node indices of a graph.",N,N],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",N,N],[3,"NodeReferences","","Iterator over all nodes of a graph.",N,N],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",N,N],[5,"edge_index","","Short version of `EdgeIndex::new`",N,[[["usize"]],["edgeindex"]]],[5,"node_index","","Short version of `NodeIndex::new`",N,[[["usize"]],["nodeindex"]]],[6,"DefaultIx","","The default integer type for graph indices. `u32` is the…",N,N],[6,"DiGraph","","A `Graph` with directed edges.",N,N],[6,"UnGraph","","A `Graph` with undirected edges.",N,N],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",N,N],[8,"IndexType","","Trait for the unsigned integer type used for node and edge…",N,N],[10,"new","","",53,[[["usize"]],["self"]]],[10,"index","","",53,[[["self"]],["usize"]]],[10,"max","","",53,[[],["self"]]],[0,"stable_graph","petgraph","`StableGraph` keeps indices stable across removals.",N,N],[3,"StableGraph","petgraph::stable_graph","`StableGraph<N, E, Ty, Ix>` is a graph datastructure using…",N,N],[3,"NodeReferences","","Iterator over all nodes of a graph.",N,N],[3,"EdgeReference","","Reference to a `StableGraph` edge.",N,N],[3,"Edges","","Iterator over the edges of from or to a node",N,N],[3,"EdgeReferences","","Iterator over all edges of a graph.",N,N],[3,"Neighbors","","Iterator over the neighbors of a node.",N,N],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",N,N],[3,"NodeIndices","","Iterator over the node indices of a graph.",N,N],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",N,N],[6,"StableDiGraph","","A `StableGraph` with directed edges.",N,N],[6,"StableUnGraph","","A `StableGraph` with undirected edges.",N,N],[8,"EdgeType","petgraph","A graph's edge type determines whether is has directed…",N,N],[10,"is_directed","","",54,[[],["bool"]]],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into a…",N,N],[16,"NodeId","","",55,N],[10,"into_weighted_edge","","",55,N],[11,"opposite","","Return the opposite `Direction`.",0,[[["self"]],["direction"]]],[11,"index","","Return `0` for `Outgoing` and `1` for `Incoming`.",0,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","petgraph::visit","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_iter","","",60,[[["self"]],["i"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_iter","","",61,[[["self"]],["i"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",62,[[["self"]],["i"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_iter","","",63,[[["self"]],["i"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_iter","","",65,[[["self"]],["i"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","petgraph::data","",66,[[["self"]],["i"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"equivalent","","",33,[[["self"],["k"]],["bool"]]],[11,"from","petgraph::algo","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_iter","","",67,[[["self"]],["i"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","petgraph::algo::dominators","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_iter","","",69,[[["self"]],["i"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","petgraph::graphmap","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_iter","","",70,[[["self"]],["i"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_iter","","",71,[[["self"]],["i"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_iter","","",72,[[["self"]],["i"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_iter","","",73,[[["self"]],["i"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_iter","","",74,[[["self"]],["i"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_iter","","",75,[[["self"]],["i"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"equivalent","","",44,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",76,[[["self"]],["i"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_iter","","",77,[[["self"]],["i"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","petgraph::graph","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"equivalent","","",78,[[["self"],["k"]],["bool"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"equivalent","","",79,[[["self"],["k"]],["bool"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_iter","","",81,[[["self"]],["i"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_iter","","",82,[[["self"]],["i"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_iter","","",83,[[["self"]],["i"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_iter","","",84,[[["self"]],["i"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_iter","","",85,[[["self"]],["i"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_iter","","",87,[[["self"]],["i"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_iter","","",88,[[["self"]],["i"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_iter","","",90,[[["self"]],["i"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_iter","","",91,[[["self"]],["i"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","petgraph::stable_graph","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_iter","","",94,[[["self"]],["i"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_iter","","",96,[[["self"]],["i"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_iter","","",97,[[["self"]],["i"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_iter","","",98,[[["self"]],["i"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_iter","","",100,[[["self"]],["i"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into_iter","","",101,[[["self"]],["i"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_string","petgraph::dot","",47,[[["self"]],["string"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"equivalent","","",46,[[["self"],["k"]],["bool"]]],[11,"from","petgraph::unionfind","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","petgraph::csr","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into_iter","","",103,[[["self"]],["i"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_iter","","",104,[[["self"]],["i"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_iter","","",105,[[["self"]],["i"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into_iter","","",106,[[["self"]],["i"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"continuing","petgraph::visit","",9,[[],["self"]]],[11,"should_break","","",9,[[["self"]],["bool"]]],[11,"walk_next","","",5,[[["self"],["g"]],["option"]]],[11,"walk_next","","",6,[[["self"],["g"]],["option"]]],[11,"walk_next","","",7,[[["self"],["g"]],["option"]]],[11,"walk_next","","",10,[[["self"],["g"]],["option"]]],[11,"source","","",64,N],[11,"target","","",64,N],[11,"weight","","",64,N],[11,"id","","",64,N],[11,"source","petgraph::graph","",89,N],[11,"target","","",89,N],[11,"weight","","",89,[[["self"]],["e"]]],[11,"id","","",89,N],[11,"source","petgraph::stable_graph","",95,N],[11,"target","","",95,N],[11,"weight","","",95,[[["self"]],["e"]]],[11,"id","","",95,N],[11,"source","petgraph::csr","",50,N],[11,"target","","",50,N],[11,"weight","","",50,[[["self"]],["e"]]],[11,"id","","",50,N],[11,"add_node","petgraph::graph","",80,N],[11,"add_edge","","",80,N],[11,"update_edge","","",80,N],[11,"add_node","petgraph::stable_graph","",93,N],[11,"add_edge","","",93,N],[11,"update_edge","","",93,N],[11,"add_node","petgraph::graphmap","",45,N],[11,"add_edge","","",45,N],[11,"update_edge","","",45,N],[11,"with_capacity","petgraph::graph","",80,[[["usize"],["usize"]],["self"]]],[11,"with_capacity","petgraph::stable_graph","",93,[[["usize"],["usize"]],["self"]]],[11,"with_capacity","petgraph::graphmap","",45,[[["usize"],["usize"]],["self"]]],[11,"from_elements","petgraph::graph","",80,[[["i"]],["self"]]],[11,"from_elements","petgraph::stable_graph","",93,[[["i"]],["self"]]],[11,"from_elements","petgraph::graphmap","",45,[[["i"]],["self"]]],[11,"index","petgraph::graph","",78,[[["self"]],["usize"]]],[11,"is_node_index","","",78,[[],["bool"]]],[11,"index","","",79,[[["self"]],["usize"]]],[11,"is_node_index","","",79,[[],["bool"]]],[11,"is_directed","petgraph","",56,[[],["bool"]]],[11,"is_directed","","",57,[[],["bool"]]],[11,"neighbors","petgraph::visit","",3,N],[11,"neighbors_directed","","",3,N],[11,"node_identifiers","","",3,N],[11,"node_references","","",3,N],[11,"edge_references","","",3,N],[11,"node_bound","petgraph::graph","",80,[[["self"]],["usize"]]],[11,"to_index","","",80,[[["self"],["nodeindex"]],["usize"]]],[11,"from_index","","",80,N],[11,"node_bound","petgraph::visit","",1,[[["self"]],["usize"]]],[11,"to_index","","",1,N],[11,"from_index","","",1,N],[11,"node_bound","","",2,[[["self"]],["usize"]]],[11,"to_index","","",2,N],[11,"from_index","","",2,N],[11,"node_bound","","",3,[[["self"]],["usize"]]],[11,"to_index","","",3,N],[11,"from_index","","",3,N],[11,"node_bound","petgraph::graphmap","",45,[[["self"]],["usize"]]],[11,"to_index","","",45,N],[11,"from_index","","",45,N],[11,"node_bound","petgraph::stable_graph","Return an upper bound of the node indices in the graph",93,[[["self"]],["usize"]]],[11,"to_index","","",93,[[["self"],["nodeindex"]],["usize"]]],[11,"from_index","","",93,N],[11,"node_bound","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"to_index","","",92,N],[11,"from_index","","",92,N],[11,"node_bound","petgraph::csr","",49,[[["self"]],["usize"]]],[11,"to_index","","",49,N],[11,"from_index","","",49,N],[11,"node_count","petgraph::graph","",80,[[["self"]],["usize"]]],[11,"node_count","petgraph::stable_graph","",93,[[["self"]],["usize"]]],[11,"node_count","petgraph::visit","",2,[[["self"]],["usize"]]],[11,"node_count","","",3,[[["self"]],["usize"]]],[11,"node_count","petgraph::graphmap","",45,[[["self"]],["usize"]]],[11,"node_count","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"node_count","petgraph::csr","",49,[[["self"]],["usize"]]],[11,"visit_map","petgraph::graph","",80,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",80,N],[11,"visit_map","petgraph::stable_graph","",93,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",93,N],[11,"visit_map","petgraph::graphmap","",45,[[["self"]],["hashset"]]],[11,"reset_map","","",45,N],[11,"visit_map","petgraph::visit","",1,N],[11,"reset_map","","",1,N],[11,"visit_map","","",2,N],[11,"reset_map","","",2,N],[11,"visit_map","","",3,N],[11,"reset_map","","",3,N],[11,"visit_map","petgraph::graph","",92,N],[11,"reset_map","","",92,N],[11,"visit_map","petgraph::csr","",49,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",49,N],[11,"adjacency_matrix","petgraph::graphmap","",45,[[["self"]]]],[11,"is_adjacent","","",45,N],[11,"adjacency_matrix","petgraph::graph","",92,N],[11,"is_adjacent","","",92,N],[11,"adjacency_matrix","","",80,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",80,[[["self"],["fixedbitset"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"adjacency_matrix","petgraph::stable_graph","",93,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",93,[[["self"],["fixedbitset"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"node_weight","petgraph::visit","",1,N],[11,"edge_weight","","",1,N],[11,"node_weight","","",3,N],[11,"edge_weight","","",3,N],[11,"node_weight","petgraph::graph","",80,N],[11,"edge_weight","","",80,N],[11,"node_weight","petgraph::stable_graph","",93,N],[11,"edge_weight","","",93,N],[11,"node_weight","petgraph::graph","",92,N],[11,"edge_weight","","",92,N],[11,"node_weight_mut","petgraph::visit","",3,N],[11,"edge_weight_mut","","",3,N],[11,"node_weight_mut","petgraph::graph","",80,N],[11,"edge_weight_mut","","",80,N],[11,"node_weight_mut","petgraph::stable_graph","",93,N],[11,"edge_weight_mut","","",93,N],[11,"node_weight_mut","petgraph::graph","",92,N],[11,"edge_weight_mut","","",92,N],[11,"next","petgraph::visit","",11,[[["self"]],["option"]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"next","","",61,[[["self"]],["option"]]],[11,"next","","",62,[[["self"]],["option"]]],[11,"next","","",63,[[["self"]],["option"]]],[11,"next","","",65,[[["self"]],["option"]]],[11,"next","petgraph::data","",66,[[["self"]],["option"]]],[11,"next","petgraph::algo::dominators","",69,[[["self"]],["option"]]],[11,"next","petgraph::algo","",67,[[["self"]],["option"]]],[11,"next","petgraph::graphmap","",70,[[["self"]],["option"]]],[11,"size_hint","","",70,N],[11,"next","","",71,[[["self"]],["option"]]],[11,"next","","",72,[[["self"]],["option"]]],[11,"next","","",73,[[["self"]],["option"]]],[11,"next","","",74,[[["self"]],["option"]]],[11,"size_hint","","",74,N],[11,"count","","",74,[[["self"]],["usize"]]],[11,"nth","","",74,[[["self"],["usize"]],["option"]]],[11,"last","","",74,[[["self"]],["option"]]],[11,"next","","",75,[[["self"]],["option"]]],[11,"size_hint","","",75,N],[11,"count","","",75,[[["self"]],["usize"]]],[11,"nth","","",75,[[["self"],["usize"]],["option"]]],[11,"last","","",75,[[["self"]],["option"]]],[11,"next","","",76,[[["self"]],["option"]]],[11,"next","","",77,[[["self"]],["option"]]],[11,"next","petgraph::graph","",81,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",82,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",83,[[["self"]],["option"]]],[11,"next","","",84,[[["self"]],["option"]]],[11,"size_hint","","",84,N],[11,"next","","",85,[[["self"]],["option"]]],[11,"size_hint","","",85,N],[11,"next","","",87,[[["self"]],["option"]]],[11,"size_hint","","",87,N],[11,"next","","",88,[[["self"]],["option"]]],[11,"size_hint","","",88,N],[11,"next","","",90,[[["self"]],["option"]]],[11,"size_hint","","",90,N],[11,"next","","",91,[[["self"]],["option"]]],[11,"size_hint","","",91,N],[11,"next","petgraph::stable_graph","",94,[[["self"]],["option"]]],[11,"size_hint","","",94,N],[11,"next","","",96,[[["self"]],["option"]]],[11,"next","","",97,[[["self"]],["option"]]],[11,"next","","",98,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",100,[[["self"]],["option"]]],[11,"size_hint","","",100,N],[11,"next","","",101,[[["self"]],["option"]]],[11,"size_hint","","",101,N],[11,"next","petgraph::csr","",103,[[["self"]],["option"]]],[11,"next","","",104,[[["self"]],["option"]]],[11,"next","","",105,[[["self"]],["option"]]],[11,"size_hint","","",105,N],[11,"next","","",106,[[["self"]],["option"]]],[11,"size_hint","","",106,N],[11,"eq","petgraph::visit","",4,[[["self"],["time"]],["bool"]]],[11,"ne","","",4,[[["self"],["time"]],["bool"]]],[11,"eq","petgraph::data","",33,[[["self"],["element"]],["bool"]]],[11,"ne","","",33,[[["self"],["element"]],["bool"]]],[11,"eq","petgraph::algo","",43,[[["self"],["cycle"]],["bool"]]],[11,"ne","","",43,[[["self"],["cycle"]],["bool"]]],[11,"eq","","",68,[[["self"],["negativecycle"]],["bool"]]],[11,"ne","","",68,[[["self"],["negativecycle"]],["bool"]]],[11,"eq","petgraph::graphmap","Ptr compares by pointer equality, i.e if they point to the…",44,[[["self"],["ptr"]],["bool"]]],[11,"eq","petgraph::graph","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"ne","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"eq","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"ne","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"eq","","",89,[[["self"],["self"]],["bool"]]],[11,"eq","petgraph::stable_graph","",95,[[["self"],["self"]],["bool"]]],[11,"eq","petgraph::dot","",46,[[["self"],["config"]],["bool"]]],[11,"ne","","",46,[[["self"],["config"]],["bool"]]],[11,"eq","petgraph","",0,[[["self"],["direction"]],["bool"]]],[11,"next_back","petgraph::graphmap","",74,[[["self"]],["option"]]],[11,"next_back","","",75,[[["self"]],["option"]]],[11,"next_back","petgraph::graph","",87,[[["self"]],["option"]]],[11,"next_back","","",88,[[["self"]],["option"]]],[11,"next_back","","",90,[[["self"]],["option"]]],[11,"next_back","","",91,[[["self"]],["option"]]],[11,"next_back","petgraph::stable_graph","",94,[[["self"]],["option"]]],[11,"next_back","","",97,[[["self"]],["option"]]],[11,"next_back","","",100,[[["self"]],["option"]]],[11,"next_back","","",101,[[["self"]],["option"]]],[11,"default","petgraph::visit","",4,[[],["time"]]],[11,"default","","",9,[[],["self"]]],[11,"default","petgraph::algo","",42,[[],["self"]]],[11,"default","petgraph::graphmap","",45,[[],["self"]]],[11,"default","petgraph::graph","",78,[[],["nodeindex"]]],[11,"default","","",79,[[],["edgeindex"]]],[11,"default","","",80,[[],["self"]]],[11,"default","petgraph::stable_graph","",93,[[],["self"]]],[11,"default","petgraph::csr","",49,[[],["self"]]],[11,"cmp","petgraph::visit","",4,[[["self"],["time"]],["ordering"]]],[11,"cmp","petgraph::graphmap","Ptr is ordered by pointer value, i.e. an arbitrary but…",44,[[["self"],["ptr"]],["ordering"]]],[11,"cmp","petgraph::graph","",78,[[["self"],["nodeindex"]],["ordering"]]],[11,"cmp","","",79,[[["self"],["edgeindex"]],["ordering"]]],[11,"cmp","petgraph","",0,[[["self"],["direction"]],["ordering"]]],[11,"clone","petgraph::visit","",4,[[["self"]],["time"]]],[11,"clone","","",8,[[["self"]],["dfsevent"]]],[11,"clone","","",9,[[["self"]],["control"]]],[11,"clone","","",5,[[["self"]],["dfs"]]],[11,"clone","","",6,[[["self"]],["dfspostorder"]]],[11,"clone","","",7,[[["self"]],["bfs"]]],[11,"clone","","",10,[[["self"]],["topo"]]],[11,"clone","","",11,[[["self"]],["walkeriter"]]],[11,"clone","","",1,[[["self"]],["nodefiltered"]]],[11,"clone","","",2,[[["self"]],["edgefiltered"]]],[11,"clone","","",3,[[["self"]],["reversed"]]],[11,"clone","","",64,[[["self"]],["reversededgereference"]]],[11,"clone","petgraph::data","",33,[[["self"]],["element"]]],[11,"clone","petgraph::algo::dominators","",40,[[["self"]],["dominators"]]],[11,"clone","petgraph::algo","",42,[[["self"]],["dfsspace"]]],[11,"clone","","",43,[[["self"]],["cycle"]]],[11,"clone","","",68,[[["self"]],["negativecycle"]]],[11,"clone","petgraph::graphmap","",45,[[["self"]],["graphmap"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","petgraph::graph","",78,[[["self"]],["nodeindex"]]],[11,"clone","","",79,[[["self"]],["edgeindex"]]],[11,"clone","","",52,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"clone_from","","",80,[[["self"],["self"]]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"clone","","",87,[[["self"]],["nodeindices"]]],[11,"clone","","",88,[[["self"]],["edgeindices"]]],[11,"clone","","",89,[[["self"]],["self"]]],[11,"clone","petgraph::stable_graph","",93,[[["self"]],["self"]]],[11,"clone_from","","",93,[[["self"],["self"]]]],[11,"clone","","",95,[[["self"]],["self"]]],[11,"clone","","",99,[[["self"]],["self"]]],[11,"clone","petgraph::unionfind","",48,[[["self"]],["unionfind"]]],[11,"clone","petgraph::csr","",49,[[["self"]],["self"]]],[11,"clone","","",102,[[["self"]],["edgesnotsorted"]]],[11,"clone","","",103,[[["self"]],["edges"]]],[11,"clone","","",50,[[["self"]],["self"]]],[11,"clone","","",105,[[["self"]],["neighbors"]]],[11,"clone","petgraph","",0,[[["self"]],["self"]]],[11,"clone","","",56,[[["self"]],["self"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"extend","petgraph::graphmap","",45,[[["self"],["i"]]]],[11,"from","petgraph::graph","",78,[[["ix"]],["self"]]],[11,"from","petgraph::stable_graph","",93,[[["graph"]],["self"]]],[11,"from","petgraph::graph","",80,[[["stablegraph"]],["self"]]],[11,"partial_cmp","petgraph::visit","",4,[[["self"],["time"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["time"]],["bool"]]],[11,"le","","",4,[[["self"],["time"]],["bool"]]],[11,"gt","","",4,[[["self"],["time"]],["bool"]]],[11,"ge","","",4,[[["self"],["time"]],["bool"]]],[11,"partial_cmp","petgraph::graphmap","",44,[[["self"],["ptr"]],["option",["ordering"]]]],[11,"partial_cmp","petgraph::graph","",78,[[["self"],["nodeindex"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"le","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"gt","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"ge","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"partial_cmp","","",79,[[["self"],["edgeindex"]],["option",["ordering"]]]],[11,"lt","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"le","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"gt","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"ge","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"partial_cmp","petgraph","",0,[[["self"],["direction"]],["option",["ordering"]]]],[11,"fmt","petgraph::visit","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::data","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::algo::dominators","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::algo","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::graphmap","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::graph","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::stable_graph","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::dot","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::unionfind","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::csr","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::dot","",47,[[["self"],["formatter"]],["result"]]],[11,"hash","petgraph::visit","",4,N],[11,"hash","petgraph::graphmap","",44,[[["self"],["h"]]]],[11,"hash","petgraph::graph","",78,N],[11,"hash","","",79,N],[11,"hash","petgraph","",0,N],[11,"deref","petgraph::graphmap","",44,[[["self"]],["t"]]],[11,"deref","petgraph::graph","",92,[[["self"]],["g"]]],[11,"index","petgraph::graphmap","",45,N],[11,"index","petgraph::graph","",80,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",80,[[["self"],["edgeindex"]],["e"]]],[11,"index","petgraph::stable_graph","",93,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",93,[[["self"],["edgeindex"]],["e"]]],[11,"index","petgraph::graph","",92,N],[11,"index","petgraph::csr","",49,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","petgraph::graphmap","",45,N],[11,"index_mut","petgraph::graph","",80,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",80,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","petgraph::stable_graph","",93,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",93,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","petgraph::graph","",92,N],[11,"index_mut","petgraph::csr","",49,[[["self"],["nodeindex"]],["n"]]],[11,"from_iter","petgraph::graphmap","",45,[[["i"]],["self"]]],[11,"iter","petgraph::visit","Create an iterator out of the walker and given `context`.",15,[[["self"],["context"]],["walkeriter"]]],[11,"new","petgraph::stable_graph","Create a new `StableGraph` with directed edges.",93,[[],["self"]]],[11,"with_capacity","","Create a new `StableGraph` with estimated capacity.",93,[[["usize"],["usize"]],["self"]]],[11,"capacity","","Return the current node and edge capacity of the graph.",93,N],[11,"clear","","Remove all nodes and edges",93,[[["self"]]]],[11,"clear_edges","","Remove all edges",93,[[["self"]]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",93,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",93,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",93,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",93,[[["self"],["n"]],["nodeindex"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",93,[[["self"],["nodeindex"]],["option"]]],[11,"contains_node","","",93,[[["self"],["nodeindex"]],["bool"]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",93,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",93,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",93,[[["self"],["edgeindex"]],["option"]]],[11,"node_weight","","Access the weight for node `a`.",93,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",93,[[["self"],["nodeindex"]],["option"]]],[11,"node_indices","","Return an iterator over the node indices of the graph",93,[[["self"]],["nodeindices"]]],[11,"edge_weight","","Access the weight for edge `e`.",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_indices","","Return an iterator over the node indices of the graph",93,[[["self"]],["edgeindices"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",93,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",93,[[["self"],["nodeindex"],["nodeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",93,[[["self"],["nodeindex"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",93,[[["self"],["nodeindex"],["direction"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",93,[[["self"],["nodeindex"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",93,[[["self"],["nodeindex"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",93,[[["self"],["nodeindex"],["direction"]],["edges"]]],[11,"index_twice_mut","","Index the `StableGraph` by two indices, any combination of…",93,N],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",93,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",93,[[["self"],["f"]]]],[11,"from_edges","","Create a new `StableGraph` from an iterable of edges.",93,[[["i"]],["self"]]],[11,"map","","Create a new `StableGraph` by mapping node and edge…",93,[[["self"],["f"],["g"]],["stablegraph"]]],[11,"filter_map","","Create a new `StableGraph` by mapping nodes and edges. A…",93,[[["self"],["f"],["g"]],["stablegraph"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",93,[[["self"],["i"]]]],[11,"weight","","Access the edge’s weight.",95,[[["self"]],["e"]]],[11,"detach","","Return a “walker” object that can be used to step through…",98,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",99,[[["self"],["stablegraph"]],["option"]]],[11,"next_node","","",99,[[["self"],["stablegraph"]],["option",["nodeindex"]]]],[11,"next_edge","","",99,[[["self"],["stablegraph"]],["option",["edgeindex"]]]],[11,"new","petgraph::graph","Create a new `Frozen` from a mutable reference to a graph.",92,[[["g"]],["self"]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",92,N],[11,"new","","",78,[[["usize"]],["self"]]],[11,"index","","",78,[[["self"]],["usize"]]],[11,"end","","",78,[[],["self"]]],[11,"new","","",79,[[["usize"]],["self"]]],[11,"index","","",79,[[["self"]],["usize"]]],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge,…",79,[[],["self"]]],[11,"next_edge","","Accessor for data structure internals: the first edge in…",52,[[["self"],["direction"]],["edgeindex"]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",51,[[["self"],["direction"]],["edgeindex"]]],[11,"source","","Return the source node index.",51,[[["self"]],["nodeindex"]]],[11,"target","","Return the target node index.",51,[[["self"]],["nodeindex"]]],[11,"new","","Create a new `Graph` with directed edges.",80,[[],["self"]]],[11,"new_undirected","","Create a new `Graph` with undirected edges.",80,[[],["self"]]],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",80,[[["usize"],["usize"]],["self"]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",80,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",80,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",80,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",80,[[["self"],["n"]],["nodeindex"]]],[11,"node_weight","","Access the weight for node `a`.",80,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",80,[[["self"],["nodeindex"]],["option"]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",80,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",80,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"edge_weight","","Access the weight for edge `e`.",80,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",80,[[["self"],["edgeindex"]],["option"]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",80,[[["self"],["edgeindex"]],["option"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",80,[[["self"],["nodeindex"]],["option"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",80,[[["self"],["edgeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",80,[[["self"],["nodeindex"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",80,[[["self"],["nodeindex"],["direction"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",80,[[["self"],["nodeindex"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",80,[[["self"],["nodeindex"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",80,[[["self"],["nodeindex"],["direction"]],["edges"]]],[11,"contains_edge","","Lookup if there is an edge from `a` to `b`.",80,[[["self"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",80,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",80,[[["self"],["nodeindex"],["nodeindex"]],["option"]]],[11,"externals","","Return an iterator over either the nodes without edges to…",80,[[["self"],["direction"]],["externals"]]],[11,"node_indices","","Return an iterator over the node indices of the graph",80,[[["self"]],["nodeindices"]]],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node…",80,[[["self"]],["nodeweightsmut"]]],[11,"edge_indices","","Return an iterator over the edge indices of the graph",80,[[["self"]],["edgeindices"]]],[11,"edge_references","","Create an iterator over all edges, in indexed order.",80,[[["self"]],["edgereferences"]]],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge…",80,[[["self"]],["edgeweightsmut"]]],[11,"raw_nodes","","Access the internal node array.",80,N],[11,"raw_edges","","Access the internal edge array.",80,N],[11,"into_nodes_edges","","Convert the graph into a vector of Nodes and a vector of…",80,N],[11,"first_edge","","Accessor for data structure internals: the first edge in…",80,[[["self"],["nodeindex"],["direction"]],["option",["edgeindex"]]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",80,[[["self"],["edgeindex"],["direction"]],["option",["edgeindex"]]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",80,N],[11,"reverse","","Reverse the direction of all edges",80,[[["self"]]]],[11,"clear","","Remove all nodes and edges",80,[[["self"]]]],[11,"clear_edges","","Remove all edges",80,[[["self"]]]],[11,"capacity","","Return the current node and edge capacity of the graph.",80,N],[11,"reserve_nodes","","Reserves capacity for at least `additional` more nodes to…",80,[[["self"],["usize"]]]],[11,"reserve_edges","","Reserves capacity for at least `additional` more edges to…",80,[[["self"],["usize"]]]],[11,"reserve_exact_nodes","","Reserves the minimum capacity for exactly `additional`…",80,[[["self"],["usize"]]]],[11,"reserve_exact_edges","","Reserves the minimum capacity for exactly `additional`…",80,[[["self"],["usize"]]]],[11,"shrink_to_fit_nodes","","Shrinks the capacity of the underlying nodes collection as…",80,[[["self"]]]],[11,"shrink_to_fit_edges","","Shrinks the capacity of the underlying edges collection as…",80,[[["self"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the graph as much as possible.",80,[[["self"]]]],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",80,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",80,[[["self"],["f"]]]],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",80,[[["i"]],["self"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",80,[[["self"],["i"]]]],[11,"map","","Create a new `Graph` by mapping node and edge weights to…",80,[[["self"],["f"],["g"]],["graph"]]],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges. A node or…",80,[[["self"],["f"],["g"]],["graph"]]],[11,"into_edge_type","","Convert the graph into either undirected or directed. No…",80,[[["self"]],["graph"]]],[11,"detach","","Return a “walker” object that can be used to step through…",82,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",86,[[["self"],["graph"]],["option"]]],[11,"next_node","","",86,[[["self"],["graph"]],["option",["nodeindex"]]]],[11,"next_edge","","",86,[[["self"],["graph"]],["option",["edgeindex"]]]],[11,"weight","","Access the edge’s weight.",89,[[["self"]],["e"]]]],"paths":[[4,"Direction"],[3,"NodeFiltered"],[3,"EdgeFiltered"],[3,"Reversed"],[3,"Time"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[4,"DfsEvent"],[4,"Control"],[3,"Topo"],[3,"WalkerIter"],[8,"FilterNode"],[8,"FilterEdge"],[8,"ControlFlow"],[8,"Walker"],[8,"GraphBase"],[8,"IntoNeighbors"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"IntoEdgesDirected"],[8,"IntoNodeIdentifiers"],[8,"Data"],[8,"EdgeRef"],[8,"NodeRef"],[8,"IntoNodeReferences"],[8,"IntoEdgeReferences"],[8,"GraphProp"],[8,"NodeIndexable"],[8,"NodeCount"],[8,"VisitMap"],[8,"Visitable"],[8,"GetAdjacencyMatrix"],[4,"Element"],[8,"DataMap"],[8,"DataMapMut"],[8,"Build"],[8,"Create"],[8,"FromElements"],[8,"ElementIterator"],[3,"Dominators"],[8,"FloatMeasure"],[3,"DfsSpace"],[3,"Cycle"],[3,"Ptr"],[3,"GraphMap"],[4,"Config"],[3,"Dot"],[3,"UnionFind"],[3,"Csr"],[3,"EdgeReference"],[3,"Edge"],[3,"Node"],[8,"IndexType"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[4,"Directed"],[4,"Undirected"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"ReversedEdgeReference"],[3,"ReversedEdgeReferences"],[3,"FilterElements"],[3,"MinSpanningTree"],[3,"NegativeCycle"],[3,"DominatorsIter"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"AllEdges"],[3,"AllEdgesMut"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Frozen"],[3,"StableGraph"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"]]};
searchIndex["phf"]={"doc":"Compile-time generated maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data…",N,N],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,N],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,N],[3,"Map","","An immutable map constructed at compile time.",N,N],[3,"Set","","An immutable set constructed at compile time.",N,N],[3,"OrderedMap","","An order-preserving immutable map constructed at compile…",N,N],[3,"OrderedSet","","An order-preserving immutable set constructed at compile…",N,N],[0,"map","","An immutable map constructed at compile time.",N,N],[3,"Map","phf::map","An immutable map constructed at compile time.",N,N],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",N,N],[3,"Keys","","An iterator over the keys in a `Map`.",N,N],[3,"Values","","An iterator over the values in a `Map`.",N,N],[11,"is_empty","","Returns true if the `Map` is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of entries in the `Map`.",1,[[["self"]],["usize"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",1,[[["self"],["t"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",1,[[["self"],["t"]],["option"]]],[11,"get_key","","Returns a reference to the map's internal static instance…",1,[[["self"],["t"]],["option"]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,[[["self"],["t"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",1,[[["self"]],["values"]]],[0,"set","phf","An immutable set constructed at compile time.",N,N],[3,"Set","phf::set","An immutable set constructed at compile time.",N,N],[3,"Iter","","An iterator over the values in a `Set`.",N,N],[11,"len","","Returns the number of elements in the `Set`.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Set` contains no elements.",2,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",2,[[["self"],["u"]],["option"]]],[11,"contains","","Returns true if `value` is in the `Set`.",2,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",2,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",2,[[["self"],["set"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",2,[[["self"],["set"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",2,[[["self"],["set"]],["bool"]]],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile…",N,N],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile…",N,N],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",N,N],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",N,N],[3,"Values","","An iterator over the values in a `OrderedMap`.",N,N],[11,"len","","Returns the number of entries in the `Map`.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Map` is empty.",3,[[["self"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",3,[[["self"],["t"]],["option"]]],[11,"get_key","","Returns a reference to the map's internal static instance…",3,[[["self"],["t"]],["option"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",3,[[["self"],["t"]],["bool"]]],[11,"get_index","","Returns the index of the key within the list used to…",3,[[["self"],["t"]],["option",["usize"]]]],[11,"index","","Returns references to both the key and values at an index…",3,[[["self"],["usize"]],["option"]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",3,[[["self"],["t"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",3,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",3,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",3,[[["self"]],["values"]]],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile…",N,N],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile…",N,N],[3,"Iter","","An iterator over the values in a `OrderedSet`.",N,N],[11,"len","","Returns the number of elements in the `OrderedSet`.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",4,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",4,[[["self"],["u"]],["option"]]],[11,"get_index","","Returns the index of the key within the list used to…",4,[[["self"],["u"]],["option",["usize"]]]],[11,"index","","Returns a reference to the key at an index within the list…",4,[[["self"],["usize"]],["option"]]],[11,"contains","","Returns true if `value` is in the `Set`.",4,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",4,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"from","phf::map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","phf::set","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","phf::ordered_map","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","phf::ordered_set","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","phf::map","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","phf::set","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","phf::ordered_map","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","phf::ordered_set","",12,[[["self"]],["i"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"next","phf::map","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","phf::set","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","phf::ordered_map","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","phf::ordered_set","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"next_back","phf::map","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","phf::set","",8,[[["self"]],["option"]]],[11,"next_back","phf::ordered_map","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","phf::ordered_set","",12,[[["self"]],["option"]]],[11,"fmt","phf::map","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::set","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::ordered_map","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::ordered_set","",4,[[["self"],["formatter"]],["result"]]],[11,"index","phf::map","",1,[[["self"],["t"]],["v"]]],[11,"index","phf::ordered_map","",3,[[["self"],["t"]],["v"]]]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Set"],[3,"OrderedMap"],[3,"OrderedSet"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"]]};
searchIndex["phf_shared"]={"doc":"","items":[[5,"displace","phf_shared","",N,[[["u32"],["u32"],["u32"],["u32"]],["u32"]]],[5,"split","","",N,N],[5,"hash","","`key` is from `phf_generator::HashState::key`.",N,[[["t"],["u64"]],["u64"]]],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",N,N],[8,"PhfHash","","A trait implemented by types which can be used in PHF data…",N,N],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,N]],"paths":[[8,"PhfHash"]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion…",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees…",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[["self"]],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","proc_macro2::token_stream","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"next","","",10,[[["self"]],["option",["tokentree"]]]],[11,"eq","proc_macro2","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"from","","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"partial_cmp","","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_str","","",3,[[["str"]],["result",["tokenstream","lexerror"]]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",N,N],[10,"append","","For use by `ToTokens` implementations.",0,[[["self"],["u"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",N,N],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the…",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular","","The triangular distribution.",N,N],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter","","An iterator that generates random values of `T` with…",N,N],[3,"Standard","","A generic random value distribution, implemented for many…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem","","The provided iterator contained no items.",5,N],[13,"NegativeWeight","","A weight lower than zero was used.",5,N],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,N],[0,"uniform","","A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct…",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",7,N],[10,"new","","Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample","","Sample a value.",7,N],[11,"sample_single","","Sample a single value uniformly from a range with…",7,N],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,"borrow","","Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],["result",["weightedindex","weightederror"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[0,"rngs","","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",31,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,N],[13,"TinyVariantions","","Variations of deltas of time too small.",31,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,N],[3,"OsRng","","A random number generator that retrieves randomness…",N,N],[3,"EntropyRng","","An interface returning random data from external…",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",N,N],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"],["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by…",N,N],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index","","Index sampling",N,N],[4,"IndexVec","rand::seq::index","A vector of indices.",N,N],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",N,N],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",N,N],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"],["usize"]],["indexvec"]]],[11,"len","","Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",36,[[["self"]],["vec",["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",36,[[["self"]],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",N,N],[16,"Item","","The element type.",37,N],[10,"choose","","Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",37,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",37,N],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",N,N],[11,"choose","","Choose one element at random from the iterator. If you…",38,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into…",38,N],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",38,[[["self"],["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen","","Return a random value supporting the [`Standard`]…",39,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",39,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",39,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",39,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",39,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",39,N],[11,"shuffle","","Shuffle a mutable slice in place.",39,N],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",40,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","rand::rngs","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","rand::rngs::mock","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_iter","rand::seq","",57,[[["self"]],["i"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","rand::seq::index","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"next_u32","rand::rngs","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,N],[11,"try_fill_bytes","","",52,N],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"clone","","",52,[[["self"]],["jitterrng"]]],[11,"eq","","",31,[[["self"],["timererror"]],["bool"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"fmt","rand::rngs","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"read","rand","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","rand::rngs","",53,[[["self"]],["osrng"]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,N],[11,"try_fill_bytes","","",53,N],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","rand::distributions::uniform","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,N],[11,"sample","","",13,N],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["u128"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["i128"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","rand::seq::index","",58,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"eq","rand::distributions","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",36,[[["self"],["indexvec"]],["bool"]]],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"default","","",56,[[],["threadrng"]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",35,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",36,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",36,[[["vec",["u32"]]],["self"]]],[11,"from","","",36,[[["vec",["usize"]]],["self"]]],[11,"fmt","rand::distributions::uniform","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","rand::rngs::mock","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,N],[11,"try_fill_bytes","","",54,N],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,N],[11,"try_fill_bytes","","",55,N],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"from_seed","","",54,N],[11,"from_rng","","",54,[[["r"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],["option",["box"]]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a…",52,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",52,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",52,N],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",52,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",52,[[["self"],["bool"]],["i64"]]],[11,"new","","Create a new `OsRng`.",53,[[],["result",["osrng","error"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"JitterRng"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","items":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that…",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","",1,N]],"paths":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","rand_core::block","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"read","rand_core","",5,N],[11,"next_u32","rand_core::block","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"clone","rand_core::block","",3,[[["self"]],["blockrng"]]],[11,"clone","rand_core","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",4,[[["self"]],["blockrng64"]]],[11,"description","rand_core","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","items":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that…",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",1,N]],"paths":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","items":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",2,[[["u64"]],["self"]]],[11,"try_from","rand_isaac::isaac","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","rand_isaac::isaac64","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the…",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","rand_isaac::isaac","",0,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["r"]],["result",["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["s"]],["result",["error"]]]],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["r"]],["result",["error"]]]]],"paths":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","items":[[3,"JitterRng","rand_jitter","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",0,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",0,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",0,N],[13,"TinyVariantions","","Variations of deltas of time too small.",0,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",0,N],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",1,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",1,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",1,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",1,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",1,[[["self"],["bool"]],["i64"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["timererror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["timererror"]]],[11,"clone","","",1,[[["self"]],["jitterrng"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[4,"TimerError"],[3,"JitterRng"]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","items":[[3,"OsRng","rand_os","A random number generator that retrieves randomness…",N,N],[11,"new","","Create a new `OsRng`.",0,[[],["result",["osrng","error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["osrng"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","items":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","","",0,N],[11,"from_seed","","",1,N]],"paths":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","items":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]]],"paths":[[3,"XorShiftRng"]]};
searchIndex["remove_dir_all"]={"doc":"","items":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its…",N,[[["p"]],["result",["error"]]]]],"paths":[]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["siphasher"]={"doc":"","items":[[0,"sip","siphasher","An implementation of SipHash.",N,N],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",N,N],[3,"SipHasher24","","An implementation of SipHash 2-4.",N,N],[3,"SipHasher","","An implementation of SipHash 2-4.",N,N],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",0,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",0,[[["u64"],["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",0,N],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",1,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",1,[[["u64"],["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",1,N],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",2,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",2,[[["u64"],["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",2,N],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",N,N],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",N,N],[12,"h1","","",3,N],[12,"h2","","",3,N],[3,"SipHasher13","","An implementation of SipHash128 1-3.",N,N],[3,"SipHasher24","","An implementation of SipHash128 2-4.",N,N],[3,"SipHasher","","An implementation of SipHash128 2-4.",N,N],[8,"Hasher128","","",N,N],[10,"finish128","","Return a 128-bit hash",4,[[["self"]],["hash128"]]],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",5,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",5,[[["u64"],["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",5,N],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",6,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",6,[[["u64"],["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",6,N],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",7,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",7,[[["u64"],["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",7,N],[11,"as_bytes","","Convert into a 16-bytes vector",3,N],[11,"try_from","siphasher::sip","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","siphasher::sip128","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"finish128","","Return a 128-bit hash",5,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",6,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",7,[[["self"]],["hash128"]]],[11,"fmt","siphasher::sip","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","siphasher::sip128","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"write","siphasher::sip","",0,N],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",2,N],[11,"finish","","",2,[[["self"]],["u64"]]],[11,"write","siphasher::sip128","",5,N],[11,"finish","","",5,[[["self"]],["u64"]]],[11,"write","","",6,N],[11,"finish","","",6,[[["self"]],["u64"]]],[11,"write","","",7,N],[11,"finish","","",7,[[["self"]],["u64"]]],[11,"clone","siphasher::sip","",1,[[["self"]],["siphasher13"]]],[11,"clone","","",2,[[["self"]],["siphasher24"]]],[11,"clone","","",0,[[["self"]],["siphasher"]]],[11,"clone","siphasher::sip128","",3,[[["self"]],["hash128"]]],[11,"clone","","",6,[[["self"]],["siphasher13"]]],[11,"clone","","",7,[[["self"]],["siphasher24"]]],[11,"clone","","",5,[[["self"]],["siphasher"]]],[11,"default","siphasher::sip","",1,[[],["siphasher13"]]],[11,"default","","",2,[[],["siphasher24"]]],[11,"default","","",0,[[],["siphasher"]]],[11,"default","siphasher::sip128","",3,[[],["hash128"]]],[11,"default","","",6,[[],["siphasher13"]]],[11,"default","","",7,[[],["siphasher24"]]],[11,"default","","",5,[[],["siphasher"]]]],"paths":[[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter","","An iterator over the values stored in the `Slab`",N,N],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",N,N],[3,"Drain","","A draining iterator for `Slab`",N,N],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to…",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["option"]]],[11,"get_unchecked","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the…",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"drain","","Return a draining iterator that removes all elements from…",0,[[["self"]],["drain"]]],[11,"insert","","Insert a value in the entry, returning a mutable reference…",1,[[["self"],["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"default","","",0,[[],["self"]]],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",N,N],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",N,N],[5,"unreachable","","Hint to the optimizer that any code path which calls this…",N,N],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",N,N],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,N],[8,"Array","","Types that can be used as the backing store for a SmallVec",N,N],[16,"Item","","The type of the array's elements.",2,N],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,N],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,N],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,N],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,N],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,N],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,N],[11,"insert","","Insert an element at position `index`, shifting all…",3,N],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["i"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[["self"]],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[["self"]],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,N],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,N],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,N],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,N],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,N],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,N],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",N,N],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,N],[11,"extend_from_slice","","",3,N],[11,"as_mut","","",3,N],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"eq","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"ne","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"as_ref","","",3,N],[11,"into_iter","","",3,N],[11,"default","","",3,[[],["smallvec"]]],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"from","","",3,N],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",3,N],[11,"hash","","",3,[[["self"],["h"]]]],[11,"deref","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"from_iter","","",3,[[["i"]],["smallvec"]]],[11,"borrow","","",3,N],[11,"borrow_mut","","",3,N],[11,"write","","",3,N],[11,"write_all","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",N,N]],"paths":[]};
searchIndex["stderrlog"]={"doc":"A simple logger to provide symantics similar to what is…","items":[[4,"ColorChoice","stderrlog","ColorChoice represents the color preferences of an end user.",N,N],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,N],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,N],[13,"Auto","","Try to use colors, but don't force the issue. If the…",0,N],[13,"Never","","Never emit colors.",0,N],[3,"StdErrLog","","Data specific to this logger",N,N],[4,"Timestamp","","State of the timestampping in the logger.",N,N],[13,"Off","","Disable timestamping of log messages",1,N],[13,"Second","","Timestamp with second granularity",1,N],[13,"Millisecond","","Timestamp with millisecond granularity",1,N],[13,"Microsecond","","Timestamp with microsecond granularity",1,N],[13,"Nanosecond","","Timestamp with nanosecond granularity",1,N],[5,"new","","creates a new stderr logger",N,[[],["stderrlog"]]],[11,"new","","creates a new stderr logger",2,[[],["stderrlog"]]],[11,"verbosity","","Sets the verbosity level of messages that will be displayed",2,[[["self"],["usize"]],["stderrlog"]]],[11,"quiet","","silence all output, no matter the value of verbosity",2,[[["self"],["bool"]],["stderrlog"]]],[11,"timestamp","","Enables or disables the use of timestamps in log messages",2,[[["self"],["timestamp"]],["stderrlog"]]],[11,"color","","Enables or disables the use of color in log messages",2,[[["self"],["colorchoice"]],["stderrlog"]]],[11,"module","","specify a module to allow to log to stderr",2,[[["self"],["t"]],["stderrlog"]]],[11,"modules","","specifiy modules to allow to log to stderr",2,[[["self"],["i"]],["stderrlog"]]],[11,"init","","sets the the logger as active",2,[[["self"]],["result",["setloggererror"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["colorchoice"]],["bool"]]],[11,"clone","","",0,[[["self"]],["colorchoice"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"default","","",2,[[],["self"]]],[11,"clone","","",1,[[["self"]],["timestamp"]]],[11,"clone","","",2,[[["self"]],["stderrlog"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"enabled","","",2,[[["self"],["metadata"]],["bool"]]],[11,"log","","",2,[[["self"],["record"]]]],[11,"flush","","",2,[[["self"]]]]],"paths":[[4,"ColorChoice"],[4,"Timestamp"],[3,"StdErrLog"]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",N,N],[13,"DifferentLengthArgs","","",0,N],[5,"hamming","","Calculates the number of positions in the two strings…",N,[[["str"],["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",N,[[["str"],["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",N,[[["str"],["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",N,[[["str"],["str"]],["usize"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"],["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",N,[[["str"],["str"]],["usize"]]],[6,"HammingResult","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"StrSimError"]]};
searchIndex["structopt"]={"doc":"This crate defines the `StructOpt` trait and its custom…","items":[[0,"clap","structopt","Re-export of clap",N,N],[6,"Result","structopt::clap","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[3,"Values","","An iterator for getting multiple values out of an argument…",N,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",N,N],[13,"Required","","The argument must be used",0,N],[13,"Multiple","","The argument may be used multiple times such as `--flag…",0,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",0,N],[13,"Global","","The argument should be propagated down through all child…",0,N],[13,"Hidden","","The argument should not be shown in help text",0,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",0,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",0,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",0,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",0,N],[13,"HidePossibleValues","","Hides the possible values from the help string",0,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",0,N],[13,"RequireEquals","","Require options use `--option=val` syntax",0,N],[13,"Last","","Specifies that the arg is the last positional argument and…",0,N],[13,"HideDefaultValue","","Hides the default value from the help string",0,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",0,N],[13,"HideEnvValues","","Hides ENV values in the help message",0,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",0,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",0,N],[14,"app_from_crate","","Allows you to build the `App` instance from your…",N,N],[3,"ArgMatches","","Used to get information about the arguments that where…",N,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",1,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",1,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",1,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",1,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",1,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",1,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",1,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",1,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",1,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",1,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",1,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",1,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",1,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",1,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",1,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",1,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",1,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",1,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",1,N],[13,"Format","","Represents a [Format error] (which is a part of…",1,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",N,N],[4,"AppSettings","","Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[14,"crate_authors","","Allows you to pull the authors for the app from your…",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",3,N],[12,"kind","","The type of error",3,N],[12,"info","","Any additional information passed along, such as the…",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[14,"arg_enum","","Convenience macro to generate more complete enums with…",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument…",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",N,N],[3,"App","","Used to create a representation of a command line program…",N,N],[3,"Arg","","The abstract representation of a command line argument.…",N,N],[8,"StructOpt","structopt","A struct that is converted from command line arguments.",N,N],[10,"clap","","Returns the corresponding `clap::App`.",5,[[],["app"]]],[10,"from_clap","","Creates the struct from `clap::ArgMatches`. It cannot fail…",5,[[["argmatches"]],["self"]]],[11,"from_args","","Gets the struct from the command line arguments. Print the…",5,[[],["self"]]],[11,"from_iter","","Gets the struct from any iterator such as a `Vec` of your…",5,[[["i"]],["self"]]],[11,"from_iter_safe","","Gets the struct from any iterator such as a `Vec` of your…",5,[[["i"]],["result",["error"]]]],[11,"into_iter","structopt::clap","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"default","","",6,[[],["values"]]],[11,"default","","",10,[[],["osvalues"]]],[11,"default","","",8,[[],["arggroup"]]],[11,"default","","",7,[[],["argmatches"]]],[11,"default","","",12,[[],["arg"]]],[11,"from","","",12,[[["arg"]],["arg"]]],[11,"from","","",8,[[["arggroup"]],["arggroup"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"eq","","",0,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"eq","","",12,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["self"],["errorkind"]],["bool"]]],[11,"next","","",10,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option",["str"]]]],[11,"size_hint","","",6,N],[11,"description","","",3,[[["self"]],["str"]]],[11,"next_back","","",10,[[["self"]],["option",["osstr"]]]],[11,"next_back","","",6,[[["self"]],["option",["str"]]]],[11,"from_str","","",0,[[["str"]],["result",["argsettings"]]]],[11,"from_str","","",4,[[["str"]],["result",["shell"]]]],[11,"from_str","","",2,[[["str"]],["result",["appsettings"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",9,[[["self"]],["subcommand"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",0,[[["self"]],["argsettings"]]],[11,"clone","","",8,[[["self"]],["arggroup"]]],[11,"clone","","",6,[[["self"]],["values"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","","",12,[[["self"]],["arg"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",11,[[["self"]],["app"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,N],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[["str"]],["arggroup"]]],[11,"arg","","Adds an [argument] to this group by name",8,[[["self"],["str"]],["arggroup"]]],[11,"args","","Adds multiple [arguments] to this group by name",8,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",8,[[["self"],["bool"]],["arggroup"]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[["self"],["bool"]],["arggroup"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[["self"],["str"]],["arggroup"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[["self"],["str"]],["arggroup"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,N],[11,"use_stderr","","Should the message be written to `stdout` or not",3,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",3,N],[11,"with_description","","Create an error with a custom description.",3,[[["str"],["errorkind"]],["error"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[["str"]],["app"]]],[11,"new","","Creates a new instance of an application requiring a name.…",11,[[["s"]],["app"]]],[11,"get_name","","Get the name of the app",11,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",11,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",11,[[["s"]],["app"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",11,[[["self"],["s"]],["app"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",11,[[["self"],["s"]],["app"]]],[11,"about","","Sets a string describing what the program does. This will…",11,[[["self"],["s"]],["app"]]],[11,"long_about","","Sets a string describing what the program does. This will…",11,[[["self"],["s"]],["app"]]],[11,"name","","Sets the program's name. This will be displayed when…",11,[[["self"],["s"]],["app"]]],[11,"after_help","","Adds additional help information to be displayed in…",11,[[["self"],["s"]],["app"]]],[11,"before_help","","Adds additional help information to be displayed in…",11,[[["self"],["s"]],["app"]]],[11,"version","","Sets a string of the version number to be displayed when…",11,[[["self"],["s"]],["app"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",11,[[["self"],["s"]],["app"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",11,[[["self"],["s"]],["app"]]],[11,"help","","Sets a custom help message and overrides the…",11,[[["self"],["s"]],["app"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",11,[[["self"],["s"]],["app"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",11,[[["self"],["s"]],["app"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",11,[[["self"],["s"]],["app"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",11,[[["self"],["s"]],["app"]]],[11,"template","","Sets the help template to be used, overriding the default…",11,[[["self"],["s"]],["app"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",11,[[["self"],["appsettings"]],["app"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",11,N],[11,"global_setting","","Enables a single setting that is propagated down through…",11,[[["self"],["appsettings"]],["app"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",11,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",11,[[["self"],["appsettings"]],["app"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",11,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",11,[[["self"],["usize"]],["app"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",11,[[["self"],["usize"]],["app"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",11,[[["self"],["a"]],["app"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",11,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",11,[[["self"],["str"]],["app"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",11,[[["self"],["str"]],["app"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",11,[[["self"],["s"]],["app"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",11,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",11,[[["self"],["s"]],["app"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",11,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",11,[[["self"],["arggroup"]],["app"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",11,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",11,[[["self"],["app"]],["app"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",11,[[["self"],["i"]],["app"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",11,[[["self"],["usize"]],["app"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",11,[[["self"]],["result",["error"]]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",11,[[["self"]],["result",["error"]]]],[11,"write_help","","Writes the full help message to the user to a…",11,[[["self"],["w"]],["result",["error"]]]],[11,"write_long_help","","Writes the full help message to the user to a…",11,[[["self"],["w"]],["result",["error"]]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",11,[[["self"],["w"]],["result",["error"]]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",11,[[["self"],["w"]],["result",["error"]]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",11,N],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",11,N],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",11,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",11,[[["self"]],["result",["argmatches","error"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",11,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",11,[[["self"],["i"]],["result",["argmatches","error"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",11,[[["self"],["i"]],["result",["argmatches","error"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",12,[[["str"]],["arg"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",12,[[["str"]],["arg"]]],[11,"short","","Sets the short version of the argument without the…",12,[[["self"],["s"]],["arg"]]],[11,"long","","Sets the long version of the argument without the…",12,[[["self"],["str"]],["arg"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",12,[[["self"],["s"]],["arg"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",12,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",12,[[["self"],["s"]],["arg"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",12,N],[11,"help","","Sets the short help text of the argument that will be…",12,[[["self"],["str"]],["arg"]]],[11,"long_help","","Sets the long help text of the argument that will be…",12,[[["self"],["str"]],["arg"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",12,[[["self"],["bool"]],["arg"]]],[11,"required","","Sets whether or not the argument is required by default.…",12,[[["self"],["bool"]],["arg"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",12,[[["self"],["bool"]],["arg"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",12,[[["self"],["bool"]],["arg"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",12,[[["self"],["str"]],["arg"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",12,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",12,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",12,[[["self"],["str"]],["arg"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",12,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",12,[[["self"],["str"]],["arg"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",12,N],[11,"requires","","Sets an argument by name that is required when this one is…",12,[[["self"],["str"]],["arg"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",12,[[["self"],["str"],["str"]],["arg"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",12,N],[11,"required_if","","Allows specifying that an argument is [required]…",12,[[["self"],["str"],["str"]],["arg"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",12,N],[11,"requires_all","","Sets multiple arguments by names that are required when…",12,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",12,[[["self"],["bool"]],["arg"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",12,[[["self"],["bool"]],["arg"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",12,[[["self"],["bool"]],["arg"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",12,[[["self"],["u64"]],["arg"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",12,[[["self"],["bool"]],["arg"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",12,[[["self"],["str"]],["arg"]]],[11,"global","","Specifies that an argument can be matched to all child…",12,[[["self"],["bool"]],["arg"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",12,[[["self"],["bool"]],["arg"]]],[11,"hidden","","Hides an argument from help message output.",12,[[["self"],["bool"]],["arg"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",12,N],[11,"possible_value","","Specifies a possible value for this argument, one at a…",12,[[["self"],["str"]],["arg"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",12,[[["self"],["bool"]],["arg"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",12,[[["self"],["str"]],["arg"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",12,N],[11,"number_of_values","","Specifies how many values are required to satisfy this…",12,[[["self"],["u64"]],["arg"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",12,[[["self"],["f"]],["arg"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",12,[[["self"],["f"]],["arg"]]],[11,"max_values","","Specifies the maximum number of values are for this…",12,[[["self"],["u64"]],["arg"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",12,[[["self"],["u64"]],["arg"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",12,[[["self"],["bool"]],["arg"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",12,[[["self"],["bool"]],["arg"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",12,[[["self"],["str"]],["arg"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",12,N],[11,"value_name","","Specifies the name for value of [option] or [positional]…",12,[[["self"],["str"]],["arg"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",12,[[["self"],["str"]],["arg"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",12,[[["self"],["osstr"]],["arg"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",12,[[["self"],["str"],["option",["str"]],["str"]],["arg"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",12,[[["self"],["str"],["option",["osstr"]],["osstr"]],["arg"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",12,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",12,N],[11,"env","","Specifies that if the value is not passed in as an…",12,[[["self"],["str"]],["arg"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",12,[[["self"],["osstr"]],["arg"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",12,[[["self"],["bool"]],["arg"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",12,[[["self"],["bool"]],["arg"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",12,[[["self"],["usize"]],["arg"]]],[11,"raw","","Indicates that all parameters passed after this should not…",12,[[["self"],["bool"]],["arg"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",12,[[["self"],["bool"]],["arg"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",12,[[["self"],["bool"]],["arg"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",12,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument…",12,[[["self"],["argsettings"]],["arg"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the…",12,[[["self"],["argsettings"]],["arg"]]]],"paths":[[4,"ArgSettings"],[4,"ErrorKind"],[4,"AppSettings"],[3,"Error"],[4,"Shell"],[8,"StructOpt"],[3,"Values"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"App"],[3,"Arg"]]};
searchIndex["structopt_derive"]={"doc":"This crate is custom derive for StructOpt. It should not…","items":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",N,N]],"paths":[]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",42,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",56,N],[12,"lt_token","","",56,N],[12,"args","","",56,N],[12,"gt_token","","",56,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",57,N],[12,"eq_token","","",57,N],[12,"ty","","",57,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",58,N],[12,"colon_token","","",58,N],[12,"bounds","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[3,"Error","","Error returned when a Syn parser cannot parse the input…",N,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional…",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element:…",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Async","","An async block: `async { ... }`.",68,N],[13,"TryBlock","","A try block: `try { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",85,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result"]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result"]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result"]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",87,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",88,N],[3,"As","","`as`",N,N],[12,"span","","",89,N],[3,"Async","","`async`",N,N],[12,"span","","",90,N],[3,"Auto","","`auto`",N,N],[12,"span","","",91,N],[3,"Become","","`become`",N,N],[12,"span","","",92,N],[3,"Box","","`box`",N,N],[12,"span","","",93,N],[3,"Break","","`break`",N,N],[12,"span","","",94,N],[3,"Const","","`const`",N,N],[12,"span","","",95,N],[3,"Continue","","`continue`",N,N],[12,"span","","",96,N],[3,"Crate","","`crate`",N,N],[12,"span","","",97,N],[3,"Default","","`default`",N,N],[12,"span","","",98,N],[3,"Do","","`do`",N,N],[12,"span","","",99,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",100,N],[3,"Else","","`else`",N,N],[12,"span","","",101,N],[3,"Enum","","`enum`",N,N],[12,"span","","",102,N],[3,"Existential","","`existential`",N,N],[12,"span","","",103,N],[3,"Extern","","`extern`",N,N],[12,"span","","",104,N],[3,"Final","","`final`",N,N],[12,"span","","",105,N],[3,"Fn","","`fn`",N,N],[12,"span","","",106,N],[3,"For","","`for`",N,N],[12,"span","","",107,N],[3,"If","","`if`",N,N],[12,"span","","",108,N],[3,"Impl","","`impl`",N,N],[12,"span","","",109,N],[3,"In","","`in`",N,N],[12,"span","","",110,N],[3,"Let","","`let`",N,N],[12,"span","","",111,N],[3,"Loop","","`loop`",N,N],[12,"span","","",112,N],[3,"Macro","","`macro`",N,N],[12,"span","","",113,N],[3,"Match","","`match`",N,N],[12,"span","","",114,N],[3,"Mod","","`mod`",N,N],[12,"span","","",115,N],[3,"Move","","`move`",N,N],[12,"span","","",116,N],[3,"Mut","","`mut`",N,N],[12,"span","","",117,N],[3,"Override","","`override`",N,N],[12,"span","","",118,N],[3,"Priv","","`priv`",N,N],[12,"span","","",119,N],[3,"Pub","","`pub`",N,N],[12,"span","","",120,N],[3,"Ref","","`ref`",N,N],[12,"span","","",121,N],[3,"Return","","`return`",N,N],[12,"span","","",122,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",123,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",124,N],[3,"Static","","`static`",N,N],[12,"span","","",125,N],[3,"Struct","","`struct`",N,N],[12,"span","","",126,N],[3,"Super","","`super`",N,N],[12,"span","","",127,N],[3,"Trait","","`trait`",N,N],[12,"span","","",128,N],[3,"Try","","`try`",N,N],[12,"span","","",129,N],[3,"Type","","`type`",N,N],[12,"span","","",130,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",131,N],[3,"Union","","`union`",N,N],[12,"span","","",132,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",133,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",134,N],[3,"Use","","`use`",N,N],[12,"span","","",135,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",136,N],[3,"Where","","`where`",N,N],[12,"span","","",137,N],[3,"While","","`while`",N,N],[12,"span","","",138,N],[3,"Yield","","`yield`",N,N],[12,"span","","",139,N],[3,"Add","","`+`",N,N],[12,"spans","","",140,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",141,N],[3,"And","","`&`",N,N],[12,"spans","","",142,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",143,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",144,N],[3,"At","","`@`",N,N],[12,"spans","","",145,N],[3,"Bang","","`!`",N,N],[12,"spans","","",146,N],[3,"Caret","","`^`",N,N],[12,"spans","","",147,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",148,N],[3,"Colon","","`:`",N,N],[12,"spans","","",149,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",150,N],[3,"Comma","","`,`",N,N],[12,"spans","","",151,N],[3,"Div","","`/`",N,N],[12,"spans","","",152,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",153,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",154,N],[3,"Dot","","`.`",N,N],[12,"spans","","",155,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",156,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",157,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",158,N],[3,"Eq","","`=`",N,N],[12,"spans","","",159,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",160,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",161,N],[3,"Gt","","`>`",N,N],[12,"spans","","",162,N],[3,"Le","","`<=`",N,N],[12,"spans","","",163,N],[3,"Lt","","`<`",N,N],[12,"spans","","",164,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",165,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",166,N],[3,"Or","","`|`",N,N],[12,"spans","","",167,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",168,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",169,N],[3,"Pound","","`#`",N,N],[12,"spans","","",170,N],[3,"Question","","`?`",N,N],[12,"spans","","",171,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",172,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",173,N],[3,"Rem","","`%`",N,N],[12,"spans","","",174,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",175,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",176,N],[3,"Semi","","`;`",N,N],[12,"spans","","",177,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",178,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",179,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",180,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",181,N],[3,"Star","","`*`",N,N],[12,"spans","","",182,N],[3,"Sub","","`-`",N,N],[12,"spans","","",183,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",184,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",185,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",186,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",187,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",188,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",189,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",186,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",187,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",188,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",189,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],["itermut",["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",23,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],["turbofish"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"value","","",191,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",191,[[["self"]],["result",["error"]]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"new","","",192,N],[11,"value","","",192,[[["self"]],["vec",["u8"]]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["self"],["span"]]]],[11,"new","","",193,[[["u8"],["span"]],["self"]]],[11,"value","","",193,[[["self"]],["u8"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["self"],["span"]]]],[11,"new","","",194,[[["char"],["span"]],["self"]]],[11,"value","","",194,[[["self"]],["char"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["self"],["span"]]]],[11,"new","","",195,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",195,[[["self"]],["u64"]]],[11,"suffix","","",195,[[["self"]],["intsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["self"],["span"]]]],[11,"new","","",196,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",196,[[["self"]],["f64"]]],[11,"suffix","","",196,[[["self"]],["floatsuffix"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"set_span","","",196,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",84,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",60,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",60,[[["self"],["i"]],["bool"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",198,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",198,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",198,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",198,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",198,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",198,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",198,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",198,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",198,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",199,[[["parsestream"]],["result"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",200,N],[13,"End","","",200,N],[11,"new","","Creates an empty punctuated sequence.",201,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",201,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",201,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",201,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",201,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",200,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",200,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",200,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",204,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",205,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",205,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",206,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",207,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree…",207,N],[11,"peek","","Looks at the next token in the parse stream to determine…",207,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",207,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",207,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",207,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",207,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",207,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",207,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",208,[[["span"],["t"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",208,[[["t"],["u"]],["self"]]],[11,"span","","The source location of the error.",208,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",208,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",N,N],[6,"Result","","The result of a Syn parser.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"to_string","","",208,[[["self"]],["string"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",201,[[["self"]],["span"]]],[11,"into_iter","","",201,[[["self"]],["i"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"into_iter","","",242,[[["self"]],["i"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"into_iter","","",243,[[["self"]],["i"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"into_iter","","",244,[[["self"]],["i"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"into_iter","","",245,[[["self"]],["i"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into_iter","","",246,[[["self"]],["i"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"into_iter","","",247,[[["self"]],["i"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"from","syn::parse","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"to_string","","",207,[[["self"]],["string"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"hash","syn","",209,N],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",209,[[["self"],["ident"]],["bool"]]],[11,"eq","","",209,[[["self"],["t"]],["bool"]]],[11,"clone","","",209,[[["self"]],["ident"]]],[11,"cmp","","",209,[[["self"],["ident"]],["ordering"]]],[11,"partial_cmp","","",209,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"to_tokens","","",209,N],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","syn","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"parse_any","","",209,[[["parsestream"]],["result"]]],[11,"parse","syn::token","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","syn","",209,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"next","syn::punctuated","",242,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","","",245,[[["self"]],["option"]]],[11,"next","","",246,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"len","","",244,[[["self"]],["usize"]]],[11,"len","","",245,[[["self"]],["usize"]]],[11,"len","","",246,[[["self"]],["usize"]]],[11,"len","","",247,[[["self"]],["usize"]]],[11,"eq","syn::token","",87,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",88,[[["self"],["abstract"]],["bool"]]],[11,"eq","","",89,[[["self"],["as"]],["bool"]]],[11,"eq","","",90,[[["self"],["async"]],["bool"]]],[11,"eq","","",91,[[["self"],["auto"]],["bool"]]],[11,"eq","","",92,[[["self"],["become"]],["bool"]]],[11,"eq","","",93,[[["self"],["box"]],["bool"]]],[11,"eq","","",94,[[["self"],["break"]],["bool"]]],[11,"eq","","",95,[[["self"],["const"]],["bool"]]],[11,"eq","","",96,[[["self"],["continue"]],["bool"]]],[11,"eq","","",97,[[["self"],["crate"]],["bool"]]],[11,"eq","","",98,[[["self"],["default"]],["bool"]]],[11,"eq","","",99,[[["self"],["do"]],["bool"]]],[11,"eq","","",100,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",101,[[["self"],["else"]],["bool"]]],[11,"eq","","",102,[[["self"],["enum"]],["bool"]]],[11,"eq","","",103,[[["self"],["existential"]],["bool"]]],[11,"eq","","",104,[[["self"],["extern"]],["bool"]]],[11,"eq","","",105,[[["self"],["final"]],["bool"]]],[11,"eq","","",106,[[["self"],["fn"]],["bool"]]],[11,"eq","","",107,[[["self"],["for"]],["bool"]]],[11,"eq","","",108,[[["self"],["if"]],["bool"]]],[11,"eq","","",109,[[["self"],["impl"]],["bool"]]],[11,"eq","","",110,[[["self"],["in"]],["bool"]]],[11,"eq","","",111,[[["self"],["let"]],["bool"]]],[11,"eq","","",112,[[["self"],["loop"]],["bool"]]],[11,"eq","","",113,[[["self"],["macro"]],["bool"]]],[11,"eq","","",114,[[["self"],["match"]],["bool"]]],[11,"eq","","",115,[[["self"],["mod"]],["bool"]]],[11,"eq","","",116,[[["self"],["move"]],["bool"]]],[11,"eq","","",117,[[["self"],["mut"]],["bool"]]],[11,"eq","","",118,[[["self"],["override"]],["bool"]]],[11,"eq","","",119,[[["self"],["priv"]],["bool"]]],[11,"eq","","",120,[[["self"],["pub"]],["bool"]]],[11,"eq","","",121,[[["self"],["ref"]],["bool"]]],[11,"eq","","",122,[[["self"],["return"]],["bool"]]],[11,"eq","","",123,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",124,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","","",125,[[["self"],["static"]],["bool"]]],[11,"eq","","",126,[[["self"],["struct"]],["bool"]]],[11,"eq","","",127,[[["self"],["super"]],["bool"]]],[11,"eq","","",128,[[["self"],["trait"]],["bool"]]],[11,"eq","","",129,[[["self"],["try"]],["bool"]]],[11,"eq","","",130,[[["self"],["type"]],["bool"]]],[11,"eq","","",131,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",132,[[["self"],["union"]],["bool"]]],[11,"eq","","",133,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",134,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",135,[[["self"],["use"]],["bool"]]],[11,"eq","","",136,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",137,[[["self"],["where"]],["bool"]]],[11,"eq","","",138,[[["self"],["while"]],["bool"]]],[11,"eq","","",139,[[["self"],["yield"]],["bool"]]],[11,"eq","","",140,[[["self"],["add"]],["bool"]]],[11,"eq","","",141,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",142,[[["self"],["and"]],["bool"]]],[11,"eq","","",143,[[["self"],["andand"]],["bool"]]],[11,"eq","","",144,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",145,[[["self"],["at"]],["bool"]]],[11,"eq","","",146,[[["self"],["bang"]],["bool"]]],[11,"eq","","",147,[[["self"],["caret"]],["bool"]]],[11,"eq","","",148,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",149,[[["self"],["colon"]],["bool"]]],[11,"eq","","",150,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",151,[[["self"],["comma"]],["bool"]]],[11,"eq","","",152,[[["self"],["div"]],["bool"]]],[11,"eq","","",153,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",154,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",155,[[["self"],["dot"]],["bool"]]],[11,"eq","","",156,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",157,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",158,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",159,[[["self"],["eq"]],["bool"]]],[11,"eq","","",160,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",161,[[["self"],["ge"]],["bool"]]],[11,"eq","","",162,[[["self"],["gt"]],["bool"]]],[11,"eq","","",163,[[["self"],["le"]],["bool"]]],[11,"eq","","",164,[[["self"],["lt"]],["bool"]]],[11,"eq","","",165,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",166,[[["self"],["ne"]],["bool"]]],[11,"eq","","",167,[[["self"],["or"]],["bool"]]],[11,"eq","","",168,[[["self"],["oreq"]],["bool"]]],[11,"eq","","",169,[[["self"],["oror"]],["bool"]]],[11,"eq","","",170,[[["self"],["pound"]],["bool"]]],[11,"eq","","",171,[[["self"],["question"]],["bool"]]],[11,"eq","","",172,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",173,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",174,[[["self"],["rem"]],["bool"]]],[11,"eq","","",175,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",177,[[["self"],["semi"]],["bool"]]],[11,"eq","","",178,[[["self"],["shl"]],["bool"]]],[11,"eq","","",179,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",180,[[["self"],["shr"]],["bool"]]],[11,"eq","","",181,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",182,[[["self"],["star"]],["bool"]]],[11,"eq","","",183,[[["self"],["sub"]],["bool"]]],[11,"eq","","",184,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",185,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",186,[[["self"],["brace"]],["bool"]]],[11,"eq","","",187,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",188,[[["self"],["paren"]],["bool"]]],[11,"eq","","",189,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",64,[[["self"],["meta"]],["bool"]]],[11,"ne","","",64,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",66,[[["self"],["fields"]],["bool"]]],[11,"ne","","",66,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",67,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",67,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",68,[[["self"],["expr"]],["bool"]]],[11,"ne","","",68,[[["self"],["expr"]],["bool"]]],[11,"eq","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",221,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",221,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",239,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",239,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",19,[[["self"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["member"]],["bool"]]],[11,"ne","","",69,[[["self"],["member"]],["bool"]]],[11,"eq","","",20,[[["self"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["generics"]],["bool"]]],[11,"ne","","",23,[[["self"],["generics"]],["bool"]]],[11,"eq","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",22,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",22,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",31,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",76,[[["self"],["lit"]],["bool"]]],[11,"ne","","",76,[[["self"],["lit"]],["bool"]]],[11,"eq","","",191,[[["self"],["self"]],["bool"]]],[11,"eq","","",192,[[["self"],["self"]],["bool"]]],[11,"eq","","",193,[[["self"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["self"]],["bool"]]],[11,"eq","","",195,[[["self"],["self"]],["bool"]]],[11,"eq","","",196,[[["self"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",75,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",74,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",34,[[["self"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",79,[[["self"],["data"]],["bool"]]],[11,"ne","","",79,[[["self"],["data"]],["bool"]]],[11,"eq","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",80,[[["self"],["binop"]],["bool"]]],[11,"ne","","",80,[[["self"],["binop"]],["bool"]]],[11,"eq","","",81,[[["self"],["unop"]],["bool"]]],[11,"ne","","",81,[[["self"],["unop"]],["bool"]]],[11,"eq","","",84,[[["self"],["type"]],["bool"]]],[11,"ne","","",84,[[["self"],["type"]],["bool"]]],[11,"eq","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",41,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",41,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",51,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",51,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",47,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",47,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",49,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",49,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",55,[[["self"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["abi"]],["bool"]]],[11,"ne","","",39,[[["self"],["abi"]],["bool"]]],[11,"eq","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",83,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",83,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",60,[[["self"],["path"]],["bool"]]],[11,"ne","","",60,[[["self"],["path"]],["bool"]]],[11,"eq","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",57,[[["self"],["binding"]],["bool"]]],[11,"ne","","",57,[[["self"],["binding"]],["bool"]]],[11,"eq","","",58,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",58,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",62,[[["self"],["qself"]],["bool"]]],[11,"ne","","",62,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",198,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",198,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",201,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",201,[[["self"],["punctuated"]],["bool"]]],[11,"into_iter","","",201,N],[11,"default","syn::token","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","syn","",23,[[],["generics"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"default","","",86,[[],["self"]]],[11,"default","syn::punctuated","",201,[[],["self"]]],[11,"cmp","syn","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"clone","","",95,[[["self"]],["const"]]],[11,"clone","","",96,[[["self"]],["continue"]]],[11,"clone","","",97,[[["self"]],["crate"]]],[11,"clone","","",98,[[["self"]],["default"]]],[11,"clone","","",99,[[["self"]],["do"]]],[11,"clone","","",100,[[["self"]],["dyn"]]],[11,"clone","","",101,[[["self"]],["else"]]],[11,"clone","","",102,[[["self"]],["enum"]]],[11,"clone","","",103,[[["self"]],["existential"]]],[11,"clone","","",104,[[["self"]],["extern"]]],[11,"clone","","",105,[[["self"]],["final"]]],[11,"clone","","",106,[[["self"]],["fn"]]],[11,"clone","","",107,[[["self"]],["for"]]],[11,"clone","","",108,[[["self"]],["if"]]],[11,"clone","","",109,[[["self"]],["impl"]]],[11,"clone","","",110,[[["self"]],["in"]]],[11,"clone","","",111,[[["self"]],["let"]]],[11,"clone","","",112,[[["self"]],["loop"]]],[11,"clone","","",113,[[["self"]],["macro"]]],[11,"clone","","",114,[[["self"]],["match"]]],[11,"clone","","",115,[[["self"]],["mod"]]],[11,"clone","","",116,[[["self"]],["move"]]],[11,"clone","","",117,[[["self"]],["mut"]]],[11,"clone","","",118,[[["self"]],["override"]]],[11,"clone","","",119,[[["self"]],["priv"]]],[11,"clone","","",120,[[["self"]],["pub"]]],[11,"clone","","",121,[[["self"]],["ref"]]],[11,"clone","","",122,[[["self"]],["return"]]],[11,"clone","","",123,[[["self"]],["selftype"]]],[11,"clone","","",124,[[["self"]],["selfvalue"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",215,[[["self"]],["exprbox"]]],[11,"clone","","",222,[[["self"]],["exprinplace"]]],[11,"clone","","",210,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",227,[[["self"]],["exprmethodcall"]]],[11,"clone","","",235,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",236,[[["self"]],["exprtype"]]],[11,"clone","","",223,[[["self"]],["exprlet"]]],[11,"clone","","",221,[[["self"]],["exprif"]]],[11,"clone","","",238,[[["self"]],["exprwhile"]]],[11,"clone","","",219,[[["self"]],["exprforloop"]]],[11,"clone","","",224,[[["self"]],["exprloop"]]],[11,"clone","","",226,[[["self"]],["exprmatch"]]],[11,"clone","","",217,[[["self"]],["exprclosure"]]],[11,"clone","","",237,[[["self"]],["exprunsafe"]]],[11,"clone","","",214,[[["self"]],["exprblock"]]],[11,"clone","","",211,[[["self"]],["exprassign"]]],[11,"clone","","",212,[[["self"]],["exprassignop"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",228,[[["self"]],["exprrange"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",229,[[["self"]],["exprreference"]]],[11,"clone","","",216,[[["self"]],["exprbreak"]]],[11,"clone","","",218,[[["self"]],["exprcontinue"]]],[11,"clone","","",231,[[["self"]],["exprreturn"]]],[11,"clone","","",225,[[["self"]],["exprmacro"]]],[11,"clone","","",232,[[["self"]],["exprstruct"]]],[11,"clone","","",230,[[["self"]],["exprrepeat"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",220,[[["self"]],["exprgroup"]]],[11,"clone","","",233,[[["self"]],["exprtry"]]],[11,"clone","","",213,[[["self"]],["exprasync"]]],[11,"clone","","",234,[[["self"]],["exprtryblock"]]],[11,"clone","","",239,[[["self"]],["expryield"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"clone","","",240,[[["self"]],["implgenerics"]]],[11,"clone","","",190,[[["self"]],["typegenerics"]]],[11,"clone","","",241,[[["self"]],["turbofish"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litstr"]]],[11,"clone","","",192,[[["self"]],["litbytestr"]]],[11,"clone","","",193,[[["self"]],["litbyte"]]],[11,"clone","","",194,[[["self"]],["litchar"]]],[11,"clone","","",195,[[["self"]],["litint"]]],[11,"clone","","",196,[[["self"]],["litfloat"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",198,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",201,[[["self"]],["punctuated"]]],[11,"clone","syn::parse","",206,[[["self"]],["stepcursor"]]],[11,"clone","syn","",208,[[["self"]],["self"]]],[11,"extend","syn::punctuated","",201,[[["self"],["i"]]]],[11,"extend","","",201,[[["self"],["i"]]]],[11,"from","syn","",209,[[["selfvalue"]],["ident"]]],[11,"from","","",209,[[["selftype"]],["ident"]]],[11,"from","","",209,[[["super"]],["ident"]]],[11,"from","","",209,[[["crate"]],["ident"]]],[11,"from","","",209,[[["extern"]],["ident"]]],[11,"from","","",209,[[["underscore"]],["ident"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"from","","",208,[[["lexerror"]],["self"]]],[11,"drop","syn::parse","",207,[[["self"]]]],[11,"partial_cmp","syn","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"fmt","syn::token","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::punctuated","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",208,[[["self"],["formatter"]],["result"]]],[11,"hash","syn::token","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",92,[[["self"],["h"]]]],[11,"hash","","",93,[[["self"],["h"]]]],[11,"hash","","",94,[[["self"],["h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"hash","","",98,[[["self"],["h"]]]],[11,"hash","","",99,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",103,[[["self"],["h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",105,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["h"]]]],[11,"hash","","",107,[[["self"],["h"]]]],[11,"hash","","",108,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["h"]]]],[11,"hash","","",110,[[["self"],["h"]]]],[11,"hash","","",111,[[["self"],["h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["h"]]]],[11,"hash","","",115,[[["self"],["h"]]]],[11,"hash","","",116,[[["self"],["h"]]]],[11,"hash","","",117,[[["self"],["h"]]]],[11,"hash","","",118,[[["self"],["h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",120,[[["self"],["h"]]]],[11,"hash","","",121,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["h"]]]],[11,"hash","","",123,[[["self"],["h"]]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"hash","","",125,[[["self"],["h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",130,[[["self"],["h"]]]],[11,"hash","","",131,[[["self"],["h"]]]],[11,"hash","","",132,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["h"]]]],[11,"hash","","",135,[[["self"],["h"]]]],[11,"hash","","",136,[[["self"],["h"]]]],[11,"hash","","",137,[[["self"],["h"]]]],[11,"hash","","",138,[[["self"],["h"]]]],[11,"hash","","",139,[[["self"],["h"]]]],[11,"hash","","",140,[[["self"],["h"]]]],[11,"hash","","",141,[[["self"],["h"]]]],[11,"hash","","",142,[[["self"],["h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","","",144,[[["self"],["h"]]]],[11,"hash","","",145,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["h"]]]],[11,"hash","","",147,[[["self"],["h"]]]],[11,"hash","","",148,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",151,[[["self"],["h"]]]],[11,"hash","","",152,[[["self"],["h"]]]],[11,"hash","","",153,[[["self"],["h"]]]],[11,"hash","","",154,[[["self"],["h"]]]],[11,"hash","","",155,[[["self"],["h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["h"]]]],[11,"hash","","",159,[[["self"],["h"]]]],[11,"hash","","",160,[[["self"],["h"]]]],[11,"hash","","",161,[[["self"],["h"]]]],[11,"hash","","",162,[[["self"],["h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["h"]]]],[11,"hash","","",170,[[["self"],["h"]]]],[11,"hash","","",171,[[["self"],["h"]]]],[11,"hash","","",172,[[["self"],["h"]]]],[11,"hash","","",173,[[["self"],["h"]]]],[11,"hash","","",174,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"hash","","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",63,N],[11,"hash","","",64,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",65,N],[11,"hash","","",6,N],[11,"hash","","",66,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",3,N],[11,"hash","","",67,N],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","","",68,N],[11,"hash","","",215,N],[11,"hash","","",222,N],[11,"hash","","",210,N],[11,"hash","","",11,N],[11,"hash","","",227,N],[11,"hash","","",235,N],[11,"hash","","",10,N],[11,"hash","","",18,N],[11,"hash","","",15,N],[11,"hash","","",12,N],[11,"hash","","",236,N],[11,"hash","","",223,N],[11,"hash","","",221,N],[11,"hash","","",238,N],[11,"hash","","",219,N],[11,"hash","","",224,N],[11,"hash","","",226,N],[11,"hash","","",217,N],[11,"hash","","",237,N],[11,"hash","","",214,N],[11,"hash","","",211,N],[11,"hash","","",212,N],[11,"hash","","",13,N],[11,"hash","","",14,N],[11,"hash","","",228,N],[11,"hash","","",17,N],[11,"hash","","",229,N],[11,"hash","","",216,N],[11,"hash","","",218,N],[11,"hash","","",231,N],[11,"hash","","",225,N],[11,"hash","","",232,N],[11,"hash","","",230,N],[11,"hash","","",16,N],[11,"hash","","",220,N],[11,"hash","","",233,N],[11,"hash","","",213,N],[11,"hash","","",234,N],[11,"hash","","",239,N],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",69,N],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",23,N],[11,"hash","","",70,N],[11,"hash","","",29,N],[11,"hash","","",24,N],[11,"hash","","",22,N],[11,"hash","","",240,N],[11,"hash","","",190,N],[11,"hash","","",241,N],[11,"hash","","",21,N],[11,"hash","","",72,N],[11,"hash","","",28,N],[11,"hash","","",71,N],[11,"hash","","",30,N],[11,"hash","","",73,N],[11,"hash","","",27,N],[11,"hash","","",26,N],[11,"hash","","",25,N],[11,"hash","","",31,[[["self"],["h"]]]],[11,"hash","","",76,N],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",32,[[["self"],["h"]]]],[11,"hash","","",33,[[["self"],["h"]]]],[11,"hash","","",77,N],[11,"hash","","",75,N],[11,"hash","","",74,N],[11,"hash","","",78,N],[11,"hash","","",34,[[["self"],["h"]]]],[11,"hash","","",38,N],[11,"hash","","",79,N],[11,"hash","","",36,N],[11,"hash","","",35,N],[11,"hash","","",37,N],[11,"hash","","",80,N],[11,"hash","","",81,N],[11,"hash","","",84,N],[11,"hash","","",52,N],[11,"hash","","",41,N],[11,"hash","","",50,N],[11,"hash","","",51,N],[11,"hash","","",42,N],[11,"hash","","",47,N],[11,"hash","","",54,N],[11,"hash","","",49,N],[11,"hash","","",53,N],[11,"hash","","",44,N],[11,"hash","","",48,N],[11,"hash","","",43,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","","",55,[[["self"],["h"]]]],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",82,N],[11,"hash","","",83,N],[11,"hash","","",60,N],[11,"hash","","",61,N],[11,"hash","","",86,N],[11,"hash","","",85,N],[11,"hash","","",56,N],[11,"hash","","",57,N],[11,"hash","","",58,N],[11,"hash","","",59,N],[11,"hash","","",62,N],[11,"hash","syn::punctuated","",201,N],[11,"deref","syn::parse","",206,N],[11,"index","syn::punctuated","",201,N],[11,"index_mut","","",201,N],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"description","syn","",208,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",182,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",183,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",184,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",209,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",209,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",209,N],[11,"visit_abi","syn::visit","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",248,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",248,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding","","The name which this BindingInfo will bind to.",0,N],[12,"style","","The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs","","",1,N],[12,"ident","","",1,N],[12,"fields","","",1,N],[12,"discriminant","","",1,N],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix","","",2,N],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds","","Changes how bounds are added",N,N],[13,"Both","","Add for fields and generics",3,N],[13,"Fields","","Fields only",3,N],[13,"Generics","","Generics only",3,N],[13,"None","","None",3,N],[4,"BindStyle","","The type of binding to use when generating a pattern.",N,N],[13,"Move","","`x`",4,N],[13,"MoveMut","","`mut x`",4,N],[13,"Ref","","`ref x`",4,N],[13,"RefMut","","`ref mut x`",4,N],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["t"]],["string"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],["vec",["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,N],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,N],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],["vec",["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",5,[[["deriveinput"]],["self"]]],[11,"variants","","Returns a slice of the variants in this Structure.",5,N],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",5,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",5,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",5,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",5,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",5,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",5,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by…",5,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",5,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",5,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",5,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",5,[[["self"]],["vec",["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",5,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",5,[[["self"],["traitbound"],["option"],["addbounds"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",5,[[["self"],["tokenstream"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["self"],["bindstyle"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["variantast"]],["bool"]]],[11,"ne","","",1,[[["self"],["variantast"]],["bool"]]],[11,"eq","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"eq","","",5,[[["self"],["structure"]],["bool"]]],[11,"ne","","",5,[[["self"],["structure"]],["bool"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",5,[[["self"]],["structure"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",5,N],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["tempfile"]={"doc":"Temporary files and directories.","items":[[3,"TempDir","tempfile","A directory in the filesystem that is automatically…",N,N],[3,"NamedTempFile","","A named temporary file.",N,N],[3,"PersistError","","Error returned when persisting a temporary file fails.",N,N],[12,"error","","The underlying IO error.",0,N],[12,"file","","The temporary file that couldn't be persisted.",0,N],[3,"TempPath","","A path to a named temporary file without an open file…",N,N],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but…",N,N],[3,"Builder","","Create a new temporary file or directory with custom…",N,N],[5,"tempdir","","Create a new temporary directory.",N,[[],["result",["tempdir"]]]],[5,"tempdir_in","","Create a new temporary directory.",N,[[["p"]],["result",["tempdir"]]]],[5,"tempfile","","Create a new temporary file.",N,[[],["result",["file"]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",N,[[["p"]],["result",["file"]]]],[5,"spooled_tempfile","","Create a new spooled temporary file.",N,[[["usize"]],["spooledtempfile"]]],[11,"new","","Attempts to make a temporary directory inside of…",1,[[],["result",["tempdir"]]]],[11,"new_in","","Attempts to make a temporary directory inside of `dir`.…",1,[[["p"]],["result",["tempdir"]]]],[11,"path","","Accesses the [`Path`] to the temporary directory.",1,[[["self"]],["path"]]],[11,"into_path","","Persist the temporary directory to disk, returning the…",1,[[["self"]],["pathbuf"]]],[11,"close","","Closes and removes the temporary directory, returing a…",1,[[["self"]],["result"]]],[11,"close","","Close and remove the temporary file.",2,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",2,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",2,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"new","","Create a new named temporary file.",3,[[],["result",["namedtempfile"]]]],[11,"new_in","","Create a new named temporary file in the specified…",3,[[["p"]],["result",["namedtempfile"]]]],[11,"path","","Get the temporary file's path.",3,[[["self"]],["path"]]],[11,"close","","Close and remove the temporary file.",3,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",3,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",3,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"reopen","","Reopen the temporary file.",3,[[["self"]],["result",["file"]]]],[11,"as_file","","Get a reference to the underlying file.",3,[[["self"]],["file"]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",3,[[["self"]],["file"]]],[11,"into_file","","Convert the temporary file into a `std::fs::File`.",3,[[["self"]],["file"]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",3,[[["self"]],["temppath"]]],[11,"new","","",4,[[["usize"]],["spooledtempfile"]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",4,[[["self"]],["bool"]]],[11,"roll","","Rolls over to a file on disk, regardless of current size.…",4,[[["self"]],["result"]]],[11,"set_len","","",4,[[["self"],["u64"]],["result",["error"]]]],[11,"new","","Create a new `Builder`.",5,[[],["self"]]],[11,"prefix","","Set a custom filename prefix.",5,[[["self"],["s"]],["self"]]],[11,"suffix","","Set a custom filename suffix.",5,[[["self"],["s"]],["self"]]],[11,"rand_bytes","","Set the number of random bytes.",5,[[["self"],["usize"]],["self"]]],[11,"tempfile","","Create the named temporary file.",5,[[["self"]],["result",["namedtempfile"]]]],[11,"tempfile_in","","Create the named temporary file in the specified directory.",5,[[["self"],["p"]],["result",["namedtempfile"]]]],[11,"tempdir","","Attempts to make a temporary directory inside of…",5,[[["self"]],["result",["tempdir"]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of `dir`.…",5,[[["self"],["p"]],["result",["tempdir"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","","",5,[[["self"],["builder"]],["bool"]]],[11,"ne","","",5,[[["self"],["builder"]],["bool"]]],[11,"as_ref","","",1,[[["self"]],["path"]]],[11,"as_ref","","",2,[[["self"]],["path"]]],[11,"as_ref","","",2,[[["self"]],["osstr"]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"default","","",5,[[],["self"]]],[11,"clone","","",5,[[["self"]],["builder"]]],[11,"from","","",3,[[["persisterror"]],["namedtempfile"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref","","",2,[[["self"]],["path"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"seek","","",3,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"seek","","",4,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"read","","",3,N],[11,"read","","",4,N],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[3,"PersistError"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"],[3,"Builder"]]};
searchIndex["term_size"]={"doc":"System calls for getting the terminal size.","items":[[5,"dimensions","term_size","Query the current processes's output (`stdout`), input…",N,[[],["option"]]],[5,"dimensions_stdout","","Query the current processes's output (`stdout`) only, in…",N,[[],["option"]]],[5,"dimensions_stdin","","Query the current processes's input (`stdin`) only, in the…",N,[[],["option"]]],[5,"dimensions_stderr","","Query the current processes's error output (`stderr`)…",N,[[],["option"]]]],"paths":[]};
searchIndex["termcolor"]={"doc":"This crate provides a cross platform abstraction for…","items":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports…",N,N],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",N,N],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",N,N],[3,"Buffer","","Write colored text to memory.",N,N],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",N,N],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",N,N],[3,"ColorSpec","","A color specification.",N,N],[3,"ParseColorError","","An error from parsing an invalid color specification.",N,N],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",N,N],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,N],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,N],[13,"Auto","","Try to use colors, but don't force the issue. If the…",0,N],[13,"Never","","Never emit colors.",0,N],[4,"Color","","The set of available colors for the terminal…",N,N],[13,"Black","","",1,N],[13,"Blue","","",1,N],[13,"Green","","",1,N],[13,"Red","","",1,N],[13,"Cyan","","",1,N],[13,"Magenta","","",1,N],[13,"Yellow","","",1,N],[13,"White","","",1,N],[13,"Ansi256","","",1,N],[13,"Rgb","","",1,N],[8,"WriteColor","","This trait describes the behavior of writers that support…",N,N],[10,"supports_color","","Returns true if and only if the underlying writer supports…",2,[[["self"]],["bool"]]],[10,"set_color","","Set the color settings of the writer.",2,[[["self"],["colorspec"]],["result"]]],[10,"reset","","Reset the current color settings to their original settings.",2,[[["self"]],["result"]]],[11,"stdout","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"stderr","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"lock","","Lock the underlying writer.",3,[[["self"]],["standardstreamlock"]]],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",4,[[["colorchoice"]],["bufferwriter"]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",4,[[["colorchoice"]],["bufferwriter"]]],[11,"separator","","If set, the separator given is printed between buffers. By…",4,[[["self"],["option",["vec"]]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",4,[[["self"]],["buffer"]]],[11,"print","","Prints the contents of the given buffer.",4,[[["self"],["buffer"]],["result"]]],[11,"no_color","","Create a buffer that drops all color information.",5,[[],["buffer"]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",5,[[],["buffer"]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",5,[[["self"]],["bool"]]],[11,"len","","Returns the length of this buffer in bytes.",5,[[["self"]],["usize"]]],[11,"clear","","Clears this buffer.",5,[[["self"]]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",5,[[["self"]],["vec",["u8"]]]],[11,"as_slice","","Return the underlying data of the buffer.",5,N],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",5,N],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",6,[[["w"]],["nocolor"]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",6,[[["self"]],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",6,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",6,[[["self"]],["w"]]],[11,"new","","Create a new writer that satisfies `WriteColor` using…",7,[[["w"]],["ansi"]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",7,[[["self"]],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[["self"]],["w"]]],[11,"new","","Create a new color specification that has no colors or…",8,[[],["colorspec"]]],[11,"fg","","Get the foreground color.",8,[[["self"]],["option",["color"]]]],[11,"set_fg","","Set the foreground color.",8,[[["self"],["option",["color"]]],["colorspec"]]],[11,"bg","","Get the background color.",8,[[["self"]],["option",["color"]]]],[11,"set_bg","","Set the background color.",8,[[["self"],["option",["color"]]],["colorspec"]]],[11,"bold","","Get whether this is bold or not.",8,[[["self"]],["bool"]]],[11,"set_bold","","Set whether the text is bolded or not.",8,[[["self"],["bool"]],["colorspec"]]],[11,"underline","","Get whether this is underline or not.",8,[[["self"]],["bool"]]],[11,"set_underline","","Set whether the text is underlined or not.",8,[[["self"],["bool"]],["colorspec"]]],[11,"intense","","Get whether this is intense or not.",8,[[["self"]],["bool"]]],[11,"set_intense","","Set whether the text is intense or not.",8,[[["self"],["bool"]],["colorspec"]]],[11,"is_none","","Returns true if this color specification has no colors or…",8,[[["self"]],["bool"]]],[11,"clear","","Clears this color specification so that it has no…",8,[[["self"]]]],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",9,[[["self"]],["str"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"supports_color","","",3,[[["self"]],["bool"]]],[11,"set_color","","",3,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",3,[[["self"]],["result"]]],[11,"supports_color","","",10,[[["self"]],["bool"]]],[11,"set_color","","",10,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",10,[[["self"]],["result"]]],[11,"supports_color","","",5,[[["self"]],["bool"]]],[11,"set_color","","",5,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",5,[[["self"]],["result"]]],[11,"supports_color","","",6,[[["self"]],["bool"]]],[11,"set_color","","",6,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",6,[[["self"]],["result"]]],[11,"supports_color","","",7,[[["self"]],["bool"]]],[11,"set_color","","",7,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",7,[[["self"]],["result"]]],[11,"eq","","",0,[[["self"],["colorchoice"]],["bool"]]],[11,"eq","","",8,[[["self"],["colorspec"]],["bool"]]],[11,"ne","","",8,[[["self"],["colorspec"]],["bool"]]],[11,"eq","","",1,[[["self"],["color"]],["bool"]]],[11,"ne","","",1,[[["self"],["color"]],["bool"]]],[11,"eq","","",9,[[["self"],["parsecolorerror"]],["bool"]]],[11,"ne","","",9,[[["self"],["parsecolorerror"]],["bool"]]],[11,"default","","",8,[[],["colorspec"]]],[11,"clone","","",0,[[["self"]],["colorchoice"]]],[11,"clone","","",8,[[["self"]],["colorspec"]]],[11,"clone","","",1,[[["self"]],["color"]]],[11,"clone","","",9,[[["self"]],["parsecolorerror"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result",["color","parsecolorerror"]]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",10,N],[11,"flush","","",10,[[["self"]],["result"]]],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"description","","",9,[[["self"]],["str"]]]],"paths":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"],[3,"StandardStreamLock"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"HyphenSplitter","","Simple and default way to split words: splitting on…",N,N],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width","","The width in columns at which the text will be wrapped.",0,N],[12,"initial_indent","","Indentation used for the first line of output.",0,N],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,N],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,N],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter","","An iterator over the lines of the input string which…",N,N],[5,"termwidth","","Return the current terminal width. If the terminal width…",N,[[],["usize"]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["vec",["cow"]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],["intowrapiter",["hyphensplitter"]]]],[5,"indent","","Add prefix to each non-empty line.",N,[[["str"],["str"]],["string"]]],[5,"dedent","","Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[8,"WordSplitter","","An interface for splitting words.",N,N],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],["wrapper",["hyphensplitter"]]]],[11,"with_termwidth","","Create a new Wrapper for wrapping text at the current…",0,[[],["wrapper",["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["usize"],["s"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[["self"],["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[["self"],["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[["self"],["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["vec",["cow"]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["self"],["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"next","","",4,[[["self"]],["option",["cow"]]]],[11,"next","","",5,[[["self"]],["option",["cow"]]]],[11,"clone","","",2,[[["self"]],["nohyphenation"]]],[11,"clone","","",3,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",N,N],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",N,N],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option",["box"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["box"]]]],[11,"size_hint","","",3,N],[11,"into_iter","","",0,[[["self"]],["intoiter"]]],[11,"into_iter","","",1,[[["self"]],["cachedintoiter"]]],[11,"default","","",0,[[],["threadlocal"]]],[11,"default","","",1,[[],["cachedthreadlocal"]]],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["time"]={"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec","","A record specifying a time value in seconds and…",N,N],[12,"sec","","",0,N],[12,"nsec","","",0,N],[3,"PreciseTime","","An opaque structure representing a moment in time.",N,N],[3,"SteadyTime","","A structure representing a moment in time.",N,N],[3,"Tm","","Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,N],[12,"tm_min","","Minutes after the hour - [0, 59]",1,N],[12,"tm_hour","","Hours after midnight - [0, 23]",1,N],[12,"tm_mday","","Day of the month - [1, 31]",1,N],[12,"tm_mon","","Months since January - [0, 11]",1,N],[12,"tm_year","","Years since 1900",1,N],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday","","Days since January 1 - [0, 365]",1,N],[12,"tm_isdst","","Daylight Saving Time flag.",1,N],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",N,N],[4,"ParseError","","",N,N],[13,"InvalidSecond","","",2,N],[13,"InvalidMinute","","",2,N],[13,"InvalidHour","","",2,N],[13,"InvalidDay","","",2,N],[13,"InvalidMonth","","",2,N],[13,"InvalidYear","","",2,N],[13,"InvalidDayOfWeek","","",2,N],[13,"InvalidDayOfMonth","","",2,N],[13,"InvalidDayOfYear","","",2,N],[13,"InvalidZoneOffset","","",2,N],[13,"InvalidTime","","",2,N],[13,"InvalidSecondsSinceEpoch","","",2,N],[13,"MissingFormatConverter","","",2,N],[13,"InvalidFormatSpecifier","","",2,N],[13,"UnexpectedCharacter","","",2,N],[5,"strptime","","Parses the time from the string according to the format…",N,[[["str"],["str"]],["result",["tm","parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",N,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",N,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",N,[[],["f64"]]],[5,"tzset","","",N,[[]]],[5,"empty_tm","","",N,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",N,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",N,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",N,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",N,[[["str"],["tm"]],["result",["string","parseerror"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],["result",["stdduration","outofrangeerror"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["self"],["precisetime"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["self"],["str"]],["result",["tmfmt","parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"ne","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"add","","",3,[[["self"],["duration"]],["duration"]]],[11,"add","","",0,[[["self"],["duration"]],["timespec"]]],[11,"add","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",3,[[["self"],["duration"]],["duration"]]],[11,"sub","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["timespec"]],["duration"]]],[11,"sub","","",5,[[["self"],["steadytime"]],["duration"]]],[11,"sub","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",1,[[["self"],["tm"]],["duration"]]],[11,"mul","","",3,[[["self"],["i32"]],["duration"]]],[11,"div","","",3,[[["self"],["i32"]],["duration"]]],[11,"neg","","",3,[[["self"]],["duration"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["tree_magic"]={"doc":"`tree_magic` is a Rust crate that determines the MIME type…","items":[[3,"TypeStruct","tree_magic","Information about currently loaded MIME types",N,N],[12,"graph","","",0,N],[12,"hash","","",0,N],[3,"TYPE","","The TypeStruct autogenerated at library init, and used by…",N,N],[4,"Cache","","Cache used for each checker for each file",N,N],[13,"FdoMagicSys","","",1,N],[13,"FdoMagicBuiltin","","",1,N],[13,"Basetype","","",1,N],[5,"match_u8","","Checks if the given bytestream matches the given MIME type.",N,N],[5,"from_u8_node","","Gets the type of a file from a raw bytestream, starting at…",N,N],[5,"from_u8","","Gets the type of a file from a byte stream.",N,N],[5,"match_filepath","","Check if the given filepath matches the given MIME type.",N,[[["str"],["path"]],["bool"]]],[5,"from_filepath_node","","Gets the type of a file from a filepath, starting at a…",N,[[["nodeindex"],["path"]],["option",["string"]]]],[5,"from_filepath","","Gets the type of a file from a filepath.",N,[[["path"]],["string"]]],[5,"is_alias","","Determines if a MIME is an alias of another MIME",N,[[["string"],["string"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["cache"]]],[11,"deref","","",2,[[["self"]],["typestruct"]]],[11,"initialize","","",2,[[["self"]]]]],"paths":[[3,"TypeStruct"],[4,"Cache"],[3,"TYPE"]]};
searchIndex["unicase"]={"doc":"UniCase","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",N,N],[3,"Ascii","","Case Insensitive wrapper of Ascii strings.",N,N],[5,"eq","","Compare two string-like types for case-less equality,…",N,[[["s"],["s"]],["bool"]]],[5,"eq_ascii","","Compare two string-like types for case-less equality,…",N,[[["s"],["s"]],["bool"]]],[11,"new","","",0,[[["s"]],["ascii"]]],[11,"new","","Creates a new `UniCase`.",1,[[["s"]],["unicase"]]],[11,"unicode","","Creates a new `UniCase`, skipping the ASCII check.",1,[[["s"]],["unicase"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["s2"]],["bool"]]],[11,"eq","","",1,[[["self"],["unicase"]],["bool"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["unicase"]]],[11,"clone","","",0,[[["self"]],["ascii"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"into","","",1,[[["self"]],["str"]]],[11,"into","","",1,[[["self"]],["string"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",0,[[["self"]],["s"]]],[11,"deref_mut","","",1,[[["self"]],["s"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"deref","","",0,[[["self"]],["s"]]],[11,"deref","","",1,[[["self"]],["s"]]],[11,"from_str","","",0,[[["str"]],["result",["ascii"]]]],[11,"from_str","","",1,[[["str"]],["result",["unicase"]]]]],"paths":[[3,"Ascii"],[3,"UniCase"]]};
searchIndex["unicode_segmentation"]={"doc":"Iterators which split strings on Grapheme Cluster or Word…","items":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",N,N],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",N,N],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",N,N],[3,"UWordBounds","","External iterator for a string's word boundaries.",N,N],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",N,N],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",N,N],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",N,N],[13,"PreContext","","More pre-context is needed. The caller should call…",0,N],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,N],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,N],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,N],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",1,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[["self"]],["str"]]],[11,"new","","Create a new cursor. The string and initial offset are…",3,[[["usize"],["usize"],["bool"]],["graphemecursor"]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",3,[[["self"],["str"],["usize"]]]],[11,"is_boundary","","Determine whether the current cursor location is a…",3,[[["self"],["str"],["usize"]],["result",["bool","graphemeincomplete"]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",3,[[["self"],["str"],["usize"]],["result",["option","graphemeincomplete"]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",3,[[["self"],["str"],["usize"]],["result",["option","graphemeincomplete"]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",4,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",5,[[["self"]],["str"]]],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",N,N],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",N,N],[10,"graphemes","","Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],["graphemes"]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],["graphemeindices"]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["uwordbounds"]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["uwordboundindices"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["graphemeincomplete"]],["bool"]]],[11,"ne","","",0,[[["self"],["graphemeincomplete"]],["bool"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option",["str"]]]],[11,"next_back","","",7,[[["self"]],["option",["str"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option",["str"]]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"size_hint","","",2,N],[11,"next","","",2,[[["self"]],["option",["str"]]]],[11,"next","","",7,[[["self"]],["option",["str"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"size_hint","","",5,N],[11,"next","","",5,[[["self"]],["option",["str"]]]],[11,"clone","","",1,[[["self"]],["graphemeindices"]]],[11,"clone","","",2,[[["self"]],["graphemes"]]],[11,"clone","","",3,[[["self"]],["graphemecursor"]]],[11,"clone","","",5,[[["self"]],["uwordbounds"]]],[11,"clone","","",4,[[["self"]],["uwordboundindices"]]]],"paths":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UWordBoundIndices"],[3,"UWordBounds"],[8,"UnicodeSegmentation"],[3,"UnicodeWords"]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",N,N],[10,"width","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",N,N],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,"VacantEntry","","A vacant Entry.",N,N],[3,"OccupiedEntry","","An occupied Entry.",N,N],[3,"Iter","","An iterator over the key-value pairs of a map.",N,N],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys","","An iterator over the keys of a map.",N,N],[3,"Values","","An iterator over the values of a map.",N,N],[3,"ValuesMut","","An iterator over the values of a map.",N,N],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain","","A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant Entry",0,N],[13,"Occupied","","An occupied Entry",0,N],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[["self"],["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["self"],["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[["self"]],["v"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option",["usize"]]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["intoiter"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"from_iter","","",1,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"clone","","",2,[[["self"]],["void"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["wayland_client"]={"doc":"Client-side Wayland connector","items":[[8,"Interface","wayland_client","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",1,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Display","","A connection to a wayland server",N,N],[3,"ProtocolError","","A protocol error",N,N],[12,"code","","The error code associated to the error",2,N],[12,"object_id","","The id of the object that caused the error",2,N],[12,"object_interface","","The interface of the object that caused the error",2,N],[12,"message","","The message sent by the server describing the error",2,N],[3,"EventQueue","","An event queue for protocol messages",N,N],[3,"QueueToken","","A token representing this event queue",N,N],[3,"ReadEventsGuard","","A guard over a read intention.",N,N],[3,"GlobalManager","","An utility to manage global objects",N,N],[3,"ProxyMap","","A handle to the object map internal to the lib state",N,N],[3,"NewProxy","","A newly-created proxy that needs implementation",N,N],[3,"Proxy","","An handle to a wayland proxy",N,N],[3,"AnonymousObject","","Anonymous interface",N,N],[4,"ConnectError","","Enum representing the possible reasons why connecting to…",N,N],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and…",3,N],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",3,N],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of…",3,N],[13,"InvalidName","","The provided socket name is invalid",3,N],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",3,N],[4,"GlobalError","","An error that occurred trying to bind a global",N,N],[13,"Missing","","The requested global was missing",4,N],[13,"VersionTooLow","","The global advertised by the server has a lower version…",4,N],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",N,N],[13,"New","","A new global was created",5,N],[12,"id","wayland_client::GlobalEvent","Id of the new global",5,N],[12,"interface","","Interface of the new global",5,N],[12,"version","","Maximum supported version of the new global",5,N],[13,"Removed","wayland_client","A global was removed",5,N],[12,"id","wayland_client::GlobalEvent","Id of the removed global",5,N],[12,"interface","","Interface of the removed global",5,N],[11,"connect_to_env","wayland_client","Attempt to connect to a wayland server using the contents…",6,[[],["result",["connecterror"]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given…",6,[[["s"]],["result",["connecterror"]]]],[11,"from_fd","","Attempt to use an already connected unix socket on given…",6,[[["rawfd"]],["result",["connecterror"]]]],[11,"flush","","Non-blocking write to the server",6,[[["self"]],["result"]]],[11,"create_event_queue","","Create a new event queue associated with this wayland…",6,[[["self"]],["eventqueue"]]],[11,"protocol_error","","Retrieve the last protocol error if any occured",6,[[["self"]],["option",["protocolerror"]]]],[11,"dispatch","","Dispatches events from the internal buffer.",7,[[["self"]],["result",["u32"]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",7,[[["self"]],["result",["u32"]]]],[11,"sync_roundtrip","","Synchronous roundtrip",7,[[["self"]],["result",["u32"]]]],[11,"get_token","","Create a new token associated with this event queue",7,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an concurrent read",7,[[["self"]],["option",["readeventsguard"]]]],[11,"get_connection_fd","","Retrieve the file descriptor associated with the wayland…",7,[[["self"]],["rawfd"]]],[11,"read_events","","Read events",8,[[["self"]],["result",["i32"]]]],[11,"cancel","","Cancel the read",8,[[["self"]]]],[11,"new","","Create a global manager handling a registry",9,[[["wldisplay"]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",9,[[["wldisplay"],["f"]],["globalmanager"]]],[11,"instantiate_exact","","Instantiate a global with a specific version",9,[[["self"],["u32"],["f"]],["result",["globalerror"]]]],[11,"instantiate_range","","Instantiate a global from a version range",9,[[["self"],["u32"],["u32"],["f"]],["result",["globalerror"]]]],[11,"list","","Retrieve the list of currently known globals",9,[[["self"]],["vec"]]],[11,"send","","Send a request through this object",10,N],[11,"send_constructor","","Send a request creating an object through this object",10,N],[11,"is_alive","","Check if the object associated with this proxy is still…",10,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object…",10,[[["self"]],["u32"]]],[11,"id","","Retrieve the object id of this wayland object",10,[[["self"]],["u32"]]],[11,"user_data","","Access the arbitrary payload associated to this object",10,[[["self"]],["option"]]],[11,"equals","","Check if the other proxy refers to the same underlying…",10,[[["self"],["proxy"]],["bool"]]],[11,"child","","Create a new child object",10,[[["self"]],["newproxy"]]],[11,"anonymize","","Creates a handle of this proxy with its actual type erased",10,[[["self"]],["proxy",["anonymousobject"]]]],[11,"make_wrapper","","Create a wrapper for this object for queue management",10,[[["self"],["queuetoken"]],["result"]]],[11,"child_placeholder","","Create a placeholder object, to be used with…",10,[[["self"]],["j"]]],[11,"implement","","Implement this proxy using the given handler and…",11,[[["self"],["t"],["ud"]],["i"]]],[11,"implement_closure","","Implement this proxy using the given implementation…",11,[[["self"],["f"],["ud"]],["i"]]],[11,"implement_dummy","","Implement this proxy using a dummy handler which does…",11,[[["self"]],["i"]]],[11,"implement_threadsafe","","Implement this proxy using the given handler and…",11,[[["self"],["t"],["ud"]],["i"]]],[11,"implement_closure_threadsafe","","Implement this proxy using given closure and…",11,[[["self"],["f"],["ud"]],["i"]]],[0,"sinks","","Message sinks",N,N],[5,"message_iterator","wayland_client::sinks","Create a new message iterator and an associated sink.",N,N],[3,"MsgIter","","A message iterator",N,N],[3,"Sink","","The sink end of an message iterator.",N,N],[3,"BlockingMsgIter","","A message iterator linked to an event queue",N,N],[5,"blocking_message_iterator","","Create a blokcing message iterator",N,N],[11,"get","wayland_client","Retrieve the Proxy corresponding to a given id",12,[[["self"],["u32"]],["option",["proxy"]]]],[11,"get_new","","Create a new proxy for given id",12,[[["self"],["u32"]],["option",["newproxy"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",N,N],[0,"wl_display","wayland_client::protocol","core global object",N,N],[3,"WlDisplay","wayland_client::protocol::wl_display","",N,N],[4,"Error","","global error values",N,N],[13,"InvalidObject","","server couldn't find object",13,N],[13,"InvalidMethod","","method doesn't exist on the specified interface",13,N],[13,"NoMemory","","server is out of memory",13,N],[4,"Request","","",N,N],[13,"Sync","","asynchronous roundtrip",14,N],[12,"callback","wayland_client::protocol::wl_display::Request","",14,N],[13,"GetRegistry","wayland_client::protocol::wl_display","get global registry object",14,N],[12,"registry","wayland_client::protocol::wl_display::Request","",14,N],[4,"Event","wayland_client::protocol::wl_display","",N,N],[13,"Error","","fatal error event",15,N],[12,"object_id","wayland_client::protocol::wl_display::Event","",15,N],[12,"code","","",15,N],[12,"message","","",15,N],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",15,N],[12,"id","wayland_client::protocol::wl_display::Event","",15,N],[17,"REQ_SYNC_SINCE","wayland_client::protocol::wl_display","The minimal object version supporting this request",N,N],[17,"REQ_GET_REGISTRY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ERROR_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DELETE_ID_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"error","","fatal error event",16,[[["self"],["wldisplay"],["anonymousobject"],["u32"],["string"]]]],[11,"delete_id","","acknowledge object ID deletion",16,[[["self"],["wldisplay"],["u32"]]]],[0,"wl_registry","wayland_client::protocol","global registry object",N,N],[3,"WlRegistry","wayland_client::protocol::wl_registry","",N,N],[4,"Request","","",N,N],[13,"Bind","","bind an object to the display",17,N],[12,"name","wayland_client::protocol::wl_registry::Request","",17,N],[12,"id","","",17,N],[4,"Event","wayland_client::protocol::wl_registry","",N,N],[13,"Global","","announce global object",18,N],[12,"name","wayland_client::protocol::wl_registry::Event","",18,N],[12,"interface","","",18,N],[12,"version","","",18,N],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",18,N],[12,"name","wayland_client::protocol::wl_registry::Event","",18,N],[17,"REQ_BIND_SINCE","wayland_client::protocol::wl_registry","The minimal object version supporting this request",N,N],[17,"EVT_GLOBAL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_GLOBAL_REMOVE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"global","","announce global object",19,[[["self"],["wlregistry"],["u32"],["string"],["u32"]]]],[11,"global_remove","","announce removal of global object",19,[[["self"],["wlregistry"],["u32"]]]],[0,"wl_callback","wayland_client::protocol","callback object",N,N],[3,"WlCallback","wayland_client::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",20,N],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",20,N],[17,"EVT_DONE_SINCE","wayland_client::protocol::wl_callback","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"done","","done event",21,[[["self"],["wlcallback"],["u32"]]]],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",22,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",22,N],[13,"CreateRegion","wayland_client::protocol::wl_compositor","create new region",22,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",22,N],[4,"Event","wayland_client::protocol::wl_compositor","",N,N],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",23,N],[12,"id","wayland_client::protocol::wl_shm_pool::Request","",23,N],[12,"offset","","",23,N],[12,"width","","",23,N],[12,"height","","",23,N],[12,"stride","","",23,N],[12,"format","","",23,N],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",23,N],[13,"Resize","","change the size of the pool mapping",23,N],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",23,N],[4,"Event","wayland_client::protocol::wl_shm_pool","",N,N],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wl_shm","wayland_client::protocol","shared memory support",N,N],[3,"WlShm","wayland_client::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",24,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",24,N],[13,"InvalidFd","","mmapping the file descriptor failed",24,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",25,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",25,N],[13,"C8","","8-bit color index format, [7:0] C",25,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",25,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",25,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",25,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",25,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",25,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",25,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",25,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",25,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",25,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",25,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",25,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",25,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",25,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",25,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",25,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",25,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",25,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",25,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",25,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",25,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",25,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",25,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",25,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",25,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",25,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",25,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",25,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",25,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",25,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",25,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",25,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",25,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",25,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",25,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",25,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",25,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",25,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",25,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",25,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",25,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",25,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",25,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",25,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",25,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",25,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",25,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",25,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",25,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",25,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",25,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",25,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",25,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",25,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",25,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",25,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",26,N],[12,"id","wayland_client::protocol::wl_shm::Request","",26,N],[12,"fd","","",26,N],[12,"size","","",26,N],[4,"Event","wayland_client::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",27,N],[12,"format","wayland_client::protocol::wl_shm::Event","",27,N],[17,"REQ_CREATE_POOL_SINCE","wayland_client::protocol::wl_shm","The minimal object version supporting this request",N,N],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"format","","pixel format description",28,[[["self"],["wlshm"],["format"]]]],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",29,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",30,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"release","","compositor releases buffer",31,[[["self"],["wlbuffer"]]]],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",32,N],[13,"InvalidActionMask","","action mask contains invalid values",32,N],[13,"InvalidAction","","action argument has an invalid value",32,N],[13,"InvalidOffer","","offer doesn't accept this request",32,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",33,N],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",33,N],[12,"mime_type","","",33,N],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",33,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",33,N],[12,"fd","","",33,N],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",33,N],[13,"Finish","","the offer will no longer be used",33,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",33,N],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",33,N],[12,"preferred_action","","",33,N],[4,"Event","wayland_client::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",34,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",34,N],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",34,N],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",34,N],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",34,N],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",34,N],[17,"REQ_ACCEPT_SINCE","wayland_client::protocol::wl_data_offer","The minimal object version supporting this request",N,N],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"offer","","advertise offered mime type",35,[[["self"],["wldataoffer"],["string"]]]],[11,"source_actions","","notify the source-side available actions",35,[[["self"],["wldataoffer"],["u32"]]]],[11,"action","","notify the selected action",35,[[["self"],["wldataoffer"],["u32"]]]],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",36,N],[13,"InvalidSource","","source doesn't accept this request",36,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",37,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",37,N],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",37,N],[13,"SetActions","","set the available drag-and-drop actions",37,N],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",37,N],[4,"Event","wayland_client::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",38,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",38,N],[13,"Send","wayland_client::protocol::wl_data_source","send the data",38,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",38,N],[12,"fd","","",38,N],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",38,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",38,N],[13,"DndFinished","","the drag-and-drop operation concluded",38,N],[13,"Action","","notify the selected action",38,N],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",38,N],[17,"REQ_OFFER_SINCE","wayland_client::protocol::wl_data_source","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"target","","a target accepts an offered mime type",39,[[["self"],["wldatasource"],["option",["string"]]]]],[11,"send","","send the data",39,[[["self"],["wldatasource"],["string"],["rawfd"]]]],[11,"cancelled","","selection was cancelled",39,[[["self"],["wldatasource"]]]],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",39,[[["self"],["wldatasource"]]]],[11,"dnd_finished","","the drag-and-drop operation concluded",39,[[["self"],["wldatasource"]]]],[11,"action","","notify the selected action",39,[[["self"],["wldatasource"],["u32"]]]],[0,"wl_data_device","wayland_client::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",40,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",41,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",41,N],[12,"origin","","",41,N],[12,"icon","","",41,N],[12,"serial","","",41,N],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",41,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",41,N],[12,"serial","","",41,N],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",41,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",42,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",42,N],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",42,N],[12,"serial","wayland_client::protocol::wl_data_device::Event","",42,N],[12,"surface","","",42,N],[12,"x","","",42,N],[12,"y","","",42,N],[12,"id","","",42,N],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",42,N],[13,"Motion","","drag-and-drop session motion",42,N],[12,"time","wayland_client::protocol::wl_data_device::Event","",42,N],[12,"x","","",42,N],[12,"y","","",42,N],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",42,N],[13,"Selection","","advertise new selection",42,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",42,N],[17,"REQ_START_DRAG_SINCE","wayland_client::protocol::wl_data_device","The minimal object version supporting this request",N,N],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"data_offer","","introduce a new wl_data_offer",43,[[["self"],["wldatadevice"],["newproxy",["wldataoffer"]]]]],[11,"enter","","initiate drag-and-drop session",43,[[["self"],["wldatadevice"],["u32"],["wlsurface"],["f64"],["f64"],["option",["wldataoffer"]]]]],[11,"leave","","end drag-and-drop session",43,[[["self"],["wldatadevice"]]]],[11,"motion","","drag-and-drop session motion",43,[[["self"],["wldatadevice"],["u32"],["f64"],["f64"]]]],[11,"drop","","end drag-and-drop session successfully",43,[[["self"],["wldatadevice"]]]],[11,"selection","","advertise new selection",43,[[["self"],["wldatadevice"],["option",["wldataoffer"]]]]],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",N,N],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",44,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",44,N],[13,"GetDataDevice","wayland_client::protocol::wl_data_device_manager","create a new data device",44,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",44,N],[12,"seat","","",44,N],[4,"Event","wayland_client::protocol::wl_data_device_manager","",N,N],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_client::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",45,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",46,N],[12,"id","wayland_client::protocol::wl_shell::Request","",46,N],[12,"surface","","",46,N],[4,"Event","wayland_client::protocol::wl_shell","",N,N],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",47,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on…",47,N],[13,"Driver","","switch output mode to the smallest mode that can fit the…",47,N],[13,"Fill","","no upscaling, center on output and add black borders to…",47,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",48,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",48,N],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",48,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",48,N],[12,"serial","","",48,N],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",48,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",48,N],[12,"serial","","",48,N],[12,"edges","","",48,N],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",48,N],[13,"SetTransient","","make the surface a transient surface",48,N],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",48,N],[12,"x","","",48,N],[12,"y","","",48,N],[12,"flags","","",48,N],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",48,N],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",48,N],[12,"framerate","","",48,N],[12,"output","","",48,N],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",48,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",48,N],[12,"serial","","",48,N],[12,"parent","","",48,N],[12,"x","","",48,N],[12,"y","","",48,N],[12,"flags","","",48,N],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",48,N],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",48,N],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",48,N],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",48,N],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",48,N],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",48,N],[4,"Event","wayland_client::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",49,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",49,N],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",49,N],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",49,N],[12,"width","","",49,N],[12,"height","","",49,N],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",49,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"ping","","ping client",50,[[["self"],["wlshellsurface"],["u32"]]]],[11,"configure","","suggest resize",50,[[["self"],["wlshellsurface"],["resize"],["i32"],["i32"]]]],[11,"popup_done","","popup interaction is done",50,[[["self"],["wlshellsurface"]]]],[0,"wl_surface","wayland_client::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_client::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",51,N],[13,"InvalidTransform","","buffer transform value is invalid",51,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",52,N],[13,"Attach","","set the surface contents",52,N],[12,"buffer","wayland_client::protocol::wl_surface::Request","",52,N],[12,"x","","",52,N],[12,"y","","",52,N],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",52,N],[12,"x","wayland_client::protocol::wl_surface::Request","",52,N],[12,"y","","",52,N],[12,"width","","",52,N],[12,"height","","",52,N],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",52,N],[12,"callback","wayland_client::protocol::wl_surface::Request","",52,N],[13,"SetOpaqueRegion","wayland_client::protocol::wl_surface","set opaque region",52,N],[12,"region","wayland_client::protocol::wl_surface::Request","",52,N],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",52,N],[12,"region","wayland_client::protocol::wl_surface::Request","",52,N],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",52,N],[13,"SetBufferTransform","","sets the buffer transformation",52,N],[12,"transform","wayland_client::protocol::wl_surface::Request","",52,N],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",52,N],[12,"scale","wayland_client::protocol::wl_surface::Request","",52,N],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",52,N],[12,"x","wayland_client::protocol::wl_surface::Request","",52,N],[12,"y","","",52,N],[12,"width","","",52,N],[12,"height","","",52,N],[4,"Event","wayland_client::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",53,N],[12,"output","wayland_client::protocol::wl_surface::Event","",53,N],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",53,N],[12,"output","wayland_client::protocol::wl_surface::Event","",53,N],[17,"REQ_DESTROY_SINCE","wayland_client::protocol::wl_surface","The minimal object version supporting this request",N,N],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"enter","","surface enters an output",54,[[["self"],["wlsurface"],["wloutput"]]]],[11,"leave","","surface leaves an output",54,[[["self"],["wlsurface"],["wloutput"]]]],[0,"wl_seat","wayland_client::protocol","group of input devices",N,N],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",55,N],[12,"id","wayland_client::protocol::wl_seat::Request","",55,N],[13,"GetKeyboard","wayland_client::protocol::wl_seat","return keyboard object",55,N],[12,"id","wayland_client::protocol::wl_seat::Request","",55,N],[13,"GetTouch","wayland_client::protocol::wl_seat","return touch object",55,N],[12,"id","wayland_client::protocol::wl_seat::Request","",55,N],[13,"Release","wayland_client::protocol::wl_seat","release the seat object",55,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",56,N],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",56,N],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",56,N],[12,"name","wayland_client::protocol::wl_seat::Event","",56,N],[17,"REQ_GET_POINTER_SINCE","wayland_client::protocol::wl_seat","The minimal object version supporting this request",N,N],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"capabilities","","seat capabilities changed",57,[[["self"],["wlseat"],["capability"]]]],[11,"name","","unique identifier for this seat",57,[[["self"],["wlseat"],["string"]]]],[0,"wl_pointer","wayland_client::protocol","pointer input device",N,N],[3,"WlPointer","wayland_client::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",58,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",59,N],[13,"Pressed","","the button is pressed",59,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",60,N],[13,"HorizontalScroll","","horizontal axis",60,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel rotation",61,N],[13,"Finger","","finger on a touch surface",61,N],[13,"Continuous","","continuous coordinate space",61,N],[13,"WheelTilt","","a physical wheel tilt",61,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",62,N],[12,"serial","wayland_client::protocol::wl_pointer::Request","",62,N],[12,"surface","","",62,N],[12,"hotspot_x","","",62,N],[12,"hotspot_y","","",62,N],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",62,N],[4,"Event","","",N,N],[13,"Enter","","enter event",63,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"surface","","",63,N],[12,"surface_x","","",63,N],[12,"surface_y","","",63,N],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",63,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"surface","","",63,N],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",63,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"surface_x","","",63,N],[12,"surface_y","","",63,N],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",63,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"time","","",63,N],[12,"button","","",63,N],[12,"state","","",63,N],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",63,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"axis","","",63,N],[12,"value","","",63,N],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",63,N],[13,"AxisSource","","axis source event",63,N],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",63,N],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",63,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"axis","","",63,N],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",63,N],[12,"axis","wayland_client::protocol::wl_pointer::Event","",63,N],[12,"discrete","","",63,N],[17,"REQ_SET_CURSOR_SINCE","wayland_client::protocol::wl_pointer","The minimal object version supporting this request",N,N],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"enter","","enter event",64,[[["self"],["wlpointer"],["u32"],["wlsurface"],["f64"],["f64"]]]],[11,"leave","","leave event",64,[[["self"],["wlpointer"],["u32"],["wlsurface"]]]],[11,"motion","","pointer motion event",64,[[["self"],["wlpointer"],["u32"],["f64"],["f64"]]]],[11,"button","","pointer button event",64,[[["self"],["wlpointer"],["u32"],["u32"],["u32"],["buttonstate"]]]],[11,"axis","","axis event",64,[[["self"],["wlpointer"],["u32"],["axis"],["f64"]]]],[11,"frame","","end of a pointer event sequence",64,[[["self"],["wlpointer"]]]],[11,"axis_source","","axis source event",64,[[["self"],["wlpointer"],["axissource"]]]],[11,"axis_stop","","axis stop event",64,[[["self"],["wlpointer"],["u32"],["axis"]]]],[11,"axis_discrete","","axis click event",64,[[["self"],["wlpointer"],["axis"],["i32"]]]],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",65,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",65,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",66,N],[13,"Pressed","","key is pressed",66,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",67,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",68,N],[12,"format","wayland_client::protocol::wl_keyboard::Event","",68,N],[12,"fd","","",68,N],[12,"size","","",68,N],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",68,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",68,N],[12,"surface","","",68,N],[12,"keys","","",68,N],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",68,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",68,N],[12,"surface","","",68,N],[13,"Key","wayland_client::protocol::wl_keyboard","key event",68,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",68,N],[12,"time","","",68,N],[12,"key","","",68,N],[12,"state","","",68,N],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",68,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",68,N],[12,"mods_depressed","","",68,N],[12,"mods_latched","","",68,N],[12,"mods_locked","","",68,N],[12,"group","","",68,N],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",68,N],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",68,N],[12,"delay","","",68,N],[17,"REQ_RELEASE_SINCE","wayland_client::protocol::wl_keyboard","The minimal object version supporting this request",N,N],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"keymap","","keyboard mapping",69,[[["self"],["wlkeyboard"],["keymapformat"],["rawfd"],["u32"]]]],[11,"enter","","enter event",69,[[["self"],["wlkeyboard"],["u32"],["wlsurface"],["vec",["u8"]]]]],[11,"leave","","leave event",69,[[["self"],["wlkeyboard"],["u32"],["wlsurface"]]]],[11,"key","","key event",69,[[["self"],["wlkeyboard"],["u32"],["u32"],["u32"],["keystate"]]]],[11,"modifiers","","modifier and group state",69,[[["self"],["wlkeyboard"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"repeat_info","","repeat rate and delay",69,[[["self"],["wlkeyboard"],["i32"],["i32"]]]],[0,"wl_touch","wayland_client::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_client::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",70,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",71,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",71,N],[12,"time","","",71,N],[12,"surface","","",71,N],[12,"id","","",71,N],[12,"x","","",71,N],[12,"y","","",71,N],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",71,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",71,N],[12,"time","","",71,N],[12,"id","","",71,N],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",71,N],[12,"time","wayland_client::protocol::wl_touch::Event","",71,N],[12,"id","","",71,N],[12,"x","","",71,N],[12,"y","","",71,N],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",71,N],[13,"Cancel","","touch session cancelled",71,N],[13,"Shape","","update shape of touch point",71,N],[12,"id","wayland_client::protocol::wl_touch::Event","",71,N],[12,"major","","",71,N],[12,"minor","","",71,N],[13,"Orientation","wayland_client::protocol::wl_touch","update orientation of touch point",71,N],[12,"id","wayland_client::protocol::wl_touch::Event","",71,N],[12,"orientation","","",71,N],[17,"REQ_RELEASE_SINCE","wayland_client::protocol::wl_touch","The minimal object version supporting this request",N,N],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"down","","touch down event and beginning of a touch sequence",72,[[["self"],["wltouch"],["u32"],["u32"],["wlsurface"],["i32"],["f64"],["f64"]]]],[11,"up","","end of a touch event sequence",72,[[["self"],["wltouch"],["u32"],["u32"],["i32"]]]],[11,"motion","","update of touch point coordinates",72,[[["self"],["wltouch"],["u32"],["i32"],["f64"],["f64"]]]],[11,"frame","","end of touch frame event",72,[[["self"],["wltouch"]]]],[11,"cancel","","touch session cancelled",72,[[["self"],["wltouch"]]]],[11,"shape","","update shape of touch point",72,[[["self"],["wltouch"],["i32"],["f64"],["f64"]]]],[11,"orientation","","update orientation of touch point",72,[[["self"],["wltouch"],["i32"],["f64"]]]],[0,"wl_output","wayland_client::protocol","compositor output region",N,N],[3,"Mode","wayland_client::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",73,N],[13,"None","","no geometry",73,N],[13,"HorizontalRgb","","horizontal RGB",73,N],[13,"HorizontalBgr","","horizontal BGR",73,N],[13,"VerticalRgb","","vertical RGB",73,N],[13,"VerticalBgr","","vertical BGR",73,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",74,N],[13,"_90","","90 degrees counter-clockwise",74,N],[13,"_180","","180 degrees counter-clockwise",74,N],[13,"_270","","270 degrees counter-clockwise",74,N],[13,"Flipped","","180 degree flip around a vertical axis",74,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",74,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",74,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",74,N],[4,"Request","","",N,N],[13,"Release","","release the output object",75,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",76,N],[12,"x","wayland_client::protocol::wl_output::Event","",76,N],[12,"y","","",76,N],[12,"physical_width","","",76,N],[12,"physical_height","","",76,N],[12,"subpixel","","",76,N],[12,"make","","",76,N],[12,"model","","",76,N],[12,"transform","","",76,N],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",76,N],[12,"flags","wayland_client::protocol::wl_output::Event","",76,N],[12,"width","","",76,N],[12,"height","","",76,N],[12,"refresh","","",76,N],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",76,N],[13,"Scale","","output scaling properties",76,N],[12,"factor","wayland_client::protocol::wl_output::Event","",76,N],[17,"REQ_RELEASE_SINCE","wayland_client::protocol::wl_output","The minimal object version supporting this request",N,N],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"geometry","","properties of the output",77,[[["self"],["wloutput"],["i32"],["i32"],["i32"],["i32"],["subpixel"],["string"],["string"],["transform"]]]],[11,"mode","","advertise available modes for the output",77,[[["self"],["wloutput"],["mode"],["i32"],["i32"],["i32"]]]],[11,"done","","sent all information about output",77,[[["self"],["wloutput"]]]],[11,"scale","","output scaling properties",77,[[["self"],["wloutput"],["i32"]]]],[0,"wl_region","wayland_client::protocol","region interface",N,N],[3,"WlRegion","wayland_client::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",78,N],[13,"Add","","add rectangle to region",78,N],[12,"x","wayland_client::protocol::wl_region::Request","",78,N],[12,"y","","",78,N],[12,"width","","",78,N],[12,"height","","",78,N],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",78,N],[12,"x","wayland_client::protocol::wl_region::Request","",78,N],[12,"y","","",78,N],[12,"width","","",78,N],[12,"height","","",78,N],[4,"Event","wayland_client::protocol::wl_region","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",79,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",80,N],[13,"GetSubsurface","","give a surface the role sub-surface",80,N],[12,"id","wayland_client::protocol::wl_subcompositor::Request","",80,N],[12,"surface","","",80,N],[12,"parent","","",80,N],[4,"Event","wayland_client::protocol::wl_subcompositor","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",81,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",82,N],[13,"SetPosition","","reposition the sub-surface",82,N],[12,"x","wayland_client::protocol::wl_subsurface::Request","",82,N],[12,"y","","",82,N],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",82,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",82,N],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",82,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",82,N],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",82,N],[13,"SetDesync","","set sub-surface to desynchronized mode",82,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"error","wayland_client::protocol::wl_display","fatal error event",16,[[["self"],["wldisplay"],["anonymousobject"],["u32"],["string"]]]],[11,"delete_id","","acknowledge object ID deletion",16,[[["self"],["wldisplay"],["u32"]]]],[11,"from_raw","","",13,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",13,[[["self"]],["u32"]]],[11,"sync","","asynchronous roundtrip",83,[[["self"],["f"]],["result",["wlcallback"]]]],[11,"get_registry","","get global registry object",83,[[["self"],["f"]],["result",["wlregistry"]]]],[11,"global","wayland_client::protocol::wl_registry","announce global object",19,[[["self"],["wlregistry"],["u32"],["string"],["u32"]]]],[11,"global_remove","","announce removal of global object",19,[[["self"],["wlregistry"],["u32"]]]],[11,"bind","","bind an object to the display",84,[[["self"],["u32"],["u32"],["f"]],["result"]]],[11,"done","wayland_client::protocol::wl_callback","done event",21,[[["self"],["wlcallback"],["u32"]]]],[11,"create_surface","wayland_client::protocol::wl_compositor","create new surface",85,[[["self"],["f"]],["result",["wlsurface"]]]],[11,"create_region","","create new region",85,[[["self"],["f"]],["result",["wlregion"]]]],[11,"create_buffer","wayland_client::protocol::wl_shm_pool","create a buffer from the pool",86,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"],["f"]],["result",["wlbuffer"]]]],[11,"destroy","","destroy the pool",86,N],[11,"resize","","change the size of the pool mapping",86,N],[11,"format","wayland_client::protocol::wl_shm","pixel format description",28,[[["self"],["wlshm"],["format"]]]],[11,"from_raw","","",24,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",24,[[["self"]],["u32"]]],[11,"from_raw","","",25,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",25,[[["self"]],["u32"]]],[11,"create_pool","","create a shm pool",87,[[["self"],["rawfd"],["i32"],["f"]],["result",["wlshmpool"]]]],[11,"release","wayland_client::protocol::wl_buffer","compositor releases buffer",31,[[["self"],["wlbuffer"]]]],[11,"destroy","","destroy a buffer",88,N],[11,"offer","wayland_client::protocol::wl_data_offer","advertise offered mime type",35,[[["self"],["wldataoffer"],["string"]]]],[11,"source_actions","","notify the source-side available actions",35,[[["self"],["wldataoffer"],["u32"]]]],[11,"action","","notify the selected action",35,[[["self"],["wldataoffer"],["u32"]]]],[11,"from_raw","","",32,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",32,[[["self"]],["u32"]]],[11,"accept","","accept one of the offered mime types",89,N],[11,"receive","","request that the data is transferred",89,N],[11,"destroy","","destroy data offer",89,N],[11,"finish","","the offer will no longer be used",89,N],[11,"set_actions","","set the available/preferred drag-and-drop actions",89,N],[11,"target","wayland_client::protocol::wl_data_source","a target accepts an offered mime type",39,[[["self"],["wldatasource"],["option",["string"]]]]],[11,"send","","send the data",39,[[["self"],["wldatasource"],["string"],["rawfd"]]]],[11,"cancelled","","selection was cancelled",39,[[["self"],["wldatasource"]]]],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",39,[[["self"],["wldatasource"]]]],[11,"dnd_finished","","the drag-and-drop operation concluded",39,[[["self"],["wldatasource"]]]],[11,"action","","notify the selected action",39,[[["self"],["wldatasource"],["u32"]]]],[11,"from_raw","","",36,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",36,[[["self"]],["u32"]]],[11,"offer","","add an offered mime type",90,N],[11,"destroy","","destroy the data source",90,N],[11,"set_actions","","set the available drag-and-drop actions",90,N],[11,"data_offer","wayland_client::protocol::wl_data_device","introduce a new wl_data_offer",43,[[["self"],["wldatadevice"],["newproxy",["wldataoffer"]]]]],[11,"enter","","initiate drag-and-drop session",43,[[["self"],["wldatadevice"],["u32"],["wlsurface"],["f64"],["f64"],["option",["wldataoffer"]]]]],[11,"leave","","end drag-and-drop session",43,[[["self"],["wldatadevice"]]]],[11,"motion","","drag-and-drop session motion",43,[[["self"],["wldatadevice"],["u32"],["f64"],["f64"]]]],[11,"drop","","end drag-and-drop session successfully",43,[[["self"],["wldatadevice"]]]],[11,"selection","","advertise new selection",43,[[["self"],["wldatadevice"],["option",["wldataoffer"]]]]],[11,"from_raw","","",40,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",40,[[["self"]],["u32"]]],[11,"start_drag","","start drag-and-drop operation",91,N],[11,"set_selection","","copy data to the selection",91,N],[11,"release","","destroy data device",91,N],[18,"None","wayland_client::protocol::wl_data_device_manager","no action",92,N],[18,"Copy","","copy action",92,N],[18,"Move","","move action",92,N],[18,"Ask","","ask action",92,N],[11,"empty","","Returns an empty set of flags.",92,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",92,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",92,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",92,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",92,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",92,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",92,[[["self"],["dndaction"],["bool"]]]],[11,"from_raw","","",92,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"create_data_source","","create a new data source",93,[[["self"],["f"]],["result",["wldatasource"]]]],[11,"get_data_device","","create a new data device",93,[[["self"],["wlseat"],["f"]],["result",["wldatadevice"]]]],[11,"from_raw","wayland_client::protocol::wl_shell","",45,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",45,[[["self"]],["u32"]]],[11,"get_shell_surface","","create a shell surface from a surface",94,[[["self"],["wlsurface"],["f"]],["result",["wlshellsurface"]]]],[11,"ping","wayland_client::protocol::wl_shell_surface","ping client",50,[[["self"],["wlshellsurface"],["u32"]]]],[11,"configure","","suggest resize",50,[[["self"],["wlshellsurface"],["resize"],["i32"],["i32"]]]],[11,"popup_done","","popup interaction is done",50,[[["self"],["wlshellsurface"]]]],[18,"None","","no edge",95,N],[18,"Top","","top edge",95,N],[18,"Bottom","","bottom edge",95,N],[18,"Left","","left edge",95,N],[18,"TopLeft","","top and left edges",95,N],[18,"BottomLeft","","bottom and left edges",95,N],[18,"Right","","right edge",95,N],[18,"TopRight","","top and right edges",95,N],[18,"BottomRight","","bottom and right edges",95,N],[11,"empty","","Returns an empty set of flags.",95,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",95,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",95,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",95,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",95,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",95,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",95,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",95,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",95,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",95,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",95,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",95,[[["self"],["resize"],["bool"]]]],[11,"from_raw","","",95,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",95,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",96,N],[11,"empty","","Returns an empty set of flags.",96,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",96,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",96,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",96,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",96,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",96,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",96,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",96,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",96,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",96,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",96,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",96,[[["self"],["transient"],["bool"]]]],[11,"from_raw","","",96,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",96,[[["self"]],["u32"]]],[11,"from_raw","","",47,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",47,[[["self"]],["u32"]]],[11,"pong","","respond to a ping event",97,N],[11,"_move","","start an interactive move",97,N],[11,"resize","","start an interactive resize",97,N],[11,"set_toplevel","","make the surface a toplevel surface",97,N],[11,"set_transient","","make the surface a transient surface",97,N],[11,"set_fullscreen","","make the surface a fullscreen surface",97,N],[11,"set_popup","","make the surface a popup surface",97,N],[11,"set_maximized","","make the surface a maximized surface",97,N],[11,"set_title","","set surface title",97,N],[11,"set_class","","set surface class",97,N],[11,"enter","wayland_client::protocol::wl_surface","surface enters an output",54,[[["self"],["wlsurface"],["wloutput"]]]],[11,"leave","","surface leaves an output",54,[[["self"],["wlsurface"],["wloutput"]]]],[11,"from_raw","","",51,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",51,[[["self"]],["u32"]]],[11,"destroy","","delete surface",98,N],[11,"attach","","set the surface contents",98,N],[11,"damage","","mark part of the surface damaged",98,N],[11,"frame","","request a frame throttling hint",98,[[["self"],["f"]],["result",["wlcallback"]]]],[11,"set_opaque_region","","set opaque region",98,N],[11,"set_input_region","","set input region",98,N],[11,"commit","","commit pending surface state",98,N],[11,"set_buffer_transform","","sets the buffer transformation",98,N],[11,"set_buffer_scale","","sets the buffer scaling factor",98,N],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",98,N],[11,"capabilities","wayland_client::protocol::wl_seat","seat capabilities changed",57,[[["self"],["wlseat"],["capability"]]]],[11,"name","","unique identifier for this seat",57,[[["self"],["wlseat"],["string"]]]],[18,"Pointer","","the seat has pointer devices",99,N],[18,"Keyboard","","the seat has one or more keyboards",99,N],[18,"Touch","","the seat has touch devices",99,N],[11,"empty","","Returns an empty set of flags.",99,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",99,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",99,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",99,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",99,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",99,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",99,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",99,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",99,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",99,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",99,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",99,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",99,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",99,[[["self"]],["u32"]]],[11,"get_pointer","","return pointer object",100,[[["self"],["f"]],["result",["wlpointer"]]]],[11,"get_keyboard","","return keyboard object",100,[[["self"],["f"]],["result",["wlkeyboard"]]]],[11,"get_touch","","return touch object",100,[[["self"],["f"]],["result",["wltouch"]]]],[11,"release","","release the seat object",100,N],[11,"enter","wayland_client::protocol::wl_pointer","enter event",64,[[["self"],["wlpointer"],["u32"],["wlsurface"],["f64"],["f64"]]]],[11,"leave","","leave event",64,[[["self"],["wlpointer"],["u32"],["wlsurface"]]]],[11,"motion","","pointer motion event",64,[[["self"],["wlpointer"],["u32"],["f64"],["f64"]]]],[11,"button","","pointer button event",64,[[["self"],["wlpointer"],["u32"],["u32"],["u32"],["buttonstate"]]]],[11,"axis","","axis event",64,[[["self"],["wlpointer"],["u32"],["axis"],["f64"]]]],[11,"frame","","end of a pointer event sequence",64,[[["self"],["wlpointer"]]]],[11,"axis_source","","axis source event",64,[[["self"],["wlpointer"],["axissource"]]]],[11,"axis_stop","","axis stop event",64,[[["self"],["wlpointer"],["u32"],["axis"]]]],[11,"axis_discrete","","axis click event",64,[[["self"],["wlpointer"],["axis"],["i32"]]]],[11,"from_raw","","",58,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",58,[[["self"]],["u32"]]],[11,"from_raw","","",59,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"from_raw","","",60,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",60,[[["self"]],["u32"]]],[11,"from_raw","","",61,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",61,[[["self"]],["u32"]]],[11,"set_cursor","","set the pointer surface",101,N],[11,"release","","release the pointer object",101,N],[11,"keymap","wayland_client::protocol::wl_keyboard","keyboard mapping",69,[[["self"],["wlkeyboard"],["keymapformat"],["rawfd"],["u32"]]]],[11,"enter","","enter event",69,[[["self"],["wlkeyboard"],["u32"],["wlsurface"],["vec",["u8"]]]]],[11,"leave","","leave event",69,[[["self"],["wlkeyboard"],["u32"],["wlsurface"]]]],[11,"key","","key event",69,[[["self"],["wlkeyboard"],["u32"],["u32"],["u32"],["keystate"]]]],[11,"modifiers","","modifier and group state",69,[[["self"],["wlkeyboard"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"repeat_info","","repeat rate and delay",69,[[["self"],["wlkeyboard"],["i32"],["i32"]]]],[11,"from_raw","","",65,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"from_raw","","",66,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",66,[[["self"]],["u32"]]],[11,"release","","release the keyboard object",102,N],[11,"down","wayland_client::protocol::wl_touch","touch down event and beginning of a touch sequence",72,[[["self"],["wltouch"],["u32"],["u32"],["wlsurface"],["i32"],["f64"],["f64"]]]],[11,"up","","end of a touch event sequence",72,[[["self"],["wltouch"],["u32"],["u32"],["i32"]]]],[11,"motion","","update of touch point coordinates",72,[[["self"],["wltouch"],["u32"],["i32"],["f64"],["f64"]]]],[11,"frame","","end of touch frame event",72,[[["self"],["wltouch"]]]],[11,"cancel","","touch session cancelled",72,[[["self"],["wltouch"]]]],[11,"shape","","update shape of touch point",72,[[["self"],["wltouch"],["i32"],["f64"],["f64"]]]],[11,"orientation","","update orientation of touch point",72,[[["self"],["wltouch"],["i32"],["f64"]]]],[11,"release","","release the touch object",103,N],[11,"geometry","wayland_client::protocol::wl_output","properties of the output",77,[[["self"],["wloutput"],["i32"],["i32"],["i32"],["i32"],["subpixel"],["string"],["string"],["transform"]]]],[11,"mode","","advertise available modes for the output",77,[[["self"],["wloutput"],["mode"],["i32"],["i32"],["i32"]]]],[11,"done","","sent all information about output",77,[[["self"],["wloutput"]]]],[11,"scale","","output scaling properties",77,[[["self"],["wloutput"],["i32"]]]],[11,"from_raw","","",73,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",73,[[["self"]],["u32"]]],[11,"from_raw","","",74,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",74,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",104,N],[18,"Preferred","","indicates this is the preferred mode",104,N],[11,"empty","","Returns an empty set of flags.",104,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",104,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",104,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",104,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",104,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",104,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",104,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",104,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",104,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",104,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",104,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",104,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",104,[[["self"],["mode"],["bool"]]]],[11,"from_raw","","",104,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",104,[[["self"]],["u32"]]],[11,"release","","release the output object",105,N],[11,"destroy","wayland_client::protocol::wl_region","destroy region",106,N],[11,"add","","add rectangle to region",106,N],[11,"subtract","","subtract rectangle from region",106,N],[11,"from_raw","wayland_client::protocol::wl_subcompositor","",79,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",79,[[["self"]],["u32"]]],[11,"destroy","","unbind from the subcompositor interface",107,N],[11,"get_subsurface","","give a surface the role sub-surface",107,[[["self"],["wlsurface"],["wlsurface"],["f"]],["result",["wlsubsurface"]]]],[11,"from_raw","wayland_client::protocol::wl_subsurface","",81,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",81,[[["self"]],["u32"]]],[11,"destroy","","remove sub-surface interface",108,N],[11,"set_position","","reposition the sub-surface",108,N],[11,"place_above","","restack the sub-surface",108,N],[11,"place_below","","restack the sub-surface",108,N],[11,"set_sync","","set sub-surface to synchronized mode",108,N],[11,"set_desync","","set sub-surface to desynchronized mode",108,N],[8,"GlobalImplementor","wayland_client","A trait for implementation of the global advertisement",N,N],[10,"new_global","","A new global of given interface has been instantiated and…",109,[[["self"],["newproxy"]],["i"]]],[11,"error","","A global was advertised but its version was lower than the…",109,[[["self"],["u32"]]]],[8,"HandledBy","","Provides a callback function to handle events of the…",N,N],[10,"handle","","Handles an event.",110,N],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",N,N],[14,"event_enum","","Generate an enum joining several objects events",N,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into_any","","",111,[[["box"]],["box",["any"]]]],[11,"as_any","","",111,[[["self"]],["any"]]],[11,"as_any_mut","","",111,[[["self"]],["any"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],["box",["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],["box",["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],["box",["any"]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into_any","","",112,[[["box"]],["box",["any"]]]],[11,"as_any","","",112,[[["self"]],["any"]]],[11,"as_any_mut","","",112,[[["self"]],["any"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],["box",["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],["box",["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],["box",["any"]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],["box",["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],["box",["any"]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into_any","","",113,[[["box"]],["box",["any"]]]],[11,"as_any","","",113,[[["self"]],["any"]]],[11,"as_any_mut","","",113,[[["self"]],["any"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],["box",["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],["box",["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],["box",["any"]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_iter","wayland_client::sinks","",114,[[["self"]],["i"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into_any","","",114,[[["box"]],["box",["any"]]]],[11,"as_any","","",114,[[["self"]],["any"]]],[11,"as_any_mut","","",114,[[["self"]],["any"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into_any","","",115,[[["box"]],["box",["any"]]]],[11,"as_any","","",115,[[["self"]],["any"]]],[11,"as_any_mut","","",115,[[["self"]],["any"]]],[11,"into_iter","","",116,[[["self"]],["i"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_any","","",116,[[["box"]],["box",["any"]]]],[11,"as_any","","",116,[[["self"]],["any"]]],[11,"as_any_mut","","",116,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_display","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_any","","",83,[[["box"]],["box",["any"]]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],["box",["any"]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],["box",["any"]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],["box",["any"]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_registry","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],["box",["any"]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_any","","",17,[[["box"]],["box",["any"]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],["box",["any"]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_callback","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into_any","","",117,[[["box"]],["box",["any"]]]],[11,"as_any","","",117,[[["self"]],["any"]]],[11,"as_any_mut","","",117,[[["self"]],["any"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into_any","","",118,[[["box"]],["box",["any"]]]],[11,"as_any","","",118,[[["self"]],["any"]]],[11,"as_any_mut","","",118,[[["self"]],["any"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],["box",["any"]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_compositor","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],["box",["any"]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],["box",["any"]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into_any","","",119,[[["box"]],["box",["any"]]]],[11,"as_any","","",119,[[["self"]],["any"]]],[11,"as_any_mut","","",119,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_shm_pool","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],["box",["any"]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],["box",["any"]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into_any","","",120,[[["box"]],["box",["any"]]]],[11,"as_any","","",120,[[["self"]],["any"]]],[11,"as_any_mut","","",120,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_shm","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],["box",["any"]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_any","","",24,[[["box"]],["box",["any"]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],["box",["any"]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],["box",["any"]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],["box",["any"]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_buffer","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],["box",["any"]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],["box",["any"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_any","","",30,[[["box"]],["box",["any"]]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_data_offer","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],["box",["any"]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],["box",["any"]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],["box",["any"]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],["box",["any"]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_data_source","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_any","","",90,[[["box"]],["box",["any"]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_any","","",36,[[["box"]],["box",["any"]]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],["box",["any"]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],["box",["any"]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_data_device","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],["box",["any"]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_any","","",40,[[["box"]],["box",["any"]]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_any","","",41,[[["box"]],["box",["any"]]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_any","","",42,[[["box"]],["box",["any"]]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_any","","",92,[[["box"]],["box",["any"]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_any","","",93,[[["box"]],["box",["any"]]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],["box",["any"]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into_any","","",121,[[["box"]],["box",["any"]]]],[11,"as_any","","",121,[[["self"]],["any"]]],[11,"as_any_mut","","",121,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_shell","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],["box",["any"]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_any","","",45,[[["box"]],["box",["any"]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_any","","",46,[[["box"]],["box",["any"]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into_any","","",122,[[["box"]],["box",["any"]]]],[11,"as_any","","",122,[[["self"]],["any"]]],[11,"as_any_mut","","",122,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_shell_surface","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_any","","",95,[[["box"]],["box",["any"]]]],[11,"as_any","","",95,[[["self"]],["any"]]],[11,"as_any_mut","","",95,[[["self"]],["any"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],["box",["any"]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],["box",["any"]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],["box",["any"]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_any","","",48,[[["box"]],["box",["any"]]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],["box",["any"]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_surface","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_any","","",98,[[["box"]],["box",["any"]]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],["box",["any"]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],["box",["any"]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],["box",["any"]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_seat","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_any","","",99,[[["box"]],["box",["any"]]]],[11,"as_any","","",99,[[["self"]],["any"]]],[11,"as_any_mut","","",99,[[["self"]],["any"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],["box",["any"]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_any","","",55,[[["box"]],["box",["any"]]]],[11,"as_any","","",55,[[["self"]],["any"]]],[11,"as_any_mut","","",55,[[["self"]],["any"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_any","","",56,[[["box"]],["box",["any"]]]],[11,"as_any","","",56,[[["self"]],["any"]]],[11,"as_any_mut","","",56,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_pointer","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],["box",["any"]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],["box",["any"]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_any","","",59,[[["box"]],["box",["any"]]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_any","","",60,[[["box"]],["box",["any"]]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],["box",["any"]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],["box",["any"]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],["box",["any"]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_keyboard","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into_any","","",102,[[["box"]],["box",["any"]]]],[11,"as_any","","",102,[[["self"]],["any"]]],[11,"as_any_mut","","",102,[[["self"]],["any"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_any","","",65,[[["box"]],["box",["any"]]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],["box",["any"]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],["box",["any"]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_any","","",68,[[["box"]],["box",["any"]]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_touch","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],["box",["any"]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_any","","",70,[[["box"]],["box",["any"]]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],["box",["any"]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_output","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],["box",["any"]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],["box",["any"]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_any","","",73,[[["box"]],["box",["any"]]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_any","","",74,[[["box"]],["box",["any"]]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],["box",["any"]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_any","","",76,[[["box"]],["box",["any"]]]],[11,"as_any","","",76,[[["self"]],["any"]]],[11,"as_any_mut","","",76,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_region","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],["box",["any"]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],["box",["any"]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into_any","","",123,[[["box"]],["box",["any"]]]],[11,"as_any","","",123,[[["self"]],["any"]]],[11,"as_any_mut","","",123,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_subcompositor","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_any","","",107,[[["box"]],["box",["any"]]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],["box",["any"]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_any","","",80,[[["box"]],["box",["any"]]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into_any","","",124,[[["box"]],["box",["any"]]]],[11,"as_any","","",124,[[["self"]],["any"]]],[11,"as_any_mut","","",124,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_subsurface","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into_any","","",108,[[["box"]],["box",["any"]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],["box",["any"]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],["box",["any"]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into_any","","",125,[[["box"]],["box",["any"]]]],[11,"as_any","","",125,[[["self"]],["any"]]],[11,"as_any_mut","","",125,[[["self"]],["any"]]],[11,"is_destructor","wayland_client","",111,[[["self"]],["bool"]]],[11,"opcode","","",111,[[["self"]],["u16"]]],[11,"since","","",111,[[["self"]],["u32"]]],[11,"child","","",111,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",111,N],[11,"into_raw","","",111,[[["self"],["u32"]],["message"]]],[11,"next","wayland_client::sinks","",114,[[["self"]],["option"]]],[11,"clone","","",115,[[["self"]],["sink"]]],[11,"handle","wayland_client::protocol::wl_display","",83,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_registry","",84,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_callback","",117,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_compositor","",85,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_shm_pool","",86,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_shm","",87,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_buffer","",88,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_data_offer","",89,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_data_source","",90,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_data_device","",91,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_data_device_manager","",93,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_shell","",94,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_shell_surface","",97,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_surface","",98,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_seat","",100,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_pointer","",101,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_keyboard","",102,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_touch","",103,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_output","",105,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_region","",106,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_subcompositor","",107,[[["t"],["event"],["self"]]]],[11,"handle","wayland_client::protocol::wl_subsurface","",108,[[["t"],["event"],["self"]]]],[11,"next","wayland_client::sinks","",116,[[["self"]],["option"]]],[11,"eq","wayland_client","",4,[[["self"],["globalerror"]],["bool"]]],[11,"ne","","",4,[[["self"],["globalerror"]],["bool"]]],[11,"eq","","",10,[[["self"],["proxy"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_display","",13,[[["self"],["error"]],["bool"]]],[11,"eq","","",83,[[["self"],["wldisplay"]],["bool"]]],[11,"ne","","",83,[[["self"],["wldisplay"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_registry","",84,[[["self"],["wlregistry"]],["bool"]]],[11,"ne","","",84,[[["self"],["wlregistry"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_callback","",117,[[["self"],["wlcallback"]],["bool"]]],[11,"ne","","",117,[[["self"],["wlcallback"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_compositor","",85,[[["self"],["wlcompositor"]],["bool"]]],[11,"ne","","",85,[[["self"],["wlcompositor"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm_pool","",86,[[["self"],["wlshmpool"]],["bool"]]],[11,"ne","","",86,[[["self"],["wlshmpool"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm","",24,[[["self"],["error"]],["bool"]]],[11,"eq","","",25,[[["self"],["format"]],["bool"]]],[11,"eq","","",87,[[["self"],["wlshm"]],["bool"]]],[11,"ne","","",87,[[["self"],["wlshm"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_buffer","",88,[[["self"],["wlbuffer"]],["bool"]]],[11,"ne","","",88,[[["self"],["wlbuffer"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_offer","",32,[[["self"],["error"]],["bool"]]],[11,"eq","","",89,[[["self"],["wldataoffer"]],["bool"]]],[11,"ne","","",89,[[["self"],["wldataoffer"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_source","",36,[[["self"],["error"]],["bool"]]],[11,"eq","","",90,[[["self"],["wldatasource"]],["bool"]]],[11,"ne","","",90,[[["self"],["wldatasource"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device","",40,[[["self"],["error"]],["bool"]]],[11,"eq","","",91,[[["self"],["wldatadevice"]],["bool"]]],[11,"ne","","",91,[[["self"],["wldatadevice"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",92,[[["self"],["dndaction"]],["bool"]]],[11,"eq","","",93,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"ne","","",93,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell","",45,[[["self"],["error"]],["bool"]]],[11,"eq","","",94,[[["self"],["wlshell"]],["bool"]]],[11,"ne","","",94,[[["self"],["wlshell"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["resize"]],["bool"]]],[11,"ne","","",95,[[["self"],["resize"]],["bool"]]],[11,"eq","","",96,[[["self"],["transient"]],["bool"]]],[11,"ne","","",96,[[["self"],["transient"]],["bool"]]],[11,"eq","","",47,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"eq","","",97,[[["self"],["wlshellsurface"]],["bool"]]],[11,"ne","","",97,[[["self"],["wlshellsurface"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_surface","",51,[[["self"],["error"]],["bool"]]],[11,"eq","","",98,[[["self"],["wlsurface"]],["bool"]]],[11,"ne","","",98,[[["self"],["wlsurface"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_seat","",99,[[["self"],["capability"]],["bool"]]],[11,"ne","","",99,[[["self"],["capability"]],["bool"]]],[11,"eq","","",100,[[["self"],["wlseat"]],["bool"]]],[11,"ne","","",100,[[["self"],["wlseat"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_pointer","",58,[[["self"],["error"]],["bool"]]],[11,"eq","","",59,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",60,[[["self"],["axis"]],["bool"]]],[11,"eq","","",61,[[["self"],["axissource"]],["bool"]]],[11,"eq","","",101,[[["self"],["wlpointer"]],["bool"]]],[11,"ne","","",101,[[["self"],["wlpointer"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_keyboard","",65,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","","",66,[[["self"],["keystate"]],["bool"]]],[11,"eq","","",102,[[["self"],["wlkeyboard"]],["bool"]]],[11,"ne","","",102,[[["self"],["wlkeyboard"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_touch","",103,[[["self"],["wltouch"]],["bool"]]],[11,"ne","","",103,[[["self"],["wltouch"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_output","",73,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",74,[[["self"],["transform"]],["bool"]]],[11,"eq","","",104,[[["self"],["mode"]],["bool"]]],[11,"ne","","",104,[[["self"],["mode"]],["bool"]]],[11,"eq","","",105,[[["self"],["wloutput"]],["bool"]]],[11,"ne","","",105,[[["self"],["wloutput"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_region","",106,[[["self"],["wlregion"]],["bool"]]],[11,"ne","","",106,[[["self"],["wlregion"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subcompositor","",79,[[["self"],["error"]],["bool"]]],[11,"eq","","",107,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"ne","","",107,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subsurface","",81,[[["self"],["error"]],["bool"]]],[11,"eq","","",108,[[["self"],["wlsubsurface"]],["bool"]]],[11,"ne","","",108,[[["self"],["wlsubsurface"]],["bool"]]],[11,"eq","wayland_client","",113,[[["self"],["anonymousobject"]],["bool"]]],[11,"ne","","",113,[[["self"],["anonymousobject"]],["bool"]]],[11,"as_ref","wayland_client::protocol::wl_display","",83,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_registry","",84,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_callback","",117,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_compositor","",85,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shm_pool","",86,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shm","",87,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_buffer","",88,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_offer","",89,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_source","",90,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_device","",91,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_device_manager","",93,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shell","",94,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shell_surface","",97,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_surface","",98,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_seat","",100,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_pointer","",101,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_keyboard","",102,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_touch","",103,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_output","",105,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_region","",106,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_subcompositor","",107,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_subsurface","",108,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client","",113,[[["self"]],["proxy"]]],[11,"cmp","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["dndaction"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["resize"]],["ordering"]]],[11,"cmp","","",96,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_seat","",99,[[["self"],["capability"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_output","",104,[[["self"],["mode"]],["ordering"]]],[11,"clone","wayland_client","",2,[[["self"]],["protocolerror"]]],[11,"clone","","",6,[[["self"]],["display"]]],[11,"clone","","",9,[[["self"]],["globalmanager"]]],[11,"clone","","",10,[[["self"]],["proxy"]]],[11,"clone","wayland_client::protocol::wl_display","",13,[[["self"]],["error"]]],[11,"clone","","",83,[[["self"]],["wldisplay"]]],[11,"clone","wayland_client::protocol::wl_registry","",84,[[["self"]],["wlregistry"]]],[11,"clone","wayland_client::protocol::wl_callback","",117,[[["self"]],["wlcallback"]]],[11,"clone","wayland_client::protocol::wl_compositor","",85,[[["self"]],["wlcompositor"]]],[11,"clone","wayland_client::protocol::wl_shm_pool","",86,[[["self"]],["wlshmpool"]]],[11,"clone","wayland_client::protocol::wl_shm","",24,[[["self"]],["error"]]],[11,"clone","","",25,[[["self"]],["format"]]],[11,"clone","","",87,[[["self"]],["wlshm"]]],[11,"clone","wayland_client::protocol::wl_buffer","",88,[[["self"]],["wlbuffer"]]],[11,"clone","wayland_client::protocol::wl_data_offer","",32,[[["self"]],["error"]]],[11,"clone","","",89,[[["self"]],["wldataoffer"]]],[11,"clone","wayland_client::protocol::wl_data_source","",36,[[["self"]],["error"]]],[11,"clone","","",90,[[["self"]],["wldatasource"]]],[11,"clone","wayland_client::protocol::wl_data_device","",40,[[["self"]],["error"]]],[11,"clone","","",91,[[["self"]],["wldatadevice"]]],[11,"clone","wayland_client::protocol::wl_data_device_manager","",92,[[["self"]],["dndaction"]]],[11,"clone","","",93,[[["self"]],["wldatadevicemanager"]]],[11,"clone","wayland_client::protocol::wl_shell","",45,[[["self"]],["error"]]],[11,"clone","","",94,[[["self"]],["wlshell"]]],[11,"clone","wayland_client::protocol::wl_shell_surface","",95,[[["self"]],["resize"]]],[11,"clone","","",96,[[["self"]],["transient"]]],[11,"clone","","",47,[[["self"]],["fullscreenmethod"]]],[11,"clone","","",97,[[["self"]],["wlshellsurface"]]],[11,"clone","wayland_client::protocol::wl_surface","",51,[[["self"]],["error"]]],[11,"clone","","",98,[[["self"]],["wlsurface"]]],[11,"clone","wayland_client::protocol::wl_seat","",99,[[["self"]],["capability"]]],[11,"clone","","",100,[[["self"]],["wlseat"]]],[11,"clone","wayland_client::protocol::wl_pointer","",58,[[["self"]],["error"]]],[11,"clone","","",59,[[["self"]],["buttonstate"]]],[11,"clone","","",60,[[["self"]],["axis"]]],[11,"clone","","",61,[[["self"]],["axissource"]]],[11,"clone","","",101,[[["self"]],["wlpointer"]]],[11,"clone","wayland_client::protocol::wl_keyboard","",65,[[["self"]],["keymapformat"]]],[11,"clone","","",66,[[["self"]],["keystate"]]],[11,"clone","","",102,[[["self"]],["wlkeyboard"]]],[11,"clone","wayland_client::protocol::wl_touch","",103,[[["self"]],["wltouch"]]],[11,"clone","wayland_client::protocol::wl_output","",73,[[["self"]],["subpixel"]]],[11,"clone","","",74,[[["self"]],["transform"]]],[11,"clone","","",104,[[["self"]],["mode"]]],[11,"clone","","",105,[[["self"]],["wloutput"]]],[11,"clone","wayland_client::protocol::wl_region","",106,[[["self"]],["wlregion"]]],[11,"clone","wayland_client::protocol::wl_subcompositor","",79,[[["self"]],["error"]]],[11,"clone","","",107,[[["self"]],["wlsubcompositor"]]],[11,"clone","wayland_client::protocol::wl_subsurface","",81,[[["self"]],["error"]]],[11,"clone","","",108,[[["self"]],["wlsubsurface"]]],[11,"clone","wayland_client","",113,[[["self"]],["anonymousobject"]]],[11,"extend","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["t"]]]],[11,"extend","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["t"]]]],[11,"extend","","",96,[[["self"],["t"]]]],[11,"extend","wayland_client::protocol::wl_seat","",99,[[["self"],["t"]]]],[11,"extend","wayland_client::protocol::wl_output","",104,[[["self"],["t"]]]],[11,"from","wayland_client::protocol::wl_display","",83,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wldisplay"]],["self"]]],[11,"from","wayland_client::protocol::wl_registry","",84,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlregistry"]],["self"]]],[11,"from","wayland_client::protocol::wl_callback","",117,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlcallback"]],["self"]]],[11,"from","wayland_client::protocol::wl_compositor","",85,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlcompositor"]],["self"]]],[11,"from","wayland_client::protocol::wl_shm_pool","",86,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlshmpool"]],["self"]]],[11,"from","wayland_client::protocol::wl_shm","",87,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlshm"]],["self"]]],[11,"from","wayland_client::protocol::wl_buffer","",88,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlbuffer"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_offer","",89,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wldataoffer"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_source","",90,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wldatasource"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_device","",91,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wldatadevice"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",93,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wldatadevicemanager"]],["self"]]],[11,"from","wayland_client::protocol::wl_shell","",94,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlshell"]],["self"]]],[11,"from","wayland_client::protocol::wl_shell_surface","",97,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlshellsurface"]],["self"]]],[11,"from","wayland_client::protocol::wl_surface","",98,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlsurface"]],["self"]]],[11,"from","wayland_client::protocol::wl_seat","",100,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlseat"]],["self"]]],[11,"from","wayland_client::protocol::wl_pointer","",101,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlpointer"]],["self"]]],[11,"from","wayland_client::protocol::wl_keyboard","",102,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlkeyboard"]],["self"]]],[11,"from","wayland_client::protocol::wl_touch","",103,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wltouch"]],["self"]]],[11,"from","wayland_client::protocol::wl_output","",105,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wloutput"]],["self"]]],[11,"from","wayland_client::protocol::wl_region","",106,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlregion"]],["self"]]],[11,"from","wayland_client::protocol::wl_subcompositor","",107,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlsubcompositor"]],["self"]]],[11,"from","wayland_client::protocol::wl_subsurface","",108,[[["proxy"]],["self"]]],[11,"from","wayland_client","",10,[[["wlsubsurface"]],["self"]]],[11,"from","","",113,[[["proxy"]],["self"]]],[11,"from","","",10,[[["anonymousobject"]],["self"]]],[11,"drop","","",8,[[["self"]]]],[11,"partial_cmp","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",92,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",92,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",92,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",92,[[["self"],["dndaction"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",95,[[["self"],["resize"]],["bool"]]],[11,"le","","",95,[[["self"],["resize"]],["bool"]]],[11,"gt","","",95,[[["self"],["resize"]],["bool"]]],[11,"ge","","",95,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",96,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",96,[[["self"],["transient"]],["bool"]]],[11,"le","","",96,[[["self"],["transient"]],["bool"]]],[11,"gt","","",96,[[["self"],["transient"]],["bool"]]],[11,"ge","","",96,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_seat","",99,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",99,[[["self"],["capability"]],["bool"]]],[11,"le","","",99,[[["self"],["capability"]],["bool"]]],[11,"gt","","",99,[[["self"],["capability"]],["bool"]]],[11,"ge","","",99,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_output","",104,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",104,[[["self"],["mode"]],["bool"]]],[11,"le","","",104,[[["self"],["mode"]],["bool"]]],[11,"gt","","",104,[[["self"],["mode"]],["bool"]]],[11,"ge","","",104,[[["self"],["mode"]],["bool"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_display","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shm","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_offer","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_source","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_surface","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_pointer","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_keyboard","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subcompositor","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subsurface","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",104,[[["self"],["formatter"]],["result"]]],[11,"hash","wayland_client::protocol::wl_data_device_manager","",92,N],[11,"hash","wayland_client::protocol::wl_shell_surface","",95,N],[11,"hash","","",96,N],[11,"hash","wayland_client::protocol::wl_seat","",99,N],[11,"hash","wayland_client::protocol::wl_output","",104,N],[11,"sub","wayland_client::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",92,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub","wayland_client::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",95,[[["self"],["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",96,[[["self"],["transient"]],["transient"]]],[11,"sub","wayland_client::protocol::wl_seat","Returns the set difference of the two sets of flags.",99,[[["self"],["capability"]],["capability"]]],[11,"sub","wayland_client::protocol::wl_output","Returns the set difference of the two sets of flags.",104,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags enabled in the set.",92,[[["self"],["dndaction"]]]],[11,"sub_assign","wayland_client::protocol::wl_shell_surface","Disables all flags enabled in the set.",95,[[["self"],["resize"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",96,[[["self"],["transient"]]]],[11,"sub_assign","wayland_client::protocol::wl_seat","Disables all flags enabled in the set.",99,[[["self"],["capability"]]]],[11,"sub_assign","wayland_client::protocol::wl_output","Disables all flags enabled in the set.",104,[[["self"],["mode"]]]],[11,"not","wayland_client::protocol::wl_data_device_manager","Returns the complement of this set of flags.",92,[[["self"]],["dndaction"]]],[11,"not","wayland_client::protocol::wl_shell_surface","Returns the complement of this set of flags.",95,[[["self"]],["resize"]]],[11,"not","","Returns the complement of this set of flags.",96,[[["self"]],["transient"]]],[11,"not","wayland_client::protocol::wl_seat","Returns the complement of this set of flags.",99,[[["self"]],["capability"]]],[11,"not","wayland_client::protocol::wl_output","Returns the complement of this set of flags.",104,[[["self"]],["mode"]]],[11,"bitand","wayland_client::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",92,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand","wayland_client::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",95,[[["self"],["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",96,[[["self"],["transient"]],["transient"]]],[11,"bitand","wayland_client::protocol::wl_seat","Returns the intersection between the two sets of flags.",99,[[["self"],["capability"]],["capability"]]],[11,"bitand","wayland_client::protocol::wl_output","Returns the intersection between the two sets of flags.",104,[[["self"],["mode"]],["mode"]]],[11,"bitor","wayland_client::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",92,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor","wayland_client::protocol::wl_shell_surface","Returns the union of the two sets of flags.",95,[[["self"],["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",96,[[["self"],["transient"]],["transient"]]],[11,"bitor","wayland_client::protocol::wl_seat","Returns the union of the two sets of flags.",99,[[["self"],["capability"]],["capability"]]],[11,"bitor","wayland_client::protocol::wl_output","Returns the union of the two sets of flags.",104,[[["self"],["mode"]],["mode"]]],[11,"bitxor","wayland_client::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",92,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_client::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",95,[[["self"],["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",96,[[["self"],["transient"]],["transient"]]],[11,"bitxor","wayland_client::protocol::wl_seat","Returns the left flags, but with all the right flags…",99,[[["self"],["capability"]],["capability"]]],[11,"bitxor","wayland_client::protocol::wl_output","Returns the left flags, but with all the right flags…",104,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags disabled in the set.",92,[[["self"],["dndaction"]]]],[11,"bitand_assign","wayland_client::protocol::wl_shell_surface","Disables all flags disabled in the set.",95,[[["self"],["resize"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",96,[[["self"],["transient"]]]],[11,"bitand_assign","wayland_client::protocol::wl_seat","Disables all flags disabled in the set.",99,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_client::protocol::wl_output","Disables all flags disabled in the set.",104,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_client::protocol::wl_data_device_manager","Adds the set of flags.",92,[[["self"],["dndaction"]]]],[11,"bitor_assign","wayland_client::protocol::wl_shell_surface","Adds the set of flags.",95,[[["self"],["resize"]]]],[11,"bitor_assign","","Adds the set of flags.",96,[[["self"],["transient"]]]],[11,"bitor_assign","wayland_client::protocol::wl_seat","Adds the set of flags.",99,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_client::protocol::wl_output","Adds the set of flags.",104,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_data_device_manager","Toggles the set of flags.",92,[[["self"],["dndaction"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_shell_surface","Toggles the set of flags.",95,[[["self"],["resize"]]]],[11,"bitxor_assign","","Toggles the set of flags.",96,[[["self"],["transient"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_seat","Toggles the set of flags.",99,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_output","Toggles the set of flags.",104,[[["self"],["mode"]]]],[11,"deref","wayland_client","",6,[[["self"]],["wldisplay"]]],[11,"from_iter","wayland_client::protocol::wl_data_device_manager","",92,[[["t"]],["dndaction"]]],[11,"from_iter","wayland_client::protocol::wl_shell_surface","",95,[[["t"]],["resize"]]],[11,"from_iter","","",96,[[["t"]],["transient"]]],[11,"from_iter","wayland_client::protocol::wl_seat","",99,[[["t"]],["capability"]]],[11,"from_iter","wayland_client::protocol::wl_output","",104,[[["t"]],["mode"]]],[11,"description","wayland_client","",3,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"description","","",4,[[["self"]],["str"]]],[11,"is_destructor","wayland_client::protocol::wl_display","",14,[[["self"]],["bool"]]],[11,"opcode","","",14,[[["self"]],["u16"]]],[11,"since","","",14,[[["self"]],["u32"]]],[11,"child","","",14,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",14,N],[11,"into_raw","","",14,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",15,[[["self"]],["bool"]]],[11,"opcode","","",15,[[["self"]],["u16"]]],[11,"since","","",15,[[["self"]],["u32"]]],[11,"child","","",15,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",15,N],[11,"into_raw","","",15,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_registry","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"since","","",17,[[["self"]],["u32"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",17,N],[11,"into_raw","","",17,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_callback","",118,[[["self"]],["bool"]]],[11,"opcode","","",118,[[["self"]],["u16"]]],[11,"since","","",118,[[["self"]],["u32"]]],[11,"child","","",118,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",118,N],[11,"into_raw","","",118,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",20,[[["self"]],["bool"]]],[11,"opcode","","",20,[[["self"]],["u16"]]],[11,"since","","",20,[[["self"]],["u32"]]],[11,"child","","",20,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",20,N],[11,"into_raw","","",20,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_compositor","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"since","","",22,[[["self"]],["u32"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",119,[[["self"]],["bool"]]],[11,"opcode","","",119,[[["self"]],["u16"]]],[11,"since","","",119,[[["self"]],["u32"]]],[11,"child","","",119,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",119,N],[11,"into_raw","","",119,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"since","","",23,[[["self"]],["u32"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",120,[[["self"]],["bool"]]],[11,"opcode","","",120,[[["self"]],["u16"]]],[11,"since","","",120,[[["self"]],["u32"]]],[11,"child","","",120,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",120,N],[11,"into_raw","","",120,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_shm","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"since","","",26,[[["self"]],["u32"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"since","","",27,[[["self"]],["u32"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_buffer","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"since","","",29,[[["self"]],["u32"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"since","","",30,[[["self"]],["u32"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_data_offer","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"since","","",33,[[["self"]],["u32"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"since","","",34,[[["self"]],["u32"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_data_source","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"since","","",37,[[["self"]],["u32"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",38,[[["self"]],["bool"]]],[11,"opcode","","",38,[[["self"]],["u16"]]],[11,"since","","",38,[[["self"]],["u32"]]],[11,"child","","",38,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",38,N],[11,"into_raw","","",38,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device","",41,[[["self"]],["bool"]]],[11,"opcode","","",41,[[["self"]],["u16"]]],[11,"since","","",41,[[["self"]],["u32"]]],[11,"child","","",41,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",41,N],[11,"into_raw","","",41,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"since","","",42,[[["self"]],["u32"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",42,N],[11,"into_raw","","",42,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device_manager","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"since","","",44,[[["self"]],["u32"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",121,[[["self"]],["bool"]]],[11,"opcode","","",121,[[["self"]],["u16"]]],[11,"since","","",121,[[["self"]],["u32"]]],[11,"child","","",121,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",121,N],[11,"into_raw","","",121,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_shell","",46,[[["self"]],["bool"]]],[11,"opcode","","",46,[[["self"]],["u16"]]],[11,"since","","",46,[[["self"]],["u32"]]],[11,"child","","",46,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",46,N],[11,"into_raw","","",46,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",122,[[["self"]],["bool"]]],[11,"opcode","","",122,[[["self"]],["u16"]]],[11,"since","","",122,[[["self"]],["u32"]]],[11,"child","","",122,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",122,N],[11,"into_raw","","",122,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_shell_surface","",48,[[["self"]],["bool"]]],[11,"opcode","","",48,[[["self"]],["u16"]]],[11,"since","","",48,[[["self"]],["u32"]]],[11,"child","","",48,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",48,N],[11,"into_raw","","",48,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",49,[[["self"]],["bool"]]],[11,"opcode","","",49,[[["self"]],["u16"]]],[11,"since","","",49,[[["self"]],["u32"]]],[11,"child","","",49,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",49,N],[11,"into_raw","","",49,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_surface","",52,[[["self"]],["bool"]]],[11,"opcode","","",52,[[["self"]],["u16"]]],[11,"since","","",52,[[["self"]],["u32"]]],[11,"child","","",52,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",52,N],[11,"into_raw","","",52,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"since","","",53,[[["self"]],["u32"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",53,N],[11,"into_raw","","",53,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_seat","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"since","","",55,[[["self"]],["u32"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",55,N],[11,"into_raw","","",55,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",56,[[["self"]],["bool"]]],[11,"opcode","","",56,[[["self"]],["u16"]]],[11,"since","","",56,[[["self"]],["u32"]]],[11,"child","","",56,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",56,N],[11,"into_raw","","",56,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_pointer","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"since","","",62,[[["self"]],["u32"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",62,N],[11,"into_raw","","",62,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"since","","",63,[[["self"]],["u32"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",63,N],[11,"into_raw","","",63,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_keyboard","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"since","","",67,[[["self"]],["u32"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",68,[[["self"]],["bool"]]],[11,"opcode","","",68,[[["self"]],["u16"]]],[11,"since","","",68,[[["self"]],["u32"]]],[11,"child","","",68,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",68,N],[11,"into_raw","","",68,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_touch","",70,[[["self"]],["bool"]]],[11,"opcode","","",70,[[["self"]],["u16"]]],[11,"since","","",70,[[["self"]],["u32"]]],[11,"child","","",70,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",70,N],[11,"into_raw","","",70,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"since","","",71,[[["self"]],["u32"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",71,N],[11,"into_raw","","",71,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_output","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"since","","",75,[[["self"]],["u32"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",75,N],[11,"into_raw","","",75,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",76,[[["self"]],["bool"]]],[11,"opcode","","",76,[[["self"]],["u16"]]],[11,"since","","",76,[[["self"]],["u32"]]],[11,"child","","",76,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",76,N],[11,"into_raw","","",76,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_region","",78,[[["self"]],["bool"]]],[11,"opcode","","",78,[[["self"]],["u16"]]],[11,"since","","",78,[[["self"]],["u32"]]],[11,"child","","",78,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",78,N],[11,"into_raw","","",78,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",123,[[["self"]],["bool"]]],[11,"opcode","","",123,[[["self"]],["u16"]]],[11,"since","","",123,[[["self"]],["u32"]]],[11,"child","","",123,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",123,N],[11,"into_raw","","",123,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_subcompositor","",80,[[["self"]],["bool"]]],[11,"opcode","","",80,[[["self"]],["u16"]]],[11,"since","","",80,[[["self"]],["u32"]]],[11,"child","","",80,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",80,N],[11,"into_raw","","",80,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",124,[[["self"]],["bool"]]],[11,"opcode","","",124,[[["self"]],["u16"]]],[11,"since","","",124,[[["self"]],["u32"]]],[11,"child","","",124,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",124,N],[11,"into_raw","","",124,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_client::protocol::wl_subsurface","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"since","","",82,[[["self"]],["u32"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",82,N],[11,"into_raw","","",82,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",125,[[["self"]],["bool"]]],[11,"opcode","","",125,[[["self"]],["u16"]]],[11,"since","","",125,[[["self"]],["u32"]]],[11,"child","","",125,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",125,N],[11,"into_raw","","",125,[[["self"],["u32"]],["message"]]],[11,"error","wayland_client","A global was advertised but its version was lower than the…",109,[[["self"],["u32"]]]],[11,"push","wayland_client::sinks","Push a new message to the associated message iterator",115,N]],"paths":[[8,"Interface"],[8,"MessageGroup"],[3,"ProtocolError"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"NewProxy"],[3,"ProxyMap"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"WlDisplay"],[3,"WlRegistry"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[8,"GlobalImplementor"],[8,"HandledBy"],[4,"NoMessage"],[3,"QueueToken"],[3,"AnonymousObject"],[3,"MsgIter"],[3,"Sink"],[3,"BlockingMsgIter"],[3,"WlCallback"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"]]};
searchIndex["wayland_commons"]={"doc":"Common definitions for wayland","items":[[4,"NoMessage","wayland_commons","An empty enum representing a MessageGroup with no messages",N,N],[0,"map","","Wayland objects map",N,N],[3,"Object","wayland_commons::map","The representation of a protocol object",N,N],[12,"interface","","Interface name of this object",0,N],[12,"version","","Version of this object",0,N],[12,"requests","","Description of the requests of this object",0,N],[12,"events","","Description of the events of this object",0,N],[12,"meta","","Metadata associated to this object (ex: its event queue…",0,N],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta,…",0,N],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta,…",0,N],[3,"ObjectMap","","A holder for the object store of a connection",N,N],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created…",N,N],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation…",N,N],[10,"child","","Create the metadata for a child object",1,[[["self"]],["self"]]],[11,"from_interface","","Create an Object corresponding to given interface and…",0,[[["u32"],["meta"]],["object"]]],[11,"event_child","","Create an optional `Object` corresponding to the possible…",0,[[["self"],["u16"]],["option",["object"]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible…",0,[[["self"],["u16"]],["option",["object"]]]],[11,"is_interface","","Check whether this object is of given interface",0,[[["self"]],["bool"]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the…",0,[[["meta"]],["object"]]],[11,"new","","Create a new empty object map",2,[[],["objectmap"]]],[11,"find","","Find an object in the store",2,[[["self"],["u32"]],["option",["object"]]]],[11,"remove","","Remove an object from the store",2,[[["self"],["u32"]]]],[11,"insert_at","","Insert given object for given id",2,[[["self"],["u32"],["object"]],["result"]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",2,[[["self"],["object"]],["u32"]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",2,[[["self"],["object"]],["u32"]]],[11,"with","","Mutably access an object of the map",2,[[["self"],["u32"],["f"]],["result"]]],[11,"with_all","","Mutably access all objects of the map in sequence",2,[[["self"],["f"]]]],[0,"sinks","wayland_commons","Message sinks",N,N],[3,"Sink","wayland_commons::sinks","The sink end of an message iterator.",N,N],[3,"MsgIter","","A message iterator",N,N],[5,"message_iterator","","Create a new message iterator and an associated sink.",N,N],[11,"push","","Push a new message to the associated message iterator",3,[[["self"],["u"]]]],[0,"socket","wayland_commons","Wayland socket manipulation",N,N],[3,"Socket","wayland_commons::socket","A wayland socket",N,N],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles…",N,N],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket…",N,N],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single…",N,N],[11,"send_msg","","Send a single message to the socket",4,N],[11,"rcv_msg","","Receive a single message from the socket",4,N],[11,"new","","Wrap a Socket into a Buffered Socket",5,[[["socket"]],["bufferedsocket"]]],[11,"get_socket","","Get direct access to the underlying socket",5,[[["self"]],["socket"]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",5,[[["self"]],["socket"]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",5,[[["self"]],["nixresult"]]],[11,"write_message","","Write a message to the outgoing buffer",5,[[["self"],["message"]],["nixresult"]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to…",5,[[["self"]],["nixresult"]]],[11,"read_one_message","","Read and deserialize a single message from the incoming…",5,[[["self"],["f"]],["result",["message","messageparseerror"]]]],[11,"read_messages","","Read and deserialize messages from the socket",5,[[["self"],["f1"],["f2"]],["nixresult",["result"]]]],[0,"utils","wayland_commons","Various utilities used for other implementations",N,N],[3,"UserData","wayland_commons::utils","A wrapper for user data, able to store any type, and…",N,N],[3,"UserDataMap","","A storage able to store several values of `UserData` of…",N,N],[11,"new_threadsafe","","Create a new `UserData` using a threadsafe type",6,[[["t"]],["userdata"]]],[11,"new","","Create a new `UserData` using a non-threadsafe type",6,[[["t"]],["userdata"]]],[11,"empty","","Create a new `UserData` containing nothing",6,[[],["userdata"]]],[11,"get","","Attempt to access the wrapped user data",6,[[["self"]],["option"]]],[11,"new","","Create a new map",7,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",7,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",7,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",7,[[["self"],["f"]],["bool"]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the…",N,N],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",N,N],[12,"name","","Name of this message",8,N],[12,"signature","","Signature of the message",8,N],[12,"since","","Minimum required version of the interface",8,N],[3,"Message","","A wire message",N,N],[12,"sender_id","","ID of the object sending this message",9,N],[12,"opcode","","Opcode of the message",9,N],[12,"args","","Arguments of the message",9,N],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",N,N],[13,"Int","","i32",10,N],[13,"Uint","","u32",10,N],[13,"Fixed","","fixed point, 1/256 precision",10,N],[13,"Str","","CString",10,N],[13,"Object","","id of a wayland object",10,N],[13,"NewId","","id of a newly created wayland object",10,N],[13,"Array","","Vec",10,N],[13,"Fd","","RawFd",10,N],[4,"Argument","","Enum of possible argument as recognized by the wire,…",N,N],[13,"Int","","i32",11,N],[13,"Uint","","u32",11,N],[13,"Fixed","","fixed point, 1/256 precision",11,N],[13,"Str","","CString",11,N],[13,"Object","","id of a wayland object",11,N],[13,"NewId","","id of a newly created wayland object",11,N],[13,"Array","","Vec",11,N],[13,"Fd","","RawFd",11,N],[4,"MessageWriteError","","Error generated when trying to serialize a message into…",N,N],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",12,N],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",12,N],[4,"MessageParseError","","Error generated when trying to deserialize a message from…",N,N],[13,"MissingFD","","The message references a FD but the buffer FD is empty",13,N],[13,"MissingData","","More data is needed to deserialize the message",13,N],[13,"Malformed","","The message is malformed and cannot be parsed",13,N],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",N,[[["rawfd"]],["nixresult",["rawfd"]]]],[11,"get_type","","Retrieve the type of a given argument instance",11,[[["self"]],["argumenttype"]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",9,N],[11,"from_raw","","Attempts to parse a single wayland message with the given…",9,N],[8,"MessageGroup","wayland_commons","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",14,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",14,N],[10,"opcode","","The opcode of this message",14,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",14,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",14,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",14,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",14,N],[10,"into_raw","","Turn this message into its raw representation",14,[[["self"],["u32"]],["message"]]],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",15,N],[16,"Event","","Set of events associated to this interface",15,N],[18,"NAME","","Name of this interface",15,N],[18,"VERSION","","Maximum supported version of this interface",15,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_commons::map","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","wayland_commons::sinks","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","wayland_commons::socket","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","wayland_commons::utils","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","wayland_commons::wire","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"is_destructor","wayland_commons","",16,[[["self"]],["bool"]]],[11,"opcode","","",16,[[["self"]],["u16"]]],[11,"since","","",16,[[["self"]],["u32"]]],[11,"child","","",16,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",16,N],[11,"into_raw","","",16,[[["self"],["u32"]],["message"]]],[11,"next","wayland_commons::sinks","",17,[[["self"]],["option"]]],[11,"eq","wayland_commons::wire","",10,[[["self"],["argumenttype"]],["bool"]]],[11,"eq","","",11,[[["self"],["argument"]],["bool"]]],[11,"ne","","",11,[[["self"],["argument"]],["bool"]]],[11,"eq","","",9,[[["self"],["message"]],["bool"]]],[11,"ne","","",9,[[["self"],["message"]],["bool"]]],[11,"default","wayland_commons::map","",2,[[],["objectmap"]]],[11,"default","wayland_commons::utils","",7,[[],["userdatamap"]]],[11,"clone","wayland_commons::map","",0,[[["self"]],["object"]]],[11,"clone","wayland_commons::sinks","",3,[[["self"]],["sink"]]],[11,"clone","wayland_commons::wire","",10,[[["self"]],["argumenttype"]]],[11,"clone","","",11,[[["self"]],["argument"]]],[11,"clone","","",9,[[["self"]],["message"]]],[11,"clone","","",12,[[["self"]],["messagewriteerror"]]],[11,"clone","","",13,[[["self"]],["messageparseerror"]]],[11,"drop","wayland_commons::socket","",4,[[["self"]]]],[11,"fmt","wayland_commons::wire","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_raw_fd","wayland_commons::socket","",4,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",4,[[["self"]],["rawfd"]]],[11,"description","wayland_commons::wire","",12,[[["self"]],["str"]]],[11,"description","","",13,[[["self"]],["str"]]],[11,"from_raw_fd","wayland_commons::socket","",4,[[["rawfd"]],["socket"]]]],"paths":[[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Sink"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[4,"NoMessage"],[3,"MsgIter"]]};
searchIndex["wayland_protocols"]={"doc":"This crate provides bindings to the official wayland…","items":[[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",N,N],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",N,N],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",N,N],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",0,N],[13,"CursorPlane","","compositor has a separate cursor plane",0,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",1,N],[13,"Center","","center the surface on the output",1,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest…",1,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill…",1,N],[13,"Stretch","","scale the surface to the size of the output ignoring…",1,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",2,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",3,N],[13,"PresentSurface","","present surface for display",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"method","","",3,N],[12,"output","","",3,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"output","","",3,N],[12,"framerate","","",3,N],[12,"feedback","","",3,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",4,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",4,N],[17,"REQ_RELEASE_SINCE","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","The minimal object version supporting this request",N,N],[17,"REQ_PRESENT_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PRESENT_SURFACE_FOR_MODE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"capability","","advertises a capability of the compositor",5,[[["self"],["zwpfullscreenshellv1"],["u32"]]]],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",6,N],[13,"ModeFailed","","mode switch failed",6,N],[13,"PresentCancelled","","mode switch cancelled",6,N],[17,"EVT_MODE_SUCCESSFUL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODE_FAILED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESENT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"mode_successful","","mode switch succeeded",7,[[["self"],["zwpfullscreenshellmodefeedbackv1"]]]],[11,"mode_failed","","mode switch failed",7,[[["self"],["zwpfullscreenshellmodefeedbackv1"]]]],[11,"present_cancelled","","mode switch cancelled",7,[[["self"],["zwpfullscreenshellmodefeedbackv1"]]]],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",8,N],[13,"CursorPlane","","compositor has a separate cursor plane",8,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",9,N],[13,"Center","","center the surface on the output",9,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest…",9,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill…",9,N],[13,"Stretch","","scale the surface to the size of the output ignoring…",9,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",10,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",11,N],[13,"PresentSurface","","present surface for display",11,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",11,N],[12,"method","","",11,N],[12,"output","","",11,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","present surface for display at a particular mode",11,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",11,N],[12,"output","","",11,N],[12,"framerate","","",11,N],[12,"feedback","","",11,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",12,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Event","",12,N],[17,"REQ_RELEASE_SINCE","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","The minimal object version supporting this request",N,N],[17,"REQ_PRESENT_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PRESENT_SURFACE_FOR_MODE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"release","","release the wl_fullscreen_shell interface",13,[[["self"],["zwpfullscreenshellv1"]]]],[11,"present_surface","","present surface for display",13,[[["self"],["zwpfullscreenshellv1"],["option",["wlsurface"]],["u32"],["option",["wloutput"]]]]],[11,"present_surface_for_mode","","present surface for display at a particular mode",13,[[["self"],["zwpfullscreenshellv1"],["wlsurface"],["wloutput"],["i32"],["newresource",["zwpfullscreenshellmodefeedbackv1"]]]]],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",14,N],[13,"ModeFailed","","mode switch failed",14,N],[13,"PresentCancelled","","mode switch cancelled",14,N],[17,"EVT_MODE_SUCCESSFUL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODE_FAILED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESENT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","advertises a capability of the compositor",5,[[["self"],["zwpfullscreenshellv1"],["u32"]]]],[11,"from_raw","","",0,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",0,[[["self"]],["u32"]]],[11,"from_raw","","",1,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",1,[[["self"]],["u32"]]],[11,"from_raw","","",2,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",2,[[["self"]],["u32"]]],[11,"release","","release the wl_fullscreen_shell interface",15,N],[11,"present_surface","","present surface for display",15,N],[11,"present_surface_for_mode","","present surface for display at a particular mode",15,[[["self"],["wlsurface"],["wloutput"],["i32"],["f"]],["result",["zwpfullscreenshellmodefeedbackv1"]]]],[11,"mode_successful","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","mode switch succeeded",7,[[["self"],["zwpfullscreenshellmodefeedbackv1"]]]],[11,"mode_failed","","mode switch failed",7,[[["self"],["zwpfullscreenshellmodefeedbackv1"]]]],[11,"present_cancelled","","mode switch cancelled",7,[[["self"],["zwpfullscreenshellmodefeedbackv1"]]]],[11,"release","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","release the wl_fullscreen_shell interface",13,[[["self"],["zwpfullscreenshellv1"]]]],[11,"present_surface","","present surface for display",13,[[["self"],["zwpfullscreenshellv1"],["option",["wlsurface"]],["u32"],["option",["wloutput"]]]]],[11,"present_surface_for_mode","","present surface for display at a particular mode",13,[[["self"],["zwpfullscreenshellv1"],["wlsurface"],["wloutput"],["i32"],["newresource",["zwpfullscreenshellmodefeedbackv1"]]]]],[11,"from_raw","","",8,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",8,[[["self"]],["u32"]]],[11,"from_raw","","",9,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",9,[[["self"]],["u32"]]],[11,"from_raw","","",10,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",10,[[["self"]],["u32"]]],[11,"capability","","advertises a capability of the compositor",16,N],[11,"mode_successful","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","mode switch succeeded",17,N],[11,"mode_failed","","mode switch failed",17,N],[11,"present_cancelled","","mode switch cancelled",17,N],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",N,N],[0,"v1","wayland_protocols::unstable::idle_inhibit","",N,N],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",18,N],[13,"CreateInhibitor","","create a new inhibitor object",18,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",18,N],[12,"surface","","",18,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_INHIBITOR_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",19,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",20,N],[13,"CreateInhibitor","","create a new inhibitor object",20,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1::Request","",20,N],[12,"surface","","",20,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_INHIBITOR_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the idle inhibitor object",21,[[["self"],["zwpidleinhibitmanagerv1"]]]],[11,"create_inhibitor","","create a new inhibitor object",21,[[["self"],["zwpidleinhibitmanagerv1"],["newresource",["zwpidleinhibitorv1"]],["wlsurface"]]]],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",22,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the idle inhibitor object",23,[[["self"],["zwpidleinhibitorv1"]]]],[11,"destroy","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","destroy the idle inhibitor object",24,N],[11,"create_inhibitor","","create a new inhibitor object",24,[[["self"],["wlsurface"],["f"]],["result",["zwpidleinhibitorv1"]]]],[11,"destroy","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","destroy the idle inhibitor object",25,N],[11,"destroy","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","destroy the idle inhibitor object",21,[[["self"],["zwpidleinhibitmanagerv1"]]]],[11,"create_inhibitor","","create a new inhibitor object",21,[[["self"],["zwpidleinhibitmanagerv1"],["newresource",["zwpidleinhibitorv1"]],["wlsurface"]]]],[11,"destroy","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","destroy the idle inhibitor object",23,[[["self"],["zwpidleinhibitorv1"]]]],[0,"input_method","wayland_protocols::unstable","Input method protocol",N,N],[0,"v1","wayland_protocols::unstable::input_method","",N,N],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once sent this object cannot be used…",26,N],[13,"CommitString","","commit string",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"text","","",26,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"text","","",26,N],[12,"commit","","",26,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",26,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"length","","",26,N],[12,"style","","",26,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",26,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",26,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"length","","",26,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",26,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"anchor","","",26,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",26,N],[12,"map","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"time","","",26,N],[12,"sym","","",26,N],[12,"state","","",26,N],[12,"modifiers","","",26,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",26,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[13,"Key","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"time","","",26,N],[12,"key","","",26,N],[12,"state","","",26,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"mods_depressed","","",26,N],[12,"mods_latched","","",26,N],[12,"mods_locked","","",26,N],[12,"group","","",26,N],[13,"Language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"language","","",26,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",26,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",26,N],[12,"direction","","",26,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",27,N],[12,"text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",27,N],[12,"cursor","","",27,N],[12,"anchor","","",27,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",27,N],[13,"ContentType","","",27,N],[12,"hint","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",27,N],[12,"purpose","","",27,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",27,N],[12,"button","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",27,N],[12,"index","","",27,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",27,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",27,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",27,N],[12,"language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",27,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_STRING_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PREEDIT_STRING_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PREEDIT_STYLING_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PREEDIT_CURSOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CURSOR_POSITION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MODIFIERS_MAP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_KEYSYM_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_KEYBOARD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_KEY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MODIFIERS_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_LANGUAGE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_TEXT_DIRECTION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_RESET_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CONTENT_TYPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_INVOKE_ACTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_COMMIT_STATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREFERRED_LANGUAGE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"surrounding_text","","surrounding text event",28,[[["self"],["zwpinputmethodcontextv1"],["string"],["u32"],["u32"]]]],[11,"reset","","",28,[[["self"],["zwpinputmethodcontextv1"]]]],[11,"content_type","","",28,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"]]]],[11,"invoke_action","","",28,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"]]]],[11,"commit_state","","",28,[[["self"],["zwpinputmethodcontextv1"],["u32"]]]],[11,"preferred_language","","",28,[[["self"],["zwpinputmethodcontextv1"],["string"]]]],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",29,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",29,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",29,N],[12,"context","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",29,N],[17,"EVT_ACTIVATE_SINCE","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","The minimal object version supporting this event",N,N],[17,"EVT_DEACTIVATE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"activate","","activate event",30,[[["self"],["zwpinputmethodv1"],["newproxy",["zwpinputmethodcontextv1"]]]]],[11,"deactivate","","deactivate event",30,[[["self"],["zwpinputmethodv1"],["zwpinputmethodcontextv1"]]]],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",31,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",31,N],[12,"surface","","",31,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[17,"REQ_GET_INPUT_PANEL_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",32,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",33,N],[12,"output","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",33,N],[12,"position","","",33,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",33,N],[4,"Event","","",N,N],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OVERLAY_PANEL_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once received this object cannot be…",34,N],[13,"CommitString","","commit string",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"text","","",34,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit string",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"text","","",34,N],[12,"commit","","",34,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit styling",34,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"length","","",34,N],[12,"style","","",34,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit cursor",34,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","delete text",34,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"length","","",34,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","set cursor to a new position",34,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"anchor","","",34,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",34,N],[12,"map","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","keysym",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"time","","",34,N],[12,"sym","","",34,N],[12,"state","","",34,N],[12,"modifiers","","",34,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","grab hardware keyboard",34,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[13,"Key","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward key event",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"time","","",34,N],[12,"key","","",34,N],[12,"state","","",34,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward modifiers event",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"mods_depressed","","",34,N],[12,"mods_latched","","",34,N],[12,"mods_locked","","",34,N],[12,"group","","",34,N],[13,"Language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"language","","",34,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",34,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",34,N],[12,"direction","","",34,N],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",35,N],[12,"text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",35,N],[12,"cursor","","",35,N],[12,"anchor","","",35,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",35,N],[13,"ContentType","","",35,N],[12,"hint","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",35,N],[12,"purpose","","",35,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",35,N],[12,"button","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",35,N],[12,"index","","",35,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",35,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",35,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",35,N],[12,"language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",35,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_STRING_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PREEDIT_STRING_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PREEDIT_STYLING_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PREEDIT_CURSOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CURSOR_POSITION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MODIFIERS_MAP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_KEYSYM_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_KEYBOARD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_KEY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MODIFIERS_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_LANGUAGE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_TEXT_DIRECTION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_RESET_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CONTENT_TYPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_INVOKE_ACTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_COMMIT_STATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREFERRED_LANGUAGE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","This is a destructor, you cannot send requests to this…",36,[[["self"],["zwpinputmethodcontextv1"]]]],[11,"commit_string","","commit string",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["string"]]]],[11,"preedit_string","","pre-edit string",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["string"],["string"]]]],[11,"preedit_styling","","pre-edit styling",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"]]]],[11,"preedit_cursor","","pre-edit cursor",36,[[["self"],["zwpinputmethodcontextv1"],["i32"]]]],[11,"delete_surrounding_text","","delete text",36,[[["self"],["zwpinputmethodcontextv1"],["i32"],["u32"]]]],[11,"cursor_position","","set cursor to a new position",36,[[["self"],["zwpinputmethodcontextv1"],["i32"],["i32"]]]],[11,"modifiers_map","","",36,[[["self"],["zwpinputmethodcontextv1"],["vec",["u8"]]]]],[11,"keysym","","keysym",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"grab_keyboard","","grab hardware keyboard",36,[[["self"],["zwpinputmethodcontextv1"],["newresource",["wlkeyboard"]]]]],[11,"key","","forward key event",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"],["u32"]]]],[11,"modifiers","","forward modifiers event",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"language","","",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["string"]]]],[11,"text_direction","","",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"]]]],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",37,N],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",37,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","deactivate event",37,N],[12,"context","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",37,N],[17,"EVT_ACTIVATE_SINCE","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","The minimal object version supporting this event",N,N],[17,"EVT_DEACTIVATE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",38,N],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1::Request","",38,N],[12,"surface","","",38,N],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",N,N],[17,"REQ_GET_INPUT_PANEL_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_input_panel_surface","","",39,[[["self"],["zwpinputpanelv1"],["newresource",["zwpinputpanelsurfacev1"]],["wlsurface"]]]],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",40,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",41,N],[12,"output","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1::Request","",41,N],[12,"position","","",41,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as an overlay panel",41,N],[4,"Event","","",N,N],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OVERLAY_PANEL_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_toplevel","","set the surface type as a keyboard",42,[[["self"],["zwpinputpanelsurfacev1"],["wloutput"],["u32"]]]],[11,"set_overlay_panel","","set the surface type as an overlay panel",42,[[["self"],["zwpinputpanelsurfacev1"]]]],[11,"surrounding_text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","surrounding text event",28,[[["self"],["zwpinputmethodcontextv1"],["string"],["u32"],["u32"]]]],[11,"reset","","",28,[[["self"],["zwpinputmethodcontextv1"]]]],[11,"content_type","","",28,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"]]]],[11,"invoke_action","","",28,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"]]]],[11,"commit_state","","",28,[[["self"],["zwpinputmethodcontextv1"],["u32"]]]],[11,"preferred_language","","",28,[[["self"],["zwpinputmethodcontextv1"],["string"]]]],[11,"destroy","","This is a destructor, you cannot send requests to this…",43,N],[11,"commit_string","","commit string",43,N],[11,"preedit_string","","pre-edit string",43,N],[11,"preedit_styling","","pre-edit styling",43,N],[11,"preedit_cursor","","pre-edit cursor",43,N],[11,"delete_surrounding_text","","delete text",43,N],[11,"cursor_position","","set cursor to a new position",43,N],[11,"modifiers_map","","",43,N],[11,"keysym","","keysym",43,N],[11,"grab_keyboard","","grab hardware keyboard",43,[[["self"],["f"]],["result",["wlkeyboard"]]]],[11,"key","","forward key event",43,N],[11,"modifiers","","forward modifiers event",43,N],[11,"language","","",43,N],[11,"text_direction","","",43,N],[11,"activate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","activate event",30,[[["self"],["zwpinputmethodv1"],["newproxy",["zwpinputmethodcontextv1"]]]]],[11,"deactivate","","deactivate event",30,[[["self"],["zwpinputmethodv1"],["zwpinputmethodcontextv1"]]]],[11,"get_input_panel_surface","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["self"],["wlsurface"],["f"]],["result",["zwpinputpanelsurfacev1"]]]],[11,"from_raw","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",32,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",32,[[["self"]],["u32"]]],[11,"set_toplevel","","set the surface type as a keyboard",45,N],[11,"set_overlay_panel","","set the surface type as an overlay panel",45,N],[11,"destroy","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","This is a destructor, you cannot send requests to this…",36,[[["self"],["zwpinputmethodcontextv1"]]]],[11,"commit_string","","commit string",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["string"]]]],[11,"preedit_string","","pre-edit string",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["string"],["string"]]]],[11,"preedit_styling","","pre-edit styling",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"]]]],[11,"preedit_cursor","","pre-edit cursor",36,[[["self"],["zwpinputmethodcontextv1"],["i32"]]]],[11,"delete_surrounding_text","","delete text",36,[[["self"],["zwpinputmethodcontextv1"],["i32"],["u32"]]]],[11,"cursor_position","","set cursor to a new position",36,[[["self"],["zwpinputmethodcontextv1"],["i32"],["i32"]]]],[11,"modifiers_map","","",36,[[["self"],["zwpinputmethodcontextv1"],["vec",["u8"]]]]],[11,"keysym","","keysym",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"grab_keyboard","","grab hardware keyboard",36,[[["self"],["zwpinputmethodcontextv1"],["newresource",["wlkeyboard"]]]]],[11,"key","","forward key event",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"],["u32"]]]],[11,"modifiers","","forward modifiers event",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"language","","",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["string"]]]],[11,"text_direction","","",36,[[["self"],["zwpinputmethodcontextv1"],["u32"],["u32"]]]],[11,"surrounding_text","","surrounding text event",46,N],[11,"reset","","",46,N],[11,"content_type","","",46,N],[11,"invoke_action","","",46,N],[11,"commit_state","","",46,N],[11,"preferred_language","","",46,N],[11,"activate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","activate event",47,N],[11,"deactivate","","deactivate event",47,N],[11,"get_input_panel_surface","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",39,[[["self"],["zwpinputpanelv1"],["newresource",["zwpinputpanelsurfacev1"]],["wlsurface"]]]],[11,"set_toplevel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as a keyboard",42,[[["self"],["zwpinputpanelsurfacev1"],["wloutput"],["u32"]]]],[11,"set_overlay_panel","","set the surface type as an overlay panel",42,[[["self"],["zwpinputpanelsurfacev1"]]]],[11,"from_raw","","",40,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",40,[[["self"]],["u32"]]],[0,"input_timestamps","wayland_protocols::unstable","Input timestamps protocol",N,N],[0,"v1","wayland_protocols::unstable::input_timestamps","",N,N],[0,"client","wayland_protocols::unstable::input_timestamps::v1","Client-side API of this protocol",N,N],[0,"zwp_input_timestamps_manager_v1","wayland_protocols::unstable::input_timestamps::v1::client","context object for high-resolution input timestamps",N,N],[3,"ZwpInputTimestampsManagerV1","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps manager object",48,N],[13,"GetKeyboardTimestamps","","subscribe to high-resolution keyboard timestamp events",48,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request","",48,N],[12,"keyboard","","",48,N],[13,"GetPointerTimestamps","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","subscribe to high-resolution pointer timestamp events",48,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request","",48,N],[12,"pointer","","",48,N],[13,"GetTouchTimestamps","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","subscribe to high-resolution touch timestamp events",48,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request","",48,N],[12,"touch","","",48,N],[4,"Event","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POINTER_TIMESTAMPS_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOUCH_TIMESTAMPS_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_input_timestamps_v1","wayland_protocols::unstable::input_timestamps::v1::client","context object for input timestamps",N,N],[3,"ZwpInputTimestampsV1","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps object",49,N],[4,"Event","","",N,N],[13,"Timestamp","","high-resolution timestamp event",50,N],[12,"tv_sec_hi","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1::Event","",50,N],[12,"tv_sec_lo","","",50,N],[12,"tv_nsec","","",50,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","The minimal object version supporting this request",N,N],[17,"EVT_TIMESTAMP_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"timestamp","","high-resolution timestamp event",51,[[["self"],["zwpinputtimestampsv1"],["u32"],["u32"],["u32"]]]],[0,"server","wayland_protocols::unstable::input_timestamps::v1","Server-side API of this protocol",N,N],[0,"zwp_input_timestamps_manager_v1","wayland_protocols::unstable::input_timestamps::v1::server","context object for high-resolution input timestamps",N,N],[3,"ZwpInputTimestampsManagerV1","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps manager object",52,N],[13,"GetKeyboardTimestamps","","subscribe to high-resolution keyboard timestamp events",52,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",52,N],[12,"keyboard","","",52,N],[13,"GetPointerTimestamps","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","subscribe to high-resolution pointer timestamp events",52,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",52,N],[12,"pointer","","",52,N],[13,"GetTouchTimestamps","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","subscribe to high-resolution touch timestamp events",52,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",52,N],[12,"touch","","",52,N],[4,"Event","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POINTER_TIMESTAMPS_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOUCH_TIMESTAMPS_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the input timestamps manager object",53,[[["self"],["zwpinputtimestampsmanagerv1"]]]],[11,"get_keyboard_timestamps","","subscribe to high-resolution keyboard timestamp events",53,[[["self"],["zwpinputtimestampsmanagerv1"],["newresource",["zwpinputtimestampsv1"]],["wlkeyboard"]]]],[11,"get_pointer_timestamps","","subscribe to high-resolution pointer timestamp events",53,[[["self"],["zwpinputtimestampsmanagerv1"],["newresource",["zwpinputtimestampsv1"]],["wlpointer"]]]],[11,"get_touch_timestamps","","subscribe to high-resolution touch timestamp events",53,[[["self"],["zwpinputtimestampsmanagerv1"],["newresource",["zwpinputtimestampsv1"]],["wltouch"]]]],[0,"zwp_input_timestamps_v1","wayland_protocols::unstable::input_timestamps::v1::server","context object for input timestamps",N,N],[3,"ZwpInputTimestampsV1","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps object",54,N],[4,"Event","","",N,N],[13,"Timestamp","","high-resolution timestamp event",55,N],[12,"tv_sec_hi","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1::Event","",55,N],[12,"tv_sec_lo","","",55,N],[12,"tv_nsec","","",55,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","The minimal object version supporting this request",N,N],[17,"EVT_TIMESTAMP_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the input timestamps object",56,[[["self"],["zwpinputtimestampsv1"]]]],[11,"destroy","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","destroy the input timestamps manager object",57,N],[11,"get_keyboard_timestamps","","subscribe to high-resolution keyboard timestamp events",57,[[["self"],["wlkeyboard"],["f"]],["result",["zwpinputtimestampsv1"]]]],[11,"get_pointer_timestamps","","subscribe to high-resolution pointer timestamp events",57,[[["self"],["wlpointer"],["f"]],["result",["zwpinputtimestampsv1"]]]],[11,"get_touch_timestamps","","subscribe to high-resolution touch timestamp events",57,[[["self"],["wltouch"],["f"]],["result",["zwpinputtimestampsv1"]]]],[11,"timestamp","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","high-resolution timestamp event",51,[[["self"],["zwpinputtimestampsv1"],["u32"],["u32"],["u32"]]]],[11,"destroy","","destroy the input timestamps object",58,N],[11,"destroy","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","destroy the input timestamps manager object",53,[[["self"],["zwpinputtimestampsmanagerv1"]]]],[11,"get_keyboard_timestamps","","subscribe to high-resolution keyboard timestamp events",53,[[["self"],["zwpinputtimestampsmanagerv1"],["newresource",["zwpinputtimestampsv1"]],["wlkeyboard"]]]],[11,"get_pointer_timestamps","","subscribe to high-resolution pointer timestamp events",53,[[["self"],["zwpinputtimestampsmanagerv1"],["newresource",["zwpinputtimestampsv1"]],["wlpointer"]]]],[11,"get_touch_timestamps","","subscribe to high-resolution touch timestamp events",53,[[["self"],["zwpinputtimestampsmanagerv1"],["newresource",["zwpinputtimestampsv1"]],["wltouch"]]]],[11,"destroy","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","destroy the input timestamps object",56,[[["self"],["zwpinputtimestampsv1"]]]],[11,"timestamp","","high-resolution timestamp event",59,N],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",N,N],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",N,N],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",60,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",61,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",61,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",61,N],[12,"surface","","",61,N],[12,"seat","","",61,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_INHIBIT_SHORTCUTS_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",62,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",63,N],[13,"Inactive","","shortcuts are restored",63,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ACTIVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_INACTIVE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"active","","shortcuts are inhibited",64,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]]]],[11,"inactive","","shortcuts are restored",64,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]]]],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",65,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",66,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",66,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",66,N],[12,"surface","","",66,N],[12,"seat","","",66,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_INHIBIT_SHORTCUTS_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the keyboard shortcuts inhibitor object",67,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"]]]],[11,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",67,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"],["newresource",["zwpkeyboardshortcutsinhibitorv1"]],["wlsurface"],["wlseat"]]]],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",68,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",69,N],[13,"Inactive","","shortcuts are restored",69,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ACTIVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_INACTIVE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the keyboard shortcuts inhibitor object",70,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]]]],[11,"from_raw","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",60,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",60,[[["self"]],["u32"]]],[11,"destroy","","destroy the keyboard shortcuts inhibitor object",71,N],[11,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",71,[[["self"],["wlsurface"],["wlseat"],["f"]],["result",["zwpkeyboardshortcutsinhibitorv1"]]]],[11,"active","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","shortcuts are inhibited",64,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]]]],[11,"inactive","","shortcuts are restored",64,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]]]],[11,"destroy","","destroy the keyboard shortcuts inhibitor object",72,N],[11,"destroy","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","destroy the keyboard shortcuts inhibitor object",67,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"]]]],[11,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",67,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"],["newresource",["zwpkeyboardshortcutsinhibitorv1"]],["wlsurface"],["wlseat"]]]],[11,"from_raw","","",65,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","destroy the keyboard shortcuts inhibitor object",70,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]]]],[11,"active","","shortcuts are inhibited",73,N],[11,"inactive","","shortcuts are restored",73,N],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",N,N],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",N,N],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",74,N],[13,"CreateParams","","create a temporary object for buffer parameters",74,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",74,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",75,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",75,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",75,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",75,N],[12,"modifier_hi","","",75,N],[12,"modifier_lo","","",75,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_PARAMS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODIFIER_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"format","","supported buffer format",76,[[["self"],["zwplinuxdmabufv1"],["u32"]]]],[11,"modifier","","supported buffer format modifier",76,[[["self"],["zwplinuxdmabufv1"],["u32"],["u32"],["u32"]]]],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a…",77,N],[13,"PlaneIdx","","plane index out of bounds",77,N],[13,"PlaneSet","","the plane index was already set",77,N],[13,"Incomplete","","missing or too many planes to create a buffer",77,N],[13,"InvalidFormat","","format not supported",77,N],[13,"InvalidDimensions","","invalid width or height",77,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",77,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the…",77,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",78,N],[13,"Interlaced","","content is interlaced",78,N],[13,"BottomFirst","","bottom field first",78,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",79,N],[13,"Add","","add a dmabuf to the temporary set",79,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",79,N],[12,"plane_idx","","",79,N],[12,"offset","","",79,N],[12,"stride","","",79,N],[12,"modifier_hi","","",79,N],[12,"modifier_lo","","",79,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",79,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",79,N],[12,"height","","",79,N],[12,"format","","",79,N],[12,"flags","","",79,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",79,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",79,N],[12,"width","","",79,N],[12,"height","","",79,N],[12,"format","","",79,N],[12,"flags","","",79,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",80,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",80,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",80,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_IMMED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CREATED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"created","","buffer creation succeeded",81,[[["self"],["zwplinuxbufferparamsv1"],["newproxy",["wlbuffer"]]]]],[11,"failed","","buffer creation failed",81,[[["self"],["zwplinuxbufferparamsv1"]]]],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",82,N],[13,"CreateParams","","create a temporary object for buffer parameters",82,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Request","",82,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",83,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",83,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format modifier",83,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",83,N],[12,"modifier_hi","","",83,N],[12,"modifier_lo","","",83,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_PARAMS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODIFIER_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","unbind the factory",84,[[["self"],["zwplinuxdmabufv1"]]]],[11,"create_params","","create a temporary object for buffer parameters",84,[[["self"],["zwplinuxdmabufv1"],["newresource",["zwplinuxbufferparamsv1"]]]]],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a…",85,N],[13,"PlaneIdx","","plane index out of bounds",85,N],[13,"PlaneSet","","the plane index was already set",85,N],[13,"Incomplete","","missing or too many planes to create a buffer",85,N],[13,"InvalidFormat","","format not supported",85,N],[13,"InvalidDimensions","","invalid width or height",85,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",85,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the…",85,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",86,N],[13,"Interlaced","","content is interlaced",86,N],[13,"BottomFirst","","bottom field first",86,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",87,N],[13,"Add","","add a dmabuf to the temporary set",87,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",87,N],[12,"plane_idx","","",87,N],[12,"offset","","",87,N],[12,"stride","","",87,N],[12,"modifier_hi","","",87,N],[12,"modifier_lo","","",87,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",87,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",87,N],[12,"height","","",87,N],[12,"format","","",87,N],[12,"flags","","",87,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",87,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",87,N],[12,"width","","",87,N],[12,"height","","",87,N],[12,"format","","",87,N],[12,"flags","","",87,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",88,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Event","",88,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","buffer creation failed",88,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_IMMED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CREATED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","delete this object, used or not",89,[[["self"],["zwplinuxbufferparamsv1"]]]],[11,"add","","add a dmabuf to the temporary set",89,[[["self"],["zwplinuxbufferparamsv1"],["rawfd"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"create","","create a wl_buffer from the given dmabufs",89,[[["self"],["zwplinuxbufferparamsv1"],["i32"],["i32"],["u32"],["u32"]]]],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",89,[[["self"],["zwplinuxbufferparamsv1"],["newresource",["wlbuffer"]],["i32"],["i32"],["u32"],["u32"]]]],[11,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format",76,[[["self"],["zwplinuxdmabufv1"],["u32"]]]],[11,"modifier","","supported buffer format modifier",76,[[["self"],["zwplinuxdmabufv1"],["u32"],["u32"],["u32"]]]],[11,"destroy","","unbind the factory",90,N],[11,"create_params","","create a temporary object for buffer parameters",90,[[["self"],["f"]],["result",["zwplinuxbufferparamsv1"]]]],[11,"created","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation succeeded",81,[[["self"],["zwplinuxbufferparamsv1"],["newproxy",["wlbuffer"]]]]],[11,"failed","","buffer creation failed",81,[[["self"],["zwplinuxbufferparamsv1"]]]],[11,"from_raw","","",77,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",77,[[["self"]],["u32"]]],[11,"from_raw","","",78,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"destroy","","delete this object, used or not",91,N],[11,"add","","add a dmabuf to the temporary set",91,N],[11,"create","","create a wl_buffer from the given dmabufs",91,N],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",91,[[["self"],["i32"],["i32"],["u32"],["u32"],["f"]],["result",["wlbuffer"]]]],[11,"destroy","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","unbind the factory",84,[[["self"],["zwplinuxdmabufv1"]]]],[11,"create_params","","create a temporary object for buffer parameters",84,[[["self"],["zwplinuxdmabufv1"],["newresource",["zwplinuxbufferparamsv1"]]]]],[11,"format","","supported buffer format",92,N],[11,"modifier","","supported buffer format modifier",92,N],[11,"destroy","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","delete this object, used or not",89,[[["self"],["zwplinuxbufferparamsv1"]]]],[11,"add","","add a dmabuf to the temporary set",89,[[["self"],["zwplinuxbufferparamsv1"],["rawfd"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"create","","create a wl_buffer from the given dmabufs",89,[[["self"],["zwplinuxbufferparamsv1"],["i32"],["i32"],["u32"],["u32"]]]],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",89,[[["self"],["zwplinuxbufferparamsv1"],["newresource",["wlbuffer"]],["i32"],["i32"],["u32"],["u32"]]]],[11,"from_raw","","",85,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",85,[[["self"]],["u32"]]],[11,"from_raw","","",86,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",86,[[["self"]],["u32"]]],[11,"created","","buffer creation succeeded",93,N],[11,"failed","","buffer creation failed",93,N],[0,"linux_explicit_synchronization","wayland_protocols::unstable","Linux explicit synchronization protocol",N,N],[0,"v1","wayland_protocols::unstable::linux_explicit_synchronization","",N,N],[0,"client","wayland_protocols::unstable::linux_explicit_synchronization::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_explicit_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client","protocol for providing explicit synchronization",N,N],[3,"ZwpLinuxExplicitSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"SynchronizationExists","","the surface already has a synchronization object associated",94,N],[4,"Request","","",N,N],[13,"Destroy","","destroy explicit synchronization factory object",95,N],[13,"GetSynchronization","","extend surface interface for explicit synchronization",95,N],[12,"id","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1::Request","",95,N],[12,"surface","","",95,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_SYNCHRONIZATION_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_linux_surface_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client","per-surface explicit synchronization support",N,N],[3,"ZwpLinuxSurfaceSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidFence","","the fence specified by the client could not be imported",96,N],[13,"DuplicateFence","","multiple fences added for a single surface commit",96,N],[13,"DuplicateRelease","","multiple releases added for a single surface commit",96,N],[13,"NoSurface","","the associated wl_surface was destroyed",96,N],[13,"UnsupportedBuffer","","the buffer does not support explicit synchronization",96,N],[13,"NoBuffer","","no buffer was attached",96,N],[4,"Request","","",N,N],[13,"Destroy","","destroy synchronization object",97,N],[13,"SetAcquireFence","","set the acquire fence",97,N],[12,"fd","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1::Request","",97,N],[13,"GetRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","release fence for last-attached buffer",97,N],[12,"release","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1::Request","",97,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ACQUIRE_FENCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_linux_buffer_release_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client","buffer release explicit synchronization",N,N],[3,"ZwpLinuxBufferReleaseV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"FencedRelease","","release buffer with fence",98,N],[12,"fence","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1::Event","",98,N],[13,"ImmediateRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","release buffer immediately",98,N],[17,"EVT_FENCED_RELEASE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_IMMEDIATE_RELEASE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"fenced_release","","release buffer with fence",99,[[["self"],["zwplinuxbufferreleasev1"],["rawfd"]]]],[11,"immediate_release","","release buffer immediately",99,[[["self"],["zwplinuxbufferreleasev1"]]]],[0,"server","wayland_protocols::unstable::linux_explicit_synchronization::v1","Server-side API of this protocol",N,N],[0,"zwp_linux_explicit_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","protocol for providing explicit synchronization",N,N],[3,"ZwpLinuxExplicitSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"SynchronizationExists","","the surface already has a synchronization object associated",100,N],[4,"Request","","",N,N],[13,"Destroy","","destroy explicit synchronization factory object",101,N],[13,"GetSynchronization","","extend surface interface for explicit synchronization",101,N],[12,"id","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1::Request","",101,N],[12,"surface","","",101,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_SYNCHRONIZATION_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy explicit synchronization factory object",102,[[["self"],["zwplinuxexplicitsynchronizationv1"]]]],[11,"get_synchronization","","extend surface interface for explicit synchronization",102,[[["self"],["zwplinuxexplicitsynchronizationv1"],["newresource",["zwplinuxsurfacesynchronizationv1"]],["wlsurface"]]]],[0,"zwp_linux_surface_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","per-surface explicit synchronization support",N,N],[3,"ZwpLinuxSurfaceSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidFence","","the fence specified by the client could not be imported",103,N],[13,"DuplicateFence","","multiple fences added for a single surface commit",103,N],[13,"DuplicateRelease","","multiple releases added for a single surface commit",103,N],[13,"NoSurface","","the associated wl_surface was destroyed",103,N],[13,"UnsupportedBuffer","","the buffer does not support explicit synchronization",103,N],[13,"NoBuffer","","no buffer was attached",103,N],[4,"Request","","",N,N],[13,"Destroy","","destroy synchronization object",104,N],[13,"SetAcquireFence","","set the acquire fence",104,N],[12,"fd","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1::Request","",104,N],[13,"GetRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","release fence for last-attached buffer",104,N],[12,"release","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1::Request","",104,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ACQUIRE_FENCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy synchronization object",105,[[["self"],["zwplinuxsurfacesynchronizationv1"]]]],[11,"set_acquire_fence","","set the acquire fence",105,[[["self"],["zwplinuxsurfacesynchronizationv1"],["rawfd"]]]],[11,"get_release","","release fence for last-attached buffer",105,[[["self"],["zwplinuxsurfacesynchronizationv1"],["newresource",["zwplinuxbufferreleasev1"]]]]],[0,"zwp_linux_buffer_release_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","buffer release explicit synchronization",N,N],[3,"ZwpLinuxBufferReleaseV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"FencedRelease","","release buffer with fence",106,N],[12,"fence","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1::Event","",106,N],[13,"ImmediateRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","release buffer immediately",106,N],[17,"EVT_FENCED_RELEASE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_IMMEDIATE_RELEASE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",94,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",94,[[["self"]],["u32"]]],[11,"destroy","","destroy explicit synchronization factory object",107,N],[11,"get_synchronization","","extend surface interface for explicit synchronization",107,[[["self"],["wlsurface"],["f"]],["result",["zwplinuxsurfacesynchronizationv1"]]]],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",96,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",96,[[["self"]],["u32"]]],[11,"destroy","","destroy synchronization object",108,N],[11,"set_acquire_fence","","set the acquire fence",108,N],[11,"get_release","","release fence for last-attached buffer",108,[[["self"],["f"]],["result",["zwplinuxbufferreleasev1"]]]],[11,"fenced_release","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","release buffer with fence",99,[[["self"],["zwplinuxbufferreleasev1"],["rawfd"]]]],[11,"immediate_release","","release buffer immediately",99,[[["self"],["zwplinuxbufferreleasev1"]]]],[11,"destroy","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","destroy explicit synchronization factory object",102,[[["self"],["zwplinuxexplicitsynchronizationv1"]]]],[11,"get_synchronization","","extend surface interface for explicit synchronization",102,[[["self"],["zwplinuxexplicitsynchronizationv1"],["newresource",["zwplinuxsurfacesynchronizationv1"]],["wlsurface"]]]],[11,"from_raw","","",100,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",100,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","destroy synchronization object",105,[[["self"],["zwplinuxsurfacesynchronizationv1"]]]],[11,"set_acquire_fence","","set the acquire fence",105,[[["self"],["zwplinuxsurfacesynchronizationv1"],["rawfd"]]]],[11,"get_release","","release fence for last-attached buffer",105,[[["self"],["zwplinuxsurfacesynchronizationv1"],["newresource",["zwplinuxbufferreleasev1"]]]]],[11,"from_raw","","",103,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",103,[[["self"]],["u32"]]],[11,"fenced_release","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","release buffer with fence",109,N],[11,"immediate_release","","release buffer immediately",109,N],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",N,N],[0,"v1","wayland_protocols::unstable::pointer_constraints","",N,N],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",110,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",111,N],[13,"Persistent","","the pointer constraint may reactivate",111,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",112,N],[13,"LockPointer","","lock pointer to a position",112,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",112,N],[12,"surface","","",112,N],[12,"pointer","","",112,N],[12,"region","","",112,N],[12,"lifetime","","",112,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",112,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",112,N],[12,"surface","","",112,N],[12,"pointer","","",112,N],[12,"region","","",112,N],[12,"lifetime","","",112,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_LOCK_POINTER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CONFINE_POINTER_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",113,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",113,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",113,N],[12,"surface_y","","",113,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",113,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",113,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",114,N],[13,"Unlocked","","lock deactivation event",114,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CURSOR_POSITION_HINT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_LOCKED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UNLOCKED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"locked","","lock activation event",115,[[["self"],["zwplockedpointerv1"]]]],[11,"unlocked","","lock deactivation event",115,[[["self"],["zwplockedpointerv1"]]]],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",116,N],[13,"SetRegion","","set a new confine region",116,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",116,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",117,N],[13,"Unconfined","","pointer unconfined",117,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFINED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UNCONFINED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"confined","","pointer confined",118,[[["self"],["zwpconfinedpointerv1"]]]],[11,"unconfined","","pointer unconfined",118,[[["self"],["zwpconfinedpointerv1"]]]],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",119,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",120,N],[13,"Persistent","","the pointer constraint may reactivate",120,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",121,N],[13,"LockPointer","","lock pointer to a position",121,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",121,N],[12,"surface","","",121,N],[12,"pointer","","",121,N],[12,"region","","",121,N],[12,"lifetime","","",121,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","confine pointer to a region",121,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",121,N],[12,"surface","","",121,N],[12,"pointer","","",121,N],[12,"region","","",121,N],[12,"lifetime","","",121,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_LOCK_POINTER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CONFINE_POINTER_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the pointer constraints manager object",122,[[["self"],["zwppointerconstraintsv1"]]]],[11,"lock_pointer","","lock pointer to a position",122,[[["self"],["zwppointerconstraintsv1"],["newresource",["zwplockedpointerv1"]],["wlsurface"],["wlpointer"],["option",["wlregion"]],["u32"]]]],[11,"confine_pointer","","confine pointer to a region",122,[[["self"],["zwppointerconstraintsv1"],["newresource",["zwpconfinedpointerv1"]],["wlsurface"],["wlpointer"],["option",["wlregion"]],["u32"]]]],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",123,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",123,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",123,N],[12,"surface_y","","",123,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","set a new lock region",123,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",123,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",124,N],[13,"Unlocked","","lock deactivation event",124,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CURSOR_POSITION_HINT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_LOCKED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UNLOCKED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the locked pointer object",125,[[["self"],["zwplockedpointerv1"]]]],[11,"set_cursor_position_hint","","set the pointer cursor position hint",125,[[["self"],["zwplockedpointerv1"],["f64"],["f64"]]]],[11,"set_region","","set a new lock region",125,[[["self"],["zwplockedpointerv1"],["option",["wlregion"]]]]],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",126,N],[13,"SetRegion","","set a new confine region",126,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1::Request","",126,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",127,N],[13,"Unconfined","","pointer unconfined",127,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFINED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UNCONFINED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the confined pointer object",128,[[["self"],["zwpconfinedpointerv1"]]]],[11,"set_region","","set a new confine region",128,[[["self"],["zwpconfinedpointerv1"],["option",["wlregion"]]]]],[11,"from_raw","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",110,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",110,[[["self"]],["u32"]]],[11,"from_raw","","",111,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",111,[[["self"]],["u32"]]],[11,"destroy","","destroy the pointer constraints manager object",129,N],[11,"lock_pointer","","lock pointer to a position",129,[[["self"],["wlsurface"],["wlpointer"],["option",["wlregion"]],["u32"],["f"]],["result",["zwplockedpointerv1"]]]],[11,"confine_pointer","","confine pointer to a region",129,[[["self"],["wlsurface"],["wlpointer"],["option",["wlregion"]],["u32"],["f"]],["result",["zwpconfinedpointerv1"]]]],[11,"locked","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","lock activation event",115,[[["self"],["zwplockedpointerv1"]]]],[11,"unlocked","","lock deactivation event",115,[[["self"],["zwplockedpointerv1"]]]],[11,"destroy","","destroy the locked pointer object",130,N],[11,"set_cursor_position_hint","","set the pointer cursor position hint",130,N],[11,"set_region","","set a new lock region",130,N],[11,"confined","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","pointer confined",118,[[["self"],["zwpconfinedpointerv1"]]]],[11,"unconfined","","pointer unconfined",118,[[["self"],["zwpconfinedpointerv1"]]]],[11,"destroy","","destroy the confined pointer object",131,N],[11,"set_region","","set a new confine region",131,N],[11,"destroy","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","destroy the pointer constraints manager object",122,[[["self"],["zwppointerconstraintsv1"]]]],[11,"lock_pointer","","lock pointer to a position",122,[[["self"],["zwppointerconstraintsv1"],["newresource",["zwplockedpointerv1"]],["wlsurface"],["wlpointer"],["option",["wlregion"]],["u32"]]]],[11,"confine_pointer","","confine pointer to a region",122,[[["self"],["zwppointerconstraintsv1"],["newresource",["zwpconfinedpointerv1"]],["wlsurface"],["wlpointer"],["option",["wlregion"]],["u32"]]]],[11,"from_raw","","",119,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",119,[[["self"]],["u32"]]],[11,"from_raw","","",120,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",120,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","destroy the locked pointer object",125,[[["self"],["zwplockedpointerv1"]]]],[11,"set_cursor_position_hint","","set the pointer cursor position hint",125,[[["self"],["zwplockedpointerv1"],["f64"],["f64"]]]],[11,"set_region","","set a new lock region",125,[[["self"],["zwplockedpointerv1"],["option",["wlregion"]]]]],[11,"locked","","lock activation event",132,N],[11,"unlocked","","lock deactivation event",132,N],[11,"destroy","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","destroy the confined pointer object",128,[[["self"],["zwpconfinedpointerv1"]]]],[11,"set_region","","set a new confine region",128,[[["self"],["zwpconfinedpointerv1"],["option",["wlregion"]]]]],[11,"confined","","pointer confined",133,N],[11,"unconfined","","pointer unconfined",133,N],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",N,N],[0,"v1","wayland_protocols::unstable::pointer_gestures","",N,N],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",134,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",134,N],[12,"pointer","","",134,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",134,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",134,N],[12,"pointer","","",134,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[17,"REQ_GET_SWIPE_GESTURE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_PINCH_GESTURE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",135,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",136,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",136,N],[12,"time","","",136,N],[12,"surface","","",136,N],[12,"fingers","","",136,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",136,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",136,N],[12,"dx","","",136,N],[12,"dy","","",136,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",136,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",136,N],[12,"time","","",136,N],[12,"cancelled","","",136,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","The minimal object version supporting this request",N,N],[17,"EVT_BEGIN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UPDATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_END_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"begin","","multi-finger swipe begin",137,[[["self"],["zwppointergestureswipev1"],["u32"],["u32"],["wlsurface"],["u32"]]]],[11,"update","","multi-finger swipe motion",137,[[["self"],["zwppointergestureswipev1"],["u32"],["f64"],["f64"]]]],[11,"end","","multi-finger swipe end",137,[[["self"],["zwppointergestureswipev1"],["u32"],["u32"],["i32"]]]],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",138,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",139,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",139,N],[12,"time","","",139,N],[12,"surface","","",139,N],[12,"fingers","","",139,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",139,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",139,N],[12,"dx","","",139,N],[12,"dy","","",139,N],[12,"scale","","",139,N],[12,"rotation","","",139,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",139,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",139,N],[12,"time","","",139,N],[12,"cancelled","","",139,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","The minimal object version supporting this request",N,N],[17,"EVT_BEGIN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UPDATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_END_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"begin","","multi-finger pinch begin",140,[[["self"],["zwppointergesturepinchv1"],["u32"],["u32"],["wlsurface"],["u32"]]]],[11,"update","","multi-finger pinch motion",140,[[["self"],["zwppointergesturepinchv1"],["u32"],["f64"],["f64"],["f64"],["f64"]]]],[11,"end","","multi-finger pinch end",140,[[["self"],["zwppointergesturepinchv1"],["u32"],["u32"],["i32"]]]],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",141,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",141,N],[12,"pointer","","",141,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get pinch gesture",141,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",141,N],[12,"pointer","","",141,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",N,N],[17,"REQ_GET_SWIPE_GESTURE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_PINCH_GESTURE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_swipe_gesture","","get swipe gesture",142,[[["self"],["zwppointergesturesv1"],["newresource",["zwppointergestureswipev1"]],["wlpointer"]]]],[11,"get_pinch_gesture","","get pinch gesture",142,[[["self"],["zwppointergesturesv1"],["newresource",["zwppointergesturepinchv1"]],["wlpointer"]]]],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",143,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",144,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",144,N],[12,"time","","",144,N],[12,"surface","","",144,N],[12,"fingers","","",144,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",144,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",144,N],[12,"dx","","",144,N],[12,"dy","","",144,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",144,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",144,N],[12,"time","","",144,N],[12,"cancelled","","",144,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","The minimal object version supporting this request",N,N],[17,"EVT_BEGIN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UPDATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_END_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the pointer swipe gesture object",145,[[["self"],["zwppointergestureswipev1"]]]],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",146,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",147,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",147,N],[12,"time","","",147,N],[12,"surface","","",147,N],[12,"fingers","","",147,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",147,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",147,N],[12,"dx","","",147,N],[12,"dy","","",147,N],[12,"scale","","",147,N],[12,"rotation","","",147,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",147,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",147,N],[12,"time","","",147,N],[12,"cancelled","","",147,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","The minimal object version supporting this request",N,N],[17,"EVT_BEGIN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UPDATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_END_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the pinch gesture object",148,[[["self"],["zwppointergesturepinchv1"]]]],[11,"get_swipe_gesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get swipe gesture",149,[[["self"],["wlpointer"],["f"]],["result",["zwppointergestureswipev1"]]]],[11,"get_pinch_gesture","","get pinch gesture",149,[[["self"],["wlpointer"],["f"]],["result",["zwppointergesturepinchv1"]]]],[11,"begin","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe begin",137,[[["self"],["zwppointergestureswipev1"],["u32"],["u32"],["wlsurface"],["u32"]]]],[11,"update","","multi-finger swipe motion",137,[[["self"],["zwppointergestureswipev1"],["u32"],["f64"],["f64"]]]],[11,"end","","multi-finger swipe end",137,[[["self"],["zwppointergestureswipev1"],["u32"],["u32"],["i32"]]]],[11,"destroy","","destroy the pointer swipe gesture object",150,N],[11,"begin","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch begin",140,[[["self"],["zwppointergesturepinchv1"],["u32"],["u32"],["wlsurface"],["u32"]]]],[11,"update","","multi-finger pinch motion",140,[[["self"],["zwppointergesturepinchv1"],["u32"],["f64"],["f64"],["f64"],["f64"]]]],[11,"end","","multi-finger pinch end",140,[[["self"],["zwppointergesturepinchv1"],["u32"],["u32"],["i32"]]]],[11,"destroy","","destroy the pinch gesture object",151,N],[11,"get_swipe_gesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get swipe gesture",142,[[["self"],["zwppointergesturesv1"],["newresource",["zwppointergestureswipev1"]],["wlpointer"]]]],[11,"get_pinch_gesture","","get pinch gesture",142,[[["self"],["zwppointergesturesv1"],["newresource",["zwppointergesturepinchv1"]],["wlpointer"]]]],[11,"destroy","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","destroy the pointer swipe gesture object",145,[[["self"],["zwppointergestureswipev1"]]]],[11,"begin","","multi-finger swipe begin",152,N],[11,"update","","multi-finger swipe motion",152,N],[11,"end","","multi-finger swipe end",152,N],[11,"destroy","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","destroy the pinch gesture object",148,[[["self"],["zwppointergesturepinchv1"]]]],[11,"begin","","multi-finger pinch begin",153,N],[11,"update","","multi-finger pinch motion",153,N],[11,"end","","multi-finger pinch end",153,N],[0,"primary_selection","wayland_protocols::unstable","Primary selection protocol",N,N],[0,"v1","wayland_protocols::unstable::primary_selection","",N,N],[0,"client","wayland_protocols::unstable::primary_selection::v1","Client-side API of this protocol",N,N],[0,"zwp_primary_selection_device_manager_v1","wayland_protocols::unstable::primary_selection::v1::client","X primary selection emulation",N,N],[3,"ZwpPrimarySelectionDeviceManagerV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateSource","","create a new primary selection source",154,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1::Request","",154,N],[13,"GetDevice","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","create a new primary selection device",154,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1::Request","",154,N],[12,"seat","","",154,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","destroy the primary selection device manager",154,N],[4,"Event","","",N,N],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_primary_selection_device_v1","wayland_protocols::unstable::primary_selection::v1::client","",N,N],[3,"ZwpPrimarySelectionDeviceV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",N,N],[4,"Request","","",N,N],[13,"SetSelection","","set the primary selection",155,N],[12,"source","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Request","",155,N],[12,"serial","","",155,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","destroy the primary selection device",155,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wp_primary_selection_offer",156,N],[12,"offer","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Event","",156,N],[13,"Selection","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","advertise a new primary selection",156,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Event","",156,N],[17,"REQ_SET_SELECTION_SINCE","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"data_offer","","introduce a new wp_primary_selection_offer",157,[[["self"],["zwpprimaryselectiondevicev1"],["newproxy",["zwpprimaryselectionofferv1"]]]]],[11,"selection","","advertise a new primary selection",157,[[["self"],["zwpprimaryselectiondevicev1"],["option",["zwpprimaryselectionofferv1"]]]]],[0,"zwp_primary_selection_offer_v1","wayland_protocols::unstable::primary_selection::v1::client","offer to transfer primary selection contents",N,N],[3,"ZwpPrimarySelectionOfferV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",158,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Request","",158,N],[12,"fd","","",158,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","destroy the primary selection offer",158,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered mime type",159,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Event","",159,N],[17,"REQ_RECEIVE_SINCE","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"offer","","advertise offered mime type",160,[[["self"],["zwpprimaryselectionofferv1"],["string"]]]],[0,"zwp_primary_selection_source_v1","wayland_protocols::unstable::primary_selection::v1::client","offer to replace the contents of the primary selection",N,N],[3,"ZwpPrimarySelectionSourceV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",N,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",161,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Request","",161,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","destroy the primary selection source",161,N],[4,"Event","","",N,N],[13,"Send","","send the primary selection contents",162,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Event","",162,N],[12,"fd","","",162,N],[13,"Cancelled","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","request for primary selection contents was canceled",162,N],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"send","","send the primary selection contents",163,[[["self"],["zwpprimaryselectionsourcev1"],["string"],["rawfd"]]]],[11,"cancelled","","request for primary selection contents was canceled",163,[[["self"],["zwpprimaryselectionsourcev1"]]]],[0,"server","wayland_protocols::unstable::primary_selection::v1","Server-side API of this protocol",N,N],[0,"zwp_primary_selection_device_manager_v1","wayland_protocols::unstable::primary_selection::v1::server","X primary selection emulation",N,N],[3,"ZwpPrimarySelectionDeviceManagerV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateSource","","create a new primary selection source",164,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1::Request","",164,N],[13,"GetDevice","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","create a new primary selection device",164,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1::Request","",164,N],[12,"seat","","",164,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","destroy the primary selection device manager",164,N],[4,"Event","","",N,N],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_source","","create a new primary selection source",165,[[["self"],["zwpprimaryselectiondevicemanagerv1"],["newresource",["zwpprimaryselectionsourcev1"]]]]],[11,"get_device","","create a new primary selection device",165,[[["self"],["zwpprimaryselectiondevicemanagerv1"],["newresource",["zwpprimaryselectiondevicev1"]],["wlseat"]]]],[11,"destroy","","destroy the primary selection device manager",165,[[["self"],["zwpprimaryselectiondevicemanagerv1"]]]],[0,"zwp_primary_selection_device_v1","wayland_protocols::unstable::primary_selection::v1::server","",N,N],[3,"ZwpPrimarySelectionDeviceV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",N,N],[4,"Request","","",N,N],[13,"SetSelection","","set the primary selection",166,N],[12,"source","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Request","",166,N],[12,"serial","","",166,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","destroy the primary selection device",166,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wp_primary_selection_offer",167,N],[12,"offer","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Event","",167,N],[13,"Selection","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","advertise a new primary selection",167,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Event","",167,N],[17,"REQ_SET_SELECTION_SINCE","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_selection","","set the primary selection",168,[[["self"],["zwpprimaryselectiondevicev1"],["option",["zwpprimaryselectionsourcev1"]],["u32"]]]],[11,"destroy","","destroy the primary selection device",168,[[["self"],["zwpprimaryselectiondevicev1"]]]],[0,"zwp_primary_selection_offer_v1","wayland_protocols::unstable::primary_selection::v1::server","offer to transfer primary selection contents",N,N],[3,"ZwpPrimarySelectionOfferV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",169,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1::Request","",169,N],[12,"fd","","",169,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","destroy the primary selection offer",169,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered mime type",170,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1::Event","",170,N],[17,"REQ_RECEIVE_SINCE","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"receive","","request that the data is transferred",171,[[["self"],["zwpprimaryselectionofferv1"],["string"],["rawfd"]]]],[11,"destroy","","destroy the primary selection offer",171,[[["self"],["zwpprimaryselectionofferv1"]]]],[0,"zwp_primary_selection_source_v1","wayland_protocols::unstable::primary_selection::v1::server","offer to replace the contents of the primary selection",N,N],[3,"ZwpPrimarySelectionSourceV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",N,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",172,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1::Request","",172,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","destroy the primary selection source",172,N],[4,"Event","","",N,N],[13,"Send","","send the primary selection contents",173,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1::Event","",173,N],[12,"fd","","",173,N],[13,"Cancelled","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","request for primary selection contents was canceled",173,N],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"offer","","add an offered mime type",174,[[["self"],["zwpprimaryselectionsourcev1"],["string"]]]],[11,"destroy","","destroy the primary selection source",174,[[["self"],["zwpprimaryselectionsourcev1"]]]],[11,"create_source","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","create a new primary selection source",175,[[["self"],["f"]],["result",["zwpprimaryselectionsourcev1"]]]],[11,"get_device","","create a new primary selection device",175,[[["self"],["wlseat"],["f"]],["result",["zwpprimaryselectiondevicev1"]]]],[11,"destroy","","destroy the primary selection device manager",175,N],[11,"data_offer","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","introduce a new wp_primary_selection_offer",157,[[["self"],["zwpprimaryselectiondevicev1"],["newproxy",["zwpprimaryselectionofferv1"]]]]],[11,"selection","","advertise a new primary selection",157,[[["self"],["zwpprimaryselectiondevicev1"],["option",["zwpprimaryselectionofferv1"]]]]],[11,"set_selection","","set the primary selection",176,N],[11,"destroy","","destroy the primary selection device",176,N],[11,"offer","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","advertise offered mime type",160,[[["self"],["zwpprimaryselectionofferv1"],["string"]]]],[11,"receive","","request that the data is transferred",177,N],[11,"destroy","","destroy the primary selection offer",177,N],[11,"send","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","send the primary selection contents",163,[[["self"],["zwpprimaryselectionsourcev1"],["string"],["rawfd"]]]],[11,"cancelled","","request for primary selection contents was canceled",163,[[["self"],["zwpprimaryselectionsourcev1"]]]],[11,"offer","","add an offered mime type",178,N],[11,"destroy","","destroy the primary selection source",178,N],[11,"create_source","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","create a new primary selection source",165,[[["self"],["zwpprimaryselectiondevicemanagerv1"],["newresource",["zwpprimaryselectionsourcev1"]]]]],[11,"get_device","","create a new primary selection device",165,[[["self"],["zwpprimaryselectiondevicemanagerv1"],["newresource",["zwpprimaryselectiondevicev1"]],["wlseat"]]]],[11,"destroy","","destroy the primary selection device manager",165,[[["self"],["zwpprimaryselectiondevicemanagerv1"]]]],[11,"set_selection","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","set the primary selection",168,[[["self"],["zwpprimaryselectiondevicev1"],["option",["zwpprimaryselectionsourcev1"]],["u32"]]]],[11,"destroy","","destroy the primary selection device",168,[[["self"],["zwpprimaryselectiondevicev1"]]]],[11,"data_offer","","introduce a new wp_primary_selection_offer",179,N],[11,"selection","","advertise a new primary selection",179,N],[11,"receive","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","request that the data is transferred",171,[[["self"],["zwpprimaryselectionofferv1"],["string"],["rawfd"]]]],[11,"destroy","","destroy the primary selection offer",171,[[["self"],["zwpprimaryselectionofferv1"]]]],[11,"offer","","advertise offered mime type",180,N],[11,"offer","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","add an offered mime type",174,[[["self"],["zwpprimaryselectionsourcev1"],["string"]]]],[11,"destroy","","destroy the primary selection source",174,[[["self"],["zwpprimaryselectionsourcev1"]]]],[11,"send","","send the primary selection contents",181,N],[11,"cancelled","","request for primary selection contents was canceled",181,N],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",N,N],[0,"v1","wayland_protocols::unstable::relative_pointer","",N,N],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",182,N],[13,"GetRelativePointer","","get a relative pointer object",182,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",182,N],[12,"pointer","","",182,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_RELATIVE_POINTER_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",183,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",184,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",184,N],[12,"utime_lo","","",184,N],[12,"dx","","",184,N],[12,"dy","","",184,N],[12,"dx_unaccel","","",184,N],[12,"dy_unaccel","","",184,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","The minimal object version supporting this request",N,N],[17,"EVT_RELATIVE_MOTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"relative_motion","","relative pointer motion",185,[[["self"],["zwprelativepointerv1"],["u32"],["u32"],["f64"],["f64"],["f64"],["f64"]]]],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",186,N],[13,"GetRelativePointer","","get a relative pointer object",186,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1::Request","",186,N],[12,"pointer","","",186,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_RELATIVE_POINTER_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the relative pointer manager object",187,[[["self"],["zwprelativepointermanagerv1"]]]],[11,"get_relative_pointer","","get a relative pointer object",187,[[["self"],["zwprelativepointermanagerv1"],["newresource",["zwprelativepointerv1"]],["wlpointer"]]]],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",188,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",189,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1::Event","",189,N],[12,"utime_lo","","",189,N],[12,"dx","","",189,N],[12,"dy","","",189,N],[12,"dx_unaccel","","",189,N],[12,"dy_unaccel","","",189,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","The minimal object version supporting this request",N,N],[17,"EVT_RELATIVE_MOTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","release the relative pointer object",190,[[["self"],["zwprelativepointerv1"]]]],[11,"destroy","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","destroy the relative pointer manager object",191,N],[11,"get_relative_pointer","","get a relative pointer object",191,[[["self"],["wlpointer"],["f"]],["result",["zwprelativepointerv1"]]]],[11,"relative_motion","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","relative pointer motion",185,[[["self"],["zwprelativepointerv1"],["u32"],["u32"],["f64"],["f64"],["f64"],["f64"]]]],[11,"destroy","","release the relative pointer object",192,N],[11,"destroy","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","destroy the relative pointer manager object",187,[[["self"],["zwprelativepointermanagerv1"]]]],[11,"get_relative_pointer","","get a relative pointer object",187,[[["self"],["zwprelativepointermanagerv1"],["newresource",["zwprelativepointerv1"]],["wlpointer"]]]],[11,"destroy","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","release the relative pointer object",190,[[["self"],["zwprelativepointerv1"]]]],[11,"relative_motion","","relative pointer motion",193,N],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",N,N],[0,"v1","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",194,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",194,N],[12,"seat","","",194,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",194,N],[4,"Event","","",N,N],[17,"REQ_GET_TABLET_SEAT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",195,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",196,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",196,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",196,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",196,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","The minimal object version supporting this request",N,N],[17,"EVT_TABLET_ADDED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TOOL_ADDED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"tablet_added","","new device notification",197,[[["self"],["zwptabletseatv1"],["newproxy",["zwptabletv1"]]]]],[11,"tool_added","","a new tool has been used with a tablet",197,[[["self"],["zwptabletseatv1"],["newproxy",["zwptablettoolv1"]]]]],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",198,N],[13,"Eraser","","Eraser",198,N],[13,"Brush","","Brush",198,N],[13,"Pencil","","Pencil",198,N],[13,"Airbrush","","Airbrush",198,N],[13,"Finger","","Finger",198,N],[13,"Mouse","","Mouse",198,N],[13,"Lens","","Lens",198,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",199,N],[13,"Pressure","","Pressure axis",199,N],[13,"Distance","","Distance axis",199,N],[13,"Rotation","","Z-rotation axis",199,N],[13,"Slider","","Slider axis",199,N],[13,"Wheel","","Wheel axis",199,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",200,N],[13,"Pressed","","button is pressed",200,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",201,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",202,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",202,N],[12,"surface","","",202,N],[12,"hotspot_x","","",202,N],[12,"hotspot_y","","",202,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",202,N],[4,"Event","","",N,N],[13,"Type","","tool type",203,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",203,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"hardware_serial_lo","","",203,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",203,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"hardware_id_lo","","",203,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",203,N],[12,"capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",203,N],[13,"Removed","","tool removed",203,N],[13,"ProximityIn","","proximity in event",203,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"tablet","","",203,N],[12,"surface","","",203,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",203,N],[13,"Down","","tablet tool is making contact",203,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"Up","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",203,N],[13,"Motion","","motion event",203,N],[12,"x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"y","","",203,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",203,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",203,N],[12,"distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",203,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"tilt_y","","",203,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",203,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",203,N],[12,"position","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",203,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"clicks","","",203,N],[13,"Button","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",203,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[12,"button","","",203,N],[12,"state","","",203,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",203,N],[12,"time","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",203,N],[17,"REQ_SET_CURSOR_SINCE","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TYPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_SERIAL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_ID_WACOM_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_IN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_OUT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESSURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DISTANCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TILT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ROTATION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SLIDER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_WHEEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"_type","","tool type",204,[[["self"],["zwptablettoolv1"],["type"]]]],[11,"hardware_serial","","unique hardware serial number of the tool",204,[[["self"],["zwptablettoolv1"],["u32"],["u32"]]]],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",204,[[["self"],["zwptablettoolv1"],["u32"],["u32"]]]],[11,"capability","","tool capability notification",204,[[["self"],["zwptablettoolv1"],["capability"]]]],[11,"done","","tool description events sequence complete",204,[[["self"],["zwptablettoolv1"]]]],[11,"removed","","tool removed",204,[[["self"],["zwptablettoolv1"]]]],[11,"proximity_in","","proximity in event",204,[[["self"],["zwptablettoolv1"],["u32"],["zwptabletv1"],["wlsurface"]]]],[11,"proximity_out","","proximity out event",204,[[["self"],["zwptablettoolv1"]]]],[11,"down","","tablet tool is making contact",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"up","","tablet tool is no longer making contact",204,[[["self"],["zwptablettoolv1"]]]],[11,"motion","","motion event",204,[[["self"],["zwptablettoolv1"],["f64"],["f64"]]]],[11,"pressure","","pressure change event",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"distance","","distance change event",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"tilt","","tilt change event",204,[[["self"],["zwptablettoolv1"],["i32"],["i32"]]]],[11,"rotation","","z-rotation change event",204,[[["self"],["zwptablettoolv1"],["i32"]]]],[11,"slider","","Slider position change event",204,[[["self"],["zwptablettoolv1"],["i32"]]]],[11,"wheel","","Wheel delta event",204,[[["self"],["zwptablettoolv1"],["i32"],["i32"]]]],[11,"button","","button event",204,[[["self"],["zwptablettoolv1"],["u32"],["u32"],["buttonstate"]]]],[11,"frame","","frame event",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",205,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",206,N],[12,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",206,N],[13,"Id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",206,N],[12,"vid","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",206,N],[12,"pid","","",206,N],[13,"Path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",206,N],[12,"path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",206,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",206,N],[13,"Removed","","tablet removed event",206,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ID_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"name","","tablet device name",207,[[["self"],["zwptabletv1"],["string"]]]],[11,"id","","tablet device USB vendor/product id",207,[[["self"],["zwptabletv1"],["u32"],["u32"]]]],[11,"path","","path to the device",207,[[["self"],["zwptabletv1"],["string"]]]],[11,"done","","tablet description events sequence complete",207,[[["self"],["zwptabletv1"]]]],[11,"removed","","tablet removed event",207,[[["self"],["zwptabletv1"]]]],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",208,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1::Request","",208,N],[12,"seat","","",208,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","release the memory for the tablet manager object",208,N],[4,"Event","","",N,N],[17,"REQ_GET_TABLET_SEAT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_tablet_seat","","get the tablet seat",209,[[["self"],["zwptabletmanagerv1"],["newresource",["zwptabletseatv1"]],["wlseat"]]]],[11,"destroy","","release the memory for the tablet manager object",209,[[["self"],["zwptabletmanagerv1"]]]],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",210,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",211,N],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",211,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","a new tool has been used with a tablet",211,N],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",211,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","The minimal object version supporting this request",N,N],[17,"EVT_TABLET_ADDED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TOOL_ADDED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","release the memory for the tablet seat object",212,[[["self"],["zwptabletseatv1"]]]],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",213,N],[13,"Eraser","","Eraser",213,N],[13,"Brush","","Brush",213,N],[13,"Pencil","","Pencil",213,N],[13,"Airbrush","","Airbrush",213,N],[13,"Finger","","Finger",213,N],[13,"Mouse","","Mouse",213,N],[13,"Lens","","Lens",213,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",214,N],[13,"Pressure","","Pressure axis",214,N],[13,"Distance","","Distance axis",214,N],[13,"Rotation","","Z-rotation axis",214,N],[13,"Slider","","Slider axis",214,N],[13,"Wheel","","Wheel axis",214,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",215,N],[13,"Pressed","","button is pressed",215,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",216,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",217,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Request","",217,N],[12,"surface","","",217,N],[12,"hotspot_x","","",217,N],[12,"hotspot_y","","",217,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","destroy the tool object",217,N],[4,"Event","","",N,N],[13,"Type","","tool type",218,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","unique hardware serial number of the tool",218,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"hardware_serial_lo","","",218,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","hardware id notification in Wacom's format",218,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"hardware_id_lo","","",218,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool capability notification",218,N],[12,"capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool description events sequence complete",218,N],[13,"Removed","","tool removed",218,N],[13,"ProximityIn","","proximity in event",218,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"tablet","","",218,N],[12,"surface","","",218,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","proximity out event",218,N],[13,"Down","","tablet tool is making contact",218,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"Up","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tablet tool is no longer making contact",218,N],[13,"Motion","","motion event",218,N],[12,"x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"y","","",218,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","pressure change event",218,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","distance change event",218,N],[12,"distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tilt change event",218,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"tilt_y","","",218,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","z-rotation change event",218,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Slider position change event",218,N],[12,"position","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Wheel delta event",218,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"clicks","","",218,N],[13,"Button","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","button event",218,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[12,"button","","",218,N],[12,"state","","",218,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","frame event",218,N],[12,"time","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",218,N],[17,"REQ_SET_CURSOR_SINCE","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TYPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_SERIAL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_ID_WACOM_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_IN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_OUT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESSURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DISTANCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TILT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ROTATION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SLIDER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_WHEEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_cursor","","set the tablet tool's surface",219,[[["self"],["zwptablettoolv1"],["u32"],["option",["wlsurface"]],["i32"],["i32"]]]],[11,"destroy","","destroy the tool object",219,[[["self"],["zwptablettoolv1"]]]],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",220,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",221,N],[12,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",221,N],[13,"Id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device USB vendor/product id",221,N],[12,"vid","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",221,N],[12,"pid","","",221,N],[13,"Path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","path to the device",221,N],[12,"path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",221,N],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet description events sequence complete",221,N],[13,"Removed","","tablet removed event",221,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ID_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the tablet object",222,[[["self"],["zwptabletv1"]]]],[11,"get_tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","get the tablet seat",223,[[["self"],["wlseat"],["f"]],["result",["zwptabletseatv1"]]]],[11,"destroy","","release the memory for the tablet manager object",223,N],[11,"tablet_added","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","new device notification",197,[[["self"],["zwptabletseatv1"],["newproxy",["zwptabletv1"]]]]],[11,"tool_added","","a new tool has been used with a tablet",197,[[["self"],["zwptabletseatv1"],["newproxy",["zwptablettoolv1"]]]]],[11,"destroy","","release the memory for the tablet seat object",224,N],[11,"_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool type",204,[[["self"],["zwptablettoolv1"],["type"]]]],[11,"hardware_serial","","unique hardware serial number of the tool",204,[[["self"],["zwptablettoolv1"],["u32"],["u32"]]]],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",204,[[["self"],["zwptablettoolv1"],["u32"],["u32"]]]],[11,"capability","","tool capability notification",204,[[["self"],["zwptablettoolv1"],["capability"]]]],[11,"done","","tool description events sequence complete",204,[[["self"],["zwptablettoolv1"]]]],[11,"removed","","tool removed",204,[[["self"],["zwptablettoolv1"]]]],[11,"proximity_in","","proximity in event",204,[[["self"],["zwptablettoolv1"],["u32"],["zwptabletv1"],["wlsurface"]]]],[11,"proximity_out","","proximity out event",204,[[["self"],["zwptablettoolv1"]]]],[11,"down","","tablet tool is making contact",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"up","","tablet tool is no longer making contact",204,[[["self"],["zwptablettoolv1"]]]],[11,"motion","","motion event",204,[[["self"],["zwptablettoolv1"],["f64"],["f64"]]]],[11,"pressure","","pressure change event",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"distance","","distance change event",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"tilt","","tilt change event",204,[[["self"],["zwptablettoolv1"],["i32"],["i32"]]]],[11,"rotation","","z-rotation change event",204,[[["self"],["zwptablettoolv1"],["i32"]]]],[11,"slider","","Slider position change event",204,[[["self"],["zwptablettoolv1"],["i32"]]]],[11,"wheel","","Wheel delta event",204,[[["self"],["zwptablettoolv1"],["i32"],["i32"]]]],[11,"button","","button event",204,[[["self"],["zwptablettoolv1"],["u32"],["u32"],["buttonstate"]]]],[11,"frame","","frame event",204,[[["self"],["zwptablettoolv1"],["u32"]]]],[11,"from_raw","","",198,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",198,[[["self"]],["u32"]]],[11,"from_raw","","",199,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",199,[[["self"]],["u32"]]],[11,"from_raw","","",200,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",200,[[["self"]],["u32"]]],[11,"from_raw","","",201,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",201,[[["self"]],["u32"]]],[11,"set_cursor","","set the tablet tool's surface",225,N],[11,"destroy","","destroy the tool object",225,N],[11,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device name",207,[[["self"],["zwptabletv1"],["string"]]]],[11,"id","","tablet device USB vendor/product id",207,[[["self"],["zwptabletv1"],["u32"],["u32"]]]],[11,"path","","path to the device",207,[[["self"],["zwptabletv1"],["string"]]]],[11,"done","","tablet description events sequence complete",207,[[["self"],["zwptabletv1"]]]],[11,"removed","","tablet removed event",207,[[["self"],["zwptabletv1"]]]],[11,"destroy","","destroy the tablet object",226,N],[11,"get_tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","get the tablet seat",209,[[["self"],["zwptabletmanagerv1"],["newresource",["zwptabletseatv1"]],["wlseat"]]]],[11,"destroy","","release the memory for the tablet manager object",209,[[["self"],["zwptabletmanagerv1"]]]],[11,"destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","release the memory for the tablet seat object",212,[[["self"],["zwptabletseatv1"]]]],[11,"tablet_added","","new device notification",227,N],[11,"tool_added","","a new tool has been used with a tablet",227,N],[11,"set_cursor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","set the tablet tool's surface",219,[[["self"],["zwptablettoolv1"],["u32"],["option",["wlsurface"]],["i32"],["i32"]]]],[11,"destroy","","destroy the tool object",219,[[["self"],["zwptablettoolv1"]]]],[11,"from_raw","","",213,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",213,[[["self"]],["u32"]]],[11,"from_raw","","",214,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",214,[[["self"]],["u32"]]],[11,"from_raw","","",215,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",215,[[["self"]],["u32"]]],[11,"from_raw","","",216,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",216,[[["self"]],["u32"]]],[11,"_type","","tool type",228,N],[11,"hardware_serial","","unique hardware serial number of the tool",228,N],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",228,N],[11,"capability","","tool capability notification",228,N],[11,"done","","tool description events sequence complete",228,N],[11,"removed","","tool removed",228,N],[11,"proximity_in","","proximity in event",228,N],[11,"proximity_out","","proximity out event",228,N],[11,"down","","tablet tool is making contact",228,N],[11,"up","","tablet tool is no longer making contact",228,N],[11,"motion","","motion event",228,N],[11,"pressure","","pressure change event",228,N],[11,"distance","","distance change event",228,N],[11,"tilt","","tilt change event",228,N],[11,"rotation","","z-rotation change event",228,N],[11,"slider","","Slider position change event",228,N],[11,"wheel","","Wheel delta event",228,N],[11,"button","","button event",228,N],[11,"frame","","frame event",228,N],[11,"destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","destroy the tablet object",222,[[["self"],["zwptabletv1"]]]],[11,"name","","tablet device name",229,N],[11,"id","","tablet device USB vendor/product id",229,N],[11,"path","","path to the device",229,N],[11,"done","","tablet description events sequence complete",229,N],[11,"removed","","tablet removed event",229,N],[0,"v2","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",230,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",230,N],[12,"seat","","",230,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",230,N],[4,"Event","","",N,N],[17,"REQ_GET_TABLET_SEAT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",231,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",232,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",232,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",232,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",232,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",232,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",232,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","The minimal object version supporting this request",N,N],[17,"EVT_TABLET_ADDED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TOOL_ADDED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PAD_ADDED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"tablet_added","","new device notification",233,[[["self"],["zwptabletseatv2"],["newproxy",["zwptabletv2"]]]]],[11,"tool_added","","a new tool has been used with a tablet",233,[[["self"],["zwptabletseatv2"],["newproxy",["zwptablettoolv2"]]]]],[11,"pad_added","","new pad notification",233,[[["self"],["zwptabletseatv2"],["newproxy",["zwptabletpadv2"]]]]],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",234,N],[13,"Eraser","","Eraser",234,N],[13,"Brush","","Brush",234,N],[13,"Pencil","","Pencil",234,N],[13,"Airbrush","","Airbrush",234,N],[13,"Finger","","Finger",234,N],[13,"Mouse","","Mouse",234,N],[13,"Lens","","Lens",234,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",235,N],[13,"Pressure","","Pressure axis",235,N],[13,"Distance","","Distance axis",235,N],[13,"Rotation","","Z-rotation axis",235,N],[13,"Slider","","Slider axis",235,N],[13,"Wheel","","Wheel axis",235,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",236,N],[13,"Pressed","","button is pressed",236,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",237,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",238,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",238,N],[12,"surface","","",238,N],[12,"hotspot_x","","",238,N],[12,"hotspot_y","","",238,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",238,N],[4,"Event","","",N,N],[13,"Type","","tool type",239,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",239,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"hardware_serial_lo","","",239,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",239,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"hardware_id_lo","","",239,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",239,N],[12,"capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",239,N],[13,"Removed","","tool removed",239,N],[13,"ProximityIn","","proximity in event",239,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"tablet","","",239,N],[12,"surface","","",239,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",239,N],[13,"Down","","tablet tool is making contact",239,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"Up","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",239,N],[13,"Motion","","motion event",239,N],[12,"x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"y","","",239,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",239,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",239,N],[12,"distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",239,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"tilt_y","","",239,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",239,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",239,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",239,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"clicks","","",239,N],[13,"Button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",239,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[12,"button","","",239,N],[12,"state","","",239,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",239,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",239,N],[17,"REQ_SET_CURSOR_SINCE","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TYPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_SERIAL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_ID_WACOM_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_IN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_OUT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESSURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DISTANCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TILT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ROTATION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SLIDER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_WHEEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"_type","","tool type",240,[[["self"],["zwptablettoolv2"],["type"]]]],[11,"hardware_serial","","unique hardware serial number of the tool",240,[[["self"],["zwptablettoolv2"],["u32"],["u32"]]]],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",240,[[["self"],["zwptablettoolv2"],["u32"],["u32"]]]],[11,"capability","","tool capability notification",240,[[["self"],["zwptablettoolv2"],["capability"]]]],[11,"done","","tool description events sequence complete",240,[[["self"],["zwptablettoolv2"]]]],[11,"removed","","tool removed",240,[[["self"],["zwptablettoolv2"]]]],[11,"proximity_in","","proximity in event",240,[[["self"],["zwptablettoolv2"],["u32"],["zwptabletv2"],["wlsurface"]]]],[11,"proximity_out","","proximity out event",240,[[["self"],["zwptablettoolv2"]]]],[11,"down","","tablet tool is making contact",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"up","","tablet tool is no longer making contact",240,[[["self"],["zwptablettoolv2"]]]],[11,"motion","","motion event",240,[[["self"],["zwptablettoolv2"],["f64"],["f64"]]]],[11,"pressure","","pressure change event",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"distance","","distance change event",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"tilt","","tilt change event",240,[[["self"],["zwptablettoolv2"],["f64"],["f64"]]]],[11,"rotation","","z-rotation change event",240,[[["self"],["zwptablettoolv2"],["f64"]]]],[11,"slider","","Slider position change event",240,[[["self"],["zwptablettoolv2"],["i32"]]]],[11,"wheel","","Wheel delta event",240,[[["self"],["zwptablettoolv2"],["f64"],["i32"]]]],[11,"button","","button event",240,[[["self"],["zwptablettoolv2"],["u32"],["u32"],["buttonstate"]]]],[11,"frame","","frame event",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",241,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",242,N],[12,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",242,N],[13,"Id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",242,N],[12,"vid","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",242,N],[12,"pid","","",242,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",242,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",242,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",242,N],[13,"Removed","","tablet removed event",242,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ID_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"name","","tablet device name",243,[[["self"],["zwptabletv2"],["string"]]]],[11,"id","","tablet device USB vendor/product id",243,[[["self"],["zwptabletv2"],["u32"],["u32"]]]],[11,"path","","path to the device",243,[[["self"],["zwptabletv2"],["string"]]]],[11,"done","","tablet description events sequence complete",243,[[["self"],["zwptabletv2"]]]],[11,"removed","","tablet removed event",243,[[["self"],["zwptabletv2"]]]],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",244,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",245,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",245,N],[12,"serial","","",245,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",245,N],[4,"Event","","",N,N],[13,"Source","","ring event source",246,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",246,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",246,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",246,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",246,N],[13,"Frame","","end of a ring event sequence",246,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",246,N],[17,"REQ_SET_FEEDBACK_SINCE","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SOURCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ANGLE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STOP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"source","","ring event source",247,[[["self"],["zwptabletpadringv2"],["source"]]]],[11,"angle","","angle changed",247,[[["self"],["zwptabletpadringv2"],["f64"]]]],[11,"stop","","interaction stopped",247,[[["self"],["zwptabletpadringv2"]]]],[11,"frame","","end of a ring event sequence",247,[[["self"],["zwptabletpadringv2"],["u32"]]]],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",248,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",249,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",249,N],[12,"serial","","",249,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",249,N],[4,"Event","","",N,N],[13,"Source","","strip event source",250,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",250,N],[13,"Position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",250,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",250,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",250,N],[13,"Frame","","end of a strip event sequence",250,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",250,N],[17,"REQ_SET_FEEDBACK_SINCE","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SOURCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POSITION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STOP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"source","","strip event source",251,[[["self"],["zwptabletpadstripv2"],["source"]]]],[11,"position","","position changed",251,[[["self"],["zwptabletpadstripv2"],["u32"]]]],[11,"stop","","interaction stopped",251,[[["self"],["zwptabletpadstripv2"]]]],[11,"frame","","end of a strip event sequence",251,[[["self"],["zwptabletpadstripv2"],["u32"]]]],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",252,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",253,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",253,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",253,N],[12,"ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",253,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",253,N],[12,"strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",253,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",253,N],[12,"modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",253,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",253,N],[13,"ModeSwitch","","mode switch event",253,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",253,N],[12,"serial","","",253,N],[12,"mode","","",253,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","The minimal object version supporting this request",N,N],[17,"EVT_BUTTONS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_RING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STRIP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODES_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODE_SWITCH_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"buttons","","buttons announced",254,[[["self"],["zwptabletpadgroupv2"],["vec",["u8"]]]]],[11,"ring","","ring announced",254,[[["self"],["zwptabletpadgroupv2"],["newproxy",["zwptabletpadringv2"]]]]],[11,"strip","","strip announced",254,[[["self"],["zwptabletpadgroupv2"],["newproxy",["zwptabletpadstripv2"]]]]],[11,"modes","","mode-switch ability announced",254,[[["self"],["zwptabletpadgroupv2"],["u32"]]]],[11,"done","","tablet group description events sequence complete",254,[[["self"],["zwptabletpadgroupv2"]]]],[11,"mode_switch","","mode switch event",254,[[["self"],["zwptabletpadgroupv2"],["u32"],["u32"],["u32"]]]],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",255,N],[13,"Pressed","","the button is pressed",255,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",256,N],[12,"button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",256,N],[12,"description","","",256,N],[12,"serial","","",256,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",256,N],[4,"Event","","",N,N],[13,"Group","","group announced",257,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",257,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",257,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",257,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",257,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",257,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",257,N],[13,"Button","","physical button state",257,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",257,N],[12,"button","","",257,N],[12,"state","","",257,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",257,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",257,N],[12,"tablet","","",257,N],[12,"surface","","",257,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",257,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",257,N],[12,"surface","","",257,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",257,N],[17,"REQ_SET_FEEDBACK_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_GROUP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTONS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"group","","group announced",258,[[["self"],["zwptabletpadv2"],["newproxy",["zwptabletpadgroupv2"]]]]],[11,"path","","path to the device",258,[[["self"],["zwptabletpadv2"],["string"]]]],[11,"buttons","","buttons announced",258,[[["self"],["zwptabletpadv2"],["u32"]]]],[11,"done","","pad description event sequence complete",258,[[["self"],["zwptabletpadv2"]]]],[11,"button","","physical button state",258,[[["self"],["zwptabletpadv2"],["u32"],["u32"],["buttonstate"]]]],[11,"enter","","enter event",258,[[["self"],["zwptabletpadv2"],["u32"],["zwptabletv2"],["wlsurface"]]]],[11,"leave","","enter event",258,[[["self"],["zwptabletpadv2"],["u32"],["wlsurface"]]]],[11,"removed","","pad removed event",258,[[["self"],["zwptabletpadv2"]]]],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",259,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2::Request","",259,N],[12,"seat","","",259,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","release the memory for the tablet manager object",259,N],[4,"Event","","",N,N],[17,"REQ_GET_TABLET_SEAT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_tablet_seat","","get the tablet seat",260,[[["self"],["zwptabletmanagerv2"],["newresource",["zwptabletseatv2"]],["wlseat"]]]],[11,"destroy","","release the memory for the tablet manager object",260,[[["self"],["zwptabletmanagerv2"]]]],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",261,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",262,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",262,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","a new tool has been used with a tablet",262,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",262,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new pad notification",262,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",262,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","The minimal object version supporting this request",N,N],[17,"EVT_TABLET_ADDED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TOOL_ADDED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PAD_ADDED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","release the memory for the tablet seat object",263,[[["self"],["zwptabletseatv2"]]]],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",264,N],[13,"Eraser","","Eraser",264,N],[13,"Brush","","Brush",264,N],[13,"Pencil","","Pencil",264,N],[13,"Airbrush","","Airbrush",264,N],[13,"Finger","","Finger",264,N],[13,"Mouse","","Mouse",264,N],[13,"Lens","","Lens",264,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",265,N],[13,"Pressure","","Pressure axis",265,N],[13,"Distance","","Distance axis",265,N],[13,"Rotation","","Z-rotation axis",265,N],[13,"Slider","","Slider axis",265,N],[13,"Wheel","","Wheel axis",265,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",266,N],[13,"Pressed","","button is pressed",266,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",267,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",268,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Request","",268,N],[12,"surface","","",268,N],[12,"hotspot_x","","",268,N],[12,"hotspot_y","","",268,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","destroy the tool object",268,N],[4,"Event","","",N,N],[13,"Type","","tool type",269,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","unique hardware serial number of the tool",269,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"hardware_serial_lo","","",269,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","hardware id notification in Wacom's format",269,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"hardware_id_lo","","",269,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool capability notification",269,N],[12,"capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool description events sequence complete",269,N],[13,"Removed","","tool removed",269,N],[13,"ProximityIn","","proximity in event",269,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"tablet","","",269,N],[12,"surface","","",269,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","proximity out event",269,N],[13,"Down","","tablet tool is making contact",269,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"Up","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tablet tool is no longer making contact",269,N],[13,"Motion","","motion event",269,N],[12,"x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"y","","",269,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","pressure change event",269,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","distance change event",269,N],[12,"distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tilt change event",269,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"tilt_y","","",269,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","z-rotation change event",269,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Slider position change event",269,N],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Wheel delta event",269,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"clicks","","",269,N],[13,"Button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","button event",269,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[12,"button","","",269,N],[12,"state","","",269,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","frame event",269,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",269,N],[17,"REQ_SET_CURSOR_SINCE","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TYPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_SERIAL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_HARDWARE_ID_WACOM_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_IN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PROXIMITY_OUT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESSURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DISTANCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TILT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ROTATION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SLIDER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_WHEEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_cursor","","set the tablet tool's surface",270,[[["self"],["zwptablettoolv2"],["u32"],["option",["wlsurface"]],["i32"],["i32"]]]],[11,"destroy","","destroy the tool object",270,[[["self"],["zwptablettoolv2"]]]],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",271,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",272,N],[12,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",272,N],[13,"Id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device USB vendor/product id",272,N],[12,"vid","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",272,N],[12,"pid","","",272,N],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","path to the device",272,N],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",272,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet description events sequence complete",272,N],[13,"Removed","","tablet removed event",272,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ID_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the tablet object",273,[[["self"],["zwptabletv2"]]]],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",274,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",275,N],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Request","",275,N],[12,"serial","","",275,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","destroy the ring object",275,N],[4,"Event","","",N,N],[13,"Source","","ring event source",276,N],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",276,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","angle changed",276,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",276,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","interaction stopped",276,N],[13,"Frame","","end of a ring event sequence",276,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",276,N],[17,"REQ_SET_FEEDBACK_SINCE","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SOURCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ANGLE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STOP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_feedback","","set compositor feedback",277,[[["self"],["zwptabletpadringv2"],["string"],["u32"]]]],[11,"destroy","","destroy the ring object",277,[[["self"],["zwptabletpadringv2"]]]],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",278,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",279,N],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Request","",279,N],[12,"serial","","",279,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","destroy the strip object",279,N],[4,"Event","","",N,N],[13,"Source","","strip event source",280,N],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",280,N],[13,"Position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","position changed",280,N],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",280,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","interaction stopped",280,N],[13,"Frame","","end of a strip event sequence",280,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",280,N],[17,"REQ_SET_FEEDBACK_SINCE","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SOURCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POSITION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STOP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_feedback","","set compositor feedback",281,[[["self"],["zwptabletpadstripv2"],["string"],["u32"]]]],[11,"destroy","","destroy the strip object",281,[[["self"],["zwptabletpadstripv2"]]]],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",282,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",283,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",283,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","ring announced",283,N],[12,"ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",283,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","strip announced",283,N],[12,"strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",283,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","mode-switch ability announced",283,N],[12,"modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",283,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","tablet group description events sequence complete",283,N],[13,"ModeSwitch","","mode switch event",283,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",283,N],[12,"serial","","",283,N],[12,"mode","","",283,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","The minimal object version supporting this request",N,N],[17,"EVT_BUTTONS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_RING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STRIP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODES_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODE_SWITCH_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the pad object",284,[[["self"],["zwptabletpadgroupv2"]]]],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",285,N],[13,"Pressed","","the button is pressed",285,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",286,N],[12,"button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Request","",286,N],[12,"description","","",286,N],[12,"serial","","",286,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","destroy the pad object",286,N],[4,"Event","","",N,N],[13,"Group","","group announced",287,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",287,N],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","path to the device",287,N],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",287,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","buttons announced",287,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",287,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad description event sequence complete",287,N],[13,"Button","","physical button state",287,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",287,N],[12,"button","","",287,N],[12,"state","","",287,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",287,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",287,N],[12,"tablet","","",287,N],[12,"surface","","",287,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",287,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",287,N],[12,"surface","","",287,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad removed event",287,N],[17,"REQ_SET_FEEDBACK_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_GROUP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTONS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_feedback","","set compositor feedback",288,[[["self"],["zwptabletpadv2"],["u32"],["string"],["u32"]]]],[11,"destroy","","destroy the pad object",288,[[["self"],["zwptabletpadv2"]]]],[11,"get_tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","get the tablet seat",289,[[["self"],["wlseat"],["f"]],["result",["zwptabletseatv2"]]]],[11,"destroy","","release the memory for the tablet manager object",289,N],[11,"tablet_added","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new device notification",233,[[["self"],["zwptabletseatv2"],["newproxy",["zwptabletv2"]]]]],[11,"tool_added","","a new tool has been used with a tablet",233,[[["self"],["zwptabletseatv2"],["newproxy",["zwptablettoolv2"]]]]],[11,"pad_added","","new pad notification",233,[[["self"],["zwptabletseatv2"],["newproxy",["zwptabletpadv2"]]]]],[11,"destroy","","release the memory for the tablet seat object",290,N],[11,"_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool type",240,[[["self"],["zwptablettoolv2"],["type"]]]],[11,"hardware_serial","","unique hardware serial number of the tool",240,[[["self"],["zwptablettoolv2"],["u32"],["u32"]]]],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",240,[[["self"],["zwptablettoolv2"],["u32"],["u32"]]]],[11,"capability","","tool capability notification",240,[[["self"],["zwptablettoolv2"],["capability"]]]],[11,"done","","tool description events sequence complete",240,[[["self"],["zwptablettoolv2"]]]],[11,"removed","","tool removed",240,[[["self"],["zwptablettoolv2"]]]],[11,"proximity_in","","proximity in event",240,[[["self"],["zwptablettoolv2"],["u32"],["zwptabletv2"],["wlsurface"]]]],[11,"proximity_out","","proximity out event",240,[[["self"],["zwptablettoolv2"]]]],[11,"down","","tablet tool is making contact",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"up","","tablet tool is no longer making contact",240,[[["self"],["zwptablettoolv2"]]]],[11,"motion","","motion event",240,[[["self"],["zwptablettoolv2"],["f64"],["f64"]]]],[11,"pressure","","pressure change event",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"distance","","distance change event",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"tilt","","tilt change event",240,[[["self"],["zwptablettoolv2"],["f64"],["f64"]]]],[11,"rotation","","z-rotation change event",240,[[["self"],["zwptablettoolv2"],["f64"]]]],[11,"slider","","Slider position change event",240,[[["self"],["zwptablettoolv2"],["i32"]]]],[11,"wheel","","Wheel delta event",240,[[["self"],["zwptablettoolv2"],["f64"],["i32"]]]],[11,"button","","button event",240,[[["self"],["zwptablettoolv2"],["u32"],["u32"],["buttonstate"]]]],[11,"frame","","frame event",240,[[["self"],["zwptablettoolv2"],["u32"]]]],[11,"from_raw","","",234,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",234,[[["self"]],["u32"]]],[11,"from_raw","","",235,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",235,[[["self"]],["u32"]]],[11,"from_raw","","",236,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",236,[[["self"]],["u32"]]],[11,"from_raw","","",237,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",237,[[["self"]],["u32"]]],[11,"set_cursor","","set the tablet tool's surface",291,N],[11,"destroy","","destroy the tool object",291,N],[11,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device name",243,[[["self"],["zwptabletv2"],["string"]]]],[11,"id","","tablet device USB vendor/product id",243,[[["self"],["zwptabletv2"],["u32"],["u32"]]]],[11,"path","","path to the device",243,[[["self"],["zwptabletv2"],["string"]]]],[11,"done","","tablet description events sequence complete",243,[[["self"],["zwptabletv2"]]]],[11,"removed","","tablet removed event",243,[[["self"],["zwptabletv2"]]]],[11,"destroy","","destroy the tablet object",292,N],[11,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","ring event source",247,[[["self"],["zwptabletpadringv2"],["source"]]]],[11,"angle","","angle changed",247,[[["self"],["zwptabletpadringv2"],["f64"]]]],[11,"stop","","interaction stopped",247,[[["self"],["zwptabletpadringv2"]]]],[11,"frame","","end of a ring event sequence",247,[[["self"],["zwptabletpadringv2"],["u32"]]]],[11,"from_raw","","",244,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",244,[[["self"]],["u32"]]],[11,"set_feedback","","set compositor feedback",293,N],[11,"destroy","","destroy the ring object",293,N],[11,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","strip event source",251,[[["self"],["zwptabletpadstripv2"],["source"]]]],[11,"position","","position changed",251,[[["self"],["zwptabletpadstripv2"],["u32"]]]],[11,"stop","","interaction stopped",251,[[["self"],["zwptabletpadstripv2"]]]],[11,"frame","","end of a strip event sequence",251,[[["self"],["zwptabletpadstripv2"],["u32"]]]],[11,"from_raw","","",248,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",248,[[["self"]],["u32"]]],[11,"set_feedback","","set compositor feedback",294,N],[11,"destroy","","destroy the strip object",294,N],[11,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","buttons announced",254,[[["self"],["zwptabletpadgroupv2"],["vec",["u8"]]]]],[11,"ring","","ring announced",254,[[["self"],["zwptabletpadgroupv2"],["newproxy",["zwptabletpadringv2"]]]]],[11,"strip","","strip announced",254,[[["self"],["zwptabletpadgroupv2"],["newproxy",["zwptabletpadstripv2"]]]]],[11,"modes","","mode-switch ability announced",254,[[["self"],["zwptabletpadgroupv2"],["u32"]]]],[11,"done","","tablet group description events sequence complete",254,[[["self"],["zwptabletpadgroupv2"]]]],[11,"mode_switch","","mode switch event",254,[[["self"],["zwptabletpadgroupv2"],["u32"],["u32"],["u32"]]]],[11,"destroy","","destroy the pad object",295,N],[11,"group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","group announced",258,[[["self"],["zwptabletpadv2"],["newproxy",["zwptabletpadgroupv2"]]]]],[11,"path","","path to the device",258,[[["self"],["zwptabletpadv2"],["string"]]]],[11,"buttons","","buttons announced",258,[[["self"],["zwptabletpadv2"],["u32"]]]],[11,"done","","pad description event sequence complete",258,[[["self"],["zwptabletpadv2"]]]],[11,"button","","physical button state",258,[[["self"],["zwptabletpadv2"],["u32"],["u32"],["buttonstate"]]]],[11,"enter","","enter event",258,[[["self"],["zwptabletpadv2"],["u32"],["zwptabletv2"],["wlsurface"]]]],[11,"leave","","enter event",258,[[["self"],["zwptabletpadv2"],["u32"],["wlsurface"]]]],[11,"removed","","pad removed event",258,[[["self"],["zwptabletpadv2"]]]],[11,"from_raw","","",255,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",255,[[["self"]],["u32"]]],[11,"set_feedback","","set compositor feedback",296,N],[11,"destroy","","destroy the pad object",296,N],[11,"get_tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","get the tablet seat",260,[[["self"],["zwptabletmanagerv2"],["newresource",["zwptabletseatv2"]],["wlseat"]]]],[11,"destroy","","release the memory for the tablet manager object",260,[[["self"],["zwptabletmanagerv2"]]]],[11,"destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","release the memory for the tablet seat object",263,[[["self"],["zwptabletseatv2"]]]],[11,"tablet_added","","new device notification",297,N],[11,"tool_added","","a new tool has been used with a tablet",297,N],[11,"pad_added","","new pad notification",297,N],[11,"set_cursor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","set the tablet tool's surface",270,[[["self"],["zwptablettoolv2"],["u32"],["option",["wlsurface"]],["i32"],["i32"]]]],[11,"destroy","","destroy the tool object",270,[[["self"],["zwptablettoolv2"]]]],[11,"from_raw","","",264,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",264,[[["self"]],["u32"]]],[11,"from_raw","","",265,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",265,[[["self"]],["u32"]]],[11,"from_raw","","",266,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",266,[[["self"]],["u32"]]],[11,"from_raw","","",267,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",267,[[["self"]],["u32"]]],[11,"_type","","tool type",298,N],[11,"hardware_serial","","unique hardware serial number of the tool",298,N],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",298,N],[11,"capability","","tool capability notification",298,N],[11,"done","","tool description events sequence complete",298,N],[11,"removed","","tool removed",298,N],[11,"proximity_in","","proximity in event",298,N],[11,"proximity_out","","proximity out event",298,N],[11,"down","","tablet tool is making contact",298,N],[11,"up","","tablet tool is no longer making contact",298,N],[11,"motion","","motion event",298,N],[11,"pressure","","pressure change event",298,N],[11,"distance","","distance change event",298,N],[11,"tilt","","tilt change event",298,N],[11,"rotation","","z-rotation change event",298,N],[11,"slider","","Slider position change event",298,N],[11,"wheel","","Wheel delta event",298,N],[11,"button","","button event",298,N],[11,"frame","","frame event",298,N],[11,"destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","destroy the tablet object",273,[[["self"],["zwptabletv2"]]]],[11,"name","","tablet device name",299,N],[11,"id","","tablet device USB vendor/product id",299,N],[11,"path","","path to the device",299,N],[11,"done","","tablet description events sequence complete",299,N],[11,"removed","","tablet removed event",299,N],[11,"set_feedback","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","set compositor feedback",277,[[["self"],["zwptabletpadringv2"],["string"],["u32"]]]],[11,"destroy","","destroy the ring object",277,[[["self"],["zwptabletpadringv2"]]]],[11,"from_raw","","",274,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",274,[[["self"]],["u32"]]],[11,"source","","ring event source",300,N],[11,"angle","","angle changed",300,N],[11,"stop","","interaction stopped",300,N],[11,"frame","","end of a ring event sequence",300,N],[11,"set_feedback","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","set compositor feedback",281,[[["self"],["zwptabletpadstripv2"],["string"],["u32"]]]],[11,"destroy","","destroy the strip object",281,[[["self"],["zwptabletpadstripv2"]]]],[11,"from_raw","","",278,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",278,[[["self"]],["u32"]]],[11,"source","","strip event source",301,N],[11,"position","","position changed",301,N],[11,"stop","","interaction stopped",301,N],[11,"frame","","end of a strip event sequence",301,N],[11,"destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","destroy the pad object",284,[[["self"],["zwptabletpadgroupv2"]]]],[11,"buttons","","buttons announced",302,N],[11,"ring","","ring announced",302,N],[11,"strip","","strip announced",302,N],[11,"modes","","mode-switch ability announced",302,N],[11,"done","","tablet group description events sequence complete",302,N],[11,"mode_switch","","mode switch event",302,N],[11,"set_feedback","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","set compositor feedback",288,[[["self"],["zwptabletpadv2"],["u32"],["string"],["u32"]]]],[11,"destroy","","destroy the pad object",288,[[["self"],["zwptabletpadv2"]]]],[11,"from_raw","","",285,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",285,[[["self"]],["u32"]]],[11,"group","","group announced",303,N],[11,"path","","path to the device",303,N],[11,"buttons","","buttons announced",303,N],[11,"done","","pad description event sequence complete",303,N],[11,"button","","physical button state",303,N],[11,"enter","","enter event",303,N],[11,"leave","","enter event",303,N],[11,"removed","","pad removed event",303,N],[0,"text_input","wayland_protocols::unstable","Text input protocol",N,N],[0,"v1","wayland_protocols::unstable::text_input","",N,N],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",304,N],[13,"Default","","auto completion, correction and capitalization",304,N],[13,"Password","","hidden and sensitive text",304,N],[13,"AutoCompletion","","suggest word completions",304,N],[13,"AutoCorrection","","suggest word corrections",304,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",304,N],[13,"Lowercase","","prefer lowercase letters",304,N],[13,"Uppercase","","prefer uppercase letters",304,N],[13,"Titlecase","","prefer casing for titles and headings (can be language…",304,N],[13,"HiddenText","","characters should be hidden",304,N],[13,"SensitiveData","","typed text should not be stored",304,N],[13,"Latin","","just latin characters should be entered",304,N],[13,"Multiline","","the text input is multiline",304,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",305,N],[13,"Alpha","","allow only alphabetic characters",305,N],[13,"Digits","","allow only digits",305,N],[13,"Number","","input a number (including decimal separator and sign)",305,N],[13,"Phone","","input a phone number",305,N],[13,"Url","","input an URL",305,N],[13,"Email","","input an email address",305,N],[13,"Name","","input a name of a person",305,N],[13,"Password","","input a password (combine with password or sensitive_data…",305,N],[13,"Date","","input a date",305,N],[13,"Time","","input a time",305,N],[13,"Datetime","","input a date and time",305,N],[13,"Terminal","","input for a terminal",305,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",306,N],[13,"None","","style should be the same as in non-composing text",306,N],[13,"Active","","",306,N],[13,"Inactive","","",306,N],[13,"Highlight","","",306,N],[13,"Underline","","",306,N],[13,"Selection","","",306,N],[13,"Incorrect","","",306,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",307,N],[13,"Ltr","","left-to-right",307,N],[13,"Rtl","","right-to-left",307,N],[4,"Request","","",N,N],[13,"Activate","","request activation",308,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[12,"surface","","",308,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",308,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",308,N],[13,"HideInputPanel","","hide input panels",308,N],[13,"Reset","","reset",308,N],[13,"SetSurroundingText","","sets the surrounding text",308,N],[12,"text","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[12,"cursor","","",308,N],[12,"anchor","","",308,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",308,N],[12,"hint","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[12,"purpose","","",308,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",308,N],[12,"x","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[12,"y","","",308,N],[12,"width","","",308,N],[12,"height","","",308,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",308,N],[12,"language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",308,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",308,N],[12,"button","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",308,N],[12,"index","","",308,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",309,N],[12,"surface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",309,N],[13,"ModifiersMap","","modifiers map",309,N],[12,"map","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",309,N],[12,"state","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",309,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"text","","",309,N],[12,"commit","","",309,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",309,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"length","","",309,N],[12,"style","","",309,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",309,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",309,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"text","","",309,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",309,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"anchor","","",309,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",309,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"length","","",309,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",309,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"time","","",309,N],[12,"sym","","",309,N],[12,"state","","",309,N],[12,"modifiers","","",309,N],[13,"Language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",309,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"language","","",309,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",309,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",309,N],[12,"direction","","",309,N],[17,"REQ_ACTIVATE_SINCE","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","The minimal object version supporting this request",N,N],[17,"REQ_DEACTIVATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_INPUT_PANEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_HIDE_INPUT_PANEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESET_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONTENT_TYPE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CURSOR_RECTANGLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PREFERRED_LANGUAGE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_STATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_INVOKE_ACTION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODIFIERS_MAP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_INPUT_PANEL_STATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_STYLING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_CURSOR_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_COMMIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CURSOR_POSITION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_KEYSYM_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LANGUAGE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TEXT_DIRECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"enter","","enter event",310,[[["self"],["zwptextinputv1"],["wlsurface"]]]],[11,"leave","","leave event",310,[[["self"],["zwptextinputv1"]]]],[11,"modifiers_map","","modifiers map",310,[[["self"],["zwptextinputv1"],["vec",["u8"]]]]],[11,"input_panel_state","","state of the input panel",310,[[["self"],["zwptextinputv1"],["u32"]]]],[11,"preedit_string","","pre-edit",310,[[["self"],["zwptextinputv1"],["u32"],["string"],["string"]]]],[11,"preedit_styling","","pre-edit styling",310,[[["self"],["zwptextinputv1"],["u32"],["u32"],["u32"]]]],[11,"preedit_cursor","","pre-edit cursor",310,[[["self"],["zwptextinputv1"],["i32"]]]],[11,"commit_string","","commit",310,[[["self"],["zwptextinputv1"],["u32"],["string"]]]],[11,"cursor_position","","set cursor to new position",310,[[["self"],["zwptextinputv1"],["i32"],["i32"]]]],[11,"delete_surrounding_text","","delete surrounding text",310,[[["self"],["zwptextinputv1"],["i32"],["u32"]]]],[11,"keysym","","keysym",310,[[["self"],["zwptextinputv1"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"language","","language",310,[[["self"],["zwptextinputv1"],["u32"],["string"]]]],[11,"text_direction","","text direction",310,[[["self"],["zwptextinputv1"],["u32"],["u32"]]]],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",311,N],[12,"id","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",311,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[17,"REQ_CREATE_TEXT_INPUT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",312,N],[13,"Default","","auto completion, correction and capitalization",312,N],[13,"Password","","hidden and sensitive text",312,N],[13,"AutoCompletion","","suggest word completions",312,N],[13,"AutoCorrection","","suggest word corrections",312,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",312,N],[13,"Lowercase","","prefer lowercase letters",312,N],[13,"Uppercase","","prefer uppercase letters",312,N],[13,"Titlecase","","prefer casing for titles and headings (can be language…",312,N],[13,"HiddenText","","characters should be hidden",312,N],[13,"SensitiveData","","typed text should not be stored",312,N],[13,"Latin","","just latin characters should be entered",312,N],[13,"Multiline","","the text input is multiline",312,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",313,N],[13,"Alpha","","allow only alphabetic characters",313,N],[13,"Digits","","allow only digits",313,N],[13,"Number","","input a number (including decimal separator and sign)",313,N],[13,"Phone","","input a phone number",313,N],[13,"Url","","input an URL",313,N],[13,"Email","","input an email address",313,N],[13,"Name","","input a name of a person",313,N],[13,"Password","","input a password (combine with password or sensitive_data…",313,N],[13,"Date","","input a date",313,N],[13,"Time","","input a time",313,N],[13,"Datetime","","input a date and time",313,N],[13,"Terminal","","input for a terminal",313,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",314,N],[13,"None","","style should be the same as in non-composing text",314,N],[13,"Active","","",314,N],[13,"Inactive","","",314,N],[13,"Highlight","","",314,N],[13,"Underline","","",314,N],[13,"Selection","","",314,N],[13,"Incorrect","","",314,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",315,N],[13,"Ltr","","left-to-right",315,N],[13,"Rtl","","right-to-left",315,N],[4,"Request","","",N,N],[13,"Activate","","request activation",316,N],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[12,"surface","","",316,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request deactivation",316,N],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","show input panels",316,N],[13,"HideInputPanel","","hide input panels",316,N],[13,"Reset","","reset",316,N],[13,"SetSurroundingText","","sets the surrounding text",316,N],[12,"text","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[12,"cursor","","",316,N],[12,"anchor","","",316,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set content purpose and hint",316,N],[12,"hint","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[12,"purpose","","",316,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",316,N],[12,"x","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[12,"y","","",316,N],[12,"width","","",316,N],[12,"height","","",316,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","sets preferred language",316,N],[12,"language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",316,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",316,N],[12,"button","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",316,N],[12,"index","","",316,N],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",317,N],[12,"surface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","leave event",317,N],[13,"ModifiersMap","","modifiers map",317,N],[12,"map","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","state of the input panel",317,N],[12,"state","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit",317,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"text","","",317,N],[12,"commit","","",317,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit styling",317,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"length","","",317,N],[12,"style","","",317,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit cursor",317,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","commit",317,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"text","","",317,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set cursor to new position",317,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"anchor","","",317,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","delete surrounding text",317,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"length","","",317,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","keysym",317,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"time","","",317,N],[12,"sym","","",317,N],[12,"state","","",317,N],[12,"modifiers","","",317,N],[13,"Language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","language",317,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"language","","",317,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","text direction",317,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",317,N],[12,"direction","","",317,N],[17,"REQ_ACTIVATE_SINCE","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","The minimal object version supporting this request",N,N],[17,"REQ_DEACTIVATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_INPUT_PANEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_HIDE_INPUT_PANEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESET_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONTENT_TYPE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CURSOR_RECTANGLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PREFERRED_LANGUAGE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_STATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_INVOKE_ACTION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODIFIERS_MAP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_INPUT_PANEL_STATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_STYLING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_CURSOR_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_COMMIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CURSOR_POSITION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_KEYSYM_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LANGUAGE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_TEXT_DIRECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"activate","","request activation",318,[[["self"],["zwptextinputv1"],["wlseat"],["wlsurface"]]]],[11,"deactivate","","request deactivation",318,[[["self"],["zwptextinputv1"],["wlseat"]]]],[11,"show_input_panel","","show input panels",318,[[["self"],["zwptextinputv1"]]]],[11,"hide_input_panel","","hide input panels",318,[[["self"],["zwptextinputv1"]]]],[11,"reset","","reset",318,[[["self"],["zwptextinputv1"]]]],[11,"set_surrounding_text","","sets the surrounding text",318,[[["self"],["zwptextinputv1"],["string"],["u32"],["u32"]]]],[11,"set_content_type","","set content purpose and hint",318,[[["self"],["zwptextinputv1"],["u32"],["u32"]]]],[11,"set_cursor_rectangle","","",318,[[["self"],["zwptextinputv1"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_preferred_language","","sets preferred language",318,[[["self"],["zwptextinputv1"],["string"]]]],[11,"commit_state","","",318,[[["self"],["zwptextinputv1"],["u32"]]]],[11,"invoke_action","","",318,[[["self"],["zwptextinputv1"],["u32"],["u32"]]]],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",319,N],[12,"id","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1::Request","",319,N],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",N,N],[17,"REQ_CREATE_TEXT_INPUT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_text_input","","create text input",320,[[["self"],["zwptextinputmanagerv1"],["newresource",["zwptextinputv1"]]]]],[11,"enter","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","enter event",310,[[["self"],["zwptextinputv1"],["wlsurface"]]]],[11,"leave","","leave event",310,[[["self"],["zwptextinputv1"]]]],[11,"modifiers_map","","modifiers map",310,[[["self"],["zwptextinputv1"],["vec",["u8"]]]]],[11,"input_panel_state","","state of the input panel",310,[[["self"],["zwptextinputv1"],["u32"]]]],[11,"preedit_string","","pre-edit",310,[[["self"],["zwptextinputv1"],["u32"],["string"],["string"]]]],[11,"preedit_styling","","pre-edit styling",310,[[["self"],["zwptextinputv1"],["u32"],["u32"],["u32"]]]],[11,"preedit_cursor","","pre-edit cursor",310,[[["self"],["zwptextinputv1"],["i32"]]]],[11,"commit_string","","commit",310,[[["self"],["zwptextinputv1"],["u32"],["string"]]]],[11,"cursor_position","","set cursor to new position",310,[[["self"],["zwptextinputv1"],["i32"],["i32"]]]],[11,"delete_surrounding_text","","delete surrounding text",310,[[["self"],["zwptextinputv1"],["i32"],["u32"]]]],[11,"keysym","","keysym",310,[[["self"],["zwptextinputv1"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"language","","language",310,[[["self"],["zwptextinputv1"],["u32"],["string"]]]],[11,"text_direction","","text direction",310,[[["self"],["zwptextinputv1"],["u32"],["u32"]]]],[11,"from_raw","","",304,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",304,[[["self"]],["u32"]]],[11,"from_raw","","",305,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",305,[[["self"]],["u32"]]],[11,"from_raw","","",306,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",306,[[["self"]],["u32"]]],[11,"from_raw","","",307,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",307,[[["self"]],["u32"]]],[11,"activate","","request activation",321,N],[11,"deactivate","","request deactivation",321,N],[11,"show_input_panel","","show input panels",321,N],[11,"hide_input_panel","","hide input panels",321,N],[11,"reset","","reset",321,N],[11,"set_surrounding_text","","sets the surrounding text",321,N],[11,"set_content_type","","set content purpose and hint",321,N],[11,"set_cursor_rectangle","","",321,N],[11,"set_preferred_language","","sets preferred language",321,N],[11,"commit_state","","",321,N],[11,"invoke_action","","",321,N],[11,"create_text_input","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","create text input",322,[[["self"],["f"]],["result",["zwptextinputv1"]]]],[11,"activate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request activation",318,[[["self"],["zwptextinputv1"],["wlseat"],["wlsurface"]]]],[11,"deactivate","","request deactivation",318,[[["self"],["zwptextinputv1"],["wlseat"]]]],[11,"show_input_panel","","show input panels",318,[[["self"],["zwptextinputv1"]]]],[11,"hide_input_panel","","hide input panels",318,[[["self"],["zwptextinputv1"]]]],[11,"reset","","reset",318,[[["self"],["zwptextinputv1"]]]],[11,"set_surrounding_text","","sets the surrounding text",318,[[["self"],["zwptextinputv1"],["string"],["u32"],["u32"]]]],[11,"set_content_type","","set content purpose and hint",318,[[["self"],["zwptextinputv1"],["u32"],["u32"]]]],[11,"set_cursor_rectangle","","",318,[[["self"],["zwptextinputv1"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_preferred_language","","sets preferred language",318,[[["self"],["zwptextinputv1"],["string"]]]],[11,"commit_state","","",318,[[["self"],["zwptextinputv1"],["u32"]]]],[11,"invoke_action","","",318,[[["self"],["zwptextinputv1"],["u32"],["u32"]]]],[11,"from_raw","","",312,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",312,[[["self"]],["u32"]]],[11,"from_raw","","",313,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",313,[[["self"]],["u32"]]],[11,"from_raw","","",314,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",314,[[["self"]],["u32"]]],[11,"from_raw","","",315,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",315,[[["self"]],["u32"]]],[11,"enter","","enter event",323,N],[11,"leave","","leave event",323,N],[11,"modifiers_map","","modifiers map",323,N],[11,"input_panel_state","","state of the input panel",323,N],[11,"preedit_string","","pre-edit",323,N],[11,"preedit_styling","","pre-edit styling",323,N],[11,"preedit_cursor","","pre-edit cursor",323,N],[11,"commit_string","","commit",323,N],[11,"cursor_position","","set cursor to new position",323,N],[11,"delete_surrounding_text","","delete surrounding text",323,N],[11,"keysym","","keysym",323,N],[11,"language","","language",323,N],[11,"text_direction","","text direction",323,N],[11,"create_text_input","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","create text input",320,[[["self"],["zwptextinputmanagerv1"],["newresource",["zwptextinputv1"]]]]],[0,"v3","wayland_protocols::unstable::text_input","",N,N],[0,"client","wayland_protocols::unstable::text_input::v3","Client-side API of this protocol",N,N],[0,"zwp_text_input_v3","wayland_protocols::unstable::text_input::v3::client","text input",N,N],[3,"ContentHint","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","content hint",N,N],[3,"ZwpTextInputV3","","",N,N],[4,"ChangeCause","","text change reason",N,N],[13,"InputMethod","","input method caused the change",324,N],[13,"Other","","something else than the input method caused the change",324,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",325,N],[13,"Alpha","","allow only alphabetic characters",325,N],[13,"Digits","","allow only digits",325,N],[13,"Number","","input a number (including decimal separator and sign)",325,N],[13,"Phone","","input a phone number",325,N],[13,"Url","","input an URL",325,N],[13,"Email","","input an email address",325,N],[13,"Name","","input a name of a person",325,N],[13,"Password","","input a password (combine with sensitive_data hint)",325,N],[13,"Pin","","input is a numeric password (combine with sensitive_data…",325,N],[13,"Date","","input a date",325,N],[13,"Time","","input a time",325,N],[13,"Datetime","","input a date and time",325,N],[13,"Terminal","","input for a terminal",325,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input",326,N],[13,"Enable","","Request text input to be enabled",326,N],[13,"Disable","","Disable text input on a surface",326,N],[13,"SetSurroundingText","","sets the surrounding text",326,N],[12,"text","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",326,N],[12,"cursor","","",326,N],[12,"anchor","","",326,N],[13,"SetTextChangeCause","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","indicates the cause of surrounding text change",326,N],[12,"cause","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",326,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","set content purpose and hint",326,N],[12,"hint","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",326,N],[12,"purpose","","",326,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","set cursor position",326,N],[12,"x","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",326,N],[12,"y","","",326,N],[12,"width","","",326,N],[12,"height","","",326,N],[13,"Commit","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","commit state",326,N],[4,"Event","","",N,N],[13,"Enter","","enter event",327,N],[12,"surface","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",327,N],[13,"Leave","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","leave event",327,N],[12,"surface","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",327,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","pre-edit",327,N],[12,"text","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",327,N],[12,"cursor_begin","","",327,N],[12,"cursor_end","","",327,N],[13,"CommitString","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","text commit",327,N],[12,"text","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",327,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","delete surrounding text",327,N],[12,"before_length","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",327,N],[12,"after_length","","",327,N],[13,"Done","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","apply changes",327,N],[12,"serial","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",327,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","The minimal object version supporting this request",N,N],[17,"REQ_ENABLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DISABLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TEXT_CHANGE_CAUSE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONTENT_TYPE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CURSOR_RECTANGLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_COMMIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"enter","","enter event",328,[[["self"],["zwptextinputv3"],["wlsurface"]]]],[11,"leave","","leave event",328,[[["self"],["zwptextinputv3"],["wlsurface"]]]],[11,"preedit_string","","pre-edit",328,[[["self"],["zwptextinputv3"],["option",["string"]],["i32"],["i32"]]]],[11,"commit_string","","text commit",328,[[["self"],["zwptextinputv3"],["option",["string"]]]]],[11,"delete_surrounding_text","","delete surrounding text",328,[[["self"],["zwptextinputv3"],["u32"],["u32"]]]],[11,"done","","apply changes",328,[[["self"],["zwptextinputv3"],["u32"]]]],[0,"zwp_text_input_manager_v3","wayland_protocols::unstable::text_input::v3::client","text input manager",N,N],[3,"ZwpTextInputManagerV3","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",N,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input_manager",329,N],[13,"GetTextInput","","create a new text input object",329,N],[12,"id","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3::Request","",329,N],[12,"seat","","",329,N],[4,"Event","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TEXT_INPUT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::unstable::text_input::v3","Server-side API of this protocol",N,N],[0,"zwp_text_input_v3","wayland_protocols::unstable::text_input::v3::server","text input",N,N],[3,"ContentHint","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","content hint",N,N],[3,"ZwpTextInputV3","","",N,N],[4,"ChangeCause","","text change reason",N,N],[13,"InputMethod","","input method caused the change",330,N],[13,"Other","","something else than the input method caused the change",330,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",331,N],[13,"Alpha","","allow only alphabetic characters",331,N],[13,"Digits","","allow only digits",331,N],[13,"Number","","input a number (including decimal separator and sign)",331,N],[13,"Phone","","input a phone number",331,N],[13,"Url","","input an URL",331,N],[13,"Email","","input an email address",331,N],[13,"Name","","input a name of a person",331,N],[13,"Password","","input a password (combine with sensitive_data hint)",331,N],[13,"Pin","","input is a numeric password (combine with sensitive_data…",331,N],[13,"Date","","input a date",331,N],[13,"Time","","input a time",331,N],[13,"Datetime","","input a date and time",331,N],[13,"Terminal","","input for a terminal",331,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input",332,N],[13,"Enable","","Request text input to be enabled",332,N],[13,"Disable","","Disable text input on a surface",332,N],[13,"SetSurroundingText","","sets the surrounding text",332,N],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",332,N],[12,"cursor","","",332,N],[12,"anchor","","",332,N],[13,"SetTextChangeCause","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","indicates the cause of surrounding text change",332,N],[12,"cause","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",332,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","set content purpose and hint",332,N],[12,"hint","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",332,N],[12,"purpose","","",332,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","set cursor position",332,N],[12,"x","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",332,N],[12,"y","","",332,N],[12,"width","","",332,N],[12,"height","","",332,N],[13,"Commit","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","commit state",332,N],[4,"Event","","",N,N],[13,"Enter","","enter event",333,N],[12,"surface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",333,N],[13,"Leave","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","leave event",333,N],[12,"surface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",333,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","pre-edit",333,N],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",333,N],[12,"cursor_begin","","",333,N],[12,"cursor_end","","",333,N],[13,"CommitString","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","text commit",333,N],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",333,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","delete surrounding text",333,N],[12,"before_length","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",333,N],[12,"after_length","","",333,N],[13,"Done","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","apply changes",333,N],[12,"serial","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",333,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","The minimal object version supporting this request",N,N],[17,"REQ_ENABLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DISABLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TEXT_CHANGE_CAUSE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONTENT_TYPE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CURSOR_RECTANGLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PREEDIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_COMMIT_STRING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","Destroy the wp_text_input",334,[[["self"],["zwptextinputv3"]]]],[11,"enable","","Request text input to be enabled",334,[[["self"],["zwptextinputv3"]]]],[11,"disable","","Disable text input on a surface",334,[[["self"],["zwptextinputv3"]]]],[11,"set_surrounding_text","","sets the surrounding text",334,[[["self"],["zwptextinputv3"],["string"],["i32"],["i32"]]]],[11,"set_text_change_cause","","indicates the cause of surrounding text change",334,[[["self"],["zwptextinputv3"],["changecause"]]]],[11,"set_content_type","","set content purpose and hint",334,[[["self"],["zwptextinputv3"],["contenthint"],["contentpurpose"]]]],[11,"set_cursor_rectangle","","set cursor position",334,[[["self"],["zwptextinputv3"],["i32"],["i32"],["i32"],["i32"]]]],[11,"commit","","commit state",334,[[["self"],["zwptextinputv3"]]]],[0,"zwp_text_input_manager_v3","wayland_protocols::unstable::text_input::v3::server","text input manager",N,N],[3,"ZwpTextInputManagerV3","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",N,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input_manager",335,N],[13,"GetTextInput","","create a new text input object",335,N],[12,"id","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3::Request","",335,N],[12,"seat","","",335,N],[4,"Event","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TEXT_INPUT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","Destroy the wp_text_input_manager",336,[[["self"],["zwptextinputmanagerv3"]]]],[11,"get_text_input","","create a new text input object",336,[[["self"],["zwptextinputmanagerv3"],["newresource",["zwptextinputv3"]],["wlseat"]]]],[11,"enter","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","enter event",328,[[["self"],["zwptextinputv3"],["wlsurface"]]]],[11,"leave","","leave event",328,[[["self"],["zwptextinputv3"],["wlsurface"]]]],[11,"preedit_string","","pre-edit",328,[[["self"],["zwptextinputv3"],["option",["string"]],["i32"],["i32"]]]],[11,"commit_string","","text commit",328,[[["self"],["zwptextinputv3"],["option",["string"]]]]],[11,"delete_surrounding_text","","delete surrounding text",328,[[["self"],["zwptextinputv3"],["u32"],["u32"]]]],[11,"done","","apply changes",328,[[["self"],["zwptextinputv3"],["u32"]]]],[11,"from_raw","","",324,[[["u32"]],["option",["changecause"]]]],[11,"to_raw","","",324,[[["self"]],["u32"]]],[18,"None","","no special behavior",337,N],[18,"Completion","","suggest word completions",337,N],[18,"Spellcheck","","suggest word corrections",337,N],[18,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",337,N],[18,"Lowercase","","prefer lowercase letters",337,N],[18,"Uppercase","","prefer uppercase letters",337,N],[18,"Titlecase","","prefer casing for titles and headings (can be language…",337,N],[18,"HiddenText","","characters should be hidden",337,N],[18,"SensitiveData","","typed text should not be stored",337,N],[18,"Latin","","just Latin characters should be entered",337,N],[18,"Multiline","","the text input is multiline",337,N],[11,"empty","","Returns an empty set of flags.",337,[[],["contenthint"]]],[11,"all","","Returns the set containing all flags.",337,[[],["contenthint"]]],[11,"bits","","Returns the raw value of the flags currently stored.",337,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",337,[[["u32"]],["option",["contenthint"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",337,[[["u32"]],["contenthint"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",337,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",337,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",337,[[["self"],["contenthint"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",337,[[["self"],["contenthint"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",337,[[["self"],["contenthint"]]]],[11,"remove","","Removes the specified flags in-place.",337,[[["self"],["contenthint"]]]],[11,"toggle","","Toggles the specified flags in-place.",337,[[["self"],["contenthint"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",337,[[["self"],["contenthint"],["bool"]]]],[11,"from_raw","","",337,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",337,[[["self"]],["u32"]]],[11,"from_raw","","",325,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",325,[[["self"]],["u32"]]],[11,"destroy","","Destroy the wp_text_input",338,N],[11,"enable","","Request text input to be enabled",338,N],[11,"disable","","Disable text input on a surface",338,N],[11,"set_surrounding_text","","sets the surrounding text",338,N],[11,"set_text_change_cause","","indicates the cause of surrounding text change",338,N],[11,"set_content_type","","set content purpose and hint",338,N],[11,"set_cursor_rectangle","","set cursor position",338,N],[11,"commit","","commit state",338,N],[11,"destroy","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","Destroy the wp_text_input_manager",339,N],[11,"get_text_input","","create a new text input object",339,[[["self"],["wlseat"],["f"]],["result",["zwptextinputv3"]]]],[11,"destroy","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Destroy the wp_text_input",334,[[["self"],["zwptextinputv3"]]]],[11,"enable","","Request text input to be enabled",334,[[["self"],["zwptextinputv3"]]]],[11,"disable","","Disable text input on a surface",334,[[["self"],["zwptextinputv3"]]]],[11,"set_surrounding_text","","sets the surrounding text",334,[[["self"],["zwptextinputv3"],["string"],["i32"],["i32"]]]],[11,"set_text_change_cause","","indicates the cause of surrounding text change",334,[[["self"],["zwptextinputv3"],["changecause"]]]],[11,"set_content_type","","set content purpose and hint",334,[[["self"],["zwptextinputv3"],["contenthint"],["contentpurpose"]]]],[11,"set_cursor_rectangle","","set cursor position",334,[[["self"],["zwptextinputv3"],["i32"],["i32"],["i32"],["i32"]]]],[11,"commit","","commit state",334,[[["self"],["zwptextinputv3"]]]],[11,"from_raw","","",330,[[["u32"]],["option",["changecause"]]]],[11,"to_raw","","",330,[[["self"]],["u32"]]],[18,"None","","no special behavior",340,N],[18,"Completion","","suggest word completions",340,N],[18,"Spellcheck","","suggest word corrections",340,N],[18,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",340,N],[18,"Lowercase","","prefer lowercase letters",340,N],[18,"Uppercase","","prefer uppercase letters",340,N],[18,"Titlecase","","prefer casing for titles and headings (can be language…",340,N],[18,"HiddenText","","characters should be hidden",340,N],[18,"SensitiveData","","typed text should not be stored",340,N],[18,"Latin","","just Latin characters should be entered",340,N],[18,"Multiline","","the text input is multiline",340,N],[11,"empty","","Returns an empty set of flags.",340,[[],["contenthint"]]],[11,"all","","Returns the set containing all flags.",340,[[],["contenthint"]]],[11,"bits","","Returns the raw value of the flags currently stored.",340,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",340,[[["u32"]],["option",["contenthint"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",340,[[["u32"]],["contenthint"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",340,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",340,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",340,[[["self"],["contenthint"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",340,[[["self"],["contenthint"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",340,[[["self"],["contenthint"]]]],[11,"remove","","Removes the specified flags in-place.",340,[[["self"],["contenthint"]]]],[11,"toggle","","Toggles the specified flags in-place.",340,[[["self"],["contenthint"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",340,[[["self"],["contenthint"],["bool"]]]],[11,"from_raw","","",340,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",340,[[["self"]],["u32"]]],[11,"from_raw","","",331,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",331,[[["self"]],["u32"]]],[11,"enter","","enter event",341,N],[11,"leave","","leave event",341,N],[11,"preedit_string","","pre-edit",341,N],[11,"commit_string","","text commit",341,N],[11,"delete_surrounding_text","","delete surrounding text",341,N],[11,"done","","apply changes",341,N],[11,"destroy","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","Destroy the wp_text_input_manager",336,[[["self"],["zwptextinputmanagerv3"]]]],[11,"get_text_input","","create a new text input object",336,[[["self"],["zwptextinputmanagerv3"],["newresource",["zwptextinputv3"]],["wlseat"]]]],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for…",N,N],[0,"v1","wayland_protocols::unstable::xdg_decoration","",N,N],[0,"client","wayland_protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::client","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",342,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",342,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",342,N],[12,"toplevel","","",342,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOPLEVEL_DECORATION_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",343,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",343,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",343,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",344,N],[13,"ServerSide","","server-side window decoration",344,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",345,N],[13,"SetMode","","set the decoration mode",345,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",345,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",345,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",346,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",346,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","The minimal object version supporting this request",N,N],[17,"REQ_SET_MODE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MODE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",347,[[["self"],["zxdgtopleveldecorationv1"],["mode"]]]],[0,"server","wayland_protocols::unstable::xdg_decoration::v1","Server-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::server","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",348,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",348,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1::Request","",348,N],[12,"toplevel","","",348,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOPLEVEL_DECORATION_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the decoration manager object",349,[[["self"],["zxdgdecorationmanagerv1"]]]],[11,"get_toplevel_decoration","","create a new toplevel decoration object",349,[[["self"],["zxdgdecorationmanagerv1"],["newresource",["zxdgtopleveldecorationv1"]],["xdgtoplevel"]]]],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::server","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",350,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",350,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",350,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",351,N],[13,"ServerSide","","server-side window decoration",351,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",352,N],[13,"SetMode","","set the decoration mode",352,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Request","",352,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","unset the decoration mode",352,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",353,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Event","",353,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","The minimal object version supporting this request",N,N],[17,"REQ_SET_MODE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MODE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the decoration object",354,[[["self"],["zxdgtopleveldecorationv1"]]]],[11,"set_mode","","set the decoration mode",354,[[["self"],["zxdgtopleveldecorationv1"],["mode"]]]],[11,"unset_mode","","unset the decoration mode",354,[[["self"],["zxdgtopleveldecorationv1"]]]],[11,"destroy","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","destroy the decoration manager object",355,N],[11,"get_toplevel_decoration","","create a new toplevel decoration object",355,[[["self"],["xdgtoplevel"],["f"]],["result",["zxdgtopleveldecorationv1"]]]],[11,"configure","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","suggest a surface change",347,[[["self"],["zxdgtopleveldecorationv1"],["mode"]]]],[11,"from_raw","","",343,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",343,[[["self"]],["u32"]]],[11,"from_raw","","",344,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",344,[[["self"]],["u32"]]],[11,"destroy","","destroy the decoration object",356,N],[11,"set_mode","","set the decoration mode",356,N],[11,"unset_mode","","unset the decoration mode",356,N],[11,"destroy","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","destroy the decoration manager object",349,[[["self"],["zxdgdecorationmanagerv1"]]]],[11,"get_toplevel_decoration","","create a new toplevel decoration object",349,[[["self"],["zxdgdecorationmanagerv1"],["newresource",["zxdgtopleveldecorationv1"]],["xdgtoplevel"]]]],[11,"destroy","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","destroy the decoration object",354,[[["self"],["zxdgtopleveldecorationv1"]]]],[11,"set_mode","","set the decoration mode",354,[[["self"],["zxdgtopleveldecorationv1"],["mode"]]]],[11,"unset_mode","","unset the decoration mode",354,[[["self"],["zxdgtopleveldecorationv1"]]]],[11,"from_raw","","",350,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",350,[[["self"]],["u32"]]],[11,"from_raw","","",351,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",351,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",357,N],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",N,N],[0,"v1","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",358,N],[13,"Export","","export a surface",358,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",358,N],[12,"surface","","",358,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_EXPORT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",359,N],[13,"Import","","import a surface",359,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",359,N],[12,"handle","","",359,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_IMPORT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",360,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",361,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",361,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","The minimal object version supporting this request",N,N],[17,"EVT_HANDLE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"handle","","the exported surface handle",362,[[["self"],["zxdgexportedv1"],["string"]]]],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",363,N],[13,"SetParentOf","","set as the parent of some surface",363,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",363,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",364,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_OF_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DESTROYED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"destroyed","","the imported surface handle has been destroyed",365,[[["self"],["zxdgimportedv1"]]]],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",366,N],[13,"Export","","export a surface",366,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1::Request","",366,N],[12,"surface","","",366,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_EXPORT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_exporter object",367,[[["self"],["zxdgexporterv1"]]]],[11,"export","","export a surface",367,[[["self"],["zxdgexporterv1"],["newresource",["zxdgexportedv1"]],["wlsurface"]]]],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",368,N],[13,"Import","","import a surface",368,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1::Request","",368,N],[12,"handle","","",368,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_IMPORT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_importer object",369,[[["self"],["zxdgimporterv1"]]]],[11,"import","","import a surface",369,[[["self"],["zxdgimporterv1"],["newresource",["zxdgimportedv1"]],["string"]]]],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",370,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",371,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1::Event","",371,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","The minimal object version supporting this request",N,N],[17,"EVT_HANDLE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","unexport the exported surface",372,[[["self"],["zxdgexportedv1"]]]],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",373,N],[13,"SetParentOf","","set as the parent of some surface",373,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1::Request","",373,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",374,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_OF_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DESTROYED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_imported object",375,[[["self"],["zxdgimportedv1"]]]],[11,"set_parent_of","","set as the parent of some surface",375,[[["self"],["zxdgimportedv1"],["wlsurface"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","destroy the xdg_exporter object",376,N],[11,"export","","export a surface",376,[[["self"],["wlsurface"],["f"]],["result",["zxdgexportedv1"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","destroy the xdg_importer object",377,N],[11,"import","","import a surface",377,[[["self"],["string"],["f"]],["result",["zxdgimportedv1"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","the exported surface handle",362,[[["self"],["zxdgexportedv1"],["string"]]]],[11,"destroy","","unexport the exported surface",378,N],[11,"destroyed","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","the imported surface handle has been destroyed",365,[[["self"],["zxdgimportedv1"]]]],[11,"destroy","","destroy the xdg_imported object",379,N],[11,"set_parent_of","","set as the parent of some surface",379,N],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","destroy the xdg_exporter object",367,[[["self"],["zxdgexporterv1"]]]],[11,"export","","export a surface",367,[[["self"],["zxdgexporterv1"],["newresource",["zxdgexportedv1"]],["wlsurface"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","destroy the xdg_importer object",369,[[["self"],["zxdgimporterv1"]]]],[11,"import","","import a surface",369,[[["self"],["zxdgimporterv1"],["newresource",["zxdgimportedv1"]],["string"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","unexport the exported surface",372,[[["self"],["zxdgexportedv1"]]]],[11,"handle","","the exported surface handle",380,N],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","destroy the xdg_imported object",375,[[["self"],["zxdgimportedv1"]]]],[11,"set_parent_of","","set as the parent of some surface",375,[[["self"],["zxdgimportedv1"],["wlsurface"]]]],[11,"destroyed","","the imported surface handle has been destroyed",381,N],[0,"v2","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",382,N],[13,"ExportToplevel","","export a toplevel surface",382,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",382,N],[12,"surface","","",382,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_EXPORT_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",383,N],[13,"ImportToplevel","","import a toplevel surface",383,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",383,N],[12,"handle","","",383,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_IMPORT_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",384,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",385,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",385,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","The minimal object version supporting this request",N,N],[17,"EVT_HANDLE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"handle","","the exported surface handle",386,[[["self"],["zxdgexportedv2"],["string"]]]],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",387,N],[13,"SetParentOf","","set as the parent of some surface",387,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",387,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",388,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_OF_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DESTROYED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"destroyed","","the imported surface handle has been destroyed",389,[[["self"],["zxdgimportedv2"]]]],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",390,N],[13,"ExportToplevel","","export a toplevel surface",390,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2::Request","",390,N],[12,"surface","","",390,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_EXPORT_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_exporter object",391,[[["self"],["zxdgexporterv2"]]]],[11,"export_toplevel","","export a toplevel surface",391,[[["self"],["zxdgexporterv2"],["newresource",["zxdgexportedv2"]],["wlsurface"]]]],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",392,N],[13,"ImportToplevel","","import a toplevel surface",392,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2::Request","",392,N],[12,"handle","","",392,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_IMPORT_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_importer object",393,[[["self"],["zxdgimporterv2"]]]],[11,"import_toplevel","","import a toplevel surface",393,[[["self"],["zxdgimporterv2"],["newresource",["zxdgimportedv2"]],["string"]]]],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",394,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",395,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2::Event","",395,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","The minimal object version supporting this request",N,N],[17,"EVT_HANDLE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","unexport the exported surface",396,[[["self"],["zxdgexportedv2"]]]],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",397,N],[13,"SetParentOf","","set as the parent of some surface",397,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2::Request","",397,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",398,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_OF_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DESTROYED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_imported object",399,[[["self"],["zxdgimportedv2"]]]],[11,"set_parent_of","","set as the parent of some surface",399,[[["self"],["zxdgimportedv2"],["wlsurface"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","destroy the xdg_exporter object",400,N],[11,"export_toplevel","","export a toplevel surface",400,[[["self"],["wlsurface"],["f"]],["result",["zxdgexportedv2"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","destroy the xdg_importer object",401,N],[11,"import_toplevel","","import a toplevel surface",401,[[["self"],["string"],["f"]],["result",["zxdgimportedv2"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","the exported surface handle",386,[[["self"],["zxdgexportedv2"],["string"]]]],[11,"destroy","","unexport the exported surface",402,N],[11,"destroyed","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","the imported surface handle has been destroyed",389,[[["self"],["zxdgimportedv2"]]]],[11,"destroy","","destroy the xdg_imported object",403,N],[11,"set_parent_of","","set as the parent of some surface",403,N],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","destroy the xdg_exporter object",391,[[["self"],["zxdgexporterv2"]]]],[11,"export_toplevel","","export a toplevel surface",391,[[["self"],["zxdgexporterv2"],["newresource",["zxdgexportedv2"]],["wlsurface"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","destroy the xdg_importer object",393,[[["self"],["zxdgimporterv2"]]]],[11,"import_toplevel","","import a toplevel surface",393,[[["self"],["zxdgimporterv2"],["newresource",["zxdgimportedv2"]],["string"]]]],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","unexport the exported surface",396,[[["self"],["zxdgexportedv2"]]]],[11,"handle","","the exported surface handle",404,N],[11,"destroy","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","destroy the xdg_imported object",399,[[["self"],["zxdgimportedv2"]]]],[11,"set_parent_of","","set as the parent of some surface",399,[[["self"],["zxdgimportedv2"],["wlsurface"]]]],[11,"destroyed","","the imported surface handle has been destroyed",405,N],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",N,N],[0,"v1","wayland_protocols::unstable::xdg_output","",N,N],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",406,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",406,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",406,N],[12,"output","","",406,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_OUTPUT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",407,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",408,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",408,N],[12,"y","","",408,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",408,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",408,N],[12,"height","","",408,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",408,N],[13,"Name","","name of this output",408,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",408,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",408,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",408,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","The minimal object version supporting this request",N,N],[17,"EVT_LOGICAL_POSITION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LOGICAL_SIZE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DESCRIPTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"logical_position","","position of the output within the global compositor space",409,[[["self"],["zxdgoutputv1"],["i32"],["i32"]]]],[11,"logical_size","","size of the output in the global compositor space",409,[[["self"],["zxdgoutputv1"],["i32"],["i32"]]]],[11,"done","","all information about the output have been sent",409,[[["self"],["zxdgoutputv1"]]]],[11,"name","","name of this output",409,[[["self"],["zxdgoutputv1"],["string"]]]],[11,"description","","human-readable description of this output",409,[[["self"],["zxdgoutputv1"],["string"]]]],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",410,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",410,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1::Request","",410,N],[12,"output","","",410,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_OUTPUT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_output_manager object",411,[[["self"],["zxdgoutputmanagerv1"]]]],[11,"get_xdg_output","","create an xdg output from a wl_output",411,[[["self"],["zxdgoutputmanagerv1"],["newresource",["zxdgoutputv1"]],["wloutput"]]]],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",412,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",413,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",413,N],[12,"y","","",413,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","size of the output in the global compositor space",413,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",413,N],[12,"height","","",413,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","all information about the output have been sent",413,N],[13,"Name","","name of this output",413,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",413,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","human-readable description of this output",413,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",413,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","The minimal object version supporting this request",N,N],[17,"EVT_LOGICAL_POSITION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LOGICAL_SIZE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DESCRIPTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_output object",414,[[["self"],["zxdgoutputv1"]]]],[11,"destroy","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","destroy the xdg_output_manager object",415,N],[11,"get_xdg_output","","create an xdg output from a wl_output",415,[[["self"],["wloutput"],["f"]],["result",["zxdgoutputv1"]]]],[11,"logical_position","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","position of the output within the global compositor space",409,[[["self"],["zxdgoutputv1"],["i32"],["i32"]]]],[11,"logical_size","","size of the output in the global compositor space",409,[[["self"],["zxdgoutputv1"],["i32"],["i32"]]]],[11,"done","","all information about the output have been sent",409,[[["self"],["zxdgoutputv1"]]]],[11,"name","","name of this output",409,[[["self"],["zxdgoutputv1"],["string"]]]],[11,"description","","human-readable description of this output",409,[[["self"],["zxdgoutputv1"],["string"]]]],[11,"destroy","","destroy the xdg_output object",416,N],[11,"destroy","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","destroy the xdg_output_manager object",411,[[["self"],["zxdgoutputmanagerv1"]]]],[11,"get_xdg_output","","create an xdg output from a wl_output",411,[[["self"],["zxdgoutputmanagerv1"],["newresource",["zxdgoutputv1"]],["wloutput"]]]],[11,"destroy","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","destroy the xdg_output object",414,[[["self"],["zxdgoutputv1"]]]],[11,"logical_position","","position of the output within the global compositor space",417,N],[11,"logical_size","","size of the output in the global compositor space",417,N],[11,"done","","all information about the output have been sent",417,N],[11,"name","","name of this output",417,N],[11,"description","","human-readable description of this output",417,N],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",N,N],[0,"v5","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",418,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",419,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",419,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",419,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",419,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",420,N],[13,"UseUnstableVersion","","enable use of this unstable version",420,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",420,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",420,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",420,N],[12,"surface","","",420,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",420,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",420,N],[12,"surface","","",420,N],[12,"parent","","",420,N],[12,"seat","","",420,N],[12,"serial","","",420,N],[12,"x","","",420,N],[12,"y","","",420,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",420,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",420,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",421,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",421,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","The minimal object version supporting this request",N,N],[17,"REQ_USE_UNSTABLE_VERSION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"ping","","check if the client is alive",422,[[["self"],["xdgshell"],["u32"]]]],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",423,N],[13,"Top","","",423,N],[13,"Bottom","","",423,N],[13,"Left","","",423,N],[13,"TopLeft","","",423,N],[13,"BottomLeft","","",423,N],[13,"Right","","",423,N],[13,"TopRight","","",423,N],[13,"BottomRight","","",423,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",424,N],[13,"Fullscreen","","the surface is fullscreen",424,N],[13,"Resizing","","the surface is being resized",424,N],[13,"Activated","","the surface is now activated",424,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",425,N],[13,"SetParent","","set the parent of this surface",425,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",425,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",425,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",425,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[12,"serial","","",425,N],[12,"x","","",425,N],[12,"y","","",425,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",425,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[12,"serial","","",425,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",425,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[12,"serial","","",425,N],[12,"edges","","",425,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",425,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",425,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[12,"y","","",425,N],[12,"width","","",425,N],[12,"height","","",425,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",425,N],[13,"UnsetMaximized","","unmaximize the window",425,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",425,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",425,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",425,N],[13,"SetMinimized","","set the window as minimized",425,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",426,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",426,N],[12,"height","","",426,N],[12,"states","","",426,N],[12,"serial","","",426,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",426,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",427,[[["self"],["xdgsurface"],["i32"],["i32"],["vec",["u8"]],["u32"]]]],[11,"close","","surface wants to be closed",427,[[["self"],["xdgsurface"]]]],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",428,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",429,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"popup_done","","popup interaction is done",430,[[["self"],["xdgpopup"]]]],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",431,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",432,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",432,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",432,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",432,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",433,N],[13,"UseUnstableVersion","","enable use of this unstable version",433,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",433,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a shell surface from a surface",433,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",433,N],[12,"surface","","",433,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a popup for a surface",433,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",433,N],[12,"surface","","",433,N],[12,"parent","","",433,N],[12,"seat","","",433,N],[12,"serial","","",433,N],[12,"x","","",433,N],[12,"y","","",433,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","respond to a ping event",433,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",433,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",434,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Event","",434,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","The minimal object version supporting this request",N,N],[17,"REQ_USE_UNSTABLE_VERSION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy xdg_shell",435,[[["self"],["xdgshell"]]]],[11,"use_unstable_version","","enable use of this unstable version",435,[[["self"],["xdgshell"],["i32"]]]],[11,"get_xdg_surface","","create a shell surface from a surface",435,[[["self"],["xdgshell"],["newresource",["xdgsurface"]],["wlsurface"]]]],[11,"get_xdg_popup","","create a popup for a surface",435,[[["self"],["xdgshell"],["newresource",["xdgpopup"]],["wlsurface"],["wlsurface"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"pong","","respond to a ping event",435,[[["self"],["xdgshell"],["u32"]]]],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",436,N],[13,"Top","","",436,N],[13,"Bottom","","",436,N],[13,"Left","","",436,N],[13,"TopLeft","","",436,N],[13,"BottomLeft","","",436,N],[13,"Right","","",436,N],[13,"TopRight","","",436,N],[13,"BottomRight","","",436,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",437,N],[13,"Fullscreen","","the surface is fullscreen",437,N],[13,"Resizing","","the surface is being resized",437,N],[13,"Activated","","the surface is now activated",437,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",438,N],[13,"SetParent","","set the parent of this surface",438,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set surface title",438,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set application ID",438,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","show the window menu",438,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[12,"serial","","",438,N],[12,"x","","",438,N],[12,"y","","",438,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive move",438,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[12,"serial","","",438,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive resize",438,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[12,"serial","","",438,N],[12,"edges","","",438,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","ack a configure event",438,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set the new window geometry",438,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[12,"y","","",438,N],[12,"width","","",438,N],[12,"height","","",438,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","maximize the window",438,N],[13,"UnsetMaximized","","unmaximize the window",438,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",438,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",438,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",438,N],[13,"SetMinimized","","set the window as minimized",438,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",439,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Event","",439,N],[12,"height","","",439,N],[12,"states","","",439,N],[12,"serial","","",439,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","surface wants to be closed",439,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","Destroy the xdg_surface",440,[[["self"],["xdgsurface"]]]],[11,"set_parent","","set the parent of this surface",440,[[["self"],["xdgsurface"],["option",["xdgsurface"]]]]],[11,"set_title","","set surface title",440,[[["self"],["xdgsurface"],["string"]]]],[11,"set_app_id","","set application ID",440,[[["self"],["xdgsurface"],["string"]]]],[11,"show_window_menu","","show the window menu",440,[[["self"],["xdgsurface"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"_move","","start an interactive move",440,[[["self"],["xdgsurface"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",440,[[["self"],["xdgsurface"],["wlseat"],["u32"],["u32"]]]],[11,"ack_configure","","ack a configure event",440,[[["self"],["xdgsurface"],["u32"]]]],[11,"set_window_geometry","","set the new window geometry",440,[[["self"],["xdgsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_maximized","","maximize the window",440,[[["self"],["xdgsurface"]]]],[11,"unset_maximized","","unmaximize the window",440,[[["self"],["xdgsurface"]]]],[11,"set_fullscreen","","set the window as fullscreen on a monitor",440,[[["self"],["xdgsurface"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","",440,[[["self"],["xdgsurface"]]]],[11,"set_minimized","","set the window as minimized",440,[[["self"],["xdgsurface"]]]],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",441,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",442,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","remove xdg_popup interface",443,[[["self"],["xdgpopup"]]]],[11,"ping","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","check if the client is alive",422,[[["self"],["xdgshell"],["u32"]]]],[11,"from_raw","","",418,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",418,[[["self"]],["u32"]]],[11,"from_raw","","",419,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",419,[[["self"]],["u32"]]],[11,"destroy","","destroy xdg_shell",444,N],[11,"use_unstable_version","","enable use of this unstable version",444,N],[11,"get_xdg_surface","","create a shell surface from a surface",444,[[["self"],["wlsurface"],["f"]],["result",["xdgsurface"]]]],[11,"get_xdg_popup","","create a popup for a surface",444,[[["self"],["wlsurface"],["wlsurface"],["wlseat"],["u32"],["i32"],["i32"],["f"]],["result",["xdgpopup"]]]],[11,"pong","","respond to a ping event",444,N],[11,"configure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","suggest a surface change",427,[[["self"],["xdgsurface"],["i32"],["i32"],["vec",["u8"]],["u32"]]]],[11,"close","","surface wants to be closed",427,[[["self"],["xdgsurface"]]]],[11,"from_raw","","",423,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",423,[[["self"]],["u32"]]],[11,"from_raw","","",424,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",424,[[["self"]],["u32"]]],[11,"destroy","","Destroy the xdg_surface",445,N],[11,"set_parent","","set the parent of this surface",445,N],[11,"set_title","","set surface title",445,N],[11,"set_app_id","","set application ID",445,N],[11,"show_window_menu","","show the window menu",445,N],[11,"_move","","start an interactive move",445,N],[11,"resize","","start an interactive resize",445,N],[11,"ack_configure","","ack a configure event",445,N],[11,"set_window_geometry","","set the new window geometry",445,N],[11,"set_maximized","","maximize the window",445,N],[11,"unset_maximized","","unmaximize the window",445,N],[11,"set_fullscreen","","set the window as fullscreen on a monitor",445,N],[11,"unset_fullscreen","","",445,N],[11,"set_minimized","","set the window as minimized",445,N],[11,"popup_done","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","popup interaction is done",430,[[["self"],["xdgpopup"]]]],[11,"destroy","","remove xdg_popup interface",446,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","destroy xdg_shell",435,[[["self"],["xdgshell"]]]],[11,"use_unstable_version","","enable use of this unstable version",435,[[["self"],["xdgshell"],["i32"]]]],[11,"get_xdg_surface","","create a shell surface from a surface",435,[[["self"],["xdgshell"],["newresource",["xdgsurface"]],["wlsurface"]]]],[11,"get_xdg_popup","","create a popup for a surface",435,[[["self"],["xdgshell"],["newresource",["xdgpopup"]],["wlsurface"],["wlsurface"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"pong","","respond to a ping event",435,[[["self"],["xdgshell"],["u32"]]]],[11,"from_raw","","",431,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",431,[[["self"]],["u32"]]],[11,"from_raw","","",432,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",432,[[["self"]],["u32"]]],[11,"ping","","check if the client is alive",447,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","Destroy the xdg_surface",440,[[["self"],["xdgsurface"]]]],[11,"set_parent","","set the parent of this surface",440,[[["self"],["xdgsurface"],["option",["xdgsurface"]]]]],[11,"set_title","","set surface title",440,[[["self"],["xdgsurface"],["string"]]]],[11,"set_app_id","","set application ID",440,[[["self"],["xdgsurface"],["string"]]]],[11,"show_window_menu","","show the window menu",440,[[["self"],["xdgsurface"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"_move","","start an interactive move",440,[[["self"],["xdgsurface"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",440,[[["self"],["xdgsurface"],["wlseat"],["u32"],["u32"]]]],[11,"ack_configure","","ack a configure event",440,[[["self"],["xdgsurface"],["u32"]]]],[11,"set_window_geometry","","set the new window geometry",440,[[["self"],["xdgsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_maximized","","maximize the window",440,[[["self"],["xdgsurface"]]]],[11,"unset_maximized","","unmaximize the window",440,[[["self"],["xdgsurface"]]]],[11,"set_fullscreen","","set the window as fullscreen on a monitor",440,[[["self"],["xdgsurface"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","",440,[[["self"],["xdgsurface"]]]],[11,"set_minimized","","set the window as minimized",440,[[["self"],["xdgsurface"]]]],[11,"from_raw","","",436,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",436,[[["self"]],["u32"]]],[11,"from_raw","","",437,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",437,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",448,N],[11,"close","","surface wants to be closed",448,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","remove xdg_popup interface",443,[[["self"],["xdgpopup"]]]],[11,"popup_done","","popup interaction is done",449,N],[0,"v6","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",450,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",450,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",450,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",450,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",450,N],[13,"InvalidPositioner","","the client provided an invalid positioner",450,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",451,N],[13,"CreatePositioner","","create a positioner object",451,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",451,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",451,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",451,N],[12,"surface","","",451,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",451,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",451,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",452,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",452,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"ping","","check if the client is alive",453,[[["self"],["zxdgshellv6"],["u32"]]]],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",454,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",455,N],[13,"SetSize","","set the size of the to-be positioned rectangle",455,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",455,N],[12,"height","","",455,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",455,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",455,N],[12,"y","","",455,N],[12,"width","","",455,N],[12,"height","","",455,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",455,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",455,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",455,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",455,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",455,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",455,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",455,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",455,N],[12,"y","","",455,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",456,N],[13,"AlreadyConstructed","","",456,N],[13,"UnconfiguredBuffer","","",456,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",457,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",457,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",457,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",457,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",457,N],[12,"parent","","",457,N],[12,"positioner","","",457,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",457,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",457,N],[12,"y","","",457,N],[12,"width","","",457,N],[12,"height","","",457,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",457,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",457,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",458,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",458,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",459,[[["self"],["zxdgsurfacev6"],["u32"]]]],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",460,N],[13,"Top","","",460,N],[13,"Bottom","","",460,N],[13,"Left","","",460,N],[13,"TopLeft","","",460,N],[13,"BottomLeft","","",460,N],[13,"Right","","",460,N],[13,"TopRight","","",460,N],[13,"BottomRight","","",460,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",461,N],[13,"Fullscreen","","the surface is fullscreen",461,N],[13,"Resizing","","the surface is being resized",461,N],[13,"Activated","","the surface is now activated",461,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",462,N],[13,"SetParent","","set the parent of this surface",462,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",462,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",462,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",462,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[12,"serial","","",462,N],[12,"x","","",462,N],[12,"y","","",462,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",462,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[12,"serial","","",462,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",462,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[12,"serial","","",462,N],[12,"edges","","",462,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",462,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[12,"height","","",462,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",462,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[12,"height","","",462,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",462,N],[13,"UnsetMaximized","","unmaximize the window",462,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",462,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",462,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",462,N],[13,"SetMinimized","","set the window as minimized",462,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",463,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",463,N],[12,"height","","",463,N],[12,"states","","",463,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",463,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",464,[[["self"],["zxdgtoplevelv6"],["i32"],["i32"],["vec",["u8"]]]]],[11,"close","","surface wants to be closed",464,[[["self"],["zxdgtoplevelv6"]]]],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",465,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",466,N],[13,"Grab","","make the popup take an explicit grab",466,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",466,N],[12,"serial","","",466,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",467,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",467,N],[12,"y","","",467,N],[12,"width","","",467,N],[12,"height","","",467,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",467,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","configure the popup surface",468,[[["self"],["zxdgpopupv6"],["i32"],["i32"],["i32"],["i32"]]]],[11,"popup_done","","popup interaction is done",468,[[["self"],["zxdgpopupv6"]]]],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",469,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",469,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",469,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",469,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",469,N],[13,"InvalidPositioner","","the client provided an invalid positioner",469,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",470,N],[13,"CreatePositioner","","create a positioner object",470,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",470,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","create a shell surface from a surface",470,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",470,N],[12,"surface","","",470,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","respond to a ping event",470,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",470,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",471,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Event","",471,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy xdg_shell",472,[[["self"],["zxdgshellv6"]]]],[11,"create_positioner","","create a positioner object",472,[[["self"],["zxdgshellv6"],["newresource",["zxdgpositionerv6"]]]]],[11,"get_xdg_surface","","create a shell surface from a surface",472,[[["self"],["zxdgshellv6"],["newresource",["zxdgsurfacev6"]],["wlsurface"]]]],[11,"pong","","respond to a ping event",472,[[["self"],["zxdgshellv6"],["u32"]]]],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",473,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",474,N],[13,"SetSize","","set the size of the to-be positioned rectangle",474,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",474,N],[12,"height","","",474,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the anchor rectangle within the parent surface",474,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",474,N],[12,"y","","",474,N],[12,"width","","",474,N],[12,"height","","",474,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set anchor rectangle anchor edges",474,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",474,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set child surface gravity",474,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",474,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the adjustment to be done when constrained",474,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",474,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set surface position offset",474,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",474,N],[12,"y","","",474,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_positioner object",475,[[["self"],["zxdgpositionerv6"]]]],[11,"set_size","","set the size of the to-be positioned rectangle",475,[[["self"],["zxdgpositionerv6"],["i32"],["i32"]]]],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",475,[[["self"],["zxdgpositionerv6"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_anchor","","set anchor rectangle anchor edges",475,[[["self"],["zxdgpositionerv6"],["anchor"]]]],[11,"set_gravity","","set child surface gravity",475,[[["self"],["zxdgpositionerv6"],["gravity"]]]],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",475,[[["self"],["zxdgpositionerv6"],["u32"]]]],[11,"set_offset","","set surface position offset",475,[[["self"],["zxdgpositionerv6"],["i32"],["i32"]]]],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",476,N],[13,"AlreadyConstructed","","",476,N],[13,"UnconfiguredBuffer","","",476,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",477,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",477,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",477,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","assign the xdg_popup surface role",477,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",477,N],[12,"parent","","",477,N],[12,"positioner","","",477,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","set the new window geometry",477,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",477,N],[12,"y","","",477,N],[12,"width","","",477,N],[12,"height","","",477,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","ack a configure event",477,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",477,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",478,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Event","",478,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_surface",479,[[["self"],["zxdgsurfacev6"]]]],[11,"get_toplevel","","assign the xdg_toplevel surface role",479,[[["self"],["zxdgsurfacev6"],["newresource",["zxdgtoplevelv6"]]]]],[11,"get_popup","","assign the xdg_popup surface role",479,[[["self"],["zxdgsurfacev6"],["newresource",["zxdgpopupv6"]],["zxdgsurfacev6"],["zxdgpositionerv6"]]]],[11,"set_window_geometry","","set the new window geometry",479,[[["self"],["zxdgsurfacev6"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ack_configure","","ack a configure event",479,[[["self"],["zxdgsurfacev6"],["u32"]]]],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",480,N],[13,"Top","","",480,N],[13,"Bottom","","",480,N],[13,"Left","","",480,N],[13,"TopLeft","","",480,N],[13,"BottomLeft","","",480,N],[13,"Right","","",480,N],[13,"TopRight","","",480,N],[13,"BottomRight","","",480,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",481,N],[13,"Fullscreen","","the surface is fullscreen",481,N],[13,"Resizing","","the surface is being resized",481,N],[13,"Activated","","the surface is now activated",481,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",482,N],[13,"SetParent","","set the parent of this surface",482,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set surface title",482,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set application ID",482,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","show the window menu",482,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[12,"serial","","",482,N],[12,"x","","",482,N],[12,"y","","",482,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive move",482,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[12,"serial","","",482,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive resize",482,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[12,"serial","","",482,N],[12,"edges","","",482,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the maximum size",482,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[12,"height","","",482,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the minimum size",482,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[12,"height","","",482,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","maximize the window",482,N],[13,"UnsetMaximized","","unmaximize the window",482,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",482,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",482,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",482,N],[13,"SetMinimized","","set the window as minimized",482,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",483,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Event","",483,N],[12,"height","","",483,N],[12,"states","","",483,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","surface wants to be closed",483,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_toplevel",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"set_parent","","set the parent of this surface",484,[[["self"],["zxdgtoplevelv6"],["option",["zxdgtoplevelv6"]]]]],[11,"set_title","","set surface title",484,[[["self"],["zxdgtoplevelv6"],["string"]]]],[11,"set_app_id","","set application ID",484,[[["self"],["zxdgtoplevelv6"],["string"]]]],[11,"show_window_menu","","show the window menu",484,[[["self"],["zxdgtoplevelv6"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"_move","","start an interactive move",484,[[["self"],["zxdgtoplevelv6"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",484,[[["self"],["zxdgtoplevelv6"],["wlseat"],["u32"],["u32"]]]],[11,"set_max_size","","set the maximum size",484,[[["self"],["zxdgtoplevelv6"],["i32"],["i32"]]]],[11,"set_min_size","","set the minimum size",484,[[["self"],["zxdgtoplevelv6"],["i32"],["i32"]]]],[11,"set_maximized","","maximize the window",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"unset_maximized","","unmaximize the window",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"set_fullscreen","","set the window as fullscreen on a monitor",484,[[["self"],["zxdgtoplevelv6"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"set_minimized","","set the window as minimized",484,[[["self"],["zxdgtoplevelv6"]]]],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",485,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",486,N],[13,"Grab","","make the popup take an explicit grab",486,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Request","",486,N],[12,"serial","","",486,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",487,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Event","",487,N],[12,"y","","",487,N],[12,"width","","",487,N],[12,"height","","",487,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","popup interaction is done",487,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","remove xdg_popup interface",488,[[["self"],["zxdgpopupv6"]]]],[11,"grab","","make the popup take an explicit grab",488,[[["self"],["zxdgpopupv6"],["wlseat"],["u32"]]]],[11,"ping","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","check if the client is alive",453,[[["self"],["zxdgshellv6"],["u32"]]]],[11,"from_raw","","",450,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",450,[[["self"]],["u32"]]],[11,"destroy","","destroy xdg_shell",489,N],[11,"create_positioner","","create a positioner object",489,[[["self"],["f"]],["result",["zxdgpositionerv6"]]]],[11,"get_xdg_surface","","create a shell surface from a surface",489,[[["self"],["wlsurface"],["f"]],["result",["zxdgsurfacev6"]]]],[11,"pong","","respond to a ping event",489,N],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",454,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",454,[[["self"]],["u32"]]],[18,"None","","the center of the anchor rectangle",490,N],[18,"Top","","the top edge of the anchor rectangle",490,N],[18,"Bottom","","the bottom edge of the anchor rectangle",490,N],[18,"Left","","the left edge of the anchor rectangle",490,N],[18,"Right","","the right edge of the anchor rectangle",490,N],[11,"empty","","Returns an empty set of flags.",490,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",490,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",490,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",490,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",490,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",490,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",490,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",490,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",490,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",490,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",490,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",490,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",490,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",490,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",490,[[["self"]],["u32"]]],[18,"None","","center over the anchor edge",491,N],[18,"Top","","position above the anchor edge",491,N],[18,"Bottom","","position below the anchor edge",491,N],[18,"Left","","position to the left of the anchor edge",491,N],[18,"Right","","position to the right of the anchor edge",491,N],[11,"empty","","Returns an empty set of flags.",491,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",491,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",491,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",491,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",491,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",491,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",491,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",491,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",491,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",491,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",491,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",491,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",491,[[["self"],["gravity"],["bool"]]]],[11,"from_raw","","",491,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",491,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",492,N],[18,"SlideX","","move along the x axis until unconstrained",492,N],[18,"SlideY","","move along the y axis until unconstrained",492,N],[18,"FlipX","","invert the anchor and gravity on the x axis",492,N],[18,"FlipY","","invert the anchor and gravity on the y axis",492,N],[18,"ResizeX","","horizontally resize the surface",492,N],[18,"ResizeY","","vertically resize the surface",492,N],[11,"empty","","Returns an empty set of flags.",492,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",492,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",492,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",492,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",492,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",492,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",492,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",492,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",492,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",492,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",492,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",492,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",492,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_positioner object",493,N],[11,"set_size","","set the size of the to-be positioned rectangle",493,N],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",493,N],[11,"set_anchor","","set anchor rectangle anchor edges",493,N],[11,"set_gravity","","set child surface gravity",493,N],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",493,N],[11,"set_offset","","set surface position offset",493,N],[11,"configure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","suggest a surface change",459,[[["self"],["zxdgsurfacev6"],["u32"]]]],[11,"from_raw","","",456,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",456,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_surface",494,N],[11,"get_toplevel","","assign the xdg_toplevel surface role",494,[[["self"],["f"]],["result",["zxdgtoplevelv6"]]]],[11,"get_popup","","assign the xdg_popup surface role",494,[[["self"],["zxdgsurfacev6"],["zxdgpositionerv6"],["f"]],["result",["zxdgpopupv6"]]]],[11,"set_window_geometry","","set the new window geometry",494,N],[11,"ack_configure","","ack a configure event",494,N],[11,"configure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","suggest a surface change",464,[[["self"],["zxdgtoplevelv6"],["i32"],["i32"],["vec",["u8"]]]]],[11,"close","","surface wants to be closed",464,[[["self"],["zxdgtoplevelv6"]]]],[11,"from_raw","","",460,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",460,[[["self"]],["u32"]]],[11,"from_raw","","",461,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",461,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_toplevel",495,N],[11,"set_parent","","set the parent of this surface",495,N],[11,"set_title","","set surface title",495,N],[11,"set_app_id","","set application ID",495,N],[11,"show_window_menu","","show the window menu",495,N],[11,"_move","","start an interactive move",495,N],[11,"resize","","start an interactive resize",495,N],[11,"set_max_size","","set the maximum size",495,N],[11,"set_min_size","","set the minimum size",495,N],[11,"set_maximized","","maximize the window",495,N],[11,"unset_maximized","","unmaximize the window",495,N],[11,"set_fullscreen","","set the window as fullscreen on a monitor",495,N],[11,"unset_fullscreen","","",495,N],[11,"set_minimized","","set the window as minimized",495,N],[11,"configure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","configure the popup surface",468,[[["self"],["zxdgpopupv6"],["i32"],["i32"],["i32"],["i32"]]]],[11,"popup_done","","popup interaction is done",468,[[["self"],["zxdgpopupv6"]]]],[11,"from_raw","","",465,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",465,[[["self"]],["u32"]]],[11,"destroy","","remove xdg_popup interface",496,N],[11,"grab","","make the popup take an explicit grab",496,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","destroy xdg_shell",472,[[["self"],["zxdgshellv6"]]]],[11,"create_positioner","","create a positioner object",472,[[["self"],["zxdgshellv6"],["newresource",["zxdgpositionerv6"]]]]],[11,"get_xdg_surface","","create a shell surface from a surface",472,[[["self"],["zxdgshellv6"],["newresource",["zxdgsurfacev6"]],["wlsurface"]]]],[11,"pong","","respond to a ping event",472,[[["self"],["zxdgshellv6"],["u32"]]]],[11,"from_raw","","",469,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",469,[[["self"]],["u32"]]],[11,"ping","","check if the client is alive",497,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","destroy the xdg_positioner object",475,[[["self"],["zxdgpositionerv6"]]]],[11,"set_size","","set the size of the to-be positioned rectangle",475,[[["self"],["zxdgpositionerv6"],["i32"],["i32"]]]],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",475,[[["self"],["zxdgpositionerv6"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_anchor","","set anchor rectangle anchor edges",475,[[["self"],["zxdgpositionerv6"],["anchor"]]]],[11,"set_gravity","","set child surface gravity",475,[[["self"],["zxdgpositionerv6"],["gravity"]]]],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",475,[[["self"],["zxdgpositionerv6"],["u32"]]]],[11,"set_offset","","set surface position offset",475,[[["self"],["zxdgpositionerv6"],["i32"],["i32"]]]],[11,"from_raw","","",473,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",473,[[["self"]],["u32"]]],[18,"None","","the center of the anchor rectangle",498,N],[18,"Top","","the top edge of the anchor rectangle",498,N],[18,"Bottom","","the bottom edge of the anchor rectangle",498,N],[18,"Left","","the left edge of the anchor rectangle",498,N],[18,"Right","","the right edge of the anchor rectangle",498,N],[11,"empty","","Returns an empty set of flags.",498,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",498,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",498,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",498,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",498,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",498,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",498,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",498,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",498,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",498,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",498,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",498,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",498,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",498,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",498,[[["self"]],["u32"]]],[18,"None","","center over the anchor edge",499,N],[18,"Top","","position above the anchor edge",499,N],[18,"Bottom","","position below the anchor edge",499,N],[18,"Left","","position to the left of the anchor edge",499,N],[18,"Right","","position to the right of the anchor edge",499,N],[11,"empty","","Returns an empty set of flags.",499,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",499,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",499,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",499,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",499,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",499,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",499,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",499,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",499,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",499,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",499,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",499,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",499,[[["self"],["gravity"],["bool"]]]],[11,"from_raw","","",499,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",499,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",500,N],[18,"SlideX","","move along the x axis until unconstrained",500,N],[18,"SlideY","","move along the y axis until unconstrained",500,N],[18,"FlipX","","invert the anchor and gravity on the x axis",500,N],[18,"FlipY","","invert the anchor and gravity on the y axis",500,N],[18,"ResizeX","","horizontally resize the surface",500,N],[18,"ResizeY","","vertically resize the surface",500,N],[11,"empty","","Returns an empty set of flags.",500,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",500,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",500,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",500,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",500,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",500,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",500,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",500,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",500,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",500,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",500,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",500,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",500,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","destroy the xdg_surface",479,[[["self"],["zxdgsurfacev6"]]]],[11,"get_toplevel","","assign the xdg_toplevel surface role",479,[[["self"],["zxdgsurfacev6"],["newresource",["zxdgtoplevelv6"]]]]],[11,"get_popup","","assign the xdg_popup surface role",479,[[["self"],["zxdgsurfacev6"],["newresource",["zxdgpopupv6"]],["zxdgsurfacev6"],["zxdgpositionerv6"]]]],[11,"set_window_geometry","","set the new window geometry",479,[[["self"],["zxdgsurfacev6"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ack_configure","","ack a configure event",479,[[["self"],["zxdgsurfacev6"],["u32"]]]],[11,"from_raw","","",476,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",476,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",501,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","destroy the xdg_toplevel",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"set_parent","","set the parent of this surface",484,[[["self"],["zxdgtoplevelv6"],["option",["zxdgtoplevelv6"]]]]],[11,"set_title","","set surface title",484,[[["self"],["zxdgtoplevelv6"],["string"]]]],[11,"set_app_id","","set application ID",484,[[["self"],["zxdgtoplevelv6"],["string"]]]],[11,"show_window_menu","","show the window menu",484,[[["self"],["zxdgtoplevelv6"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"_move","","start an interactive move",484,[[["self"],["zxdgtoplevelv6"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",484,[[["self"],["zxdgtoplevelv6"],["wlseat"],["u32"],["u32"]]]],[11,"set_max_size","","set the maximum size",484,[[["self"],["zxdgtoplevelv6"],["i32"],["i32"]]]],[11,"set_min_size","","set the minimum size",484,[[["self"],["zxdgtoplevelv6"],["i32"],["i32"]]]],[11,"set_maximized","","maximize the window",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"unset_maximized","","unmaximize the window",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"set_fullscreen","","set the window as fullscreen on a monitor",484,[[["self"],["zxdgtoplevelv6"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"set_minimized","","set the window as minimized",484,[[["self"],["zxdgtoplevelv6"]]]],[11,"from_raw","","",480,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",480,[[["self"]],["u32"]]],[11,"from_raw","","",481,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",481,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",502,N],[11,"close","","surface wants to be closed",502,N],[11,"destroy","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","remove xdg_popup interface",488,[[["self"],["zxdgpopupv6"]]]],[11,"grab","","make the popup take an explicit grab",488,[[["self"],["zxdgpopupv6"],["wlseat"],["u32"]]]],[11,"from_raw","","",485,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",485,[[["self"]],["u32"]]],[11,"configure","","configure the popup surface",503,N],[11,"popup_done","","popup interaction is done",503,N],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",N,N],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",N,N],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",504,N],[13,"GrabKeyboard","","grab the keyboard to a surface",504,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",504,N],[12,"surface","","",504,N],[12,"seat","","",504,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_KEYBOARD_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",505,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",506,N],[13,"GrabKeyboard","","grab the keyboard to a surface",506,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1::Request","",506,N],[12,"surface","","",506,N],[12,"seat","","",506,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_KEYBOARD_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the keyboard grab manager",507,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"]]]],[11,"grab_keyboard","","grab the keyboard to a surface",507,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"],["newresource",["zwpxwaylandkeyboardgrabv1"]],["wlsurface"],["wlseat"]]]],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",508,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the grabbed keyboard object",509,[[["self"],["zwpxwaylandkeyboardgrabv1"]]]],[11,"destroy","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","destroy the keyboard grab manager",510,N],[11,"grab_keyboard","","grab the keyboard to a surface",510,[[["self"],["wlsurface"],["wlseat"],["f"]],["result",["zwpxwaylandkeyboardgrabv1"]]]],[11,"destroy","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","destroy the grabbed keyboard object",511,N],[11,"destroy","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","destroy the keyboard grab manager",507,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"]]]],[11,"grab_keyboard","","grab the keyboard to a surface",507,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"],["newresource",["zwpxwaylandkeyboardgrabv1"]],["wlsurface"],["wlseat"]]]],[11,"destroy","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","destroy the grabbed keyboard object",509,[[["self"],["zwpxwaylandkeyboardgrabv1"]]]],[0,"misc","wayland_protocols","Misc protocols",N,N],[0,"gtk_primary_selection","wayland_protocols::misc","Gtk primary selection protocol",N,N],[0,"client","wayland_protocols::misc::gtk_primary_selection","Client-side API of this protocol",N,N],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::client","X primary selection emulation",N,N],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",N,N],[4,"Request","","",N,N],[13,"CreateSource","","create a new primary selection source",512,N],[12,"id","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager::Request","",512,N],[13,"GetDevice","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","create a new primary selection device",512,N],[12,"id","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager::Request","",512,N],[12,"seat","","",512,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","destroy the primary selection device manager",512,N],[4,"Event","","",N,N],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::client","",N,N],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",N,N],[4,"Request","","",N,N],[13,"SetSelection","","set the primary selection",513,N],[12,"source","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Request","",513,N],[12,"serial","","",513,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","destroy the primary selection device",513,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wp_primary_selection_offer",514,N],[12,"offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event","",514,N],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","advertise a new primary selection",514,N],[12,"id","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event","",514,N],[17,"REQ_SET_SELECTION_SINCE","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"data_offer","","introduce a new wp_primary_selection_offer",515,[[["self"],["gtkprimaryselectiondevice"],["newproxy",["gtkprimaryselectionoffer"]]]]],[11,"selection","","advertise a new primary selection",515,[[["self"],["gtkprimaryselectiondevice"],["option",["gtkprimaryselectionoffer"]]]]],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::client","offer to transfer primary selection contents",N,N],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",516,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Request","",516,N],[12,"fd","","",516,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","destroy the primary selection offer",516,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered mime type",517,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Event","",517,N],[17,"REQ_RECEIVE_SINCE","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"offer","","advertise offered mime type",518,[[["self"],["gtkprimaryselectionoffer"],["string"]]]],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::client","offer to replace the contents of the primary selection",N,N],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",N,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",519,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Request","",519,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","destroy the primary selection source",519,N],[4,"Event","","",N,N],[13,"Send","","send the primary selection contents",520,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Event","",520,N],[12,"fd","","",520,N],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","request for primary selection contents was canceled",520,N],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"send","","send the primary selection contents",521,[[["self"],["gtkprimaryselectionsource"],["string"],["rawfd"]]]],[11,"cancelled","","request for primary selection contents was canceled",521,[[["self"],["gtkprimaryselectionsource"]]]],[0,"server","wayland_protocols::misc::gtk_primary_selection","Server-side API of this protocol",N,N],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::server","X primary selection emulation",N,N],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",N,N],[4,"Request","","",N,N],[13,"CreateSource","","create a new primary selection source",522,N],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",522,N],[13,"GetDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","create a new primary selection device",522,N],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",522,N],[12,"seat","","",522,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","destroy the primary selection device manager",522,N],[4,"Event","","",N,N],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_source","","create a new primary selection source",523,[[["self"],["gtkprimaryselectiondevicemanager"],["newresource",["gtkprimaryselectionsource"]]]]],[11,"get_device","","create a new primary selection device",523,[[["self"],["gtkprimaryselectiondevicemanager"],["newresource",["gtkprimaryselectiondevice"]],["wlseat"]]]],[11,"destroy","","destroy the primary selection device manager",523,[[["self"],["gtkprimaryselectiondevicemanager"]]]],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::server","",N,N],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",N,N],[4,"Request","","",N,N],[13,"SetSelection","","set the primary selection",524,N],[12,"source","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Request","",524,N],[12,"serial","","",524,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","destroy the primary selection device",524,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wp_primary_selection_offer",525,N],[12,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",525,N],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","advertise a new primary selection",525,N],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",525,N],[17,"REQ_SET_SELECTION_SINCE","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_selection","","set the primary selection",526,[[["self"],["gtkprimaryselectiondevice"],["option",["gtkprimaryselectionsource"]],["u32"]]]],[11,"destroy","","destroy the primary selection device",526,[[["self"],["gtkprimaryselectiondevice"]]]],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::server","offer to transfer primary selection contents",N,N],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",527,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Request","",527,N],[12,"fd","","",527,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","destroy the primary selection offer",527,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered mime type",528,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Event","",528,N],[17,"REQ_RECEIVE_SINCE","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"receive","","request that the data is transferred",529,[[["self"],["gtkprimaryselectionoffer"],["string"],["rawfd"]]]],[11,"destroy","","destroy the primary selection offer",529,[[["self"],["gtkprimaryselectionoffer"]]]],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::server","offer to replace the contents of the primary selection",N,N],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",N,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",530,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Request","",530,N],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","destroy the primary selection source",530,N],[4,"Event","","",N,N],[13,"Send","","send the primary selection contents",531,N],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Event","",531,N],[12,"fd","","",531,N],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","request for primary selection contents was canceled",531,N],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"offer","","add an offered mime type",532,[[["self"],["gtkprimaryselectionsource"],["string"]]]],[11,"destroy","","destroy the primary selection source",532,[[["self"],["gtkprimaryselectionsource"]]]],[11,"create_source","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","create a new primary selection source",533,[[["self"],["f"]],["result",["gtkprimaryselectionsource"]]]],[11,"get_device","","create a new primary selection device",533,[[["self"],["wlseat"],["f"]],["result",["gtkprimaryselectiondevice"]]]],[11,"destroy","","destroy the primary selection device manager",533,N],[11,"data_offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","introduce a new wp_primary_selection_offer",515,[[["self"],["gtkprimaryselectiondevice"],["newproxy",["gtkprimaryselectionoffer"]]]]],[11,"selection","","advertise a new primary selection",515,[[["self"],["gtkprimaryselectiondevice"],["option",["gtkprimaryselectionoffer"]]]]],[11,"set_selection","","set the primary selection",534,N],[11,"destroy","","destroy the primary selection device",534,N],[11,"offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","advertise offered mime type",518,[[["self"],["gtkprimaryselectionoffer"],["string"]]]],[11,"receive","","request that the data is transferred",535,N],[11,"destroy","","destroy the primary selection offer",535,N],[11,"send","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","send the primary selection contents",521,[[["self"],["gtkprimaryselectionsource"],["string"],["rawfd"]]]],[11,"cancelled","","request for primary selection contents was canceled",521,[[["self"],["gtkprimaryselectionsource"]]]],[11,"offer","","add an offered mime type",536,N],[11,"destroy","","destroy the primary selection source",536,N],[11,"create_source","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","create a new primary selection source",523,[[["self"],["gtkprimaryselectiondevicemanager"],["newresource",["gtkprimaryselectionsource"]]]]],[11,"get_device","","create a new primary selection device",523,[[["self"],["gtkprimaryselectiondevicemanager"],["newresource",["gtkprimaryselectiondevice"]],["wlseat"]]]],[11,"destroy","","destroy the primary selection device manager",523,[[["self"],["gtkprimaryselectiondevicemanager"]]]],[11,"set_selection","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","set the primary selection",526,[[["self"],["gtkprimaryselectiondevice"],["option",["gtkprimaryselectionsource"]],["u32"]]]],[11,"destroy","","destroy the primary selection device",526,[[["self"],["gtkprimaryselectiondevice"]]]],[11,"data_offer","","introduce a new wp_primary_selection_offer",537,N],[11,"selection","","advertise a new primary selection",537,N],[11,"receive","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","request that the data is transferred",529,[[["self"],["gtkprimaryselectionoffer"],["string"],["rawfd"]]]],[11,"destroy","","destroy the primary selection offer",529,[[["self"],["gtkprimaryselectionoffer"]]]],[11,"offer","","advertise offered mime type",538,N],[11,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","add an offered mime type",532,[[["self"],["gtkprimaryselectionsource"],["string"]]]],[11,"destroy","","destroy the primary selection source",532,[[["self"],["gtkprimaryselectionsource"]]]],[11,"send","","send the primary selection contents",539,N],[11,"cancelled","","request for primary selection contents was canceled",539,N],[0,"wlr","wayland_protocols","wlr-procotols extension family",N,N],[0,"unstable","wayland_protocols::wlr","Unstable protocols from wlr-protocols",N,N],[0,"data_control","wayland_protocols::wlr::unstable","Control data devices, particularly the clipboard.",N,N],[0,"v1","wayland_protocols::wlr::unstable::data_control","",N,N],[0,"client","wayland_protocols::wlr::unstable::data_control::v1","Client-side API of this protocol",N,N],[0,"zwlr_data_control_manager_v1","wayland_protocols::wlr::unstable::data_control::v1::client","manager to control data devices",N,N],[3,"ZwlrDataControlManagerV1","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",540,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1::Request","",540,N],[13,"GetDataDevice","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","get a data device for a seat",540,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1::Request","",540,N],[12,"seat","","",540,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","destroy the manager",540,N],[4,"Event","","",N,N],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwlr_data_control_device_v1","wayland_protocols::wlr::unstable::data_control::v1::client","manage a data device for a seat",N,N],[3,"ZwlrDataControlDeviceV1","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",N,N],[4,"Error","","",N,N],[13,"UsedSource","","source given to set_selection or set_primary_selection was…",541,N],[4,"Request","","",N,N],[13,"SetSelection","","copy data to the selection",542,N],[12,"source","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Request","",542,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","destroy this data device",542,N],[13,"SetPrimarySelection","","copy data to the primary selection",542,N],[12,"source","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Request","",542,N],[4,"Event","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",N,N],[13,"DataOffer","","introduce a new wlr_data_control_offer",543,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Event","",543,N],[13,"Selection","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","advertise new selection",543,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Event","",543,N],[13,"Finished","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","this data control is no longer valid",543,N],[13,"PrimarySelection","","advertise new primary selection",543,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Event","",543,N],[17,"REQ_SET_SELECTION_SINCE","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PRIMARY_SELECTION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FINISHED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRIMARY_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"data_offer","","introduce a new wlr_data_control_offer",544,[[["self"],["zwlrdatacontroldevicev1"],["newproxy",["zwlrdatacontrolofferv1"]]]]],[11,"selection","","advertise new selection",544,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolofferv1"]]]]],[11,"finished","","this data control is no longer valid",544,[[["self"],["zwlrdatacontroldevicev1"]]]],[11,"primary_selection","","advertise new primary selection",544,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolofferv1"]]]]],[0,"zwlr_data_control_source_v1","wayland_protocols::wlr::unstable::data_control::v1::client","offer to transfer data",N,N],[3,"ZwlrDataControlSourceV1","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidOffer","","offer sent after wlr_data_control_device.set_selection",545,N],[4,"Request","","",N,N],[13,"Offer","","add an offered MIME type",546,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1::Request","",546,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","destroy this source",546,N],[4,"Event","","",N,N],[13,"Send","","send the data",547,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1::Event","",547,N],[12,"fd","","",547,N],[13,"Cancelled","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","selection was cancelled",547,N],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"send","","send the data",548,[[["self"],["zwlrdatacontrolsourcev1"],["string"],["rawfd"]]]],[11,"cancelled","","selection was cancelled",548,[[["self"],["zwlrdatacontrolsourcev1"]]]],[0,"zwlr_data_control_offer_v1","wayland_protocols::wlr::unstable::data_control::v1::client","offer to transfer data",N,N],[3,"ZwlrDataControlOfferV1","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",549,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1::Request","",549,N],[12,"fd","","",549,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","destroy this offer",549,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered MIME type",550,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1::Event","",550,N],[17,"REQ_RECEIVE_SINCE","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"offer","","advertise offered MIME type",551,[[["self"],["zwlrdatacontrolofferv1"],["string"]]]],[0,"server","wayland_protocols::wlr::unstable::data_control::v1","Server-side API of this protocol",N,N],[0,"zwlr_data_control_manager_v1","wayland_protocols::wlr::unstable::data_control::v1::server","manager to control data devices",N,N],[3,"ZwlrDataControlManagerV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",552,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1::Request","",552,N],[13,"GetDataDevice","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","get a data device for a seat",552,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1::Request","",552,N],[12,"seat","","",552,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","destroy the manager",552,N],[4,"Event","","",N,N],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_data_source","","create a new data source",553,[[["self"],["zwlrdatacontrolmanagerv1"],["newresource",["zwlrdatacontrolsourcev1"]]]]],[11,"get_data_device","","get a data device for a seat",553,[[["self"],["zwlrdatacontrolmanagerv1"],["newresource",["zwlrdatacontroldevicev1"]],["wlseat"]]]],[11,"destroy","","destroy the manager",553,[[["self"],["zwlrdatacontrolmanagerv1"]]]],[0,"zwlr_data_control_device_v1","wayland_protocols::wlr::unstable::data_control::v1::server","manage a data device for a seat",N,N],[3,"ZwlrDataControlDeviceV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",N,N],[4,"Error","","",N,N],[13,"UsedSource","","source given to set_selection or set_primary_selection was…",554,N],[4,"Request","","",N,N],[13,"SetSelection","","copy data to the selection",555,N],[12,"source","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Request","",555,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","destroy this data device",555,N],[13,"SetPrimarySelection","","copy data to the primary selection",555,N],[12,"source","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Request","",555,N],[4,"Event","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",N,N],[13,"DataOffer","","introduce a new wlr_data_control_offer",556,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Event","",556,N],[13,"Selection","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","advertise new selection",556,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Event","",556,N],[13,"Finished","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","this data control is no longer valid",556,N],[13,"PrimarySelection","","advertise new primary selection",556,N],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Event","",556,N],[17,"REQ_SET_SELECTION_SINCE","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PRIMARY_SELECTION_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FINISHED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRIMARY_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_selection","","copy data to the selection",557,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolsourcev1"]]]]],[11,"destroy","","destroy this data device",557,[[["self"],["zwlrdatacontroldevicev1"]]]],[11,"set_primary_selection","","copy data to the primary selection",557,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolsourcev1"]]]]],[0,"zwlr_data_control_source_v1","wayland_protocols::wlr::unstable::data_control::v1::server","offer to transfer data",N,N],[3,"ZwlrDataControlSourceV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidOffer","","offer sent after wlr_data_control_device.set_selection",558,N],[4,"Request","","",N,N],[13,"Offer","","add an offered MIME type",559,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1::Request","",559,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","destroy this source",559,N],[4,"Event","","",N,N],[13,"Send","","send the data",560,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1::Event","",560,N],[12,"fd","","",560,N],[13,"Cancelled","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","selection was cancelled",560,N],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"offer","","add an offered MIME type",561,[[["self"],["zwlrdatacontrolsourcev1"],["string"]]]],[11,"destroy","","destroy this source",561,[[["self"],["zwlrdatacontrolsourcev1"]]]],[0,"zwlr_data_control_offer_v1","wayland_protocols::wlr::unstable::data_control::v1::server","offer to transfer data",N,N],[3,"ZwlrDataControlOfferV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",562,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1::Request","",562,N],[12,"fd","","",562,N],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","destroy this offer",562,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered MIME type",563,N],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1::Event","",563,N],[17,"REQ_RECEIVE_SINCE","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"receive","","request that the data is transferred",564,[[["self"],["zwlrdatacontrolofferv1"],["string"],["rawfd"]]]],[11,"destroy","","destroy this offer",564,[[["self"],["zwlrdatacontrolofferv1"]]]],[11,"create_data_source","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","create a new data source",565,[[["self"],["f"]],["result",["zwlrdatacontrolsourcev1"]]]],[11,"get_data_device","","get a data device for a seat",565,[[["self"],["wlseat"],["f"]],["result",["zwlrdatacontroldevicev1"]]]],[11,"destroy","","destroy the manager",565,N],[11,"data_offer","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","introduce a new wlr_data_control_offer",544,[[["self"],["zwlrdatacontroldevicev1"],["newproxy",["zwlrdatacontrolofferv1"]]]]],[11,"selection","","advertise new selection",544,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolofferv1"]]]]],[11,"finished","","this data control is no longer valid",544,[[["self"],["zwlrdatacontroldevicev1"]]]],[11,"primary_selection","","advertise new primary selection",544,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolofferv1"]]]]],[11,"from_raw","","",541,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",541,[[["self"]],["u32"]]],[11,"set_selection","","copy data to the selection",566,N],[11,"destroy","","destroy this data device",566,N],[11,"set_primary_selection","","copy data to the primary selection",566,N],[11,"send","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","send the data",548,[[["self"],["zwlrdatacontrolsourcev1"],["string"],["rawfd"]]]],[11,"cancelled","","selection was cancelled",548,[[["self"],["zwlrdatacontrolsourcev1"]]]],[11,"from_raw","","",545,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",545,[[["self"]],["u32"]]],[11,"offer","","add an offered MIME type",567,N],[11,"destroy","","destroy this source",567,N],[11,"offer","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","advertise offered MIME type",551,[[["self"],["zwlrdatacontrolofferv1"],["string"]]]],[11,"receive","","request that the data is transferred",568,N],[11,"destroy","","destroy this offer",568,N],[11,"create_data_source","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","create a new data source",553,[[["self"],["zwlrdatacontrolmanagerv1"],["newresource",["zwlrdatacontrolsourcev1"]]]]],[11,"get_data_device","","get a data device for a seat",553,[[["self"],["zwlrdatacontrolmanagerv1"],["newresource",["zwlrdatacontroldevicev1"]],["wlseat"]]]],[11,"destroy","","destroy the manager",553,[[["self"],["zwlrdatacontrolmanagerv1"]]]],[11,"set_selection","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","copy data to the selection",557,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolsourcev1"]]]]],[11,"destroy","","destroy this data device",557,[[["self"],["zwlrdatacontroldevicev1"]]]],[11,"set_primary_selection","","copy data to the primary selection",557,[[["self"],["zwlrdatacontroldevicev1"],["option",["zwlrdatacontrolsourcev1"]]]]],[11,"from_raw","","",554,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",554,[[["self"]],["u32"]]],[11,"data_offer","","introduce a new wlr_data_control_offer",569,N],[11,"selection","","advertise new selection",569,N],[11,"finished","","this data control is no longer valid",569,N],[11,"primary_selection","","advertise new primary selection",569,N],[11,"offer","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","add an offered MIME type",561,[[["self"],["zwlrdatacontrolsourcev1"],["string"]]]],[11,"destroy","","destroy this source",561,[[["self"],["zwlrdatacontrolsourcev1"]]]],[11,"from_raw","","",558,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",558,[[["self"]],["u32"]]],[11,"send","","send the data",570,N],[11,"cancelled","","selection was cancelled",570,N],[11,"receive","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","request that the data is transferred",564,[[["self"],["zwlrdatacontrolofferv1"],["string"],["rawfd"]]]],[11,"destroy","","destroy this offer",564,[[["self"],["zwlrdatacontrolofferv1"]]]],[11,"offer","","advertise offered MIME type",571,N],[0,"export_dmabuf","wayland_protocols::wlr::unstable","A protocol for low overhead screen content capturing",N,N],[0,"v1","wayland_protocols::wlr::unstable::export_dmabuf","",N,N],[0,"client","wayland_protocols::wlr::unstable::export_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client","manager to inform clients and begin capturing",N,N],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture a frame from an output",572,N],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request","",572,N],[12,"overlay_cursor","","",572,N],[12,"output","","",572,N],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","destroy the manager",572,N],[4,"Event","","",N,N],[17,"REQ_CAPTURE_OUTPUT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client","a DMA-BUF frame",N,N],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",N,N],[4,"Flags","","frame flags",N,N],[13,"Transient","","clients should copy frame before processing",573,N],[4,"CancelReason","","cancel reason",N,N],[13,"Temporary","","temporary error, source will produce more frames",574,N],[13,"Permanent","","fatal error, source will not produce frames",574,N],[13,"Resizing","","temporary error, source will produce more frames",574,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",575,N],[4,"Event","","",N,N],[13,"Frame","","a frame description",576,N],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",576,N],[12,"height","","",576,N],[12,"offset_x","","",576,N],[12,"offset_y","","",576,N],[12,"buffer_flags","","",576,N],[12,"flags","","",576,N],[12,"format","","",576,N],[12,"mod_high","","",576,N],[12,"mod_low","","",576,N],[12,"num_objects","","",576,N],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","an object description",576,N],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",576,N],[12,"fd","","",576,N],[12,"size","","",576,N],[12,"offset","","",576,N],[12,"stride","","",576,N],[12,"plane_index","","",576,N],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",576,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",576,N],[12,"tv_sec_lo","","",576,N],[12,"tv_nsec","","",576,N],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",576,N],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",576,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","The minimal object version supporting this request",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_OBJECT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_READY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"frame","","a frame description",577,[[["self"],["zwlrexportdmabufframev1"],["u32"],["u32"],["u32"],["u32"],["u32"],["flags"],["u32"],["u32"],["u32"],["u32"]]]],[11,"object","","an object description",577,[[["self"],["zwlrexportdmabufframev1"],["u32"],["rawfd"],["u32"],["u32"],["u32"],["u32"]]]],[11,"ready","","indicates frame is available for reading",577,[[["self"],["zwlrexportdmabufframev1"],["u32"],["u32"],["u32"]]]],[11,"cancel","","indicates the frame is no longer valid",577,[[["self"],["zwlrexportdmabufframev1"],["cancelreason"]]]],[0,"server","wayland_protocols::wlr::unstable::export_dmabuf::v1","Server-side API of this protocol",N,N],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","manager to inform clients and begin capturing",N,N],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture a frame from an output",578,N],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1::Request","",578,N],[12,"overlay_cursor","","",578,N],[12,"output","","",578,N],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","destroy the manager",578,N],[4,"Event","","",N,N],[17,"REQ_CAPTURE_OUTPUT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"capture_output","","capture a frame from an output",579,[[["self"],["zwlrexportdmabufmanagerv1"],["newresource",["zwlrexportdmabufframev1"]],["i32"],["wloutput"]]]],[11,"destroy","","destroy the manager",579,[[["self"],["zwlrexportdmabufmanagerv1"]]]],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","a DMA-BUF frame",N,N],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",N,N],[4,"Flags","","frame flags",N,N],[13,"Transient","","clients should copy frame before processing",580,N],[4,"CancelReason","","cancel reason",N,N],[13,"Temporary","","temporary error, source will produce more frames",581,N],[13,"Permanent","","fatal error, source will not produce frames",581,N],[13,"Resizing","","temporary error, source will produce more frames",581,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",582,N],[4,"Event","","",N,N],[13,"Frame","","a frame description",583,N],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",583,N],[12,"height","","",583,N],[12,"offset_x","","",583,N],[12,"offset_y","","",583,N],[12,"buffer_flags","","",583,N],[12,"flags","","",583,N],[12,"format","","",583,N],[12,"mod_high","","",583,N],[12,"mod_low","","",583,N],[12,"num_objects","","",583,N],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","an object description",583,N],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",583,N],[12,"fd","","",583,N],[12,"size","","",583,N],[12,"offset","","",583,N],[12,"stride","","",583,N],[12,"plane_index","","",583,N],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",583,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",583,N],[12,"tv_sec_lo","","",583,N],[12,"tv_nsec","","",583,N],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",583,N],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",583,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","The minimal object version supporting this request",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_OBJECT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_READY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","delete this object, used or not",584,[[["self"],["zwlrexportdmabufframev1"]]]],[11,"capture_output","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","capture a frame from an output",585,[[["self"],["i32"],["wloutput"],["f"]],["result",["zwlrexportdmabufframev1"]]]],[11,"destroy","","destroy the manager",585,N],[11,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","a frame description",577,[[["self"],["zwlrexportdmabufframev1"],["u32"],["u32"],["u32"],["u32"],["u32"],["flags"],["u32"],["u32"],["u32"],["u32"]]]],[11,"object","","an object description",577,[[["self"],["zwlrexportdmabufframev1"],["u32"],["rawfd"],["u32"],["u32"],["u32"],["u32"]]]],[11,"ready","","indicates frame is available for reading",577,[[["self"],["zwlrexportdmabufframev1"],["u32"],["u32"],["u32"]]]],[11,"cancel","","indicates the frame is no longer valid",577,[[["self"],["zwlrexportdmabufframev1"],["cancelreason"]]]],[11,"from_raw","","",573,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",573,[[["self"]],["u32"]]],[11,"from_raw","","",574,[[["u32"]],["option",["cancelreason"]]]],[11,"to_raw","","",574,[[["self"]],["u32"]]],[11,"destroy","","delete this object, used or not",586,N],[11,"capture_output","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","capture a frame from an output",579,[[["self"],["zwlrexportdmabufmanagerv1"],["newresource",["zwlrexportdmabufframev1"]],["i32"],["wloutput"]]]],[11,"destroy","","destroy the manager",579,[[["self"],["zwlrexportdmabufmanagerv1"]]]],[11,"destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","delete this object, used or not",584,[[["self"],["zwlrexportdmabufframev1"]]]],[11,"from_raw","","",580,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",580,[[["self"]],["u32"]]],[11,"from_raw","","",581,[[["u32"]],["option",["cancelreason"]]]],[11,"to_raw","","",581,[[["self"]],["u32"]]],[11,"frame","","a frame description",587,N],[11,"object","","an object description",587,N],[11,"ready","","indicates frame is available for reading",587,N],[11,"cancel","","indicates the frame is no longer valid",587,N],[0,"foreign_toplevel","wayland_protocols::wlr::unstable","List and control opened apps",N,N],[0,"v1","wayland_protocols::wlr::unstable::foreign_toplevel","",N,N],[0,"client","wayland_protocols::wlr::unstable::foreign_toplevel::v1","Client-side API of this protocol",N,N],[0,"zwlr_foreign_toplevel_manager_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client","list and control opened apps",N,N],[3,"ZwlrForeignToplevelManagerV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Stop","","stop sending events",588,N],[4,"Event","","",N,N],[13,"Toplevel","","a toplevel has been created",589,N],[12,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1::Event","",589,N],[13,"Finished","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","the compositor has finished with the toplevel manager",589,N],[17,"REQ_STOP_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TOPLEVEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FINISHED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"toplevel","","a toplevel has been created",590,[[["self"],["zwlrforeigntoplevelmanagerv1"],["newproxy",["zwlrforeigntoplevelhandlev1"]]]]],[11,"finished","","the compositor has finished with the toplevel manager",590,[[["self"],["zwlrforeigntoplevelmanagerv1"]]]],[0,"zwlr_foreign_toplevel_handle_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client","an opened toplevel",N,N],[3,"ZwlrForeignToplevelHandleV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",N,N],[4,"State","","types of states on the toplevel",N,N],[13,"Maximized","","the toplevel is maximized",591,N],[13,"Minimized","","the toplevel is minimized",591,N],[13,"Activated","","the toplevel is active",591,N],[4,"Error","","",N,N],[13,"InvalidRectangle","","the provided rectangle is invalid",592,N],[4,"Request","","",N,N],[13,"SetMaximized","","requests that the toplevel be maximized",593,N],[13,"UnsetMaximized","","requests that the toplevel be unmaximized",593,N],[13,"SetMinimized","","requests that the toplevel be minimized",593,N],[13,"UnsetMinimized","","requests that the toplevel be unminimized",593,N],[13,"Activate","","activate the toplevel",593,N],[12,"seat","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request","",593,N],[13,"Close","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","request that the toplevel be closed",593,N],[13,"SetRectangle","","the rectangle which represents the toplevel",593,N],[12,"surface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request","",593,N],[12,"x","","",593,N],[12,"y","","",593,N],[12,"width","","",593,N],[12,"height","","",593,N],[13,"Destroy","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","destroy the zwlr_foreign_toplevel_handle_v1 object",593,N],[4,"Event","","",N,N],[13,"Title","","title change",594,N],[12,"title","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",594,N],[13,"AppId","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","app-id change",594,N],[12,"app_id","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",594,N],[13,"OutputEnter","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","toplevel entered an output",594,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",594,N],[13,"OutputLeave","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","toplevel left an output",594,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",594,N],[13,"State","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","the toplevel state changed",594,N],[12,"state","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",594,N],[13,"Done","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","all information about the toplevel has been sent",594,N],[13,"Closed","","this toplevel has been destroyed",594,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACTIVATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CLOSE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_RECTANGLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TITLE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_APP_ID_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_OUTPUT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_OUTPUT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"title","","title change",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["string"]]]],[11,"app_id","","app-id change",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["string"]]]],[11,"output_enter","","toplevel entered an output",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["wloutput"]]]],[11,"output_leave","","toplevel left an output",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["wloutput"]]]],[11,"state","","the toplevel state changed",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["vec",["u8"]]]]],[11,"done","","all information about the toplevel has been sent",595,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"closed","","this toplevel has been destroyed",595,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[0,"server","wayland_protocols::wlr::unstable::foreign_toplevel::v1","Server-side API of this protocol",N,N],[0,"zwlr_foreign_toplevel_manager_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server","list and control opened apps",N,N],[3,"ZwlrForeignToplevelManagerV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Stop","","stop sending events",596,N],[4,"Event","","",N,N],[13,"Toplevel","","a toplevel has been created",597,N],[12,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1::Event","",597,N],[13,"Finished","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","the compositor has finished with the toplevel manager",597,N],[17,"REQ_STOP_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TOPLEVEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FINISHED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"stop","","stop sending events",598,[[["self"],["zwlrforeigntoplevelmanagerv1"]]]],[0,"zwlr_foreign_toplevel_handle_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server","an opened toplevel",N,N],[3,"ZwlrForeignToplevelHandleV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",N,N],[4,"State","","types of states on the toplevel",N,N],[13,"Maximized","","the toplevel is maximized",599,N],[13,"Minimized","","the toplevel is minimized",599,N],[13,"Activated","","the toplevel is active",599,N],[4,"Error","","",N,N],[13,"InvalidRectangle","","the provided rectangle is invalid",600,N],[4,"Request","","",N,N],[13,"SetMaximized","","requests that the toplevel be maximized",601,N],[13,"UnsetMaximized","","requests that the toplevel be unmaximized",601,N],[13,"SetMinimized","","requests that the toplevel be minimized",601,N],[13,"UnsetMinimized","","requests that the toplevel be unminimized",601,N],[13,"Activate","","activate the toplevel",601,N],[12,"seat","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",601,N],[13,"Close","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","request that the toplevel be closed",601,N],[13,"SetRectangle","","the rectangle which represents the toplevel",601,N],[12,"surface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",601,N],[12,"x","","",601,N],[12,"y","","",601,N],[12,"width","","",601,N],[12,"height","","",601,N],[13,"Destroy","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","destroy the zwlr_foreign_toplevel_handle_v1 object",601,N],[4,"Event","","",N,N],[13,"Title","","title change",602,N],[12,"title","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",602,N],[13,"AppId","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","app-id change",602,N],[12,"app_id","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",602,N],[13,"OutputEnter","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","toplevel entered an output",602,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",602,N],[13,"OutputLeave","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","toplevel left an output",602,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",602,N],[13,"State","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","the toplevel state changed",602,N],[12,"state","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",602,N],[13,"Done","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","all information about the toplevel has been sent",602,N],[13,"Closed","","this toplevel has been destroyed",602,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACTIVATE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CLOSE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_RECTANGLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TITLE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_APP_ID_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_OUTPUT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_OUTPUT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_STATE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_maximized","","requests that the toplevel be maximized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"unset_maximized","","requests that the toplevel be unmaximized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"set_minimized","","requests that the toplevel be minimized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"unset_minimized","","requests that the toplevel be unminimized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"activate","","activate the toplevel",603,[[["self"],["zwlrforeigntoplevelhandlev1"],["wlseat"]]]],[11,"close","","request that the toplevel be closed",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"set_rectangle","","the rectangle which represents the toplevel",603,[[["self"],["zwlrforeigntoplevelhandlev1"],["wlsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"destroy","","destroy the zwlr_foreign_toplevel_handle_v1 object",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","a toplevel has been created",590,[[["self"],["zwlrforeigntoplevelmanagerv1"],["newproxy",["zwlrforeigntoplevelhandlev1"]]]]],[11,"finished","","the compositor has finished with the toplevel manager",590,[[["self"],["zwlrforeigntoplevelmanagerv1"]]]],[11,"stop","","stop sending events",604,N],[11,"title","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","title change",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["string"]]]],[11,"app_id","","app-id change",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["string"]]]],[11,"output_enter","","toplevel entered an output",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["wloutput"]]]],[11,"output_leave","","toplevel left an output",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["wloutput"]]]],[11,"state","","the toplevel state changed",595,[[["self"],["zwlrforeigntoplevelhandlev1"],["vec",["u8"]]]]],[11,"done","","all information about the toplevel has been sent",595,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"closed","","this toplevel has been destroyed",595,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"from_raw","","",591,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",591,[[["self"]],["u32"]]],[11,"from_raw","","",592,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",592,[[["self"]],["u32"]]],[11,"set_maximized","","requests that the toplevel be maximized",605,N],[11,"unset_maximized","","requests that the toplevel be unmaximized",605,N],[11,"set_minimized","","requests that the toplevel be minimized",605,N],[11,"unset_minimized","","requests that the toplevel be unminimized",605,N],[11,"activate","","activate the toplevel",605,N],[11,"close","","request that the toplevel be closed",605,N],[11,"set_rectangle","","the rectangle which represents the toplevel",605,N],[11,"destroy","","destroy the zwlr_foreign_toplevel_handle_v1 object",605,N],[11,"stop","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","stop sending events",598,[[["self"],["zwlrforeigntoplevelmanagerv1"]]]],[11,"toplevel","","a toplevel has been created",606,N],[11,"finished","","the compositor has finished with the toplevel manager",606,N],[11,"set_maximized","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","requests that the toplevel be maximized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"unset_maximized","","requests that the toplevel be unmaximized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"set_minimized","","requests that the toplevel be minimized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"unset_minimized","","requests that the toplevel be unminimized",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"activate","","activate the toplevel",603,[[["self"],["zwlrforeigntoplevelhandlev1"],["wlseat"]]]],[11,"close","","request that the toplevel be closed",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"set_rectangle","","the rectangle which represents the toplevel",603,[[["self"],["zwlrforeigntoplevelhandlev1"],["wlsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"destroy","","destroy the zwlr_foreign_toplevel_handle_v1 object",603,[[["self"],["zwlrforeigntoplevelhandlev1"]]]],[11,"from_raw","","",599,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",599,[[["self"]],["u32"]]],[11,"from_raw","","",600,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",600,[[["self"]],["u32"]]],[11,"title","","title change",607,N],[11,"app_id","","app-id change",607,N],[11,"output_enter","","toplevel entered an output",607,N],[11,"output_leave","","toplevel left an output",607,N],[11,"state","","the toplevel state changed",607,N],[11,"done","","all information about the toplevel has been sent",607,N],[11,"closed","","this toplevel has been destroyed",607,N],[0,"gamma_control","wayland_protocols::wlr::unstable","Manage gamma tables of outputs.",N,N],[0,"v1","wayland_protocols::wlr::unstable::gamma_control","",N,N],[0,"client","wayland_protocols::wlr::unstable::gamma_control::v1","Client-side API of this protocol",N,N],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::client","manager to create per-output gamma controls",N,N],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetGammaControl","","get a gamma control for an output",608,N],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request","",608,N],[12,"output","","",608,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","destroy the manager",608,N],[4,"Event","","",N,N],[17,"REQ_GET_GAMMA_CONTROL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::client","adjust gamma tables for an output",N,N],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidGamma","","invalid gamma tables",609,N],[4,"Request","","",N,N],[13,"SetGamma","","set the gamma table",610,N],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Request","",610,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","destroy this control",610,N],[4,"Event","","",N,N],[13,"GammaSize","","size of gamma ramps",611,N],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Event","",611,N],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","object no longer valid",611,N],[17,"REQ_SET_GAMMA_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_GAMMA_SIZE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"gamma_size","","size of gamma ramps",612,[[["self"],["zwlrgammacontrolv1"],["u32"]]]],[11,"failed","","object no longer valid",612,[[["self"],["zwlrgammacontrolv1"]]]],[0,"server","wayland_protocols::wlr::unstable::gamma_control::v1","Server-side API of this protocol",N,N],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","manager to create per-output gamma controls",N,N],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetGammaControl","","get a gamma control for an output",613,N],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1::Request","",613,N],[12,"output","","",613,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","destroy the manager",613,N],[4,"Event","","",N,N],[17,"REQ_GET_GAMMA_CONTROL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_gamma_control","","get a gamma control for an output",614,[[["self"],["zwlrgammacontrolmanagerv1"],["newresource",["zwlrgammacontrolv1"]],["wloutput"]]]],[11,"destroy","","destroy the manager",614,[[["self"],["zwlrgammacontrolmanagerv1"]]]],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","adjust gamma tables for an output",N,N],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidGamma","","invalid gamma tables",615,N],[4,"Request","","",N,N],[13,"SetGamma","","set the gamma table",616,N],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Request","",616,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","destroy this control",616,N],[4,"Event","","",N,N],[13,"GammaSize","","size of gamma ramps",617,N],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Event","",617,N],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","object no longer valid",617,N],[17,"REQ_SET_GAMMA_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_GAMMA_SIZE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_gamma","","set the gamma table",618,[[["self"],["zwlrgammacontrolv1"],["rawfd"]]]],[11,"destroy","","destroy this control",618,[[["self"],["zwlrgammacontrolv1"]]]],[11,"get_gamma_control","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","get a gamma control for an output",619,[[["self"],["wloutput"],["f"]],["result",["zwlrgammacontrolv1"]]]],[11,"destroy","","destroy the manager",619,N],[11,"gamma_size","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","size of gamma ramps",612,[[["self"],["zwlrgammacontrolv1"],["u32"]]]],[11,"failed","","object no longer valid",612,[[["self"],["zwlrgammacontrolv1"]]]],[11,"from_raw","","",609,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",609,[[["self"]],["u32"]]],[11,"set_gamma","","set the gamma table",620,N],[11,"destroy","","destroy this control",620,N],[11,"get_gamma_control","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","get a gamma control for an output",614,[[["self"],["zwlrgammacontrolmanagerv1"],["newresource",["zwlrgammacontrolv1"]],["wloutput"]]]],[11,"destroy","","destroy the manager",614,[[["self"],["zwlrgammacontrolmanagerv1"]]]],[11,"set_gamma","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","set the gamma table",618,[[["self"],["zwlrgammacontrolv1"],["rawfd"]]]],[11,"destroy","","destroy this control",618,[[["self"],["zwlrgammacontrolv1"]]]],[11,"from_raw","","",615,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",615,[[["self"]],["u32"]]],[11,"gamma_size","","size of gamma ramps",621,N],[11,"failed","","object no longer valid",621,N],[0,"input_inhibitor","wayland_protocols::wlr::unstable","Inhibits input events to other clients",N,N],[0,"v1","wayland_protocols::wlr::unstable::input_inhibitor","",N,N],[0,"client","wayland_protocols::wlr::unstable::input_inhibitor::v1","Client-side API of this protocol",N,N],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client","inhibits input events to other clients",N,N],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",622,N],[4,"Request","","",N,N],[13,"GetInhibitor","","inhibit input to other clients",623,N],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1::Request","",623,N],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",N,N],[17,"REQ_GET_INHIBITOR_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client","inhibits input to other clients",N,N],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input inhibitor object",624,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::wlr::unstable::input_inhibitor::v1","Server-side API of this protocol",N,N],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input events to other clients",N,N],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",625,N],[4,"Request","","",N,N],[13,"GetInhibitor","","inhibit input to other clients",626,N],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1::Request","",626,N],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",N,N],[17,"REQ_GET_INHIBITOR_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_inhibitor","","inhibit input to other clients",627,[[["self"],["zwlrinputinhibitmanagerv1"],["newresource",["zwlrinputinhibitorv1"]]]]],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input to other clients",N,N],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input inhibitor object",628,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the input inhibitor object",629,[[["self"],["zwlrinputinhibitorv1"]]]],[11,"from_raw","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",622,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",622,[[["self"]],["u32"]]],[11,"get_inhibitor","","inhibit input to other clients",630,[[["self"],["f"]],["result",["zwlrinputinhibitorv1"]]]],[11,"destroy","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","destroy the input inhibitor object",631,N],[11,"get_inhibitor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","inhibit input to other clients",627,[[["self"],["zwlrinputinhibitmanagerv1"],["newresource",["zwlrinputinhibitorv1"]]]]],[11,"from_raw","","",625,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",625,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","destroy the input inhibitor object",629,[[["self"],["zwlrinputinhibitorv1"]]]],[0,"layer_shell","wayland_protocols::wlr::unstable","Layered shell protocol",N,N],[0,"v1","wayland_protocols::wlr::unstable::layer_shell","",N,N],[0,"client","wayland_protocols::wlr::unstable::layer_shell::v1","Client-side API of this protocol",N,N],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::client","create surfaces that are layers of the desktop",N,N],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",N,N],[4,"Error","","",N,N],[13,"Role","","wl_surface has another role",632,N],[13,"InvalidLayer","","layer value is invalid",632,N],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",632,N],[4,"Layer","","available layers for surfaces",N,N],[13,"Background","","",633,N],[13,"Bottom","","",633,N],[13,"Top","","",633,N],[13,"Overlay","","",633,N],[4,"Request","","",N,N],[13,"GetLayerSurface","","create a layer_surface from a surface",634,N],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1::Request","",634,N],[12,"surface","","",634,N],[12,"output","","",634,N],[12,"layer","","",634,N],[12,"namespace","","",634,N],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",N,N],[17,"REQ_GET_LAYER_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::client","layer metadata interface",N,N],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",N,N],[3,"ZwlrLayerSurfaceV1","","",N,N],[4,"Error","","",N,N],[13,"InvalidSurfaceState","","provided surface state is invalid",635,N],[13,"InvalidSize","","size is invalid",635,N],[13,"InvalidAnchor","","anchor bitfield is invalid",635,N],[4,"Request","","",N,N],[13,"SetSize","","sets the size of the surface",636,N],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[12,"height","","",636,N],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","configures the anchor point of the surface",636,N],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",636,N],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","sets a margin from the anchor point",636,N],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[12,"right","","",636,N],[12,"bottom","","",636,N],[12,"left","","",636,N],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","requests keyboard events",636,N],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",636,N],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","ack a configure event",636,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",636,N],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","destroy the layer_surface",636,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",637,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Event","",637,N],[12,"width","","",637,N],[12,"height","","",637,N],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","surface should be closed",637,N],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_EXCLUSIVE_ZONE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MARGIN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",638,[[["self"],["zwlrlayersurfacev1"],["u32"],["u32"],["u32"]]]],[11,"closed","","surface should be closed",638,[[["self"],["zwlrlayersurfacev1"]]]],[0,"server","wayland_protocols::wlr::unstable::layer_shell::v1","Server-side API of this protocol",N,N],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","create surfaces that are layers of the desktop",N,N],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",N,N],[4,"Error","","",N,N],[13,"Role","","wl_surface has another role",639,N],[13,"InvalidLayer","","layer value is invalid",639,N],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",639,N],[4,"Layer","","available layers for surfaces",N,N],[13,"Background","","",640,N],[13,"Bottom","","",640,N],[13,"Top","","",640,N],[13,"Overlay","","",640,N],[4,"Request","","",N,N],[13,"GetLayerSurface","","create a layer_surface from a surface",641,N],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1::Request","",641,N],[12,"surface","","",641,N],[12,"output","","",641,N],[12,"layer","","",641,N],[12,"namespace","","",641,N],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",N,N],[17,"REQ_GET_LAYER_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_layer_surface","","create a layer_surface from a surface",642,[[["self"],["zwlrlayershellv1"],["newresource",["zwlrlayersurfacev1"]],["wlsurface"],["option",["wloutput"]],["layer"],["string"]]]],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","layer metadata interface",N,N],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",N,N],[3,"ZwlrLayerSurfaceV1","","",N,N],[4,"Error","","",N,N],[13,"InvalidSurfaceState","","provided surface state is invalid",643,N],[13,"InvalidSize","","size is invalid",643,N],[13,"InvalidAnchor","","anchor bitfield is invalid",643,N],[4,"Request","","",N,N],[13,"SetSize","","sets the size of the surface",644,N],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[12,"height","","",644,N],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the anchor point of the surface",644,N],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",644,N],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","sets a margin from the anchor point",644,N],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[12,"right","","",644,N],[12,"bottom","","",644,N],[12,"left","","",644,N],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","requests keyboard events",644,N],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",644,N],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","ack a configure event",644,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",644,N],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","destroy the layer_surface",644,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",645,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Event","",645,N],[12,"width","","",645,N],[12,"height","","",645,N],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","surface should be closed",645,N],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_EXCLUSIVE_ZONE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MARGIN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_size","","sets the size of the surface",646,[[["self"],["zwlrlayersurfacev1"],["u32"],["u32"]]]],[11,"set_anchor","","configures the anchor point of the surface",646,[[["self"],["zwlrlayersurfacev1"],["anchor"]]]],[11,"set_exclusive_zone","","configures the exclusive geometry of this surface",646,[[["self"],["zwlrlayersurfacev1"],["i32"]]]],[11,"set_margin","","sets a margin from the anchor point",646,[[["self"],["zwlrlayersurfacev1"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_keyboard_interactivity","","requests keyboard events",646,[[["self"],["zwlrlayersurfacev1"],["u32"]]]],[11,"get_popup","","assign this layer_surface as an xdg_popup parent",646,[[["self"],["zwlrlayersurfacev1"],["xdgpopup"]]]],[11,"ack_configure","","ack a configure event",646,[[["self"],["zwlrlayersurfacev1"],["u32"]]]],[11,"destroy","","destroy the layer_surface",646,[[["self"],["zwlrlayersurfacev1"]]]],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",632,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",632,[[["self"]],["u32"]]],[11,"from_raw","","",633,[[["u32"]],["option",["layer"]]]],[11,"to_raw","","",633,[[["self"]],["u32"]]],[11,"get_layer_surface","","create a layer_surface from a surface",647,[[["self"],["wlsurface"],["option",["wloutput"]],["layer"],["string"],["f"]],["result",["zwlrlayersurfacev1"]]]],[11,"configure","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","suggest a surface change",638,[[["self"],["zwlrlayersurfacev1"],["u32"],["u32"],["u32"]]]],[11,"closed","","surface should be closed",638,[[["self"],["zwlrlayersurfacev1"]]]],[11,"from_raw","","",635,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",635,[[["self"]],["u32"]]],[18,"Top","","the top edge of the anchor rectangle",648,N],[18,"Bottom","","the bottom edge of the anchor rectangle",648,N],[18,"Left","","the left edge of the anchor rectangle",648,N],[18,"Right","","the right edge of the anchor rectangle",648,N],[11,"empty","","Returns an empty set of flags.",648,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",648,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",648,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",648,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",648,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",648,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",648,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",648,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",648,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",648,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",648,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",648,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",648,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",648,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",648,[[["self"]],["u32"]]],[11,"set_size","","sets the size of the surface",649,N],[11,"set_anchor","","configures the anchor point of the surface",649,N],[11,"set_exclusive_zone","","configures the exclusive geometry of this surface",649,N],[11,"set_margin","","sets a margin from the anchor point",649,N],[11,"set_keyboard_interactivity","","requests keyboard events",649,N],[11,"get_popup","","assign this layer_surface as an xdg_popup parent",649,N],[11,"ack_configure","","ack a configure event",649,N],[11,"destroy","","destroy the layer_surface",649,N],[11,"get_layer_surface","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","create a layer_surface from a surface",642,[[["self"],["zwlrlayershellv1"],["newresource",["zwlrlayersurfacev1"]],["wlsurface"],["option",["wloutput"]],["layer"],["string"]]]],[11,"from_raw","","",639,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",639,[[["self"]],["u32"]]],[11,"from_raw","","",640,[[["u32"]],["option",["layer"]]]],[11,"to_raw","","",640,[[["self"]],["u32"]]],[11,"set_size","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","sets the size of the surface",646,[[["self"],["zwlrlayersurfacev1"],["u32"],["u32"]]]],[11,"set_anchor","","configures the anchor point of the surface",646,[[["self"],["zwlrlayersurfacev1"],["anchor"]]]],[11,"set_exclusive_zone","","configures the exclusive geometry of this surface",646,[[["self"],["zwlrlayersurfacev1"],["i32"]]]],[11,"set_margin","","sets a margin from the anchor point",646,[[["self"],["zwlrlayersurfacev1"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_keyboard_interactivity","","requests keyboard events",646,[[["self"],["zwlrlayersurfacev1"],["u32"]]]],[11,"get_popup","","assign this layer_surface as an xdg_popup parent",646,[[["self"],["zwlrlayersurfacev1"],["xdgpopup"]]]],[11,"ack_configure","","ack a configure event",646,[[["self"],["zwlrlayersurfacev1"],["u32"]]]],[11,"destroy","","destroy the layer_surface",646,[[["self"],["zwlrlayersurfacev1"]]]],[11,"from_raw","","",643,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",643,[[["self"]],["u32"]]],[18,"Top","","the top edge of the anchor rectangle",650,N],[18,"Bottom","","the bottom edge of the anchor rectangle",650,N],[18,"Left","","the left edge of the anchor rectangle",650,N],[18,"Right","","the right edge of the anchor rectangle",650,N],[11,"empty","","Returns an empty set of flags.",650,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",650,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",650,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",650,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",650,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",650,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",650,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",650,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",650,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",650,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",650,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",650,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",650,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",650,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",650,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",651,N],[11,"closed","","surface should be closed",651,N],[0,"screencopy","wayland_protocols::wlr::unstable","Screen content capturing on client buffers",N,N],[0,"v1","wayland_protocols::wlr::unstable::screencopy","",N,N],[0,"client","wayland_protocols::wlr::unstable::screencopy::v1","Client-side API of this protocol",N,N],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::client","manager to inform clients and begin capturing",N,N],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture an output",652,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request","",652,N],[12,"overlay_cursor","","",652,N],[12,"output","","",652,N],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","capture an output's region",652,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request","",652,N],[12,"overlay_cursor","","",652,N],[12,"output","","",652,N],[12,"x","","",652,N],[12,"y","","",652,N],[12,"width","","",652,N],[12,"height","","",652,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","destroy the manager",652,N],[4,"Event","","",N,N],[17,"REQ_CAPTURE_OUTPUT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CAPTURE_OUTPUT_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::client","a frame ready for copy",N,N],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",N,N],[3,"ZwlrScreencopyFrameV1","","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",653,N],[13,"InvalidBuffer","","buffer attributes are invalid",653,N],[4,"Request","","",N,N],[13,"Copy","","copy the frame",654,N],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Request","",654,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","delete this object, used or not",654,N],[4,"Event","","",N,N],[13,"Buffer","","buffer information",655,N],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",655,N],[12,"width","","",655,N],[12,"height","","",655,N],[12,"stride","","",655,N],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","frame flags",655,N],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",655,N],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","indicates frame is available for reading",655,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",655,N],[12,"tv_sec_lo","","",655,N],[12,"tv_nsec","","",655,N],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","frame copy failed",655,N],[17,"REQ_COPY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_BUFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FLAGS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_READY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"buffer","","buffer information",656,[[["self"],["zwlrscreencopyframev1"],["u32"],["u32"],["u32"],["u32"]]]],[11,"flags","","frame flags",656,[[["self"],["zwlrscreencopyframev1"],["flags"]]]],[11,"ready","","indicates frame is available for reading",656,[[["self"],["zwlrscreencopyframev1"],["u32"],["u32"],["u32"]]]],[11,"failed","","frame copy failed",656,[[["self"],["zwlrscreencopyframev1"]]]],[0,"server","wayland_protocols::wlr::unstable::screencopy::v1","Server-side API of this protocol",N,N],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","manager to inform clients and begin capturing",N,N],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture an output",657,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",657,N],[12,"overlay_cursor","","",657,N],[12,"output","","",657,N],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","capture an output's region",657,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",657,N],[12,"overlay_cursor","","",657,N],[12,"output","","",657,N],[12,"x","","",657,N],[12,"y","","",657,N],[12,"width","","",657,N],[12,"height","","",657,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","destroy the manager",657,N],[4,"Event","","",N,N],[17,"REQ_CAPTURE_OUTPUT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CAPTURE_OUTPUT_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"capture_output","","capture an output",658,[[["self"],["zwlrscreencopymanagerv1"],["newresource",["zwlrscreencopyframev1"]],["i32"],["wloutput"]]]],[11,"capture_output_region","","capture an output's region",658,[[["self"],["zwlrscreencopymanagerv1"],["newresource",["zwlrscreencopyframev1"]],["i32"],["wloutput"],["i32"],["i32"],["i32"],["i32"]]]],[11,"destroy","","destroy the manager",658,[[["self"],["zwlrscreencopymanagerv1"]]]],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","a frame ready for copy",N,N],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",N,N],[3,"ZwlrScreencopyFrameV1","","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",659,N],[13,"InvalidBuffer","","buffer attributes are invalid",659,N],[4,"Request","","",N,N],[13,"Copy","","copy the frame",660,N],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Request","",660,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","delete this object, used or not",660,N],[4,"Event","","",N,N],[13,"Buffer","","buffer information",661,N],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",661,N],[12,"width","","",661,N],[12,"height","","",661,N],[12,"stride","","",661,N],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame flags",661,N],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",661,N],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","indicates frame is available for reading",661,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",661,N],[12,"tv_sec_lo","","",661,N],[12,"tv_nsec","","",661,N],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame copy failed",661,N],[17,"REQ_COPY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_BUFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FLAGS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_READY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"copy","","copy the frame",662,[[["self"],["zwlrscreencopyframev1"],["wlbuffer"]]]],[11,"destroy","","delete this object, used or not",662,[[["self"],["zwlrscreencopyframev1"]]]],[11,"capture_output","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","capture an output",663,[[["self"],["i32"],["wloutput"],["f"]],["result",["zwlrscreencopyframev1"]]]],[11,"capture_output_region","","capture an output's region",663,[[["self"],["i32"],["wloutput"],["i32"],["i32"],["i32"],["i32"],["f"]],["result",["zwlrscreencopyframev1"]]]],[11,"destroy","","destroy the manager",663,N],[11,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","buffer information",656,[[["self"],["zwlrscreencopyframev1"],["u32"],["u32"],["u32"],["u32"]]]],[11,"flags","","frame flags",656,[[["self"],["zwlrscreencopyframev1"],["flags"]]]],[11,"ready","","indicates frame is available for reading",656,[[["self"],["zwlrscreencopyframev1"],["u32"],["u32"],["u32"]]]],[11,"failed","","frame copy failed",656,[[["self"],["zwlrscreencopyframev1"]]]],[11,"from_raw","","",653,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",653,[[["self"]],["u32"]]],[18,"YInvert","","contents are y-inverted",664,N],[11,"empty","","Returns an empty set of flags.",664,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",664,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",664,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",664,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",664,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",664,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",664,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",664,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",664,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",664,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",664,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",664,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",664,[[["self"],["flags"],["bool"]]]],[11,"from_raw","","",664,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",664,[[["self"]],["u32"]]],[11,"copy","","copy the frame",665,N],[11,"destroy","","delete this object, used or not",665,N],[11,"capture_output","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","capture an output",658,[[["self"],["zwlrscreencopymanagerv1"],["newresource",["zwlrscreencopyframev1"]],["i32"],["wloutput"]]]],[11,"capture_output_region","","capture an output's region",658,[[["self"],["zwlrscreencopymanagerv1"],["newresource",["zwlrscreencopyframev1"]],["i32"],["wloutput"],["i32"],["i32"],["i32"],["i32"]]]],[11,"destroy","","destroy the manager",658,[[["self"],["zwlrscreencopymanagerv1"]]]],[11,"copy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","copy the frame",662,[[["self"],["zwlrscreencopyframev1"],["wlbuffer"]]]],[11,"destroy","","delete this object, used or not",662,[[["self"],["zwlrscreencopyframev1"]]]],[11,"from_raw","","",659,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",659,[[["self"]],["u32"]]],[18,"YInvert","","contents are y-inverted",666,N],[11,"empty","","Returns an empty set of flags.",666,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",666,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",666,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",666,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",666,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",666,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",666,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",666,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",666,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",666,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",666,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",666,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",666,[[["self"],["flags"],["bool"]]]],[11,"from_raw","","",666,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",666,[[["self"]],["u32"]]],[11,"buffer","","buffer information",667,N],[11,"flags","","frame flags",667,N],[11,"ready","","indicates frame is available for reading",667,N],[11,"failed","","frame copy failed",667,N],[0,"presentation_time","wayland_protocols","Presentation time protocol",N,N],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",668,N],[13,"InvalidFlag","","invalid flag",668,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",669,N],[13,"Feedback","","request presentation feedback information",669,N],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",669,N],[12,"callback","","",669,N],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",670,N],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",670,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::presentation_time::client::wp_presentation","The minimal object version supporting this request",N,N],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"clock_id","","clock ID for timestamps",671,[[["self"],["wppresentation"],["u32"]]]],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",672,N],[13,"HwClock","","hardware provided the presentation timestamp",672,N],[13,"HwCompletion","","hardware signalled the start of the presentation",672,N],[13,"ZeroCopy","","presentation was done zero-copy",672,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",673,N],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",673,N],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",673,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",673,N],[12,"tv_sec_lo","","",673,N],[12,"tv_nsec","","",673,N],[12,"refresh","","",673,N],[12,"seq_hi","","",673,N],[12,"seq_lo","","",673,N],[12,"flags","","",673,N],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",673,N],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"sync_output","","presentation synchronized to this output",674,[[["self"],["wppresentationfeedback"],["wloutput"]]]],[11,"presented","","the content update was displayed",674,[[["self"],["wppresentationfeedback"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"discarded","","the content update was not displayed",674,[[["self"],["wppresentationfeedback"]]]],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",675,N],[13,"InvalidFlag","","invalid flag",675,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",676,N],[13,"Feedback","","request presentation feedback information",676,N],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",676,N],[12,"callback","","",676,N],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",677,N],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",677,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::presentation_time::server::wp_presentation","The minimal object version supporting this request",N,N],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","unbind from the presentation interface",678,[[["self"],["wppresentation"]]]],[11,"feedback","","request presentation feedback information",678,[[["self"],["wppresentation"],["wlsurface"],["newresource",["wppresentationfeedback"]]]]],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",679,N],[13,"HwClock","","hardware provided the presentation timestamp",679,N],[13,"HwCompletion","","hardware signalled the start of the presentation",679,N],[13,"ZeroCopy","","presentation was done zero-copy",679,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",680,N],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",680,N],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",680,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",680,N],[12,"tv_sec_lo","","",680,N],[12,"tv_nsec","","",680,N],[12,"refresh","","",680,N],[12,"seq_hi","","",680,N],[12,"seq_lo","","",680,N],[12,"flags","","",680,N],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",680,N],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",N,N],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",681,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",681,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",681,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",681,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",681,N],[13,"InvalidPositioner","","the client provided an invalid positioner",681,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",682,N],[13,"CreatePositioner","","create a positioner object",682,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",682,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",682,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",682,N],[12,"surface","","",682,N],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",682,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",682,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",683,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",683,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::xdg_shell::client::xdg_wm_base","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"ping","","check if the client is alive",684,[[["self"],["xdgwmbase"],["u32"]]]],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",685,N],[4,"Anchor","","",N,N],[13,"None","","",686,N],[13,"Top","","",686,N],[13,"Bottom","","",686,N],[13,"Left","","",686,N],[13,"Right","","",686,N],[13,"TopLeft","","",686,N],[13,"BottomLeft","","",686,N],[13,"TopRight","","",686,N],[13,"BottomRight","","",686,N],[4,"Gravity","","",N,N],[13,"None","","",687,N],[13,"Top","","",687,N],[13,"Bottom","","",687,N],[13,"Left","","",687,N],[13,"Right","","",687,N],[13,"TopLeft","","",687,N],[13,"BottomLeft","","",687,N],[13,"TopRight","","",687,N],[13,"BottomRight","","",687,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",688,N],[13,"SetSize","","set the size of the to-be positioned rectangle",688,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",688,N],[12,"height","","",688,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",688,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",688,N],[12,"y","","",688,N],[12,"width","","",688,N],[12,"height","","",688,N],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",688,N],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",688,N],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",688,N],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",688,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",688,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",688,N],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",688,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",688,N],[12,"y","","",688,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",689,N],[13,"AlreadyConstructed","","",689,N],[13,"UnconfiguredBuffer","","",689,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",690,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",690,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",690,N],[13,"GetPopup","wayland_protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",690,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",690,N],[12,"parent","","",690,N],[12,"positioner","","",690,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",690,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",690,N],[12,"y","","",690,N],[12,"width","","",690,N],[12,"height","","",690,N],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",690,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",690,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",691,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",691,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::xdg_shell::client::xdg_surface","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",692,[[["self"],["xdgsurface"],["u32"]]]],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",693,N],[13,"Top","","",693,N],[13,"Bottom","","",693,N],[13,"Left","","",693,N],[13,"TopLeft","","",693,N],[13,"BottomLeft","","",693,N],[13,"Right","","",693,N],[13,"TopRight","","",693,N],[13,"BottomRight","","",693,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",694,N],[13,"Fullscreen","","the surface is fullscreen",694,N],[13,"Resizing","","the surface is being resized",694,N],[13,"Activated","","the surface is now activated",694,N],[13,"TiledLeft","","the surface is tiled",694,N],[13,"TiledRight","","the surface is tiled",694,N],[13,"TiledTop","","the surface is tiled",694,N],[13,"TiledBottom","","the surface is tiled",694,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",695,N],[13,"SetParent","","set the parent of this surface",695,N],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",695,N],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",695,N],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",695,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[12,"serial","","",695,N],[12,"x","","",695,N],[12,"y","","",695,N],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",695,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[12,"serial","","",695,N],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",695,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[12,"serial","","",695,N],[12,"edges","","",695,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",695,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[12,"height","","",695,N],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",695,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[12,"height","","",695,N],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",695,N],[13,"UnsetMaximized","","unmaximize the window",695,N],[13,"SetFullscreen","","set the window as fullscreen on an output",695,N],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",695,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",695,N],[13,"SetMinimized","","set the window as minimized",695,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",696,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",696,N],[12,"height","","",696,N],[12,"states","","",696,N],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",696,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","suggest a surface change",697,[[["self"],["xdgtoplevel"],["i32"],["i32"],["vec",["u8"]]]]],[11,"close","","surface wants to be closed",697,[[["self"],["xdgtoplevel"]]]],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",698,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",699,N],[13,"Grab","","make the popup take an explicit grab",699,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",699,N],[12,"serial","","",699,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",700,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",700,N],[12,"y","","",700,N],[12,"width","","",700,N],[12,"height","","",700,N],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",700,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[11,"configure","","configure the popup surface",701,[[["self"],["xdgpopup"],["i32"],["i32"],["i32"],["i32"]]]],[11,"popup_done","","popup interaction is done",701,[[["self"],["xdgpopup"]]]],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",702,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",702,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",702,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",702,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",702,N],[13,"InvalidPositioner","","the client provided an invalid positioner",702,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",703,N],[13,"CreatePositioner","","create a positioner object",703,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",703,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",703,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",703,N],[12,"surface","","",703,N],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",703,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",703,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",704,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",704,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::xdg_shell::server::xdg_wm_base","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy xdg_wm_base",705,[[["self"],["xdgwmbase"]]]],[11,"create_positioner","","create a positioner object",705,[[["self"],["xdgwmbase"],["newresource",["xdgpositioner"]]]]],[11,"get_xdg_surface","","create a shell surface from a surface",705,[[["self"],["xdgwmbase"],["newresource",["xdgsurface"]],["wlsurface"]]]],[11,"pong","","respond to a ping event",705,[[["self"],["xdgwmbase"],["u32"]]]],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",706,N],[4,"Anchor","","",N,N],[13,"None","","",707,N],[13,"Top","","",707,N],[13,"Bottom","","",707,N],[13,"Left","","",707,N],[13,"Right","","",707,N],[13,"TopLeft","","",707,N],[13,"BottomLeft","","",707,N],[13,"TopRight","","",707,N],[13,"BottomRight","","",707,N],[4,"Gravity","","",N,N],[13,"None","","",708,N],[13,"Top","","",708,N],[13,"Bottom","","",708,N],[13,"Left","","",708,N],[13,"Right","","",708,N],[13,"TopLeft","","",708,N],[13,"BottomLeft","","",708,N],[13,"TopRight","","",708,N],[13,"BottomRight","","",708,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",709,N],[13,"SetSize","","set the size of the to-be positioned rectangle",709,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",709,N],[12,"height","","",709,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",709,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",709,N],[12,"y","","",709,N],[12,"width","","",709,N],[12,"height","","",709,N],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",709,N],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",709,N],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",709,N],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",709,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",709,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",709,N],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",709,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",709,N],[12,"y","","",709,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_positioner object",710,[[["self"],["xdgpositioner"]]]],[11,"set_size","","set the size of the to-be positioned rectangle",710,[[["self"],["xdgpositioner"],["i32"],["i32"]]]],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",710,[[["self"],["xdgpositioner"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_anchor","","set anchor rectangle anchor",710,[[["self"],["xdgpositioner"],["anchor"]]]],[11,"set_gravity","","set child surface gravity",710,[[["self"],["xdgpositioner"],["gravity"]]]],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",710,[[["self"],["xdgpositioner"],["u32"]]]],[11,"set_offset","","set surface position offset",710,[[["self"],["xdgpositioner"],["i32"],["i32"]]]],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",711,N],[13,"AlreadyConstructed","","",711,N],[13,"UnconfiguredBuffer","","",711,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",712,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",712,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",712,N],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",712,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",712,N],[12,"parent","","",712,N],[12,"positioner","","",712,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",712,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",712,N],[12,"y","","",712,N],[12,"width","","",712,N],[12,"height","","",712,N],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",712,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",712,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",713,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",713,N],[17,"REQ_DESTROY_SINCE","wayland_protocols::xdg_shell::server::xdg_surface","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_surface",714,[[["self"],["xdgsurface"]]]],[11,"get_toplevel","","assign the xdg_toplevel surface role",714,[[["self"],["xdgsurface"],["newresource",["xdgtoplevel"]]]]],[11,"get_popup","","assign the xdg_popup surface role",714,[[["self"],["xdgsurface"],["newresource",["xdgpopup"]],["option",["xdgsurface"]],["xdgpositioner"]]]],[11,"set_window_geometry","","set the new window geometry",714,[[["self"],["xdgsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ack_configure","","ack a configure event",714,[[["self"],["xdgsurface"],["u32"]]]],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",715,N],[13,"Top","","",715,N],[13,"Bottom","","",715,N],[13,"Left","","",715,N],[13,"TopLeft","","",715,N],[13,"BottomLeft","","",715,N],[13,"Right","","",715,N],[13,"TopRight","","",715,N],[13,"BottomRight","","",715,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",716,N],[13,"Fullscreen","","the surface is fullscreen",716,N],[13,"Resizing","","the surface is being resized",716,N],[13,"Activated","","the surface is now activated",716,N],[13,"TiledLeft","","the surface is tiled",716,N],[13,"TiledRight","","the surface is tiled",716,N],[13,"TiledTop","","the surface is tiled",716,N],[13,"TiledBottom","","the surface is tiled",716,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",717,N],[13,"SetParent","","set the parent of this surface",717,N],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",717,N],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",717,N],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",717,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[12,"serial","","",717,N],[12,"x","","",717,N],[12,"y","","",717,N],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",717,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[12,"serial","","",717,N],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",717,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[12,"serial","","",717,N],[12,"edges","","",717,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",717,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[12,"height","","",717,N],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",717,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[12,"height","","",717,N],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",717,N],[13,"UnsetMaximized","","unmaximize the window",717,N],[13,"SetFullscreen","","set the window as fullscreen on an output",717,N],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",717,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",717,N],[13,"SetMinimized","","set the window as minimized",717,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",718,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",718,N],[12,"height","","",718,N],[12,"states","","",718,N],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",718,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy the xdg_toplevel",719,[[["self"],["xdgtoplevel"]]]],[11,"set_parent","","set the parent of this surface",719,[[["self"],["xdgtoplevel"],["option",["xdgtoplevel"]]]]],[11,"set_title","","set surface title",719,[[["self"],["xdgtoplevel"],["string"]]]],[11,"set_app_id","","set application ID",719,[[["self"],["xdgtoplevel"],["string"]]]],[11,"show_window_menu","","show the window menu",719,[[["self"],["xdgtoplevel"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"_move","","start an interactive move",719,[[["self"],["xdgtoplevel"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",719,[[["self"],["xdgtoplevel"],["wlseat"],["u32"],["u32"]]]],[11,"set_max_size","","set the maximum size",719,[[["self"],["xdgtoplevel"],["i32"],["i32"]]]],[11,"set_min_size","","set the minimum size",719,[[["self"],["xdgtoplevel"],["i32"],["i32"]]]],[11,"set_maximized","","maximize the window",719,[[["self"],["xdgtoplevel"]]]],[11,"unset_maximized","","unmaximize the window",719,[[["self"],["xdgtoplevel"]]]],[11,"set_fullscreen","","set the window as fullscreen on an output",719,[[["self"],["xdgtoplevel"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","unset the window as fullscreen",719,[[["self"],["xdgtoplevel"]]]],[11,"set_minimized","","set the window as minimized",719,[[["self"],["xdgtoplevel"]]]],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",720,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",721,N],[13,"Grab","","make the popup take an explicit grab",721,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",721,N],[12,"serial","","",721,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",722,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",722,N],[12,"y","","",722,N],[12,"width","","",722,N],[12,"height","","",722,N],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",722,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","remove xdg_popup interface",723,[[["self"],["xdgpopup"]]]],[11,"grab","","make the popup take an explicit grab",723,[[["self"],["xdgpopup"],["wlseat"],["u32"]]]],[0,"viewporter","wayland_protocols","Viewporter protocol",N,N],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",724,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",725,N],[13,"GetViewport","","extend surface interface for crop and scale",725,N],[12,"id","wayland_protocols::viewporter::client::wp_viewporter::Request","",725,N],[12,"surface","","",725,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",726,N],[13,"BadSize","","destination size is not integer",726,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",726,N],[13,"NoSurface","","the wl_surface was destroyed",726,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",727,N],[13,"SetSource","","set the source rectangle for cropping",727,N],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",727,N],[12,"y","","",727,N],[12,"width","","",727,N],[12,"height","","",727,N],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",727,N],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",727,N],[12,"height","","",727,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",N,N],[8,"EventHandler","","An interface for handling events.",N,N],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",728,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",729,N],[13,"GetViewport","","extend surface interface for crop and scale",729,N],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",729,N],[12,"surface","","",729,N],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","unbind from the cropping and scaling interface",730,[[["self"],["wpviewporter"]]]],[11,"get_viewport","","extend surface interface for crop and scale",730,[[["self"],["wpviewporter"],["newresource",["wpviewport"]],["wlsurface"]]]],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",731,N],[13,"BadSize","","destination size is not integer",731,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",731,N],[13,"NoSurface","","the wl_surface was destroyed",731,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",732,N],[13,"SetSource","","set the source rectangle for cropping",732,N],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",732,N],[12,"y","","",732,N],[12,"width","","",732,N],[12,"height","","",732,N],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",732,N],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",732,N],[12,"height","","",732,N],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","remove scaling and cropping from the surface",733,[[["self"],["wpviewport"]]]],[11,"set_source","","set the source rectangle for cropping",733,[[["self"],["wpviewport"],["f64"],["f64"],["f64"],["f64"]]]],[11,"set_destination","","set the surface size for scaling",733,[[["self"],["wpviewport"],["i32"],["i32"]]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"handle","","",15,N],[11,"into_any","","",15,[[["box"]],["box",["any"]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_any","","",0,[[["box"]],["box",["any"]]]],[11,"as_any","","",0,[[["self"]],["any"]]],[11,"as_any_mut","","",0,[[["self"]],["any"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_any","","",1,[[["box"]],["box",["any"]]]],[11,"as_any","","",1,[[["self"]],["any"]]],[11,"as_any_mut","","",1,[[["self"]],["any"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],["box",["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],["box",["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],["box",["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",734,[[["t"]],["t"]]],[11,"into","","",734,[[["self"]],["u"]]],[11,"to_owned","","",734,[[["self"]],["t"]]],[11,"clone_into","","",734,N],[11,"try_from","","",734,[[["u"]],["result"]]],[11,"borrow","","",734,[[["self"]],["t"]]],[11,"borrow_mut","","",734,[[["self"]],["t"]]],[11,"try_into","","",734,[[["self"]],["result"]]],[11,"get_type_id","","",734,[[["self"]],["typeid"]]],[11,"handle","","",734,N],[11,"into_any","","",734,[[["box"]],["box",["any"]]]],[11,"as_any","","",734,[[["self"]],["any"]]],[11,"as_any_mut","","",734,[[["self"]],["any"]]],[11,"from","","",735,[[["t"]],["t"]]],[11,"into","","",735,[[["self"]],["u"]]],[11,"try_from","","",735,[[["u"]],["result"]]],[11,"borrow","","",735,[[["self"]],["t"]]],[11,"borrow_mut","","",735,[[["self"]],["t"]]],[11,"try_into","","",735,[[["self"]],["result"]]],[11,"get_type_id","","",735,[[["self"]],["typeid"]]],[11,"into_any","","",735,[[["box"]],["box",["any"]]]],[11,"as_any","","",735,[[["self"]],["any"]]],[11,"as_any_mut","","",735,[[["self"]],["any"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],["box",["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"handle","","",16,N],[11,"into_any","","",16,[[["box"]],["box",["any"]]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],["box",["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],["box",["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],["box",["any"]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],["box",["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],["box",["any"]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"handle","","",17,N],[11,"into_any","","",17,[[["box"]],["box",["any"]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"from","","",736,[[["t"]],["t"]]],[11,"into","","",736,[[["self"]],["u"]]],[11,"try_from","","",736,[[["u"]],["result"]]],[11,"borrow","","",736,[[["self"]],["t"]]],[11,"borrow_mut","","",736,[[["self"]],["t"]]],[11,"try_into","","",736,[[["self"]],["result"]]],[11,"get_type_id","","",736,[[["self"]],["typeid"]]],[11,"into_any","","",736,[[["box"]],["box",["any"]]]],[11,"as_any","","",736,[[["self"]],["any"]]],[11,"as_any_mut","","",736,[[["self"]],["any"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],["box",["any"]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"handle","","",24,N],[11,"into_any","","",24,[[["box"]],["box",["any"]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],["box",["any"]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"from","","",737,[[["t"]],["t"]]],[11,"into","","",737,[[["self"]],["u"]]],[11,"try_from","","",737,[[["u"]],["result"]]],[11,"borrow","","",737,[[["self"]],["t"]]],[11,"borrow_mut","","",737,[[["self"]],["t"]]],[11,"try_into","","",737,[[["self"]],["result"]]],[11,"get_type_id","","",737,[[["self"]],["typeid"]]],[11,"into_any","","",737,[[["box"]],["box",["any"]]]],[11,"as_any","","",737,[[["self"]],["any"]]],[11,"as_any_mut","","",737,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"handle","","",25,N],[11,"into_any","","",25,[[["box"]],["box",["any"]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_any","","",19,[[["box"]],["box",["any"]]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"from","","",738,[[["t"]],["t"]]],[11,"into","","",738,[[["self"]],["u"]]],[11,"try_from","","",738,[[["u"]],["result"]]],[11,"borrow","","",738,[[["self"]],["t"]]],[11,"borrow_mut","","",738,[[["self"]],["t"]]],[11,"try_into","","",738,[[["self"]],["result"]]],[11,"get_type_id","","",738,[[["self"]],["typeid"]]],[11,"into_any","","",738,[[["box"]],["box",["any"]]]],[11,"as_any","","",738,[[["self"]],["any"]]],[11,"as_any_mut","","",738,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",739,[[["t"]],["t"]]],[11,"into","","",739,[[["self"]],["u"]]],[11,"to_owned","","",739,[[["self"]],["t"]]],[11,"clone_into","","",739,N],[11,"try_from","","",739,[[["u"]],["result"]]],[11,"borrow","","",739,[[["self"]],["t"]]],[11,"borrow_mut","","",739,[[["self"]],["t"]]],[11,"try_into","","",739,[[["self"]],["result"]]],[11,"get_type_id","","",739,[[["self"]],["typeid"]]],[11,"handle","","",739,N],[11,"into_any","","",739,[[["box"]],["box",["any"]]]],[11,"as_any","","",739,[[["self"]],["any"]]],[11,"as_any_mut","","",739,[[["self"]],["any"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],["box",["any"]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"from","","",740,[[["t"]],["t"]]],[11,"into","","",740,[[["self"]],["u"]]],[11,"try_from","","",740,[[["u"]],["result"]]],[11,"borrow","","",740,[[["self"]],["t"]]],[11,"borrow_mut","","",740,[[["self"]],["t"]]],[11,"try_into","","",740,[[["self"]],["result"]]],[11,"get_type_id","","",740,[[["self"]],["typeid"]]],[11,"into_any","","",740,[[["box"]],["box",["any"]]]],[11,"as_any","","",740,[[["self"]],["any"]]],[11,"as_any_mut","","",740,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",741,[[["t"]],["t"]]],[11,"into","","",741,[[["self"]],["u"]]],[11,"to_owned","","",741,[[["self"]],["t"]]],[11,"clone_into","","",741,N],[11,"try_from","","",741,[[["u"]],["result"]]],[11,"borrow","","",741,[[["self"]],["t"]]],[11,"borrow_mut","","",741,[[["self"]],["t"]]],[11,"try_into","","",741,[[["self"]],["result"]]],[11,"get_type_id","","",741,[[["self"]],["typeid"]]],[11,"handle","","",741,N],[11,"into_any","","",741,[[["box"]],["box",["any"]]]],[11,"as_any","","",741,[[["self"]],["any"]]],[11,"as_any_mut","","",741,[[["self"]],["any"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],["box",["any"]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"from","","",742,[[["t"]],["t"]]],[11,"into","","",742,[[["self"]],["u"]]],[11,"try_from","","",742,[[["u"]],["result"]]],[11,"borrow","","",742,[[["self"]],["t"]]],[11,"borrow_mut","","",742,[[["self"]],["t"]]],[11,"try_into","","",742,[[["self"]],["result"]]],[11,"get_type_id","","",742,[[["self"]],["typeid"]]],[11,"into_any","","",742,[[["box"]],["box",["any"]]]],[11,"as_any","","",742,[[["self"]],["any"]]],[11,"as_any_mut","","",742,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"handle","","",43,N],[11,"into_any","","",43,[[["box"]],["box",["any"]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],["box",["any"]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],["box",["any"]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",743,[[["t"]],["t"]]],[11,"into","","",743,[[["self"]],["u"]]],[11,"to_owned","","",743,[[["self"]],["t"]]],[11,"clone_into","","",743,N],[11,"try_from","","",743,[[["u"]],["result"]]],[11,"borrow","","",743,[[["self"]],["t"]]],[11,"borrow_mut","","",743,[[["self"]],["t"]]],[11,"try_into","","",743,[[["self"]],["result"]]],[11,"get_type_id","","",743,[[["self"]],["typeid"]]],[11,"handle","","",743,N],[11,"into_any","","",743,[[["box"]],["box",["any"]]]],[11,"as_any","","",743,[[["self"]],["any"]]],[11,"as_any_mut","","",743,[[["self"]],["any"]]],[11,"from","","",744,[[["t"]],["t"]]],[11,"into","","",744,[[["self"]],["u"]]],[11,"try_from","","",744,[[["u"]],["result"]]],[11,"borrow","","",744,[[["self"]],["t"]]],[11,"borrow_mut","","",744,[[["self"]],["t"]]],[11,"try_into","","",744,[[["self"]],["result"]]],[11,"get_type_id","","",744,[[["self"]],["typeid"]]],[11,"into_any","","",744,[[["box"]],["box",["any"]]]],[11,"as_any","","",744,[[["self"]],["any"]]],[11,"as_any_mut","","",744,[[["self"]],["any"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],["box",["any"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"handle","","",44,N],[11,"into_any","","",44,[[["box"]],["box",["any"]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],["box",["any"]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"from","","",745,[[["t"]],["t"]]],[11,"into","","",745,[[["self"]],["u"]]],[11,"try_from","","",745,[[["u"]],["result"]]],[11,"borrow","","",745,[[["self"]],["t"]]],[11,"borrow_mut","","",745,[[["self"]],["t"]]],[11,"try_into","","",745,[[["self"]],["result"]]],[11,"get_type_id","","",745,[[["self"]],["typeid"]]],[11,"into_any","","",745,[[["box"]],["box",["any"]]]],[11,"as_any","","",745,[[["self"]],["any"]]],[11,"as_any_mut","","",745,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"handle","","",45,N],[11,"into_any","","",45,[[["box"]],["box",["any"]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],["box",["any"]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],["box",["any"]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"from","","",746,[[["t"]],["t"]]],[11,"into","","",746,[[["self"]],["u"]]],[11,"try_from","","",746,[[["u"]],["result"]]],[11,"borrow","","",746,[[["self"]],["t"]]],[11,"borrow_mut","","",746,[[["self"]],["t"]]],[11,"try_into","","",746,[[["self"]],["result"]]],[11,"get_type_id","","",746,[[["self"]],["typeid"]]],[11,"into_any","","",746,[[["box"]],["box",["any"]]]],[11,"as_any","","",746,[[["self"]],["any"]]],[11,"as_any_mut","","",746,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"handle","","",46,N],[11,"into_any","","",46,[[["box"]],["box",["any"]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],["box",["any"]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],["box",["any"]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"handle","","",47,N],[11,"into_any","","",47,[[["box"]],["box",["any"]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"from","","",747,[[["t"]],["t"]]],[11,"into","","",747,[[["self"]],["u"]]],[11,"try_from","","",747,[[["u"]],["result"]]],[11,"borrow","","",747,[[["self"]],["t"]]],[11,"borrow_mut","","",747,[[["self"]],["t"]]],[11,"try_into","","",747,[[["self"]],["result"]]],[11,"get_type_id","","",747,[[["self"]],["typeid"]]],[11,"into_any","","",747,[[["box"]],["box",["any"]]]],[11,"as_any","","",747,[[["self"]],["any"]]],[11,"as_any_mut","","",747,[[["self"]],["any"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],["box",["any"]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",748,[[["t"]],["t"]]],[11,"into","","",748,[[["self"]],["u"]]],[11,"to_owned","","",748,[[["self"]],["t"]]],[11,"clone_into","","",748,N],[11,"try_from","","",748,[[["u"]],["result"]]],[11,"borrow","","",748,[[["self"]],["t"]]],[11,"borrow_mut","","",748,[[["self"]],["t"]]],[11,"try_into","","",748,[[["self"]],["result"]]],[11,"get_type_id","","",748,[[["self"]],["typeid"]]],[11,"handle","","",748,N],[11,"into_any","","",748,[[["box"]],["box",["any"]]]],[11,"as_any","","",748,[[["self"]],["any"]]],[11,"as_any_mut","","",748,[[["self"]],["any"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],["box",["any"]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"from","","",749,[[["t"]],["t"]]],[11,"into","","",749,[[["self"]],["u"]]],[11,"try_from","","",749,[[["u"]],["result"]]],[11,"borrow","","",749,[[["self"]],["t"]]],[11,"borrow_mut","","",749,[[["self"]],["t"]]],[11,"try_into","","",749,[[["self"]],["result"]]],[11,"get_type_id","","",749,[[["self"]],["typeid"]]],[11,"into_any","","",749,[[["box"]],["box",["any"]]]],[11,"as_any","","",749,[[["self"]],["any"]]],[11,"as_any_mut","","",749,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",750,[[["t"]],["t"]]],[11,"into","","",750,[[["self"]],["u"]]],[11,"to_owned","","",750,[[["self"]],["t"]]],[11,"clone_into","","",750,N],[11,"try_from","","",750,[[["u"]],["result"]]],[11,"borrow","","",750,[[["self"]],["t"]]],[11,"borrow_mut","","",750,[[["self"]],["t"]]],[11,"try_into","","",750,[[["self"]],["result"]]],[11,"get_type_id","","",750,[[["self"]],["typeid"]]],[11,"handle","","",750,N],[11,"into_any","","",750,[[["box"]],["box",["any"]]]],[11,"as_any","","",750,[[["self"]],["any"]]],[11,"as_any_mut","","",750,[[["self"]],["any"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_any","","",40,[[["box"]],["box",["any"]]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_any","","",41,[[["box"]],["box",["any"]]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"from","","",751,[[["t"]],["t"]]],[11,"into","","",751,[[["self"]],["u"]]],[11,"try_from","","",751,[[["u"]],["result"]]],[11,"borrow","","",751,[[["self"]],["t"]]],[11,"borrow_mut","","",751,[[["self"]],["t"]]],[11,"try_into","","",751,[[["self"]],["result"]]],[11,"get_type_id","","",751,[[["self"]],["typeid"]]],[11,"into_any","","",751,[[["box"]],["box",["any"]]]],[11,"as_any","","",751,[[["self"]],["any"]]],[11,"as_any_mut","","",751,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"handle","","",57,N],[11,"into_any","","",57,[[["box"]],["box",["any"]]]],[11,"as_any","","",57,[[["self"]],["any"]]],[11,"as_any_mut","","",57,[[["self"]],["any"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_any","","",48,[[["box"]],["box",["any"]]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"from","","",752,[[["t"]],["t"]]],[11,"into","","",752,[[["self"]],["u"]]],[11,"try_from","","",752,[[["u"]],["result"]]],[11,"borrow","","",752,[[["self"]],["t"]]],[11,"borrow_mut","","",752,[[["self"]],["t"]]],[11,"try_into","","",752,[[["self"]],["result"]]],[11,"get_type_id","","",752,[[["self"]],["typeid"]]],[11,"into_any","","",752,[[["box"]],["box",["any"]]]],[11,"as_any","","",752,[[["self"]],["any"]]],[11,"as_any_mut","","",752,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"handle","","",58,N],[11,"into_any","","",58,[[["box"]],["box",["any"]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],["box",["any"]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_any","","",50,[[["box"]],["box",["any"]]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",753,[[["t"]],["t"]]],[11,"into","","",753,[[["self"]],["u"]]],[11,"to_owned","","",753,[[["self"]],["t"]]],[11,"clone_into","","",753,N],[11,"try_from","","",753,[[["u"]],["result"]]],[11,"borrow","","",753,[[["self"]],["t"]]],[11,"borrow_mut","","",753,[[["self"]],["t"]]],[11,"try_into","","",753,[[["self"]],["result"]]],[11,"get_type_id","","",753,[[["self"]],["typeid"]]],[11,"handle","","",753,N],[11,"into_any","","",753,[[["box"]],["box",["any"]]]],[11,"as_any","","",753,[[["self"]],["any"]]],[11,"as_any_mut","","",753,[[["self"]],["any"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],["box",["any"]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"from","","",754,[[["t"]],["t"]]],[11,"into","","",754,[[["self"]],["u"]]],[11,"try_from","","",754,[[["u"]],["result"]]],[11,"borrow","","",754,[[["self"]],["t"]]],[11,"borrow_mut","","",754,[[["self"]],["t"]]],[11,"try_into","","",754,[[["self"]],["result"]]],[11,"get_type_id","","",754,[[["self"]],["typeid"]]],[11,"into_any","","",754,[[["box"]],["box",["any"]]]],[11,"as_any","","",754,[[["self"]],["any"]]],[11,"as_any_mut","","",754,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"handle","","",59,N],[11,"into_any","","",59,[[["box"]],["box",["any"]]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],["box",["any"]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_any","","",55,[[["box"]],["box",["any"]]]],[11,"as_any","","",55,[[["self"]],["any"]]],[11,"as_any_mut","","",55,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"handle","","",71,N],[11,"into_any","","",71,[[["box"]],["box",["any"]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_any","","",60,[[["box"]],["box",["any"]]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],["box",["any"]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"from","","",755,[[["t"]],["t"]]],[11,"into","","",755,[[["self"]],["u"]]],[11,"try_from","","",755,[[["u"]],["result"]]],[11,"borrow","","",755,[[["self"]],["t"]]],[11,"borrow_mut","","",755,[[["self"]],["t"]]],[11,"try_into","","",755,[[["self"]],["result"]]],[11,"get_type_id","","",755,[[["self"]],["typeid"]]],[11,"into_any","","",755,[[["box"]],["box",["any"]]]],[11,"as_any","","",755,[[["self"]],["any"]]],[11,"as_any_mut","","",755,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"handle","","",72,N],[11,"into_any","","",72,[[["box"]],["box",["any"]]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],["box",["any"]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],["box",["any"]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",756,[[["t"]],["t"]]],[11,"into","","",756,[[["self"]],["u"]]],[11,"to_owned","","",756,[[["self"]],["t"]]],[11,"clone_into","","",756,N],[11,"try_from","","",756,[[["u"]],["result"]]],[11,"borrow","","",756,[[["self"]],["t"]]],[11,"borrow_mut","","",756,[[["self"]],["t"]]],[11,"try_into","","",756,[[["self"]],["result"]]],[11,"get_type_id","","",756,[[["self"]],["typeid"]]],[11,"handle","","",756,N],[11,"into_any","","",756,[[["box"]],["box",["any"]]]],[11,"as_any","","",756,[[["self"]],["any"]]],[11,"as_any_mut","","",756,[[["self"]],["any"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_any","","",65,[[["box"]],["box",["any"]]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],["box",["any"]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"from","","",757,[[["t"]],["t"]]],[11,"into","","",757,[[["self"]],["u"]]],[11,"try_from","","",757,[[["u"]],["result"]]],[11,"borrow","","",757,[[["self"]],["t"]]],[11,"borrow_mut","","",757,[[["self"]],["t"]]],[11,"try_into","","",757,[[["self"]],["result"]]],[11,"get_type_id","","",757,[[["self"]],["typeid"]]],[11,"into_any","","",757,[[["box"]],["box",["any"]]]],[11,"as_any","","",757,[[["self"]],["any"]]],[11,"as_any_mut","","",757,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"handle","","",73,N],[11,"into_any","","",73,[[["box"]],["box",["any"]]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_any","","",68,[[["box"]],["box",["any"]]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_any","","",69,[[["box"]],["box",["any"]]]],[11,"as_any","","",69,[[["self"]],["any"]]],[11,"as_any_mut","","",69,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"handle","","",90,N],[11,"into_any","","",90,[[["box"]],["box",["any"]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_any","","",74,[[["box"]],["box",["any"]]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],["box",["any"]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"handle","","",91,N],[11,"into_any","","",91,[[["box"]],["box",["any"]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_any","","",77,[[["box"]],["box",["any"]]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],["box",["any"]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],["box",["any"]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_any","","",80,[[["box"]],["box",["any"]]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"handle","","",92,N],[11,"into_any","","",92,[[["box"]],["box",["any"]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],["box",["any"]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_any","","",83,[[["box"]],["box",["any"]]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"handle","","",93,N],[11,"into_any","","",93,[[["box"]],["box",["any"]]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],["box",["any"]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],["box",["any"]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],["box",["any"]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],["box",["any"]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"handle","","",107,N],[11,"into_any","","",107,[[["box"]],["box",["any"]]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],["box",["any"]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_any","","",95,[[["box"]],["box",["any"]]]],[11,"as_any","","",95,[[["self"]],["any"]]],[11,"as_any_mut","","",95,[[["self"]],["any"]]],[11,"from","","",758,[[["t"]],["t"]]],[11,"into","","",758,[[["self"]],["u"]]],[11,"try_from","","",758,[[["u"]],["result"]]],[11,"borrow","","",758,[[["self"]],["t"]]],[11,"borrow_mut","","",758,[[["self"]],["t"]]],[11,"try_into","","",758,[[["self"]],["result"]]],[11,"get_type_id","","",758,[[["self"]],["typeid"]]],[11,"into_any","","",758,[[["box"]],["box",["any"]]]],[11,"as_any","","",758,[[["self"]],["any"]]],[11,"as_any_mut","","",758,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"handle","","",108,N],[11,"into_any","","",108,[[["box"]],["box",["any"]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],["box",["any"]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],["box",["any"]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"from","","",759,[[["t"]],["t"]]],[11,"into","","",759,[[["self"]],["u"]]],[11,"try_from","","",759,[[["u"]],["result"]]],[11,"borrow","","",759,[[["self"]],["t"]]],[11,"borrow_mut","","",759,[[["self"]],["t"]]],[11,"try_into","","",759,[[["self"]],["result"]]],[11,"get_type_id","","",759,[[["self"]],["typeid"]]],[11,"into_any","","",759,[[["box"]],["box",["any"]]]],[11,"as_any","","",759,[[["self"]],["any"]]],[11,"as_any_mut","","",759,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",760,[[["t"]],["t"]]],[11,"into","","",760,[[["self"]],["u"]]],[11,"to_owned","","",760,[[["self"]],["t"]]],[11,"clone_into","","",760,N],[11,"try_from","","",760,[[["u"]],["result"]]],[11,"borrow","","",760,[[["self"]],["t"]]],[11,"borrow_mut","","",760,[[["self"]],["t"]]],[11,"try_into","","",760,[[["self"]],["result"]]],[11,"get_type_id","","",760,[[["self"]],["typeid"]]],[11,"handle","","",760,N],[11,"into_any","","",760,[[["box"]],["box",["any"]]]],[11,"as_any","","",760,[[["self"]],["any"]]],[11,"as_any_mut","","",760,[[["self"]],["any"]]],[11,"from","","",761,[[["t"]],["t"]]],[11,"into","","",761,[[["self"]],["u"]]],[11,"try_from","","",761,[[["u"]],["result"]]],[11,"borrow","","",761,[[["self"]],["t"]]],[11,"borrow_mut","","",761,[[["self"]],["t"]]],[11,"try_into","","",761,[[["self"]],["result"]]],[11,"get_type_id","","",761,[[["self"]],["typeid"]]],[11,"into_any","","",761,[[["box"]],["box",["any"]]]],[11,"as_any","","",761,[[["self"]],["any"]]],[11,"as_any_mut","","",761,[[["self"]],["any"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_any","","",98,[[["box"]],["box",["any"]]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",762,[[["t"]],["t"]]],[11,"into","","",762,[[["self"]],["u"]]],[11,"to_owned","","",762,[[["self"]],["t"]]],[11,"clone_into","","",762,N],[11,"try_from","","",762,[[["u"]],["result"]]],[11,"borrow","","",762,[[["self"]],["t"]]],[11,"borrow_mut","","",762,[[["self"]],["t"]]],[11,"try_into","","",762,[[["self"]],["result"]]],[11,"get_type_id","","",762,[[["self"]],["typeid"]]],[11,"handle","","",762,N],[11,"into_any","","",762,[[["box"]],["box",["any"]]]],[11,"as_any","","",762,[[["self"]],["any"]]],[11,"as_any_mut","","",762,[[["self"]],["any"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],["box",["any"]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],["box",["any"]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"from","","",763,[[["t"]],["t"]]],[11,"into","","",763,[[["self"]],["u"]]],[11,"try_from","","",763,[[["u"]],["result"]]],[11,"borrow","","",763,[[["self"]],["t"]]],[11,"borrow_mut","","",763,[[["self"]],["t"]]],[11,"try_into","","",763,[[["self"]],["result"]]],[11,"get_type_id","","",763,[[["self"]],["typeid"]]],[11,"into_any","","",763,[[["box"]],["box",["any"]]]],[11,"as_any","","",763,[[["self"]],["any"]]],[11,"as_any_mut","","",763,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",764,[[["t"]],["t"]]],[11,"into","","",764,[[["self"]],["u"]]],[11,"to_owned","","",764,[[["self"]],["t"]]],[11,"clone_into","","",764,N],[11,"try_from","","",764,[[["u"]],["result"]]],[11,"borrow","","",764,[[["self"]],["t"]]],[11,"borrow_mut","","",764,[[["self"]],["t"]]],[11,"try_into","","",764,[[["self"]],["result"]]],[11,"get_type_id","","",764,[[["self"]],["typeid"]]],[11,"handle","","",764,N],[11,"into_any","","",764,[[["box"]],["box",["any"]]]],[11,"as_any","","",764,[[["self"]],["any"]]],[11,"as_any_mut","","",764,[[["self"]],["any"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],["box",["any"]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],["box",["any"]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"from","","",765,[[["t"]],["t"]]],[11,"into","","",765,[[["self"]],["u"]]],[11,"try_from","","",765,[[["u"]],["result"]]],[11,"borrow","","",765,[[["self"]],["t"]]],[11,"borrow_mut","","",765,[[["self"]],["t"]]],[11,"try_into","","",765,[[["self"]],["result"]]],[11,"get_type_id","","",765,[[["self"]],["typeid"]]],[11,"into_any","","",765,[[["box"]],["box",["any"]]]],[11,"as_any","","",765,[[["self"]],["any"]]],[11,"as_any_mut","","",765,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"handle","","",109,N],[11,"into_any","","",109,[[["box"]],["box",["any"]]]],[11,"as_any","","",109,[[["self"]],["any"]]],[11,"as_any_mut","","",109,[[["self"]],["any"]]],[11,"from","","",766,[[["t"]],["t"]]],[11,"into","","",766,[[["self"]],["u"]]],[11,"try_from","","",766,[[["u"]],["result"]]],[11,"borrow","","",766,[[["self"]],["t"]]],[11,"borrow_mut","","",766,[[["self"]],["t"]]],[11,"try_into","","",766,[[["self"]],["result"]]],[11,"get_type_id","","",766,[[["self"]],["typeid"]]],[11,"into_any","","",766,[[["box"]],["box",["any"]]]],[11,"as_any","","",766,[[["self"]],["any"]]],[11,"as_any_mut","","",766,[[["self"]],["any"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],["box",["any"]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"handle","","",129,N],[11,"into_any","","",129,[[["box"]],["box",["any"]]]],[11,"as_any","","",129,[[["self"]],["any"]]],[11,"as_any_mut","","",129,[[["self"]],["any"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into_any","","",110,[[["box"]],["box",["any"]]]],[11,"as_any","","",110,[[["self"]],["any"]]],[11,"as_any_mut","","",110,[[["self"]],["any"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into_any","","",111,[[["box"]],["box",["any"]]]],[11,"as_any","","",111,[[["self"]],["any"]]],[11,"as_any_mut","","",111,[[["self"]],["any"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into_any","","",112,[[["box"]],["box",["any"]]]],[11,"as_any","","",112,[[["self"]],["any"]]],[11,"as_any_mut","","",112,[[["self"]],["any"]]],[11,"from","","",767,[[["t"]],["t"]]],[11,"into","","",767,[[["self"]],["u"]]],[11,"try_from","","",767,[[["u"]],["result"]]],[11,"borrow","","",767,[[["self"]],["t"]]],[11,"borrow_mut","","",767,[[["self"]],["t"]]],[11,"try_into","","",767,[[["self"]],["result"]]],[11,"get_type_id","","",767,[[["self"]],["typeid"]]],[11,"into_any","","",767,[[["box"]],["box",["any"]]]],[11,"as_any","","",767,[[["self"]],["any"]]],[11,"as_any_mut","","",767,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"handle","","",130,N],[11,"into_any","","",130,[[["box"]],["box",["any"]]]],[11,"as_any","","",130,[[["self"]],["any"]]],[11,"as_any_mut","","",130,[[["self"]],["any"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into_any","","",113,[[["box"]],["box",["any"]]]],[11,"as_any","","",113,[[["self"]],["any"]]],[11,"as_any_mut","","",113,[[["self"]],["any"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into_any","","",114,[[["box"]],["box",["any"]]]],[11,"as_any","","",114,[[["self"]],["any"]]],[11,"as_any_mut","","",114,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"handle","","",131,N],[11,"into_any","","",131,[[["box"]],["box",["any"]]]],[11,"as_any","","",131,[[["self"]],["any"]]],[11,"as_any_mut","","",131,[[["self"]],["any"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_any","","",116,[[["box"]],["box",["any"]]]],[11,"as_any","","",116,[[["self"]],["any"]]],[11,"as_any_mut","","",116,[[["self"]],["any"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into_any","","",117,[[["box"]],["box",["any"]]]],[11,"as_any","","",117,[[["self"]],["any"]]],[11,"as_any_mut","","",117,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",768,[[["t"]],["t"]]],[11,"into","","",768,[[["self"]],["u"]]],[11,"to_owned","","",768,[[["self"]],["t"]]],[11,"clone_into","","",768,N],[11,"try_from","","",768,[[["u"]],["result"]]],[11,"borrow","","",768,[[["self"]],["t"]]],[11,"borrow_mut","","",768,[[["self"]],["t"]]],[11,"try_into","","",768,[[["self"]],["result"]]],[11,"get_type_id","","",768,[[["self"]],["typeid"]]],[11,"handle","","",768,N],[11,"into_any","","",768,[[["box"]],["box",["any"]]]],[11,"as_any","","",768,[[["self"]],["any"]]],[11,"as_any_mut","","",768,[[["self"]],["any"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into_any","","",119,[[["box"]],["box",["any"]]]],[11,"as_any","","",119,[[["self"]],["any"]]],[11,"as_any_mut","","",119,[[["self"]],["any"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into_any","","",120,[[["box"]],["box",["any"]]]],[11,"as_any","","",120,[[["self"]],["any"]]],[11,"as_any_mut","","",120,[[["self"]],["any"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into_any","","",121,[[["box"]],["box",["any"]]]],[11,"as_any","","",121,[[["self"]],["any"]]],[11,"as_any_mut","","",121,[[["self"]],["any"]]],[11,"from","","",769,[[["t"]],["t"]]],[11,"into","","",769,[[["self"]],["u"]]],[11,"try_from","","",769,[[["u"]],["result"]]],[11,"borrow","","",769,[[["self"]],["t"]]],[11,"borrow_mut","","",769,[[["self"]],["t"]]],[11,"try_into","","",769,[[["self"]],["result"]]],[11,"get_type_id","","",769,[[["self"]],["typeid"]]],[11,"into_any","","",769,[[["box"]],["box",["any"]]]],[11,"as_any","","",769,[[["self"]],["any"]]],[11,"as_any_mut","","",769,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"handle","","",132,N],[11,"into_any","","",132,[[["box"]],["box",["any"]]]],[11,"as_any","","",132,[[["self"]],["any"]]],[11,"as_any_mut","","",132,[[["self"]],["any"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into_any","","",123,[[["box"]],["box",["any"]]]],[11,"as_any","","",123,[[["self"]],["any"]]],[11,"as_any_mut","","",123,[[["self"]],["any"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into_any","","",124,[[["box"]],["box",["any"]]]],[11,"as_any","","",124,[[["self"]],["any"]]],[11,"as_any_mut","","",124,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"handle","","",133,N],[11,"into_any","","",133,[[["box"]],["box",["any"]]]],[11,"as_any","","",133,[[["self"]],["any"]]],[11,"as_any_mut","","",133,[[["self"]],["any"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into_any","","",126,[[["box"]],["box",["any"]]]],[11,"as_any","","",126,[[["self"]],["any"]]],[11,"as_any_mut","","",126,[[["self"]],["any"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into_any","","",127,[[["box"]],["box",["any"]]]],[11,"as_any","","",127,[[["self"]],["any"]]],[11,"as_any_mut","","",127,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"handle","","",149,N],[11,"into_any","","",149,[[["box"]],["box",["any"]]]],[11,"as_any","","",149,[[["self"]],["any"]]],[11,"as_any_mut","","",149,[[["self"]],["any"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_any","","",134,[[["box"]],["box",["any"]]]],[11,"as_any","","",134,[[["self"]],["any"]]],[11,"as_any_mut","","",134,[[["self"]],["any"]]],[11,"from","","",770,[[["t"]],["t"]]],[11,"into","","",770,[[["self"]],["u"]]],[11,"try_from","","",770,[[["u"]],["result"]]],[11,"borrow","","",770,[[["self"]],["t"]]],[11,"borrow_mut","","",770,[[["self"]],["t"]]],[11,"try_into","","",770,[[["self"]],["result"]]],[11,"get_type_id","","",770,[[["self"]],["typeid"]]],[11,"into_any","","",770,[[["box"]],["box",["any"]]]],[11,"as_any","","",770,[[["self"]],["any"]]],[11,"as_any_mut","","",770,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"handle","","",150,N],[11,"into_any","","",150,[[["box"]],["box",["any"]]]],[11,"as_any","","",150,[[["self"]],["any"]]],[11,"as_any_mut","","",150,[[["self"]],["any"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into_any","","",135,[[["box"]],["box",["any"]]]],[11,"as_any","","",135,[[["self"]],["any"]]],[11,"as_any_mut","","",135,[[["self"]],["any"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"into_any","","",136,[[["box"]],["box",["any"]]]],[11,"as_any","","",136,[[["self"]],["any"]]],[11,"as_any_mut","","",136,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"handle","","",151,N],[11,"into_any","","",151,[[["box"]],["box",["any"]]]],[11,"as_any","","",151,[[["self"]],["any"]]],[11,"as_any_mut","","",151,[[["self"]],["any"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"into_any","","",138,[[["box"]],["box",["any"]]]],[11,"as_any","","",138,[[["self"]],["any"]]],[11,"as_any_mut","","",138,[[["self"]],["any"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"into_any","","",139,[[["box"]],["box",["any"]]]],[11,"as_any","","",139,[[["self"]],["any"]]],[11,"as_any_mut","","",139,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",771,[[["t"]],["t"]]],[11,"into","","",771,[[["self"]],["u"]]],[11,"to_owned","","",771,[[["self"]],["t"]]],[11,"clone_into","","",771,N],[11,"try_from","","",771,[[["u"]],["result"]]],[11,"borrow","","",771,[[["self"]],["t"]]],[11,"borrow_mut","","",771,[[["self"]],["t"]]],[11,"try_into","","",771,[[["self"]],["result"]]],[11,"get_type_id","","",771,[[["self"]],["typeid"]]],[11,"handle","","",771,N],[11,"into_any","","",771,[[["box"]],["box",["any"]]]],[11,"as_any","","",771,[[["self"]],["any"]]],[11,"as_any_mut","","",771,[[["self"]],["any"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"into_any","","",141,[[["box"]],["box",["any"]]]],[11,"as_any","","",141,[[["self"]],["any"]]],[11,"as_any_mut","","",141,[[["self"]],["any"]]],[11,"from","","",772,[[["t"]],["t"]]],[11,"into","","",772,[[["self"]],["u"]]],[11,"try_from","","",772,[[["u"]],["result"]]],[11,"borrow","","",772,[[["self"]],["t"]]],[11,"borrow_mut","","",772,[[["self"]],["t"]]],[11,"try_into","","",772,[[["self"]],["result"]]],[11,"get_type_id","","",772,[[["self"]],["typeid"]]],[11,"into_any","","",772,[[["box"]],["box",["any"]]]],[11,"as_any","","",772,[[["self"]],["any"]]],[11,"as_any_mut","","",772,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"handle","","",152,N],[11,"into_any","","",152,[[["box"]],["box",["any"]]]],[11,"as_any","","",152,[[["self"]],["any"]]],[11,"as_any_mut","","",152,[[["self"]],["any"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"into_any","","",143,[[["box"]],["box",["any"]]]],[11,"as_any","","",143,[[["self"]],["any"]]],[11,"as_any_mut","","",143,[[["self"]],["any"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"into_any","","",144,[[["box"]],["box",["any"]]]],[11,"as_any","","",144,[[["self"]],["any"]]],[11,"as_any_mut","","",144,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"handle","","",153,N],[11,"into_any","","",153,[[["box"]],["box",["any"]]]],[11,"as_any","","",153,[[["self"]],["any"]]],[11,"as_any_mut","","",153,[[["self"]],["any"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"into_any","","",146,[[["box"]],["box",["any"]]]],[11,"as_any","","",146,[[["self"]],["any"]]],[11,"as_any_mut","","",146,[[["self"]],["any"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into_any","","",147,[[["box"]],["box",["any"]]]],[11,"as_any","","",147,[[["self"]],["any"]]],[11,"as_any_mut","","",147,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"handle","","",175,N],[11,"into_any","","",175,[[["box"]],["box",["any"]]]],[11,"as_any","","",175,[[["self"]],["any"]]],[11,"as_any_mut","","",175,[[["self"]],["any"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"into_any","","",154,[[["box"]],["box",["any"]]]],[11,"as_any","","",154,[[["self"]],["any"]]],[11,"as_any_mut","","",154,[[["self"]],["any"]]],[11,"from","","",773,[[["t"]],["t"]]],[11,"into","","",773,[[["self"]],["u"]]],[11,"try_from","","",773,[[["u"]],["result"]]],[11,"borrow","","",773,[[["self"]],["t"]]],[11,"borrow_mut","","",773,[[["self"]],["t"]]],[11,"try_into","","",773,[[["self"]],["result"]]],[11,"get_type_id","","",773,[[["self"]],["typeid"]]],[11,"into_any","","",773,[[["box"]],["box",["any"]]]],[11,"as_any","","",773,[[["self"]],["any"]]],[11,"as_any_mut","","",773,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"handle","","",176,N],[11,"into_any","","",176,[[["box"]],["box",["any"]]]],[11,"as_any","","",176,[[["self"]],["any"]]],[11,"as_any_mut","","",176,[[["self"]],["any"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"into_any","","",155,[[["box"]],["box",["any"]]]],[11,"as_any","","",155,[[["self"]],["any"]]],[11,"as_any_mut","","",155,[[["self"]],["any"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"into_any","","",156,[[["box"]],["box",["any"]]]],[11,"as_any","","",156,[[["self"]],["any"]]],[11,"as_any_mut","","",156,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"handle","","",177,N],[11,"into_any","","",177,[[["box"]],["box",["any"]]]],[11,"as_any","","",177,[[["self"]],["any"]]],[11,"as_any_mut","","",177,[[["self"]],["any"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"into_any","","",158,[[["box"]],["box",["any"]]]],[11,"as_any","","",158,[[["self"]],["any"]]],[11,"as_any_mut","","",158,[[["self"]],["any"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"into_any","","",159,[[["box"]],["box",["any"]]]],[11,"as_any","","",159,[[["self"]],["any"]]],[11,"as_any_mut","","",159,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"handle","","",178,N],[11,"into_any","","",178,[[["box"]],["box",["any"]]]],[11,"as_any","","",178,[[["self"]],["any"]]],[11,"as_any_mut","","",178,[[["self"]],["any"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into_any","","",161,[[["box"]],["box",["any"]]]],[11,"as_any","","",161,[[["self"]],["any"]]],[11,"as_any_mut","","",161,[[["self"]],["any"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"into_any","","",162,[[["box"]],["box",["any"]]]],[11,"as_any","","",162,[[["self"]],["any"]]],[11,"as_any_mut","","",162,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",774,[[["t"]],["t"]]],[11,"into","","",774,[[["self"]],["u"]]],[11,"to_owned","","",774,[[["self"]],["t"]]],[11,"clone_into","","",774,N],[11,"try_from","","",774,[[["u"]],["result"]]],[11,"borrow","","",774,[[["self"]],["t"]]],[11,"borrow_mut","","",774,[[["self"]],["t"]]],[11,"try_into","","",774,[[["self"]],["result"]]],[11,"get_type_id","","",774,[[["self"]],["typeid"]]],[11,"handle","","",774,N],[11,"into_any","","",774,[[["box"]],["box",["any"]]]],[11,"as_any","","",774,[[["self"]],["any"]]],[11,"as_any_mut","","",774,[[["self"]],["any"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"into_any","","",164,[[["box"]],["box",["any"]]]],[11,"as_any","","",164,[[["self"]],["any"]]],[11,"as_any_mut","","",164,[[["self"]],["any"]]],[11,"from","","",775,[[["t"]],["t"]]],[11,"into","","",775,[[["self"]],["u"]]],[11,"try_from","","",775,[[["u"]],["result"]]],[11,"borrow","","",775,[[["self"]],["t"]]],[11,"borrow_mut","","",775,[[["self"]],["t"]]],[11,"try_into","","",775,[[["self"]],["result"]]],[11,"get_type_id","","",775,[[["self"]],["typeid"]]],[11,"into_any","","",775,[[["box"]],["box",["any"]]]],[11,"as_any","","",775,[[["self"]],["any"]]],[11,"as_any_mut","","",775,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"handle","","",179,N],[11,"into_any","","",179,[[["box"]],["box",["any"]]]],[11,"as_any","","",179,[[["self"]],["any"]]],[11,"as_any_mut","","",179,[[["self"]],["any"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"into_any","","",166,[[["box"]],["box",["any"]]]],[11,"as_any","","",166,[[["self"]],["any"]]],[11,"as_any_mut","","",166,[[["self"]],["any"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"into_any","","",167,[[["box"]],["box",["any"]]]],[11,"as_any","","",167,[[["self"]],["any"]]],[11,"as_any_mut","","",167,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"handle","","",180,N],[11,"into_any","","",180,[[["box"]],["box",["any"]]]],[11,"as_any","","",180,[[["self"]],["any"]]],[11,"as_any_mut","","",180,[[["self"]],["any"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"into_any","","",169,[[["box"]],["box",["any"]]]],[11,"as_any","","",169,[[["self"]],["any"]]],[11,"as_any_mut","","",169,[[["self"]],["any"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"into_any","","",170,[[["box"]],["box",["any"]]]],[11,"as_any","","",170,[[["self"]],["any"]]],[11,"as_any_mut","","",170,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"handle","","",181,N],[11,"into_any","","",181,[[["box"]],["box",["any"]]]],[11,"as_any","","",181,[[["self"]],["any"]]],[11,"as_any_mut","","",181,[[["self"]],["any"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"into_any","","",172,[[["box"]],["box",["any"]]]],[11,"as_any","","",172,[[["self"]],["any"]]],[11,"as_any_mut","","",172,[[["self"]],["any"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"into_any","","",173,[[["box"]],["box",["any"]]]],[11,"as_any","","",173,[[["self"]],["any"]]],[11,"as_any_mut","","",173,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"handle","","",191,N],[11,"into_any","","",191,[[["box"]],["box",["any"]]]],[11,"as_any","","",191,[[["self"]],["any"]]],[11,"as_any_mut","","",191,[[["self"]],["any"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"into_any","","",182,[[["box"]],["box",["any"]]]],[11,"as_any","","",182,[[["self"]],["any"]]],[11,"as_any_mut","","",182,[[["self"]],["any"]]],[11,"from","","",776,[[["t"]],["t"]]],[11,"into","","",776,[[["self"]],["u"]]],[11,"try_from","","",776,[[["u"]],["result"]]],[11,"borrow","","",776,[[["self"]],["t"]]],[11,"borrow_mut","","",776,[[["self"]],["t"]]],[11,"try_into","","",776,[[["self"]],["result"]]],[11,"get_type_id","","",776,[[["self"]],["typeid"]]],[11,"into_any","","",776,[[["box"]],["box",["any"]]]],[11,"as_any","","",776,[[["self"]],["any"]]],[11,"as_any_mut","","",776,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"handle","","",192,N],[11,"into_any","","",192,[[["box"]],["box",["any"]]]],[11,"as_any","","",192,[[["self"]],["any"]]],[11,"as_any_mut","","",192,[[["self"]],["any"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into_any","","",183,[[["box"]],["box",["any"]]]],[11,"as_any","","",183,[[["self"]],["any"]]],[11,"as_any_mut","","",183,[[["self"]],["any"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"into_any","","",184,[[["box"]],["box",["any"]]]],[11,"as_any","","",184,[[["self"]],["any"]]],[11,"as_any_mut","","",184,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",777,[[["t"]],["t"]]],[11,"into","","",777,[[["self"]],["u"]]],[11,"to_owned","","",777,[[["self"]],["t"]]],[11,"clone_into","","",777,N],[11,"try_from","","",777,[[["u"]],["result"]]],[11,"borrow","","",777,[[["self"]],["t"]]],[11,"borrow_mut","","",777,[[["self"]],["t"]]],[11,"try_into","","",777,[[["self"]],["result"]]],[11,"get_type_id","","",777,[[["self"]],["typeid"]]],[11,"handle","","",777,N],[11,"into_any","","",777,[[["box"]],["box",["any"]]]],[11,"as_any","","",777,[[["self"]],["any"]]],[11,"as_any_mut","","",777,[[["self"]],["any"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"into_any","","",186,[[["box"]],["box",["any"]]]],[11,"as_any","","",186,[[["self"]],["any"]]],[11,"as_any_mut","","",186,[[["self"]],["any"]]],[11,"from","","",778,[[["t"]],["t"]]],[11,"into","","",778,[[["self"]],["u"]]],[11,"try_from","","",778,[[["u"]],["result"]]],[11,"borrow","","",778,[[["self"]],["t"]]],[11,"borrow_mut","","",778,[[["self"]],["t"]]],[11,"try_into","","",778,[[["self"]],["result"]]],[11,"get_type_id","","",778,[[["self"]],["typeid"]]],[11,"into_any","","",778,[[["box"]],["box",["any"]]]],[11,"as_any","","",778,[[["self"]],["any"]]],[11,"as_any_mut","","",778,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"handle","","",193,N],[11,"into_any","","",193,[[["box"]],["box",["any"]]]],[11,"as_any","","",193,[[["self"]],["any"]]],[11,"as_any_mut","","",193,[[["self"]],["any"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"into_any","","",188,[[["box"]],["box",["any"]]]],[11,"as_any","","",188,[[["self"]],["any"]]],[11,"as_any_mut","","",188,[[["self"]],["any"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"into_any","","",189,[[["box"]],["box",["any"]]]],[11,"as_any","","",189,[[["self"]],["any"]]],[11,"as_any_mut","","",189,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"handle","","",223,N],[11,"into_any","","",223,[[["box"]],["box",["any"]]]],[11,"as_any","","",223,[[["self"]],["any"]]],[11,"as_any_mut","","",223,[[["self"]],["any"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"into_any","","",194,[[["box"]],["box",["any"]]]],[11,"as_any","","",194,[[["self"]],["any"]]],[11,"as_any_mut","","",194,[[["self"]],["any"]]],[11,"from","","",779,[[["t"]],["t"]]],[11,"into","","",779,[[["self"]],["u"]]],[11,"try_from","","",779,[[["u"]],["result"]]],[11,"borrow","","",779,[[["self"]],["t"]]],[11,"borrow_mut","","",779,[[["self"]],["t"]]],[11,"try_into","","",779,[[["self"]],["result"]]],[11,"get_type_id","","",779,[[["self"]],["typeid"]]],[11,"into_any","","",779,[[["box"]],["box",["any"]]]],[11,"as_any","","",779,[[["self"]],["any"]]],[11,"as_any_mut","","",779,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"handle","","",224,N],[11,"into_any","","",224,[[["box"]],["box",["any"]]]],[11,"as_any","","",224,[[["self"]],["any"]]],[11,"as_any_mut","","",224,[[["self"]],["any"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"into_any","","",195,[[["box"]],["box",["any"]]]],[11,"as_any","","",195,[[["self"]],["any"]]],[11,"as_any_mut","","",195,[[["self"]],["any"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"into_any","","",196,[[["box"]],["box",["any"]]]],[11,"as_any","","",196,[[["self"]],["any"]]],[11,"as_any_mut","","",196,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"handle","","",225,N],[11,"into_any","","",225,[[["box"]],["box",["any"]]]],[11,"as_any","","",225,[[["self"]],["any"]]],[11,"as_any_mut","","",225,[[["self"]],["any"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"into_any","","",198,[[["box"]],["box",["any"]]]],[11,"as_any","","",198,[[["self"]],["any"]]],[11,"as_any_mut","","",198,[[["self"]],["any"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"into_any","","",199,[[["box"]],["box",["any"]]]],[11,"as_any","","",199,[[["self"]],["any"]]],[11,"as_any_mut","","",199,[[["self"]],["any"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"into_any","","",200,[[["box"]],["box",["any"]]]],[11,"as_any","","",200,[[["self"]],["any"]]],[11,"as_any_mut","","",200,[[["self"]],["any"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"into_any","","",201,[[["box"]],["box",["any"]]]],[11,"as_any","","",201,[[["self"]],["any"]]],[11,"as_any_mut","","",201,[[["self"]],["any"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"into_any","","",202,[[["box"]],["box",["any"]]]],[11,"as_any","","",202,[[["self"]],["any"]]],[11,"as_any_mut","","",202,[[["self"]],["any"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"into_any","","",203,[[["box"]],["box",["any"]]]],[11,"as_any","","",203,[[["self"]],["any"]]],[11,"as_any_mut","","",203,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"handle","","",226,N],[11,"into_any","","",226,[[["box"]],["box",["any"]]]],[11,"as_any","","",226,[[["self"]],["any"]]],[11,"as_any_mut","","",226,[[["self"]],["any"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"into_any","","",205,[[["box"]],["box",["any"]]]],[11,"as_any","","",205,[[["self"]],["any"]]],[11,"as_any_mut","","",205,[[["self"]],["any"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"into_any","","",206,[[["box"]],["box",["any"]]]],[11,"as_any","","",206,[[["self"]],["any"]]],[11,"as_any_mut","","",206,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",780,[[["t"]],["t"]]],[11,"into","","",780,[[["self"]],["u"]]],[11,"to_owned","","",780,[[["self"]],["t"]]],[11,"clone_into","","",780,N],[11,"try_from","","",780,[[["u"]],["result"]]],[11,"borrow","","",780,[[["self"]],["t"]]],[11,"borrow_mut","","",780,[[["self"]],["t"]]],[11,"try_into","","",780,[[["self"]],["result"]]],[11,"get_type_id","","",780,[[["self"]],["typeid"]]],[11,"handle","","",780,N],[11,"into_any","","",780,[[["box"]],["box",["any"]]]],[11,"as_any","","",780,[[["self"]],["any"]]],[11,"as_any_mut","","",780,[[["self"]],["any"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"into_any","","",208,[[["box"]],["box",["any"]]]],[11,"as_any","","",208,[[["self"]],["any"]]],[11,"as_any_mut","","",208,[[["self"]],["any"]]],[11,"from","","",781,[[["t"]],["t"]]],[11,"into","","",781,[[["self"]],["u"]]],[11,"try_from","","",781,[[["u"]],["result"]]],[11,"borrow","","",781,[[["self"]],["t"]]],[11,"borrow_mut","","",781,[[["self"]],["t"]]],[11,"try_into","","",781,[[["self"]],["result"]]],[11,"get_type_id","","",781,[[["self"]],["typeid"]]],[11,"into_any","","",781,[[["box"]],["box",["any"]]]],[11,"as_any","","",781,[[["self"]],["any"]]],[11,"as_any_mut","","",781,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"handle","","",227,N],[11,"into_any","","",227,[[["box"]],["box",["any"]]]],[11,"as_any","","",227,[[["self"]],["any"]]],[11,"as_any_mut","","",227,[[["self"]],["any"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"into_any","","",210,[[["box"]],["box",["any"]]]],[11,"as_any","","",210,[[["self"]],["any"]]],[11,"as_any_mut","","",210,[[["self"]],["any"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"into_any","","",211,[[["box"]],["box",["any"]]]],[11,"as_any","","",211,[[["self"]],["any"]]],[11,"as_any_mut","","",211,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"handle","","",228,N],[11,"into_any","","",228,[[["box"]],["box",["any"]]]],[11,"as_any","","",228,[[["self"]],["any"]]],[11,"as_any_mut","","",228,[[["self"]],["any"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"into_any","","",213,[[["box"]],["box",["any"]]]],[11,"as_any","","",213,[[["self"]],["any"]]],[11,"as_any_mut","","",213,[[["self"]],["any"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"into_any","","",214,[[["box"]],["box",["any"]]]],[11,"as_any","","",214,[[["self"]],["any"]]],[11,"as_any_mut","","",214,[[["self"]],["any"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"into_any","","",215,[[["box"]],["box",["any"]]]],[11,"as_any","","",215,[[["self"]],["any"]]],[11,"as_any_mut","","",215,[[["self"]],["any"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"into_any","","",216,[[["box"]],["box",["any"]]]],[11,"as_any","","",216,[[["self"]],["any"]]],[11,"as_any_mut","","",216,[[["self"]],["any"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"into_any","","",217,[[["box"]],["box",["any"]]]],[11,"as_any","","",217,[[["self"]],["any"]]],[11,"as_any_mut","","",217,[[["self"]],["any"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"into_any","","",218,[[["box"]],["box",["any"]]]],[11,"as_any","","",218,[[["self"]],["any"]]],[11,"as_any_mut","","",218,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"handle","","",229,N],[11,"into_any","","",229,[[["box"]],["box",["any"]]]],[11,"as_any","","",229,[[["self"]],["any"]]],[11,"as_any_mut","","",229,[[["self"]],["any"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"into_any","","",220,[[["box"]],["box",["any"]]]],[11,"as_any","","",220,[[["self"]],["any"]]],[11,"as_any_mut","","",220,[[["self"]],["any"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"into_any","","",221,[[["box"]],["box",["any"]]]],[11,"as_any","","",221,[[["self"]],["any"]]],[11,"as_any_mut","","",221,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"handle","","",289,N],[11,"into_any","","",289,[[["box"]],["box",["any"]]]],[11,"as_any","","",289,[[["self"]],["any"]]],[11,"as_any_mut","","",289,[[["self"]],["any"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"into_any","","",230,[[["box"]],["box",["any"]]]],[11,"as_any","","",230,[[["self"]],["any"]]],[11,"as_any_mut","","",230,[[["self"]],["any"]]],[11,"from","","",782,[[["t"]],["t"]]],[11,"into","","",782,[[["self"]],["u"]]],[11,"try_from","","",782,[[["u"]],["result"]]],[11,"borrow","","",782,[[["self"]],["t"]]],[11,"borrow_mut","","",782,[[["self"]],["t"]]],[11,"try_into","","",782,[[["self"]],["result"]]],[11,"get_type_id","","",782,[[["self"]],["typeid"]]],[11,"into_any","","",782,[[["box"]],["box",["any"]]]],[11,"as_any","","",782,[[["self"]],["any"]]],[11,"as_any_mut","","",782,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",290,[[["t"]],["t"]]],[11,"into","","",290,[[["self"]],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"handle","","",290,N],[11,"into_any","","",290,[[["box"]],["box",["any"]]]],[11,"as_any","","",290,[[["self"]],["any"]]],[11,"as_any_mut","","",290,[[["self"]],["any"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"into_any","","",231,[[["box"]],["box",["any"]]]],[11,"as_any","","",231,[[["self"]],["any"]]],[11,"as_any_mut","","",231,[[["self"]],["any"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"into_any","","",232,[[["box"]],["box",["any"]]]],[11,"as_any","","",232,[[["self"]],["any"]]],[11,"as_any_mut","","",232,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"handle","","",291,N],[11,"into_any","","",291,[[["box"]],["box",["any"]]]],[11,"as_any","","",291,[[["self"]],["any"]]],[11,"as_any_mut","","",291,[[["self"]],["any"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"into_any","","",234,[[["box"]],["box",["any"]]]],[11,"as_any","","",234,[[["self"]],["any"]]],[11,"as_any_mut","","",234,[[["self"]],["any"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"into_any","","",235,[[["box"]],["box",["any"]]]],[11,"as_any","","",235,[[["self"]],["any"]]],[11,"as_any_mut","","",235,[[["self"]],["any"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"into_any","","",236,[[["box"]],["box",["any"]]]],[11,"as_any","","",236,[[["self"]],["any"]]],[11,"as_any_mut","","",236,[[["self"]],["any"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"into_any","","",237,[[["box"]],["box",["any"]]]],[11,"as_any","","",237,[[["self"]],["any"]]],[11,"as_any_mut","","",237,[[["self"]],["any"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"into_any","","",238,[[["box"]],["box",["any"]]]],[11,"as_any","","",238,[[["self"]],["any"]]],[11,"as_any_mut","","",238,[[["self"]],["any"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"into_any","","",239,[[["box"]],["box",["any"]]]],[11,"as_any","","",239,[[["self"]],["any"]]],[11,"as_any_mut","","",239,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"handle","","",292,N],[11,"into_any","","",292,[[["box"]],["box",["any"]]]],[11,"as_any","","",292,[[["self"]],["any"]]],[11,"as_any_mut","","",292,[[["self"]],["any"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"into_any","","",241,[[["box"]],["box",["any"]]]],[11,"as_any","","",241,[[["self"]],["any"]]],[11,"as_any_mut","","",241,[[["self"]],["any"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"into_any","","",242,[[["box"]],["box",["any"]]]],[11,"as_any","","",242,[[["self"]],["any"]]],[11,"as_any_mut","","",242,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"handle","","",293,N],[11,"into_any","","",293,[[["box"]],["box",["any"]]]],[11,"as_any","","",293,[[["self"]],["any"]]],[11,"as_any_mut","","",293,[[["self"]],["any"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"into_any","","",244,[[["box"]],["box",["any"]]]],[11,"as_any","","",244,[[["self"]],["any"]]],[11,"as_any_mut","","",244,[[["self"]],["any"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into_any","","",245,[[["box"]],["box",["any"]]]],[11,"as_any","","",245,[[["self"]],["any"]]],[11,"as_any_mut","","",245,[[["self"]],["any"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"into_any","","",246,[[["box"]],["box",["any"]]]],[11,"as_any","","",246,[[["self"]],["any"]]],[11,"as_any_mut","","",246,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"handle","","",294,N],[11,"into_any","","",294,[[["box"]],["box",["any"]]]],[11,"as_any","","",294,[[["self"]],["any"]]],[11,"as_any_mut","","",294,[[["self"]],["any"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"into_any","","",248,[[["box"]],["box",["any"]]]],[11,"as_any","","",248,[[["self"]],["any"]]],[11,"as_any_mut","","",248,[[["self"]],["any"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"into_any","","",249,[[["box"]],["box",["any"]]]],[11,"as_any","","",249,[[["self"]],["any"]]],[11,"as_any_mut","","",249,[[["self"]],["any"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"into_any","","",250,[[["box"]],["box",["any"]]]],[11,"as_any","","",250,[[["self"]],["any"]]],[11,"as_any_mut","","",250,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"handle","","",295,N],[11,"into_any","","",295,[[["box"]],["box",["any"]]]],[11,"as_any","","",295,[[["self"]],["any"]]],[11,"as_any_mut","","",295,[[["self"]],["any"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"into_any","","",252,[[["box"]],["box",["any"]]]],[11,"as_any","","",252,[[["self"]],["any"]]],[11,"as_any_mut","","",252,[[["self"]],["any"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"into_any","","",253,[[["box"]],["box",["any"]]]],[11,"as_any","","",253,[[["self"]],["any"]]],[11,"as_any_mut","","",253,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"handle","","",296,N],[11,"into_any","","",296,[[["box"]],["box",["any"]]]],[11,"as_any","","",296,[[["self"]],["any"]]],[11,"as_any_mut","","",296,[[["self"]],["any"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"into_any","","",255,[[["box"]],["box",["any"]]]],[11,"as_any","","",255,[[["self"]],["any"]]],[11,"as_any_mut","","",255,[[["self"]],["any"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"into_any","","",256,[[["box"]],["box",["any"]]]],[11,"as_any","","",256,[[["self"]],["any"]]],[11,"as_any_mut","","",256,[[["self"]],["any"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"into_any","","",257,[[["box"]],["box",["any"]]]],[11,"as_any","","",257,[[["self"]],["any"]]],[11,"as_any_mut","","",257,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",783,[[["t"]],["t"]]],[11,"into","","",783,[[["self"]],["u"]]],[11,"to_owned","","",783,[[["self"]],["t"]]],[11,"clone_into","","",783,N],[11,"try_from","","",783,[[["u"]],["result"]]],[11,"borrow","","",783,[[["self"]],["t"]]],[11,"borrow_mut","","",783,[[["self"]],["t"]]],[11,"try_into","","",783,[[["self"]],["result"]]],[11,"get_type_id","","",783,[[["self"]],["typeid"]]],[11,"handle","","",783,N],[11,"into_any","","",783,[[["box"]],["box",["any"]]]],[11,"as_any","","",783,[[["self"]],["any"]]],[11,"as_any_mut","","",783,[[["self"]],["any"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"into_any","","",259,[[["box"]],["box",["any"]]]],[11,"as_any","","",259,[[["self"]],["any"]]],[11,"as_any_mut","","",259,[[["self"]],["any"]]],[11,"from","","",784,[[["t"]],["t"]]],[11,"into","","",784,[[["self"]],["u"]]],[11,"try_from","","",784,[[["u"]],["result"]]],[11,"borrow","","",784,[[["self"]],["t"]]],[11,"borrow_mut","","",784,[[["self"]],["t"]]],[11,"try_into","","",784,[[["self"]],["result"]]],[11,"get_type_id","","",784,[[["self"]],["typeid"]]],[11,"into_any","","",784,[[["box"]],["box",["any"]]]],[11,"as_any","","",784,[[["self"]],["any"]]],[11,"as_any_mut","","",784,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"handle","","",297,N],[11,"into_any","","",297,[[["box"]],["box",["any"]]]],[11,"as_any","","",297,[[["self"]],["any"]]],[11,"as_any_mut","","",297,[[["self"]],["any"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"into_any","","",261,[[["box"]],["box",["any"]]]],[11,"as_any","","",261,[[["self"]],["any"]]],[11,"as_any_mut","","",261,[[["self"]],["any"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"into_any","","",262,[[["box"]],["box",["any"]]]],[11,"as_any","","",262,[[["self"]],["any"]]],[11,"as_any_mut","","",262,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",298,[[["t"]],["t"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"handle","","",298,N],[11,"into_any","","",298,[[["box"]],["box",["any"]]]],[11,"as_any","","",298,[[["self"]],["any"]]],[11,"as_any_mut","","",298,[[["self"]],["any"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"into_any","","",264,[[["box"]],["box",["any"]]]],[11,"as_any","","",264,[[["self"]],["any"]]],[11,"as_any_mut","","",264,[[["self"]],["any"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"into_any","","",265,[[["box"]],["box",["any"]]]],[11,"as_any","","",265,[[["self"]],["any"]]],[11,"as_any_mut","","",265,[[["self"]],["any"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"into_any","","",266,[[["box"]],["box",["any"]]]],[11,"as_any","","",266,[[["self"]],["any"]]],[11,"as_any_mut","","",266,[[["self"]],["any"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"into_any","","",267,[[["box"]],["box",["any"]]]],[11,"as_any","","",267,[[["self"]],["any"]]],[11,"as_any_mut","","",267,[[["self"]],["any"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"into_any","","",268,[[["box"]],["box",["any"]]]],[11,"as_any","","",268,[[["self"]],["any"]]],[11,"as_any_mut","","",268,[[["self"]],["any"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"into_any","","",269,[[["box"]],["box",["any"]]]],[11,"as_any","","",269,[[["self"]],["any"]]],[11,"as_any_mut","","",269,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"handle","","",299,N],[11,"into_any","","",299,[[["box"]],["box",["any"]]]],[11,"as_any","","",299,[[["self"]],["any"]]],[11,"as_any_mut","","",299,[[["self"]],["any"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"into_any","","",271,[[["box"]],["box",["any"]]]],[11,"as_any","","",271,[[["self"]],["any"]]],[11,"as_any_mut","","",271,[[["self"]],["any"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"into_any","","",272,[[["box"]],["box",["any"]]]],[11,"as_any","","",272,[[["self"]],["any"]]],[11,"as_any_mut","","",272,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"handle","","",300,N],[11,"into_any","","",300,[[["box"]],["box",["any"]]]],[11,"as_any","","",300,[[["self"]],["any"]]],[11,"as_any_mut","","",300,[[["self"]],["any"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"into_any","","",274,[[["box"]],["box",["any"]]]],[11,"as_any","","",274,[[["self"]],["any"]]],[11,"as_any_mut","","",274,[[["self"]],["any"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"into_any","","",275,[[["box"]],["box",["any"]]]],[11,"as_any","","",275,[[["self"]],["any"]]],[11,"as_any_mut","","",275,[[["self"]],["any"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"into_any","","",276,[[["box"]],["box",["any"]]]],[11,"as_any","","",276,[[["self"]],["any"]]],[11,"as_any_mut","","",276,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",301,[[["t"]],["t"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"handle","","",301,N],[11,"into_any","","",301,[[["box"]],["box",["any"]]]],[11,"as_any","","",301,[[["self"]],["any"]]],[11,"as_any_mut","","",301,[[["self"]],["any"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"into_any","","",278,[[["box"]],["box",["any"]]]],[11,"as_any","","",278,[[["self"]],["any"]]],[11,"as_any_mut","","",278,[[["self"]],["any"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"into_any","","",279,[[["box"]],["box",["any"]]]],[11,"as_any","","",279,[[["self"]],["any"]]],[11,"as_any_mut","","",279,[[["self"]],["any"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"into_any","","",280,[[["box"]],["box",["any"]]]],[11,"as_any","","",280,[[["self"]],["any"]]],[11,"as_any_mut","","",280,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,N],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"handle","","",302,N],[11,"into_any","","",302,[[["box"]],["box",["any"]]]],[11,"as_any","","",302,[[["self"]],["any"]]],[11,"as_any_mut","","",302,[[["self"]],["any"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"into_any","","",282,[[["box"]],["box",["any"]]]],[11,"as_any","","",282,[[["self"]],["any"]]],[11,"as_any_mut","","",282,[[["self"]],["any"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"into_any","","",283,[[["box"]],["box",["any"]]]],[11,"as_any","","",283,[[["self"]],["any"]]],[11,"as_any_mut","","",283,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",303,[[["t"]],["t"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"handle","","",303,N],[11,"into_any","","",303,[[["box"]],["box",["any"]]]],[11,"as_any","","",303,[[["self"]],["any"]]],[11,"as_any_mut","","",303,[[["self"]],["any"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"into_any","","",285,[[["box"]],["box",["any"]]]],[11,"as_any","","",285,[[["self"]],["any"]]],[11,"as_any_mut","","",285,[[["self"]],["any"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"into_any","","",286,[[["box"]],["box",["any"]]]],[11,"as_any","","",286,[[["self"]],["any"]]],[11,"as_any_mut","","",286,[[["self"]],["any"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"into_any","","",287,[[["box"]],["box",["any"]]]],[11,"as_any","","",287,[[["self"]],["any"]]],[11,"as_any_mut","","",287,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",321,[[["t"]],["t"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"handle","","",321,N],[11,"into_any","","",321,[[["box"]],["box",["any"]]]],[11,"as_any","","",321,[[["self"]],["any"]]],[11,"as_any_mut","","",321,[[["self"]],["any"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,N],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"into_any","","",304,[[["box"]],["box",["any"]]]],[11,"as_any","","",304,[[["self"]],["any"]]],[11,"as_any_mut","","",304,[[["self"]],["any"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,N],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"into_any","","",305,[[["box"]],["box",["any"]]]],[11,"as_any","","",305,[[["self"]],["any"]]],[11,"as_any_mut","","",305,[[["self"]],["any"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"into_any","","",306,[[["box"]],["box",["any"]]]],[11,"as_any","","",306,[[["self"]],["any"]]],[11,"as_any_mut","","",306,[[["self"]],["any"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"to_owned","","",307,[[["self"]],["t"]]],[11,"clone_into","","",307,N],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"into_any","","",307,[[["box"]],["box",["any"]]]],[11,"as_any","","",307,[[["self"]],["any"]]],[11,"as_any_mut","","",307,[[["self"]],["any"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"into_any","","",308,[[["box"]],["box",["any"]]]],[11,"as_any","","",308,[[["self"]],["any"]]],[11,"as_any_mut","","",308,[[["self"]],["any"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"into_any","","",309,[[["box"]],["box",["any"]]]],[11,"as_any","","",309,[[["self"]],["any"]]],[11,"as_any_mut","","",309,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",322,[[["t"]],["t"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"to_owned","","",322,[[["self"]],["t"]]],[11,"clone_into","","",322,N],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"handle","","",322,N],[11,"into_any","","",322,[[["box"]],["box",["any"]]]],[11,"as_any","","",322,[[["self"]],["any"]]],[11,"as_any_mut","","",322,[[["self"]],["any"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"into_any","","",311,[[["box"]],["box",["any"]]]],[11,"as_any","","",311,[[["self"]],["any"]]],[11,"as_any_mut","","",311,[[["self"]],["any"]]],[11,"from","","",785,[[["t"]],["t"]]],[11,"into","","",785,[[["self"]],["u"]]],[11,"try_from","","",785,[[["u"]],["result"]]],[11,"borrow","","",785,[[["self"]],["t"]]],[11,"borrow_mut","","",785,[[["self"]],["t"]]],[11,"try_into","","",785,[[["self"]],["result"]]],[11,"get_type_id","","",785,[[["self"]],["typeid"]]],[11,"into_any","","",785,[[["box"]],["box",["any"]]]],[11,"as_any","","",785,[[["self"]],["any"]]],[11,"as_any_mut","","",785,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",323,[[["t"]],["t"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"to_owned","","",323,[[["self"]],["t"]]],[11,"clone_into","","",323,N],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"handle","","",323,N],[11,"into_any","","",323,[[["box"]],["box",["any"]]]],[11,"as_any","","",323,[[["self"]],["any"]]],[11,"as_any_mut","","",323,[[["self"]],["any"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,N],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"into_any","","",312,[[["box"]],["box",["any"]]]],[11,"as_any","","",312,[[["self"]],["any"]]],[11,"as_any_mut","","",312,[[["self"]],["any"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"to_owned","","",313,[[["self"]],["t"]]],[11,"clone_into","","",313,N],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"into_any","","",313,[[["box"]],["box",["any"]]]],[11,"as_any","","",313,[[["self"]],["any"]]],[11,"as_any_mut","","",313,[[["self"]],["any"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"to_owned","","",314,[[["self"]],["t"]]],[11,"clone_into","","",314,N],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"into_any","","",314,[[["box"]],["box",["any"]]]],[11,"as_any","","",314,[[["self"]],["any"]]],[11,"as_any_mut","","",314,[[["self"]],["any"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"to_owned","","",315,[[["self"]],["t"]]],[11,"clone_into","","",315,N],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"into_any","","",315,[[["box"]],["box",["any"]]]],[11,"as_any","","",315,[[["self"]],["any"]]],[11,"as_any_mut","","",315,[[["self"]],["any"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"into_any","","",316,[[["box"]],["box",["any"]]]],[11,"as_any","","",316,[[["self"]],["any"]]],[11,"as_any_mut","","",316,[[["self"]],["any"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"into_any","","",317,[[["box"]],["box",["any"]]]],[11,"as_any","","",317,[[["self"]],["any"]]],[11,"as_any_mut","","",317,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",786,[[["t"]],["t"]]],[11,"into","","",786,[[["self"]],["u"]]],[11,"to_owned","","",786,[[["self"]],["t"]]],[11,"clone_into","","",786,N],[11,"try_from","","",786,[[["u"]],["result"]]],[11,"borrow","","",786,[[["self"]],["t"]]],[11,"borrow_mut","","",786,[[["self"]],["t"]]],[11,"try_into","","",786,[[["self"]],["result"]]],[11,"get_type_id","","",786,[[["self"]],["typeid"]]],[11,"handle","","",786,N],[11,"into_any","","",786,[[["box"]],["box",["any"]]]],[11,"as_any","","",786,[[["self"]],["any"]]],[11,"as_any_mut","","",786,[[["self"]],["any"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"into_any","","",319,[[["box"]],["box",["any"]]]],[11,"as_any","","",319,[[["self"]],["any"]]],[11,"as_any_mut","","",319,[[["self"]],["any"]]],[11,"from","","",787,[[["t"]],["t"]]],[11,"into","","",787,[[["self"]],["u"]]],[11,"try_from","","",787,[[["u"]],["result"]]],[11,"borrow","","",787,[[["self"]],["t"]]],[11,"borrow_mut","","",787,[[["self"]],["t"]]],[11,"try_into","","",787,[[["self"]],["result"]]],[11,"get_type_id","","",787,[[["self"]],["typeid"]]],[11,"into_any","","",787,[[["box"]],["box",["any"]]]],[11,"as_any","","",787,[[["self"]],["any"]]],[11,"as_any_mut","","",787,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["t"]],["t"]]],[11,"into","","",337,[[["self"]],["u"]]],[11,"to_owned","","",337,[[["self"]],["t"]]],[11,"clone_into","","",337,N],[11,"try_from","","",337,[[["u"]],["result"]]],[11,"borrow","","",337,[[["self"]],["t"]]],[11,"borrow_mut","","",337,[[["self"]],["t"]]],[11,"try_into","","",337,[[["self"]],["result"]]],[11,"get_type_id","","",337,[[["self"]],["typeid"]]],[11,"into_any","","",337,[[["box"]],["box",["any"]]]],[11,"as_any","","",337,[[["self"]],["any"]]],[11,"as_any_mut","","",337,[[["self"]],["any"]]],[11,"from","","",338,[[["t"]],["t"]]],[11,"into","","",338,[[["self"]],["u"]]],[11,"to_owned","","",338,[[["self"]],["t"]]],[11,"clone_into","","",338,N],[11,"try_from","","",338,[[["u"]],["result"]]],[11,"borrow","","",338,[[["self"]],["t"]]],[11,"borrow_mut","","",338,[[["self"]],["t"]]],[11,"try_into","","",338,[[["self"]],["result"]]],[11,"get_type_id","","",338,[[["self"]],["typeid"]]],[11,"handle","","",338,N],[11,"into_any","","",338,[[["box"]],["box",["any"]]]],[11,"as_any","","",338,[[["self"]],["any"]]],[11,"as_any_mut","","",338,[[["self"]],["any"]]],[11,"from","","",324,[[["t"]],["t"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"to_owned","","",324,[[["self"]],["t"]]],[11,"clone_into","","",324,N],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"into_any","","",324,[[["box"]],["box",["any"]]]],[11,"as_any","","",324,[[["self"]],["any"]]],[11,"as_any_mut","","",324,[[["self"]],["any"]]],[11,"from","","",325,[[["t"]],["t"]]],[11,"into","","",325,[[["self"]],["u"]]],[11,"to_owned","","",325,[[["self"]],["t"]]],[11,"clone_into","","",325,N],[11,"try_from","","",325,[[["u"]],["result"]]],[11,"borrow","","",325,[[["self"]],["t"]]],[11,"borrow_mut","","",325,[[["self"]],["t"]]],[11,"try_into","","",325,[[["self"]],["result"]]],[11,"get_type_id","","",325,[[["self"]],["typeid"]]],[11,"into_any","","",325,[[["box"]],["box",["any"]]]],[11,"as_any","","",325,[[["self"]],["any"]]],[11,"as_any_mut","","",325,[[["self"]],["any"]]],[11,"from","","",326,[[["t"]],["t"]]],[11,"into","","",326,[[["self"]],["u"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"try_into","","",326,[[["self"]],["result"]]],[11,"get_type_id","","",326,[[["self"]],["typeid"]]],[11,"into_any","","",326,[[["box"]],["box",["any"]]]],[11,"as_any","","",326,[[["self"]],["any"]]],[11,"as_any_mut","","",326,[[["self"]],["any"]]],[11,"from","","",327,[[["t"]],["t"]]],[11,"into","","",327,[[["self"]],["u"]]],[11,"try_from","","",327,[[["u"]],["result"]]],[11,"borrow","","",327,[[["self"]],["t"]]],[11,"borrow_mut","","",327,[[["self"]],["t"]]],[11,"try_into","","",327,[[["self"]],["result"]]],[11,"get_type_id","","",327,[[["self"]],["typeid"]]],[11,"into_any","","",327,[[["box"]],["box",["any"]]]],[11,"as_any","","",327,[[["self"]],["any"]]],[11,"as_any_mut","","",327,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",339,[[["t"]],["t"]]],[11,"into","","",339,[[["self"]],["u"]]],[11,"to_owned","","",339,[[["self"]],["t"]]],[11,"clone_into","","",339,N],[11,"try_from","","",339,[[["u"]],["result"]]],[11,"borrow","","",339,[[["self"]],["t"]]],[11,"borrow_mut","","",339,[[["self"]],["t"]]],[11,"try_into","","",339,[[["self"]],["result"]]],[11,"get_type_id","","",339,[[["self"]],["typeid"]]],[11,"handle","","",339,N],[11,"into_any","","",339,[[["box"]],["box",["any"]]]],[11,"as_any","","",339,[[["self"]],["any"]]],[11,"as_any_mut","","",339,[[["self"]],["any"]]],[11,"from","","",329,[[["t"]],["t"]]],[11,"into","","",329,[[["self"]],["u"]]],[11,"try_from","","",329,[[["u"]],["result"]]],[11,"borrow","","",329,[[["self"]],["t"]]],[11,"borrow_mut","","",329,[[["self"]],["t"]]],[11,"try_into","","",329,[[["self"]],["result"]]],[11,"get_type_id","","",329,[[["self"]],["typeid"]]],[11,"into_any","","",329,[[["box"]],["box",["any"]]]],[11,"as_any","","",329,[[["self"]],["any"]]],[11,"as_any_mut","","",329,[[["self"]],["any"]]],[11,"from","","",788,[[["t"]],["t"]]],[11,"into","","",788,[[["self"]],["u"]]],[11,"try_from","","",788,[[["u"]],["result"]]],[11,"borrow","","",788,[[["self"]],["t"]]],[11,"borrow_mut","","",788,[[["self"]],["t"]]],[11,"try_into","","",788,[[["self"]],["result"]]],[11,"get_type_id","","",788,[[["self"]],["typeid"]]],[11,"into_any","","",788,[[["box"]],["box",["any"]]]],[11,"as_any","","",788,[[["self"]],["any"]]],[11,"as_any_mut","","",788,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["t"]],["t"]]],[11,"into","","",340,[[["self"]],["u"]]],[11,"to_owned","","",340,[[["self"]],["t"]]],[11,"clone_into","","",340,N],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"try_into","","",340,[[["self"]],["result"]]],[11,"get_type_id","","",340,[[["self"]],["typeid"]]],[11,"into_any","","",340,[[["box"]],["box",["any"]]]],[11,"as_any","","",340,[[["self"]],["any"]]],[11,"as_any_mut","","",340,[[["self"]],["any"]]],[11,"from","","",341,[[["t"]],["t"]]],[11,"into","","",341,[[["self"]],["u"]]],[11,"to_owned","","",341,[[["self"]],["t"]]],[11,"clone_into","","",341,N],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"try_into","","",341,[[["self"]],["result"]]],[11,"get_type_id","","",341,[[["self"]],["typeid"]]],[11,"handle","","",341,N],[11,"into_any","","",341,[[["box"]],["box",["any"]]]],[11,"as_any","","",341,[[["self"]],["any"]]],[11,"as_any_mut","","",341,[[["self"]],["any"]]],[11,"from","","",330,[[["t"]],["t"]]],[11,"into","","",330,[[["self"]],["u"]]],[11,"to_owned","","",330,[[["self"]],["t"]]],[11,"clone_into","","",330,N],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"try_into","","",330,[[["self"]],["result"]]],[11,"get_type_id","","",330,[[["self"]],["typeid"]]],[11,"into_any","","",330,[[["box"]],["box",["any"]]]],[11,"as_any","","",330,[[["self"]],["any"]]],[11,"as_any_mut","","",330,[[["self"]],["any"]]],[11,"from","","",331,[[["t"]],["t"]]],[11,"into","","",331,[[["self"]],["u"]]],[11,"to_owned","","",331,[[["self"]],["t"]]],[11,"clone_into","","",331,N],[11,"try_from","","",331,[[["u"]],["result"]]],[11,"borrow","","",331,[[["self"]],["t"]]],[11,"borrow_mut","","",331,[[["self"]],["t"]]],[11,"try_into","","",331,[[["self"]],["result"]]],[11,"get_type_id","","",331,[[["self"]],["typeid"]]],[11,"into_any","","",331,[[["box"]],["box",["any"]]]],[11,"as_any","","",331,[[["self"]],["any"]]],[11,"as_any_mut","","",331,[[["self"]],["any"]]],[11,"from","","",332,[[["t"]],["t"]]],[11,"into","","",332,[[["self"]],["u"]]],[11,"try_from","","",332,[[["u"]],["result"]]],[11,"borrow","","",332,[[["self"]],["t"]]],[11,"borrow_mut","","",332,[[["self"]],["t"]]],[11,"try_into","","",332,[[["self"]],["result"]]],[11,"get_type_id","","",332,[[["self"]],["typeid"]]],[11,"into_any","","",332,[[["box"]],["box",["any"]]]],[11,"as_any","","",332,[[["self"]],["any"]]],[11,"as_any_mut","","",332,[[["self"]],["any"]]],[11,"from","","",333,[[["t"]],["t"]]],[11,"into","","",333,[[["self"]],["u"]]],[11,"try_from","","",333,[[["u"]],["result"]]],[11,"borrow","","",333,[[["self"]],["t"]]],[11,"borrow_mut","","",333,[[["self"]],["t"]]],[11,"try_into","","",333,[[["self"]],["result"]]],[11,"get_type_id","","",333,[[["self"]],["typeid"]]],[11,"into_any","","",333,[[["box"]],["box",["any"]]]],[11,"as_any","","",333,[[["self"]],["any"]]],[11,"as_any_mut","","",333,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",789,[[["t"]],["t"]]],[11,"into","","",789,[[["self"]],["u"]]],[11,"to_owned","","",789,[[["self"]],["t"]]],[11,"clone_into","","",789,N],[11,"try_from","","",789,[[["u"]],["result"]]],[11,"borrow","","",789,[[["self"]],["t"]]],[11,"borrow_mut","","",789,[[["self"]],["t"]]],[11,"try_into","","",789,[[["self"]],["result"]]],[11,"get_type_id","","",789,[[["self"]],["typeid"]]],[11,"handle","","",789,N],[11,"into_any","","",789,[[["box"]],["box",["any"]]]],[11,"as_any","","",789,[[["self"]],["any"]]],[11,"as_any_mut","","",789,[[["self"]],["any"]]],[11,"from","","",335,[[["t"]],["t"]]],[11,"into","","",335,[[["self"]],["u"]]],[11,"try_from","","",335,[[["u"]],["result"]]],[11,"borrow","","",335,[[["self"]],["t"]]],[11,"borrow_mut","","",335,[[["self"]],["t"]]],[11,"try_into","","",335,[[["self"]],["result"]]],[11,"get_type_id","","",335,[[["self"]],["typeid"]]],[11,"into_any","","",335,[[["box"]],["box",["any"]]]],[11,"as_any","","",335,[[["self"]],["any"]]],[11,"as_any_mut","","",335,[[["self"]],["any"]]],[11,"from","","",790,[[["t"]],["t"]]],[11,"into","","",790,[[["self"]],["u"]]],[11,"try_from","","",790,[[["u"]],["result"]]],[11,"borrow","","",790,[[["self"]],["t"]]],[11,"borrow_mut","","",790,[[["self"]],["t"]]],[11,"try_into","","",790,[[["self"]],["result"]]],[11,"get_type_id","","",790,[[["self"]],["typeid"]]],[11,"into_any","","",790,[[["box"]],["box",["any"]]]],[11,"as_any","","",790,[[["self"]],["any"]]],[11,"as_any_mut","","",790,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",355,[[["t"]],["t"]]],[11,"into","","",355,[[["self"]],["u"]]],[11,"to_owned","","",355,[[["self"]],["t"]]],[11,"clone_into","","",355,N],[11,"try_from","","",355,[[["u"]],["result"]]],[11,"borrow","","",355,[[["self"]],["t"]]],[11,"borrow_mut","","",355,[[["self"]],["t"]]],[11,"try_into","","",355,[[["self"]],["result"]]],[11,"get_type_id","","",355,[[["self"]],["typeid"]]],[11,"handle","","",355,N],[11,"into_any","","",355,[[["box"]],["box",["any"]]]],[11,"as_any","","",355,[[["self"]],["any"]]],[11,"as_any_mut","","",355,[[["self"]],["any"]]],[11,"from","","",342,[[["t"]],["t"]]],[11,"into","","",342,[[["self"]],["u"]]],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"try_into","","",342,[[["self"]],["result"]]],[11,"get_type_id","","",342,[[["self"]],["typeid"]]],[11,"into_any","","",342,[[["box"]],["box",["any"]]]],[11,"as_any","","",342,[[["self"]],["any"]]],[11,"as_any_mut","","",342,[[["self"]],["any"]]],[11,"from","","",791,[[["t"]],["t"]]],[11,"into","","",791,[[["self"]],["u"]]],[11,"try_from","","",791,[[["u"]],["result"]]],[11,"borrow","","",791,[[["self"]],["t"]]],[11,"borrow_mut","","",791,[[["self"]],["t"]]],[11,"try_into","","",791,[[["self"]],["result"]]],[11,"get_type_id","","",791,[[["self"]],["typeid"]]],[11,"into_any","","",791,[[["box"]],["box",["any"]]]],[11,"as_any","","",791,[[["self"]],["any"]]],[11,"as_any_mut","","",791,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",356,[[["t"]],["t"]]],[11,"into","","",356,[[["self"]],["u"]]],[11,"to_owned","","",356,[[["self"]],["t"]]],[11,"clone_into","","",356,N],[11,"try_from","","",356,[[["u"]],["result"]]],[11,"borrow","","",356,[[["self"]],["t"]]],[11,"borrow_mut","","",356,[[["self"]],["t"]]],[11,"try_into","","",356,[[["self"]],["result"]]],[11,"get_type_id","","",356,[[["self"]],["typeid"]]],[11,"handle","","",356,N],[11,"into_any","","",356,[[["box"]],["box",["any"]]]],[11,"as_any","","",356,[[["self"]],["any"]]],[11,"as_any_mut","","",356,[[["self"]],["any"]]],[11,"from","","",343,[[["t"]],["t"]]],[11,"into","","",343,[[["self"]],["u"]]],[11,"to_owned","","",343,[[["self"]],["t"]]],[11,"clone_into","","",343,N],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"try_into","","",343,[[["self"]],["result"]]],[11,"get_type_id","","",343,[[["self"]],["typeid"]]],[11,"into_any","","",343,[[["box"]],["box",["any"]]]],[11,"as_any","","",343,[[["self"]],["any"]]],[11,"as_any_mut","","",343,[[["self"]],["any"]]],[11,"from","","",344,[[["t"]],["t"]]],[11,"into","","",344,[[["self"]],["u"]]],[11,"to_owned","","",344,[[["self"]],["t"]]],[11,"clone_into","","",344,N],[11,"try_from","","",344,[[["u"]],["result"]]],[11,"borrow","","",344,[[["self"]],["t"]]],[11,"borrow_mut","","",344,[[["self"]],["t"]]],[11,"try_into","","",344,[[["self"]],["result"]]],[11,"get_type_id","","",344,[[["self"]],["typeid"]]],[11,"into_any","","",344,[[["box"]],["box",["any"]]]],[11,"as_any","","",344,[[["self"]],["any"]]],[11,"as_any_mut","","",344,[[["self"]],["any"]]],[11,"from","","",345,[[["t"]],["t"]]],[11,"into","","",345,[[["self"]],["u"]]],[11,"try_from","","",345,[[["u"]],["result"]]],[11,"borrow","","",345,[[["self"]],["t"]]],[11,"borrow_mut","","",345,[[["self"]],["t"]]],[11,"try_into","","",345,[[["self"]],["result"]]],[11,"get_type_id","","",345,[[["self"]],["typeid"]]],[11,"into_any","","",345,[[["box"]],["box",["any"]]]],[11,"as_any","","",345,[[["self"]],["any"]]],[11,"as_any_mut","","",345,[[["self"]],["any"]]],[11,"from","","",346,[[["t"]],["t"]]],[11,"into","","",346,[[["self"]],["u"]]],[11,"try_from","","",346,[[["u"]],["result"]]],[11,"borrow","","",346,[[["self"]],["t"]]],[11,"borrow_mut","","",346,[[["self"]],["t"]]],[11,"try_into","","",346,[[["self"]],["result"]]],[11,"get_type_id","","",346,[[["self"]],["typeid"]]],[11,"into_any","","",346,[[["box"]],["box",["any"]]]],[11,"as_any","","",346,[[["self"]],["any"]]],[11,"as_any_mut","","",346,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",792,[[["t"]],["t"]]],[11,"into","","",792,[[["self"]],["u"]]],[11,"to_owned","","",792,[[["self"]],["t"]]],[11,"clone_into","","",792,N],[11,"try_from","","",792,[[["u"]],["result"]]],[11,"borrow","","",792,[[["self"]],["t"]]],[11,"borrow_mut","","",792,[[["self"]],["t"]]],[11,"try_into","","",792,[[["self"]],["result"]]],[11,"get_type_id","","",792,[[["self"]],["typeid"]]],[11,"handle","","",792,N],[11,"into_any","","",792,[[["box"]],["box",["any"]]]],[11,"as_any","","",792,[[["self"]],["any"]]],[11,"as_any_mut","","",792,[[["self"]],["any"]]],[11,"from","","",348,[[["t"]],["t"]]],[11,"into","","",348,[[["self"]],["u"]]],[11,"try_from","","",348,[[["u"]],["result"]]],[11,"borrow","","",348,[[["self"]],["t"]]],[11,"borrow_mut","","",348,[[["self"]],["t"]]],[11,"try_into","","",348,[[["self"]],["result"]]],[11,"get_type_id","","",348,[[["self"]],["typeid"]]],[11,"into_any","","",348,[[["box"]],["box",["any"]]]],[11,"as_any","","",348,[[["self"]],["any"]]],[11,"as_any_mut","","",348,[[["self"]],["any"]]],[11,"from","","",793,[[["t"]],["t"]]],[11,"into","","",793,[[["self"]],["u"]]],[11,"try_from","","",793,[[["u"]],["result"]]],[11,"borrow","","",793,[[["self"]],["t"]]],[11,"borrow_mut","","",793,[[["self"]],["t"]]],[11,"try_into","","",793,[[["self"]],["result"]]],[11,"get_type_id","","",793,[[["self"]],["typeid"]]],[11,"into_any","","",793,[[["box"]],["box",["any"]]]],[11,"as_any","","",793,[[["self"]],["any"]]],[11,"as_any_mut","","",793,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",357,[[["t"]],["t"]]],[11,"into","","",357,[[["self"]],["u"]]],[11,"to_owned","","",357,[[["self"]],["t"]]],[11,"clone_into","","",357,N],[11,"try_from","","",357,[[["u"]],["result"]]],[11,"borrow","","",357,[[["self"]],["t"]]],[11,"borrow_mut","","",357,[[["self"]],["t"]]],[11,"try_into","","",357,[[["self"]],["result"]]],[11,"get_type_id","","",357,[[["self"]],["typeid"]]],[11,"handle","","",357,N],[11,"into_any","","",357,[[["box"]],["box",["any"]]]],[11,"as_any","","",357,[[["self"]],["any"]]],[11,"as_any_mut","","",357,[[["self"]],["any"]]],[11,"from","","",350,[[["t"]],["t"]]],[11,"into","","",350,[[["self"]],["u"]]],[11,"to_owned","","",350,[[["self"]],["t"]]],[11,"clone_into","","",350,N],[11,"try_from","","",350,[[["u"]],["result"]]],[11,"borrow","","",350,[[["self"]],["t"]]],[11,"borrow_mut","","",350,[[["self"]],["t"]]],[11,"try_into","","",350,[[["self"]],["result"]]],[11,"get_type_id","","",350,[[["self"]],["typeid"]]],[11,"into_any","","",350,[[["box"]],["box",["any"]]]],[11,"as_any","","",350,[[["self"]],["any"]]],[11,"as_any_mut","","",350,[[["self"]],["any"]]],[11,"from","","",351,[[["t"]],["t"]]],[11,"into","","",351,[[["self"]],["u"]]],[11,"to_owned","","",351,[[["self"]],["t"]]],[11,"clone_into","","",351,N],[11,"try_from","","",351,[[["u"]],["result"]]],[11,"borrow","","",351,[[["self"]],["t"]]],[11,"borrow_mut","","",351,[[["self"]],["t"]]],[11,"try_into","","",351,[[["self"]],["result"]]],[11,"get_type_id","","",351,[[["self"]],["typeid"]]],[11,"into_any","","",351,[[["box"]],["box",["any"]]]],[11,"as_any","","",351,[[["self"]],["any"]]],[11,"as_any_mut","","",351,[[["self"]],["any"]]],[11,"from","","",352,[[["t"]],["t"]]],[11,"into","","",352,[[["self"]],["u"]]],[11,"try_from","","",352,[[["u"]],["result"]]],[11,"borrow","","",352,[[["self"]],["t"]]],[11,"borrow_mut","","",352,[[["self"]],["t"]]],[11,"try_into","","",352,[[["self"]],["result"]]],[11,"get_type_id","","",352,[[["self"]],["typeid"]]],[11,"into_any","","",352,[[["box"]],["box",["any"]]]],[11,"as_any","","",352,[[["self"]],["any"]]],[11,"as_any_mut","","",352,[[["self"]],["any"]]],[11,"from","","",353,[[["t"]],["t"]]],[11,"into","","",353,[[["self"]],["u"]]],[11,"try_from","","",353,[[["u"]],["result"]]],[11,"borrow","","",353,[[["self"]],["t"]]],[11,"borrow_mut","","",353,[[["self"]],["t"]]],[11,"try_into","","",353,[[["self"]],["result"]]],[11,"get_type_id","","",353,[[["self"]],["typeid"]]],[11,"into_any","","",353,[[["box"]],["box",["any"]]]],[11,"as_any","","",353,[[["self"]],["any"]]],[11,"as_any_mut","","",353,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",376,[[["t"]],["t"]]],[11,"into","","",376,[[["self"]],["u"]]],[11,"to_owned","","",376,[[["self"]],["t"]]],[11,"clone_into","","",376,N],[11,"try_from","","",376,[[["u"]],["result"]]],[11,"borrow","","",376,[[["self"]],["t"]]],[11,"borrow_mut","","",376,[[["self"]],["t"]]],[11,"try_into","","",376,[[["self"]],["result"]]],[11,"get_type_id","","",376,[[["self"]],["typeid"]]],[11,"handle","","",376,N],[11,"into_any","","",376,[[["box"]],["box",["any"]]]],[11,"as_any","","",376,[[["self"]],["any"]]],[11,"as_any_mut","","",376,[[["self"]],["any"]]],[11,"from","","",358,[[["t"]],["t"]]],[11,"into","","",358,[[["self"]],["u"]]],[11,"try_from","","",358,[[["u"]],["result"]]],[11,"borrow","","",358,[[["self"]],["t"]]],[11,"borrow_mut","","",358,[[["self"]],["t"]]],[11,"try_into","","",358,[[["self"]],["result"]]],[11,"get_type_id","","",358,[[["self"]],["typeid"]]],[11,"into_any","","",358,[[["box"]],["box",["any"]]]],[11,"as_any","","",358,[[["self"]],["any"]]],[11,"as_any_mut","","",358,[[["self"]],["any"]]],[11,"from","","",794,[[["t"]],["t"]]],[11,"into","","",794,[[["self"]],["u"]]],[11,"try_from","","",794,[[["u"]],["result"]]],[11,"borrow","","",794,[[["self"]],["t"]]],[11,"borrow_mut","","",794,[[["self"]],["t"]]],[11,"try_into","","",794,[[["self"]],["result"]]],[11,"get_type_id","","",794,[[["self"]],["typeid"]]],[11,"into_any","","",794,[[["box"]],["box",["any"]]]],[11,"as_any","","",794,[[["self"]],["any"]]],[11,"as_any_mut","","",794,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",377,[[["t"]],["t"]]],[11,"into","","",377,[[["self"]],["u"]]],[11,"to_owned","","",377,[[["self"]],["t"]]],[11,"clone_into","","",377,N],[11,"try_from","","",377,[[["u"]],["result"]]],[11,"borrow","","",377,[[["self"]],["t"]]],[11,"borrow_mut","","",377,[[["self"]],["t"]]],[11,"try_into","","",377,[[["self"]],["result"]]],[11,"get_type_id","","",377,[[["self"]],["typeid"]]],[11,"handle","","",377,N],[11,"into_any","","",377,[[["box"]],["box",["any"]]]],[11,"as_any","","",377,[[["self"]],["any"]]],[11,"as_any_mut","","",377,[[["self"]],["any"]]],[11,"from","","",359,[[["t"]],["t"]]],[11,"into","","",359,[[["self"]],["u"]]],[11,"try_from","","",359,[[["u"]],["result"]]],[11,"borrow","","",359,[[["self"]],["t"]]],[11,"borrow_mut","","",359,[[["self"]],["t"]]],[11,"try_into","","",359,[[["self"]],["result"]]],[11,"get_type_id","","",359,[[["self"]],["typeid"]]],[11,"into_any","","",359,[[["box"]],["box",["any"]]]],[11,"as_any","","",359,[[["self"]],["any"]]],[11,"as_any_mut","","",359,[[["self"]],["any"]]],[11,"from","","",795,[[["t"]],["t"]]],[11,"into","","",795,[[["self"]],["u"]]],[11,"try_from","","",795,[[["u"]],["result"]]],[11,"borrow","","",795,[[["self"]],["t"]]],[11,"borrow_mut","","",795,[[["self"]],["t"]]],[11,"try_into","","",795,[[["self"]],["result"]]],[11,"get_type_id","","",795,[[["self"]],["typeid"]]],[11,"into_any","","",795,[[["box"]],["box",["any"]]]],[11,"as_any","","",795,[[["self"]],["any"]]],[11,"as_any_mut","","",795,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",378,[[["t"]],["t"]]],[11,"into","","",378,[[["self"]],["u"]]],[11,"to_owned","","",378,[[["self"]],["t"]]],[11,"clone_into","","",378,N],[11,"try_from","","",378,[[["u"]],["result"]]],[11,"borrow","","",378,[[["self"]],["t"]]],[11,"borrow_mut","","",378,[[["self"]],["t"]]],[11,"try_into","","",378,[[["self"]],["result"]]],[11,"get_type_id","","",378,[[["self"]],["typeid"]]],[11,"handle","","",378,N],[11,"into_any","","",378,[[["box"]],["box",["any"]]]],[11,"as_any","","",378,[[["self"]],["any"]]],[11,"as_any_mut","","",378,[[["self"]],["any"]]],[11,"from","","",360,[[["t"]],["t"]]],[11,"into","","",360,[[["self"]],["u"]]],[11,"try_from","","",360,[[["u"]],["result"]]],[11,"borrow","","",360,[[["self"]],["t"]]],[11,"borrow_mut","","",360,[[["self"]],["t"]]],[11,"try_into","","",360,[[["self"]],["result"]]],[11,"get_type_id","","",360,[[["self"]],["typeid"]]],[11,"into_any","","",360,[[["box"]],["box",["any"]]]],[11,"as_any","","",360,[[["self"]],["any"]]],[11,"as_any_mut","","",360,[[["self"]],["any"]]],[11,"from","","",361,[[["t"]],["t"]]],[11,"into","","",361,[[["self"]],["u"]]],[11,"try_from","","",361,[[["u"]],["result"]]],[11,"borrow","","",361,[[["self"]],["t"]]],[11,"borrow_mut","","",361,[[["self"]],["t"]]],[11,"try_into","","",361,[[["self"]],["result"]]],[11,"get_type_id","","",361,[[["self"]],["typeid"]]],[11,"into_any","","",361,[[["box"]],["box",["any"]]]],[11,"as_any","","",361,[[["self"]],["any"]]],[11,"as_any_mut","","",361,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",379,[[["t"]],["t"]]],[11,"into","","",379,[[["self"]],["u"]]],[11,"to_owned","","",379,[[["self"]],["t"]]],[11,"clone_into","","",379,N],[11,"try_from","","",379,[[["u"]],["result"]]],[11,"borrow","","",379,[[["self"]],["t"]]],[11,"borrow_mut","","",379,[[["self"]],["t"]]],[11,"try_into","","",379,[[["self"]],["result"]]],[11,"get_type_id","","",379,[[["self"]],["typeid"]]],[11,"handle","","",379,N],[11,"into_any","","",379,[[["box"]],["box",["any"]]]],[11,"as_any","","",379,[[["self"]],["any"]]],[11,"as_any_mut","","",379,[[["self"]],["any"]]],[11,"from","","",363,[[["t"]],["t"]]],[11,"into","","",363,[[["self"]],["u"]]],[11,"try_from","","",363,[[["u"]],["result"]]],[11,"borrow","","",363,[[["self"]],["t"]]],[11,"borrow_mut","","",363,[[["self"]],["t"]]],[11,"try_into","","",363,[[["self"]],["result"]]],[11,"get_type_id","","",363,[[["self"]],["typeid"]]],[11,"into_any","","",363,[[["box"]],["box",["any"]]]],[11,"as_any","","",363,[[["self"]],["any"]]],[11,"as_any_mut","","",363,[[["self"]],["any"]]],[11,"from","","",364,[[["t"]],["t"]]],[11,"into","","",364,[[["self"]],["u"]]],[11,"try_from","","",364,[[["u"]],["result"]]],[11,"borrow","","",364,[[["self"]],["t"]]],[11,"borrow_mut","","",364,[[["self"]],["t"]]],[11,"try_into","","",364,[[["self"]],["result"]]],[11,"get_type_id","","",364,[[["self"]],["typeid"]]],[11,"into_any","","",364,[[["box"]],["box",["any"]]]],[11,"as_any","","",364,[[["self"]],["any"]]],[11,"as_any_mut","","",364,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",796,[[["t"]],["t"]]],[11,"into","","",796,[[["self"]],["u"]]],[11,"to_owned","","",796,[[["self"]],["t"]]],[11,"clone_into","","",796,N],[11,"try_from","","",796,[[["u"]],["result"]]],[11,"borrow","","",796,[[["self"]],["t"]]],[11,"borrow_mut","","",796,[[["self"]],["t"]]],[11,"try_into","","",796,[[["self"]],["result"]]],[11,"get_type_id","","",796,[[["self"]],["typeid"]]],[11,"handle","","",796,N],[11,"into_any","","",796,[[["box"]],["box",["any"]]]],[11,"as_any","","",796,[[["self"]],["any"]]],[11,"as_any_mut","","",796,[[["self"]],["any"]]],[11,"from","","",366,[[["t"]],["t"]]],[11,"into","","",366,[[["self"]],["u"]]],[11,"try_from","","",366,[[["u"]],["result"]]],[11,"borrow","","",366,[[["self"]],["t"]]],[11,"borrow_mut","","",366,[[["self"]],["t"]]],[11,"try_into","","",366,[[["self"]],["result"]]],[11,"get_type_id","","",366,[[["self"]],["typeid"]]],[11,"into_any","","",366,[[["box"]],["box",["any"]]]],[11,"as_any","","",366,[[["self"]],["any"]]],[11,"as_any_mut","","",366,[[["self"]],["any"]]],[11,"from","","",797,[[["t"]],["t"]]],[11,"into","","",797,[[["self"]],["u"]]],[11,"try_from","","",797,[[["u"]],["result"]]],[11,"borrow","","",797,[[["self"]],["t"]]],[11,"borrow_mut","","",797,[[["self"]],["t"]]],[11,"try_into","","",797,[[["self"]],["result"]]],[11,"get_type_id","","",797,[[["self"]],["typeid"]]],[11,"into_any","","",797,[[["box"]],["box",["any"]]]],[11,"as_any","","",797,[[["self"]],["any"]]],[11,"as_any_mut","","",797,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",798,[[["t"]],["t"]]],[11,"into","","",798,[[["self"]],["u"]]],[11,"to_owned","","",798,[[["self"]],["t"]]],[11,"clone_into","","",798,N],[11,"try_from","","",798,[[["u"]],["result"]]],[11,"borrow","","",798,[[["self"]],["t"]]],[11,"borrow_mut","","",798,[[["self"]],["t"]]],[11,"try_into","","",798,[[["self"]],["result"]]],[11,"get_type_id","","",798,[[["self"]],["typeid"]]],[11,"handle","","",798,N],[11,"into_any","","",798,[[["box"]],["box",["any"]]]],[11,"as_any","","",798,[[["self"]],["any"]]],[11,"as_any_mut","","",798,[[["self"]],["any"]]],[11,"from","","",368,[[["t"]],["t"]]],[11,"into","","",368,[[["self"]],["u"]]],[11,"try_from","","",368,[[["u"]],["result"]]],[11,"borrow","","",368,[[["self"]],["t"]]],[11,"borrow_mut","","",368,[[["self"]],["t"]]],[11,"try_into","","",368,[[["self"]],["result"]]],[11,"get_type_id","","",368,[[["self"]],["typeid"]]],[11,"into_any","","",368,[[["box"]],["box",["any"]]]],[11,"as_any","","",368,[[["self"]],["any"]]],[11,"as_any_mut","","",368,[[["self"]],["any"]]],[11,"from","","",799,[[["t"]],["t"]]],[11,"into","","",799,[[["self"]],["u"]]],[11,"try_from","","",799,[[["u"]],["result"]]],[11,"borrow","","",799,[[["self"]],["t"]]],[11,"borrow_mut","","",799,[[["self"]],["t"]]],[11,"try_into","","",799,[[["self"]],["result"]]],[11,"get_type_id","","",799,[[["self"]],["typeid"]]],[11,"into_any","","",799,[[["box"]],["box",["any"]]]],[11,"as_any","","",799,[[["self"]],["any"]]],[11,"as_any_mut","","",799,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",380,[[["t"]],["t"]]],[11,"into","","",380,[[["self"]],["u"]]],[11,"to_owned","","",380,[[["self"]],["t"]]],[11,"clone_into","","",380,N],[11,"try_from","","",380,[[["u"]],["result"]]],[11,"borrow","","",380,[[["self"]],["t"]]],[11,"borrow_mut","","",380,[[["self"]],["t"]]],[11,"try_into","","",380,[[["self"]],["result"]]],[11,"get_type_id","","",380,[[["self"]],["typeid"]]],[11,"handle","","",380,N],[11,"into_any","","",380,[[["box"]],["box",["any"]]]],[11,"as_any","","",380,[[["self"]],["any"]]],[11,"as_any_mut","","",380,[[["self"]],["any"]]],[11,"from","","",370,[[["t"]],["t"]]],[11,"into","","",370,[[["self"]],["u"]]],[11,"try_from","","",370,[[["u"]],["result"]]],[11,"borrow","","",370,[[["self"]],["t"]]],[11,"borrow_mut","","",370,[[["self"]],["t"]]],[11,"try_into","","",370,[[["self"]],["result"]]],[11,"get_type_id","","",370,[[["self"]],["typeid"]]],[11,"into_any","","",370,[[["box"]],["box",["any"]]]],[11,"as_any","","",370,[[["self"]],["any"]]],[11,"as_any_mut","","",370,[[["self"]],["any"]]],[11,"from","","",371,[[["t"]],["t"]]],[11,"into","","",371,[[["self"]],["u"]]],[11,"try_from","","",371,[[["u"]],["result"]]],[11,"borrow","","",371,[[["self"]],["t"]]],[11,"borrow_mut","","",371,[[["self"]],["t"]]],[11,"try_into","","",371,[[["self"]],["result"]]],[11,"get_type_id","","",371,[[["self"]],["typeid"]]],[11,"into_any","","",371,[[["box"]],["box",["any"]]]],[11,"as_any","","",371,[[["self"]],["any"]]],[11,"as_any_mut","","",371,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",381,[[["t"]],["t"]]],[11,"into","","",381,[[["self"]],["u"]]],[11,"to_owned","","",381,[[["self"]],["t"]]],[11,"clone_into","","",381,N],[11,"try_from","","",381,[[["u"]],["result"]]],[11,"borrow","","",381,[[["self"]],["t"]]],[11,"borrow_mut","","",381,[[["self"]],["t"]]],[11,"try_into","","",381,[[["self"]],["result"]]],[11,"get_type_id","","",381,[[["self"]],["typeid"]]],[11,"handle","","",381,N],[11,"into_any","","",381,[[["box"]],["box",["any"]]]],[11,"as_any","","",381,[[["self"]],["any"]]],[11,"as_any_mut","","",381,[[["self"]],["any"]]],[11,"from","","",373,[[["t"]],["t"]]],[11,"into","","",373,[[["self"]],["u"]]],[11,"try_from","","",373,[[["u"]],["result"]]],[11,"borrow","","",373,[[["self"]],["t"]]],[11,"borrow_mut","","",373,[[["self"]],["t"]]],[11,"try_into","","",373,[[["self"]],["result"]]],[11,"get_type_id","","",373,[[["self"]],["typeid"]]],[11,"into_any","","",373,[[["box"]],["box",["any"]]]],[11,"as_any","","",373,[[["self"]],["any"]]],[11,"as_any_mut","","",373,[[["self"]],["any"]]],[11,"from","","",374,[[["t"]],["t"]]],[11,"into","","",374,[[["self"]],["u"]]],[11,"try_from","","",374,[[["u"]],["result"]]],[11,"borrow","","",374,[[["self"]],["t"]]],[11,"borrow_mut","","",374,[[["self"]],["t"]]],[11,"try_into","","",374,[[["self"]],["result"]]],[11,"get_type_id","","",374,[[["self"]],["typeid"]]],[11,"into_any","","",374,[[["box"]],["box",["any"]]]],[11,"as_any","","",374,[[["self"]],["any"]]],[11,"as_any_mut","","",374,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",400,[[["t"]],["t"]]],[11,"into","","",400,[[["self"]],["u"]]],[11,"to_owned","","",400,[[["self"]],["t"]]],[11,"clone_into","","",400,N],[11,"try_from","","",400,[[["u"]],["result"]]],[11,"borrow","","",400,[[["self"]],["t"]]],[11,"borrow_mut","","",400,[[["self"]],["t"]]],[11,"try_into","","",400,[[["self"]],["result"]]],[11,"get_type_id","","",400,[[["self"]],["typeid"]]],[11,"handle","","",400,N],[11,"into_any","","",400,[[["box"]],["box",["any"]]]],[11,"as_any","","",400,[[["self"]],["any"]]],[11,"as_any_mut","","",400,[[["self"]],["any"]]],[11,"from","","",382,[[["t"]],["t"]]],[11,"into","","",382,[[["self"]],["u"]]],[11,"try_from","","",382,[[["u"]],["result"]]],[11,"borrow","","",382,[[["self"]],["t"]]],[11,"borrow_mut","","",382,[[["self"]],["t"]]],[11,"try_into","","",382,[[["self"]],["result"]]],[11,"get_type_id","","",382,[[["self"]],["typeid"]]],[11,"into_any","","",382,[[["box"]],["box",["any"]]]],[11,"as_any","","",382,[[["self"]],["any"]]],[11,"as_any_mut","","",382,[[["self"]],["any"]]],[11,"from","","",800,[[["t"]],["t"]]],[11,"into","","",800,[[["self"]],["u"]]],[11,"try_from","","",800,[[["u"]],["result"]]],[11,"borrow","","",800,[[["self"]],["t"]]],[11,"borrow_mut","","",800,[[["self"]],["t"]]],[11,"try_into","","",800,[[["self"]],["result"]]],[11,"get_type_id","","",800,[[["self"]],["typeid"]]],[11,"into_any","","",800,[[["box"]],["box",["any"]]]],[11,"as_any","","",800,[[["self"]],["any"]]],[11,"as_any_mut","","",800,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",401,[[["t"]],["t"]]],[11,"into","","",401,[[["self"]],["u"]]],[11,"to_owned","","",401,[[["self"]],["t"]]],[11,"clone_into","","",401,N],[11,"try_from","","",401,[[["u"]],["result"]]],[11,"borrow","","",401,[[["self"]],["t"]]],[11,"borrow_mut","","",401,[[["self"]],["t"]]],[11,"try_into","","",401,[[["self"]],["result"]]],[11,"get_type_id","","",401,[[["self"]],["typeid"]]],[11,"handle","","",401,N],[11,"into_any","","",401,[[["box"]],["box",["any"]]]],[11,"as_any","","",401,[[["self"]],["any"]]],[11,"as_any_mut","","",401,[[["self"]],["any"]]],[11,"from","","",383,[[["t"]],["t"]]],[11,"into","","",383,[[["self"]],["u"]]],[11,"try_from","","",383,[[["u"]],["result"]]],[11,"borrow","","",383,[[["self"]],["t"]]],[11,"borrow_mut","","",383,[[["self"]],["t"]]],[11,"try_into","","",383,[[["self"]],["result"]]],[11,"get_type_id","","",383,[[["self"]],["typeid"]]],[11,"into_any","","",383,[[["box"]],["box",["any"]]]],[11,"as_any","","",383,[[["self"]],["any"]]],[11,"as_any_mut","","",383,[[["self"]],["any"]]],[11,"from","","",801,[[["t"]],["t"]]],[11,"into","","",801,[[["self"]],["u"]]],[11,"try_from","","",801,[[["u"]],["result"]]],[11,"borrow","","",801,[[["self"]],["t"]]],[11,"borrow_mut","","",801,[[["self"]],["t"]]],[11,"try_into","","",801,[[["self"]],["result"]]],[11,"get_type_id","","",801,[[["self"]],["typeid"]]],[11,"into_any","","",801,[[["box"]],["box",["any"]]]],[11,"as_any","","",801,[[["self"]],["any"]]],[11,"as_any_mut","","",801,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",402,[[["t"]],["t"]]],[11,"into","","",402,[[["self"]],["u"]]],[11,"to_owned","","",402,[[["self"]],["t"]]],[11,"clone_into","","",402,N],[11,"try_from","","",402,[[["u"]],["result"]]],[11,"borrow","","",402,[[["self"]],["t"]]],[11,"borrow_mut","","",402,[[["self"]],["t"]]],[11,"try_into","","",402,[[["self"]],["result"]]],[11,"get_type_id","","",402,[[["self"]],["typeid"]]],[11,"handle","","",402,N],[11,"into_any","","",402,[[["box"]],["box",["any"]]]],[11,"as_any","","",402,[[["self"]],["any"]]],[11,"as_any_mut","","",402,[[["self"]],["any"]]],[11,"from","","",384,[[["t"]],["t"]]],[11,"into","","",384,[[["self"]],["u"]]],[11,"try_from","","",384,[[["u"]],["result"]]],[11,"borrow","","",384,[[["self"]],["t"]]],[11,"borrow_mut","","",384,[[["self"]],["t"]]],[11,"try_into","","",384,[[["self"]],["result"]]],[11,"get_type_id","","",384,[[["self"]],["typeid"]]],[11,"into_any","","",384,[[["box"]],["box",["any"]]]],[11,"as_any","","",384,[[["self"]],["any"]]],[11,"as_any_mut","","",384,[[["self"]],["any"]]],[11,"from","","",385,[[["t"]],["t"]]],[11,"into","","",385,[[["self"]],["u"]]],[11,"try_from","","",385,[[["u"]],["result"]]],[11,"borrow","","",385,[[["self"]],["t"]]],[11,"borrow_mut","","",385,[[["self"]],["t"]]],[11,"try_into","","",385,[[["self"]],["result"]]],[11,"get_type_id","","",385,[[["self"]],["typeid"]]],[11,"into_any","","",385,[[["box"]],["box",["any"]]]],[11,"as_any","","",385,[[["self"]],["any"]]],[11,"as_any_mut","","",385,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",403,[[["t"]],["t"]]],[11,"into","","",403,[[["self"]],["u"]]],[11,"to_owned","","",403,[[["self"]],["t"]]],[11,"clone_into","","",403,N],[11,"try_from","","",403,[[["u"]],["result"]]],[11,"borrow","","",403,[[["self"]],["t"]]],[11,"borrow_mut","","",403,[[["self"]],["t"]]],[11,"try_into","","",403,[[["self"]],["result"]]],[11,"get_type_id","","",403,[[["self"]],["typeid"]]],[11,"handle","","",403,N],[11,"into_any","","",403,[[["box"]],["box",["any"]]]],[11,"as_any","","",403,[[["self"]],["any"]]],[11,"as_any_mut","","",403,[[["self"]],["any"]]],[11,"from","","",387,[[["t"]],["t"]]],[11,"into","","",387,[[["self"]],["u"]]],[11,"try_from","","",387,[[["u"]],["result"]]],[11,"borrow","","",387,[[["self"]],["t"]]],[11,"borrow_mut","","",387,[[["self"]],["t"]]],[11,"try_into","","",387,[[["self"]],["result"]]],[11,"get_type_id","","",387,[[["self"]],["typeid"]]],[11,"into_any","","",387,[[["box"]],["box",["any"]]]],[11,"as_any","","",387,[[["self"]],["any"]]],[11,"as_any_mut","","",387,[[["self"]],["any"]]],[11,"from","","",388,[[["t"]],["t"]]],[11,"into","","",388,[[["self"]],["u"]]],[11,"try_from","","",388,[[["u"]],["result"]]],[11,"borrow","","",388,[[["self"]],["t"]]],[11,"borrow_mut","","",388,[[["self"]],["t"]]],[11,"try_into","","",388,[[["self"]],["result"]]],[11,"get_type_id","","",388,[[["self"]],["typeid"]]],[11,"into_any","","",388,[[["box"]],["box",["any"]]]],[11,"as_any","","",388,[[["self"]],["any"]]],[11,"as_any_mut","","",388,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",802,[[["t"]],["t"]]],[11,"into","","",802,[[["self"]],["u"]]],[11,"to_owned","","",802,[[["self"]],["t"]]],[11,"clone_into","","",802,N],[11,"try_from","","",802,[[["u"]],["result"]]],[11,"borrow","","",802,[[["self"]],["t"]]],[11,"borrow_mut","","",802,[[["self"]],["t"]]],[11,"try_into","","",802,[[["self"]],["result"]]],[11,"get_type_id","","",802,[[["self"]],["typeid"]]],[11,"handle","","",802,N],[11,"into_any","","",802,[[["box"]],["box",["any"]]]],[11,"as_any","","",802,[[["self"]],["any"]]],[11,"as_any_mut","","",802,[[["self"]],["any"]]],[11,"from","","",390,[[["t"]],["t"]]],[11,"into","","",390,[[["self"]],["u"]]],[11,"try_from","","",390,[[["u"]],["result"]]],[11,"borrow","","",390,[[["self"]],["t"]]],[11,"borrow_mut","","",390,[[["self"]],["t"]]],[11,"try_into","","",390,[[["self"]],["result"]]],[11,"get_type_id","","",390,[[["self"]],["typeid"]]],[11,"into_any","","",390,[[["box"]],["box",["any"]]]],[11,"as_any","","",390,[[["self"]],["any"]]],[11,"as_any_mut","","",390,[[["self"]],["any"]]],[11,"from","","",803,[[["t"]],["t"]]],[11,"into","","",803,[[["self"]],["u"]]],[11,"try_from","","",803,[[["u"]],["result"]]],[11,"borrow","","",803,[[["self"]],["t"]]],[11,"borrow_mut","","",803,[[["self"]],["t"]]],[11,"try_into","","",803,[[["self"]],["result"]]],[11,"get_type_id","","",803,[[["self"]],["typeid"]]],[11,"into_any","","",803,[[["box"]],["box",["any"]]]],[11,"as_any","","",803,[[["self"]],["any"]]],[11,"as_any_mut","","",803,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",804,[[["t"]],["t"]]],[11,"into","","",804,[[["self"]],["u"]]],[11,"to_owned","","",804,[[["self"]],["t"]]],[11,"clone_into","","",804,N],[11,"try_from","","",804,[[["u"]],["result"]]],[11,"borrow","","",804,[[["self"]],["t"]]],[11,"borrow_mut","","",804,[[["self"]],["t"]]],[11,"try_into","","",804,[[["self"]],["result"]]],[11,"get_type_id","","",804,[[["self"]],["typeid"]]],[11,"handle","","",804,N],[11,"into_any","","",804,[[["box"]],["box",["any"]]]],[11,"as_any","","",804,[[["self"]],["any"]]],[11,"as_any_mut","","",804,[[["self"]],["any"]]],[11,"from","","",392,[[["t"]],["t"]]],[11,"into","","",392,[[["self"]],["u"]]],[11,"try_from","","",392,[[["u"]],["result"]]],[11,"borrow","","",392,[[["self"]],["t"]]],[11,"borrow_mut","","",392,[[["self"]],["t"]]],[11,"try_into","","",392,[[["self"]],["result"]]],[11,"get_type_id","","",392,[[["self"]],["typeid"]]],[11,"into_any","","",392,[[["box"]],["box",["any"]]]],[11,"as_any","","",392,[[["self"]],["any"]]],[11,"as_any_mut","","",392,[[["self"]],["any"]]],[11,"from","","",805,[[["t"]],["t"]]],[11,"into","","",805,[[["self"]],["u"]]],[11,"try_from","","",805,[[["u"]],["result"]]],[11,"borrow","","",805,[[["self"]],["t"]]],[11,"borrow_mut","","",805,[[["self"]],["t"]]],[11,"try_into","","",805,[[["self"]],["result"]]],[11,"get_type_id","","",805,[[["self"]],["typeid"]]],[11,"into_any","","",805,[[["box"]],["box",["any"]]]],[11,"as_any","","",805,[[["self"]],["any"]]],[11,"as_any_mut","","",805,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",404,[[["t"]],["t"]]],[11,"into","","",404,[[["self"]],["u"]]],[11,"to_owned","","",404,[[["self"]],["t"]]],[11,"clone_into","","",404,N],[11,"try_from","","",404,[[["u"]],["result"]]],[11,"borrow","","",404,[[["self"]],["t"]]],[11,"borrow_mut","","",404,[[["self"]],["t"]]],[11,"try_into","","",404,[[["self"]],["result"]]],[11,"get_type_id","","",404,[[["self"]],["typeid"]]],[11,"handle","","",404,N],[11,"into_any","","",404,[[["box"]],["box",["any"]]]],[11,"as_any","","",404,[[["self"]],["any"]]],[11,"as_any_mut","","",404,[[["self"]],["any"]]],[11,"from","","",394,[[["t"]],["t"]]],[11,"into","","",394,[[["self"]],["u"]]],[11,"try_from","","",394,[[["u"]],["result"]]],[11,"borrow","","",394,[[["self"]],["t"]]],[11,"borrow_mut","","",394,[[["self"]],["t"]]],[11,"try_into","","",394,[[["self"]],["result"]]],[11,"get_type_id","","",394,[[["self"]],["typeid"]]],[11,"into_any","","",394,[[["box"]],["box",["any"]]]],[11,"as_any","","",394,[[["self"]],["any"]]],[11,"as_any_mut","","",394,[[["self"]],["any"]]],[11,"from","","",395,[[["t"]],["t"]]],[11,"into","","",395,[[["self"]],["u"]]],[11,"try_from","","",395,[[["u"]],["result"]]],[11,"borrow","","",395,[[["self"]],["t"]]],[11,"borrow_mut","","",395,[[["self"]],["t"]]],[11,"try_into","","",395,[[["self"]],["result"]]],[11,"get_type_id","","",395,[[["self"]],["typeid"]]],[11,"into_any","","",395,[[["box"]],["box",["any"]]]],[11,"as_any","","",395,[[["self"]],["any"]]],[11,"as_any_mut","","",395,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",405,[[["t"]],["t"]]],[11,"into","","",405,[[["self"]],["u"]]],[11,"to_owned","","",405,[[["self"]],["t"]]],[11,"clone_into","","",405,N],[11,"try_from","","",405,[[["u"]],["result"]]],[11,"borrow","","",405,[[["self"]],["t"]]],[11,"borrow_mut","","",405,[[["self"]],["t"]]],[11,"try_into","","",405,[[["self"]],["result"]]],[11,"get_type_id","","",405,[[["self"]],["typeid"]]],[11,"handle","","",405,N],[11,"into_any","","",405,[[["box"]],["box",["any"]]]],[11,"as_any","","",405,[[["self"]],["any"]]],[11,"as_any_mut","","",405,[[["self"]],["any"]]],[11,"from","","",397,[[["t"]],["t"]]],[11,"into","","",397,[[["self"]],["u"]]],[11,"try_from","","",397,[[["u"]],["result"]]],[11,"borrow","","",397,[[["self"]],["t"]]],[11,"borrow_mut","","",397,[[["self"]],["t"]]],[11,"try_into","","",397,[[["self"]],["result"]]],[11,"get_type_id","","",397,[[["self"]],["typeid"]]],[11,"into_any","","",397,[[["box"]],["box",["any"]]]],[11,"as_any","","",397,[[["self"]],["any"]]],[11,"as_any_mut","","",397,[[["self"]],["any"]]],[11,"from","","",398,[[["t"]],["t"]]],[11,"into","","",398,[[["self"]],["u"]]],[11,"try_from","","",398,[[["u"]],["result"]]],[11,"borrow","","",398,[[["self"]],["t"]]],[11,"borrow_mut","","",398,[[["self"]],["t"]]],[11,"try_into","","",398,[[["self"]],["result"]]],[11,"get_type_id","","",398,[[["self"]],["typeid"]]],[11,"into_any","","",398,[[["box"]],["box",["any"]]]],[11,"as_any","","",398,[[["self"]],["any"]]],[11,"as_any_mut","","",398,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",415,[[["t"]],["t"]]],[11,"into","","",415,[[["self"]],["u"]]],[11,"to_owned","","",415,[[["self"]],["t"]]],[11,"clone_into","","",415,N],[11,"try_from","","",415,[[["u"]],["result"]]],[11,"borrow","","",415,[[["self"]],["t"]]],[11,"borrow_mut","","",415,[[["self"]],["t"]]],[11,"try_into","","",415,[[["self"]],["result"]]],[11,"get_type_id","","",415,[[["self"]],["typeid"]]],[11,"handle","","",415,N],[11,"into_any","","",415,[[["box"]],["box",["any"]]]],[11,"as_any","","",415,[[["self"]],["any"]]],[11,"as_any_mut","","",415,[[["self"]],["any"]]],[11,"from","","",406,[[["t"]],["t"]]],[11,"into","","",406,[[["self"]],["u"]]],[11,"try_from","","",406,[[["u"]],["result"]]],[11,"borrow","","",406,[[["self"]],["t"]]],[11,"borrow_mut","","",406,[[["self"]],["t"]]],[11,"try_into","","",406,[[["self"]],["result"]]],[11,"get_type_id","","",406,[[["self"]],["typeid"]]],[11,"into_any","","",406,[[["box"]],["box",["any"]]]],[11,"as_any","","",406,[[["self"]],["any"]]],[11,"as_any_mut","","",406,[[["self"]],["any"]]],[11,"from","","",806,[[["t"]],["t"]]],[11,"into","","",806,[[["self"]],["u"]]],[11,"try_from","","",806,[[["u"]],["result"]]],[11,"borrow","","",806,[[["self"]],["t"]]],[11,"borrow_mut","","",806,[[["self"]],["t"]]],[11,"try_into","","",806,[[["self"]],["result"]]],[11,"get_type_id","","",806,[[["self"]],["typeid"]]],[11,"into_any","","",806,[[["box"]],["box",["any"]]]],[11,"as_any","","",806,[[["self"]],["any"]]],[11,"as_any_mut","","",806,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",416,[[["t"]],["t"]]],[11,"into","","",416,[[["self"]],["u"]]],[11,"to_owned","","",416,[[["self"]],["t"]]],[11,"clone_into","","",416,N],[11,"try_from","","",416,[[["u"]],["result"]]],[11,"borrow","","",416,[[["self"]],["t"]]],[11,"borrow_mut","","",416,[[["self"]],["t"]]],[11,"try_into","","",416,[[["self"]],["result"]]],[11,"get_type_id","","",416,[[["self"]],["typeid"]]],[11,"handle","","",416,N],[11,"into_any","","",416,[[["box"]],["box",["any"]]]],[11,"as_any","","",416,[[["self"]],["any"]]],[11,"as_any_mut","","",416,[[["self"]],["any"]]],[11,"from","","",407,[[["t"]],["t"]]],[11,"into","","",407,[[["self"]],["u"]]],[11,"try_from","","",407,[[["u"]],["result"]]],[11,"borrow","","",407,[[["self"]],["t"]]],[11,"borrow_mut","","",407,[[["self"]],["t"]]],[11,"try_into","","",407,[[["self"]],["result"]]],[11,"get_type_id","","",407,[[["self"]],["typeid"]]],[11,"into_any","","",407,[[["box"]],["box",["any"]]]],[11,"as_any","","",407,[[["self"]],["any"]]],[11,"as_any_mut","","",407,[[["self"]],["any"]]],[11,"from","","",408,[[["t"]],["t"]]],[11,"into","","",408,[[["self"]],["u"]]],[11,"try_from","","",408,[[["u"]],["result"]]],[11,"borrow","","",408,[[["self"]],["t"]]],[11,"borrow_mut","","",408,[[["self"]],["t"]]],[11,"try_into","","",408,[[["self"]],["result"]]],[11,"get_type_id","","",408,[[["self"]],["typeid"]]],[11,"into_any","","",408,[[["box"]],["box",["any"]]]],[11,"as_any","","",408,[[["self"]],["any"]]],[11,"as_any_mut","","",408,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",807,[[["t"]],["t"]]],[11,"into","","",807,[[["self"]],["u"]]],[11,"to_owned","","",807,[[["self"]],["t"]]],[11,"clone_into","","",807,N],[11,"try_from","","",807,[[["u"]],["result"]]],[11,"borrow","","",807,[[["self"]],["t"]]],[11,"borrow_mut","","",807,[[["self"]],["t"]]],[11,"try_into","","",807,[[["self"]],["result"]]],[11,"get_type_id","","",807,[[["self"]],["typeid"]]],[11,"handle","","",807,N],[11,"into_any","","",807,[[["box"]],["box",["any"]]]],[11,"as_any","","",807,[[["self"]],["any"]]],[11,"as_any_mut","","",807,[[["self"]],["any"]]],[11,"from","","",410,[[["t"]],["t"]]],[11,"into","","",410,[[["self"]],["u"]]],[11,"try_from","","",410,[[["u"]],["result"]]],[11,"borrow","","",410,[[["self"]],["t"]]],[11,"borrow_mut","","",410,[[["self"]],["t"]]],[11,"try_into","","",410,[[["self"]],["result"]]],[11,"get_type_id","","",410,[[["self"]],["typeid"]]],[11,"into_any","","",410,[[["box"]],["box",["any"]]]],[11,"as_any","","",410,[[["self"]],["any"]]],[11,"as_any_mut","","",410,[[["self"]],["any"]]],[11,"from","","",808,[[["t"]],["t"]]],[11,"into","","",808,[[["self"]],["u"]]],[11,"try_from","","",808,[[["u"]],["result"]]],[11,"borrow","","",808,[[["self"]],["t"]]],[11,"borrow_mut","","",808,[[["self"]],["t"]]],[11,"try_into","","",808,[[["self"]],["result"]]],[11,"get_type_id","","",808,[[["self"]],["typeid"]]],[11,"into_any","","",808,[[["box"]],["box",["any"]]]],[11,"as_any","","",808,[[["self"]],["any"]]],[11,"as_any_mut","","",808,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",417,[[["t"]],["t"]]],[11,"into","","",417,[[["self"]],["u"]]],[11,"to_owned","","",417,[[["self"]],["t"]]],[11,"clone_into","","",417,N],[11,"try_from","","",417,[[["u"]],["result"]]],[11,"borrow","","",417,[[["self"]],["t"]]],[11,"borrow_mut","","",417,[[["self"]],["t"]]],[11,"try_into","","",417,[[["self"]],["result"]]],[11,"get_type_id","","",417,[[["self"]],["typeid"]]],[11,"handle","","",417,N],[11,"into_any","","",417,[[["box"]],["box",["any"]]]],[11,"as_any","","",417,[[["self"]],["any"]]],[11,"as_any_mut","","",417,[[["self"]],["any"]]],[11,"from","","",412,[[["t"]],["t"]]],[11,"into","","",412,[[["self"]],["u"]]],[11,"try_from","","",412,[[["u"]],["result"]]],[11,"borrow","","",412,[[["self"]],["t"]]],[11,"borrow_mut","","",412,[[["self"]],["t"]]],[11,"try_into","","",412,[[["self"]],["result"]]],[11,"get_type_id","","",412,[[["self"]],["typeid"]]],[11,"into_any","","",412,[[["box"]],["box",["any"]]]],[11,"as_any","","",412,[[["self"]],["any"]]],[11,"as_any_mut","","",412,[[["self"]],["any"]]],[11,"from","","",413,[[["t"]],["t"]]],[11,"into","","",413,[[["self"]],["u"]]],[11,"try_from","","",413,[[["u"]],["result"]]],[11,"borrow","","",413,[[["self"]],["t"]]],[11,"borrow_mut","","",413,[[["self"]],["t"]]],[11,"try_into","","",413,[[["self"]],["result"]]],[11,"get_type_id","","",413,[[["self"]],["typeid"]]],[11,"into_any","","",413,[[["box"]],["box",["any"]]]],[11,"as_any","","",413,[[["self"]],["any"]]],[11,"as_any_mut","","",413,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",444,[[["t"]],["t"]]],[11,"into","","",444,[[["self"]],["u"]]],[11,"to_owned","","",444,[[["self"]],["t"]]],[11,"clone_into","","",444,N],[11,"try_from","","",444,[[["u"]],["result"]]],[11,"borrow","","",444,[[["self"]],["t"]]],[11,"borrow_mut","","",444,[[["self"]],["t"]]],[11,"try_into","","",444,[[["self"]],["result"]]],[11,"get_type_id","","",444,[[["self"]],["typeid"]]],[11,"handle","","",444,N],[11,"into_any","","",444,[[["box"]],["box",["any"]]]],[11,"as_any","","",444,[[["self"]],["any"]]],[11,"as_any_mut","","",444,[[["self"]],["any"]]],[11,"from","","",418,[[["t"]],["t"]]],[11,"into","","",418,[[["self"]],["u"]]],[11,"to_owned","","",418,[[["self"]],["t"]]],[11,"clone_into","","",418,N],[11,"try_from","","",418,[[["u"]],["result"]]],[11,"borrow","","",418,[[["self"]],["t"]]],[11,"borrow_mut","","",418,[[["self"]],["t"]]],[11,"try_into","","",418,[[["self"]],["result"]]],[11,"get_type_id","","",418,[[["self"]],["typeid"]]],[11,"into_any","","",418,[[["box"]],["box",["any"]]]],[11,"as_any","","",418,[[["self"]],["any"]]],[11,"as_any_mut","","",418,[[["self"]],["any"]]],[11,"from","","",419,[[["t"]],["t"]]],[11,"into","","",419,[[["self"]],["u"]]],[11,"to_owned","","",419,[[["self"]],["t"]]],[11,"clone_into","","",419,N],[11,"try_from","","",419,[[["u"]],["result"]]],[11,"borrow","","",419,[[["self"]],["t"]]],[11,"borrow_mut","","",419,[[["self"]],["t"]]],[11,"try_into","","",419,[[["self"]],["result"]]],[11,"get_type_id","","",419,[[["self"]],["typeid"]]],[11,"into_any","","",419,[[["box"]],["box",["any"]]]],[11,"as_any","","",419,[[["self"]],["any"]]],[11,"as_any_mut","","",419,[[["self"]],["any"]]],[11,"from","","",420,[[["t"]],["t"]]],[11,"into","","",420,[[["self"]],["u"]]],[11,"try_from","","",420,[[["u"]],["result"]]],[11,"borrow","","",420,[[["self"]],["t"]]],[11,"borrow_mut","","",420,[[["self"]],["t"]]],[11,"try_into","","",420,[[["self"]],["result"]]],[11,"get_type_id","","",420,[[["self"]],["typeid"]]],[11,"into_any","","",420,[[["box"]],["box",["any"]]]],[11,"as_any","","",420,[[["self"]],["any"]]],[11,"as_any_mut","","",420,[[["self"]],["any"]]],[11,"from","","",421,[[["t"]],["t"]]],[11,"into","","",421,[[["self"]],["u"]]],[11,"try_from","","",421,[[["u"]],["result"]]],[11,"borrow","","",421,[[["self"]],["t"]]],[11,"borrow_mut","","",421,[[["self"]],["t"]]],[11,"try_into","","",421,[[["self"]],["result"]]],[11,"get_type_id","","",421,[[["self"]],["typeid"]]],[11,"into_any","","",421,[[["box"]],["box",["any"]]]],[11,"as_any","","",421,[[["self"]],["any"]]],[11,"as_any_mut","","",421,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",445,[[["t"]],["t"]]],[11,"into","","",445,[[["self"]],["u"]]],[11,"to_owned","","",445,[[["self"]],["t"]]],[11,"clone_into","","",445,N],[11,"try_from","","",445,[[["u"]],["result"]]],[11,"borrow","","",445,[[["self"]],["t"]]],[11,"borrow_mut","","",445,[[["self"]],["t"]]],[11,"try_into","","",445,[[["self"]],["result"]]],[11,"get_type_id","","",445,[[["self"]],["typeid"]]],[11,"handle","","",445,N],[11,"into_any","","",445,[[["box"]],["box",["any"]]]],[11,"as_any","","",445,[[["self"]],["any"]]],[11,"as_any_mut","","",445,[[["self"]],["any"]]],[11,"from","","",423,[[["t"]],["t"]]],[11,"into","","",423,[[["self"]],["u"]]],[11,"to_owned","","",423,[[["self"]],["t"]]],[11,"clone_into","","",423,N],[11,"try_from","","",423,[[["u"]],["result"]]],[11,"borrow","","",423,[[["self"]],["t"]]],[11,"borrow_mut","","",423,[[["self"]],["t"]]],[11,"try_into","","",423,[[["self"]],["result"]]],[11,"get_type_id","","",423,[[["self"]],["typeid"]]],[11,"into_any","","",423,[[["box"]],["box",["any"]]]],[11,"as_any","","",423,[[["self"]],["any"]]],[11,"as_any_mut","","",423,[[["self"]],["any"]]],[11,"from","","",424,[[["t"]],["t"]]],[11,"into","","",424,[[["self"]],["u"]]],[11,"to_owned","","",424,[[["self"]],["t"]]],[11,"clone_into","","",424,N],[11,"try_from","","",424,[[["u"]],["result"]]],[11,"borrow","","",424,[[["self"]],["t"]]],[11,"borrow_mut","","",424,[[["self"]],["t"]]],[11,"try_into","","",424,[[["self"]],["result"]]],[11,"get_type_id","","",424,[[["self"]],["typeid"]]],[11,"into_any","","",424,[[["box"]],["box",["any"]]]],[11,"as_any","","",424,[[["self"]],["any"]]],[11,"as_any_mut","","",424,[[["self"]],["any"]]],[11,"from","","",425,[[["t"]],["t"]]],[11,"into","","",425,[[["self"]],["u"]]],[11,"try_from","","",425,[[["u"]],["result"]]],[11,"borrow","","",425,[[["self"]],["t"]]],[11,"borrow_mut","","",425,[[["self"]],["t"]]],[11,"try_into","","",425,[[["self"]],["result"]]],[11,"get_type_id","","",425,[[["self"]],["typeid"]]],[11,"into_any","","",425,[[["box"]],["box",["any"]]]],[11,"as_any","","",425,[[["self"]],["any"]]],[11,"as_any_mut","","",425,[[["self"]],["any"]]],[11,"from","","",426,[[["t"]],["t"]]],[11,"into","","",426,[[["self"]],["u"]]],[11,"try_from","","",426,[[["u"]],["result"]]],[11,"borrow","","",426,[[["self"]],["t"]]],[11,"borrow_mut","","",426,[[["self"]],["t"]]],[11,"try_into","","",426,[[["self"]],["result"]]],[11,"get_type_id","","",426,[[["self"]],["typeid"]]],[11,"into_any","","",426,[[["box"]],["box",["any"]]]],[11,"as_any","","",426,[[["self"]],["any"]]],[11,"as_any_mut","","",426,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",446,[[["t"]],["t"]]],[11,"into","","",446,[[["self"]],["u"]]],[11,"to_owned","","",446,[[["self"]],["t"]]],[11,"clone_into","","",446,N],[11,"try_from","","",446,[[["u"]],["result"]]],[11,"borrow","","",446,[[["self"]],["t"]]],[11,"borrow_mut","","",446,[[["self"]],["t"]]],[11,"try_into","","",446,[[["self"]],["result"]]],[11,"get_type_id","","",446,[[["self"]],["typeid"]]],[11,"handle","","",446,N],[11,"into_any","","",446,[[["box"]],["box",["any"]]]],[11,"as_any","","",446,[[["self"]],["any"]]],[11,"as_any_mut","","",446,[[["self"]],["any"]]],[11,"from","","",428,[[["t"]],["t"]]],[11,"into","","",428,[[["self"]],["u"]]],[11,"try_from","","",428,[[["u"]],["result"]]],[11,"borrow","","",428,[[["self"]],["t"]]],[11,"borrow_mut","","",428,[[["self"]],["t"]]],[11,"try_into","","",428,[[["self"]],["result"]]],[11,"get_type_id","","",428,[[["self"]],["typeid"]]],[11,"into_any","","",428,[[["box"]],["box",["any"]]]],[11,"as_any","","",428,[[["self"]],["any"]]],[11,"as_any_mut","","",428,[[["self"]],["any"]]],[11,"from","","",429,[[["t"]],["t"]]],[11,"into","","",429,[[["self"]],["u"]]],[11,"try_from","","",429,[[["u"]],["result"]]],[11,"borrow","","",429,[[["self"]],["t"]]],[11,"borrow_mut","","",429,[[["self"]],["t"]]],[11,"try_into","","",429,[[["self"]],["result"]]],[11,"get_type_id","","",429,[[["self"]],["typeid"]]],[11,"into_any","","",429,[[["box"]],["box",["any"]]]],[11,"as_any","","",429,[[["self"]],["any"]]],[11,"as_any_mut","","",429,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",447,[[["t"]],["t"]]],[11,"into","","",447,[[["self"]],["u"]]],[11,"to_owned","","",447,[[["self"]],["t"]]],[11,"clone_into","","",447,N],[11,"try_from","","",447,[[["u"]],["result"]]],[11,"borrow","","",447,[[["self"]],["t"]]],[11,"borrow_mut","","",447,[[["self"]],["t"]]],[11,"try_into","","",447,[[["self"]],["result"]]],[11,"get_type_id","","",447,[[["self"]],["typeid"]]],[11,"handle","","",447,N],[11,"into_any","","",447,[[["box"]],["box",["any"]]]],[11,"as_any","","",447,[[["self"]],["any"]]],[11,"as_any_mut","","",447,[[["self"]],["any"]]],[11,"from","","",431,[[["t"]],["t"]]],[11,"into","","",431,[[["self"]],["u"]]],[11,"to_owned","","",431,[[["self"]],["t"]]],[11,"clone_into","","",431,N],[11,"try_from","","",431,[[["u"]],["result"]]],[11,"borrow","","",431,[[["self"]],["t"]]],[11,"borrow_mut","","",431,[[["self"]],["t"]]],[11,"try_into","","",431,[[["self"]],["result"]]],[11,"get_type_id","","",431,[[["self"]],["typeid"]]],[11,"into_any","","",431,[[["box"]],["box",["any"]]]],[11,"as_any","","",431,[[["self"]],["any"]]],[11,"as_any_mut","","",431,[[["self"]],["any"]]],[11,"from","","",432,[[["t"]],["t"]]],[11,"into","","",432,[[["self"]],["u"]]],[11,"to_owned","","",432,[[["self"]],["t"]]],[11,"clone_into","","",432,N],[11,"try_from","","",432,[[["u"]],["result"]]],[11,"borrow","","",432,[[["self"]],["t"]]],[11,"borrow_mut","","",432,[[["self"]],["t"]]],[11,"try_into","","",432,[[["self"]],["result"]]],[11,"get_type_id","","",432,[[["self"]],["typeid"]]],[11,"into_any","","",432,[[["box"]],["box",["any"]]]],[11,"as_any","","",432,[[["self"]],["any"]]],[11,"as_any_mut","","",432,[[["self"]],["any"]]],[11,"from","","",433,[[["t"]],["t"]]],[11,"into","","",433,[[["self"]],["u"]]],[11,"try_from","","",433,[[["u"]],["result"]]],[11,"borrow","","",433,[[["self"]],["t"]]],[11,"borrow_mut","","",433,[[["self"]],["t"]]],[11,"try_into","","",433,[[["self"]],["result"]]],[11,"get_type_id","","",433,[[["self"]],["typeid"]]],[11,"into_any","","",433,[[["box"]],["box",["any"]]]],[11,"as_any","","",433,[[["self"]],["any"]]],[11,"as_any_mut","","",433,[[["self"]],["any"]]],[11,"from","","",434,[[["t"]],["t"]]],[11,"into","","",434,[[["self"]],["u"]]],[11,"try_from","","",434,[[["u"]],["result"]]],[11,"borrow","","",434,[[["self"]],["t"]]],[11,"borrow_mut","","",434,[[["self"]],["t"]]],[11,"try_into","","",434,[[["self"]],["result"]]],[11,"get_type_id","","",434,[[["self"]],["typeid"]]],[11,"into_any","","",434,[[["box"]],["box",["any"]]]],[11,"as_any","","",434,[[["self"]],["any"]]],[11,"as_any_mut","","",434,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",448,[[["t"]],["t"]]],[11,"into","","",448,[[["self"]],["u"]]],[11,"to_owned","","",448,[[["self"]],["t"]]],[11,"clone_into","","",448,N],[11,"try_from","","",448,[[["u"]],["result"]]],[11,"borrow","","",448,[[["self"]],["t"]]],[11,"borrow_mut","","",448,[[["self"]],["t"]]],[11,"try_into","","",448,[[["self"]],["result"]]],[11,"get_type_id","","",448,[[["self"]],["typeid"]]],[11,"handle","","",448,N],[11,"into_any","","",448,[[["box"]],["box",["any"]]]],[11,"as_any","","",448,[[["self"]],["any"]]],[11,"as_any_mut","","",448,[[["self"]],["any"]]],[11,"from","","",436,[[["t"]],["t"]]],[11,"into","","",436,[[["self"]],["u"]]],[11,"to_owned","","",436,[[["self"]],["t"]]],[11,"clone_into","","",436,N],[11,"try_from","","",436,[[["u"]],["result"]]],[11,"borrow","","",436,[[["self"]],["t"]]],[11,"borrow_mut","","",436,[[["self"]],["t"]]],[11,"try_into","","",436,[[["self"]],["result"]]],[11,"get_type_id","","",436,[[["self"]],["typeid"]]],[11,"into_any","","",436,[[["box"]],["box",["any"]]]],[11,"as_any","","",436,[[["self"]],["any"]]],[11,"as_any_mut","","",436,[[["self"]],["any"]]],[11,"from","","",437,[[["t"]],["t"]]],[11,"into","","",437,[[["self"]],["u"]]],[11,"to_owned","","",437,[[["self"]],["t"]]],[11,"clone_into","","",437,N],[11,"try_from","","",437,[[["u"]],["result"]]],[11,"borrow","","",437,[[["self"]],["t"]]],[11,"borrow_mut","","",437,[[["self"]],["t"]]],[11,"try_into","","",437,[[["self"]],["result"]]],[11,"get_type_id","","",437,[[["self"]],["typeid"]]],[11,"into_any","","",437,[[["box"]],["box",["any"]]]],[11,"as_any","","",437,[[["self"]],["any"]]],[11,"as_any_mut","","",437,[[["self"]],["any"]]],[11,"from","","",438,[[["t"]],["t"]]],[11,"into","","",438,[[["self"]],["u"]]],[11,"try_from","","",438,[[["u"]],["result"]]],[11,"borrow","","",438,[[["self"]],["t"]]],[11,"borrow_mut","","",438,[[["self"]],["t"]]],[11,"try_into","","",438,[[["self"]],["result"]]],[11,"get_type_id","","",438,[[["self"]],["typeid"]]],[11,"into_any","","",438,[[["box"]],["box",["any"]]]],[11,"as_any","","",438,[[["self"]],["any"]]],[11,"as_any_mut","","",438,[[["self"]],["any"]]],[11,"from","","",439,[[["t"]],["t"]]],[11,"into","","",439,[[["self"]],["u"]]],[11,"try_from","","",439,[[["u"]],["result"]]],[11,"borrow","","",439,[[["self"]],["t"]]],[11,"borrow_mut","","",439,[[["self"]],["t"]]],[11,"try_into","","",439,[[["self"]],["result"]]],[11,"get_type_id","","",439,[[["self"]],["typeid"]]],[11,"into_any","","",439,[[["box"]],["box",["any"]]]],[11,"as_any","","",439,[[["self"]],["any"]]],[11,"as_any_mut","","",439,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",449,[[["t"]],["t"]]],[11,"into","","",449,[[["self"]],["u"]]],[11,"to_owned","","",449,[[["self"]],["t"]]],[11,"clone_into","","",449,N],[11,"try_from","","",449,[[["u"]],["result"]]],[11,"borrow","","",449,[[["self"]],["t"]]],[11,"borrow_mut","","",449,[[["self"]],["t"]]],[11,"try_into","","",449,[[["self"]],["result"]]],[11,"get_type_id","","",449,[[["self"]],["typeid"]]],[11,"handle","","",449,N],[11,"into_any","","",449,[[["box"]],["box",["any"]]]],[11,"as_any","","",449,[[["self"]],["any"]]],[11,"as_any_mut","","",449,[[["self"]],["any"]]],[11,"from","","",441,[[["t"]],["t"]]],[11,"into","","",441,[[["self"]],["u"]]],[11,"try_from","","",441,[[["u"]],["result"]]],[11,"borrow","","",441,[[["self"]],["t"]]],[11,"borrow_mut","","",441,[[["self"]],["t"]]],[11,"try_into","","",441,[[["self"]],["result"]]],[11,"get_type_id","","",441,[[["self"]],["typeid"]]],[11,"into_any","","",441,[[["box"]],["box",["any"]]]],[11,"as_any","","",441,[[["self"]],["any"]]],[11,"as_any_mut","","",441,[[["self"]],["any"]]],[11,"from","","",442,[[["t"]],["t"]]],[11,"into","","",442,[[["self"]],["u"]]],[11,"try_from","","",442,[[["u"]],["result"]]],[11,"borrow","","",442,[[["self"]],["t"]]],[11,"borrow_mut","","",442,[[["self"]],["t"]]],[11,"try_into","","",442,[[["self"]],["result"]]],[11,"get_type_id","","",442,[[["self"]],["typeid"]]],[11,"into_any","","",442,[[["box"]],["box",["any"]]]],[11,"as_any","","",442,[[["self"]],["any"]]],[11,"as_any_mut","","",442,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",489,[[["t"]],["t"]]],[11,"into","","",489,[[["self"]],["u"]]],[11,"to_owned","","",489,[[["self"]],["t"]]],[11,"clone_into","","",489,N],[11,"try_from","","",489,[[["u"]],["result"]]],[11,"borrow","","",489,[[["self"]],["t"]]],[11,"borrow_mut","","",489,[[["self"]],["t"]]],[11,"try_into","","",489,[[["self"]],["result"]]],[11,"get_type_id","","",489,[[["self"]],["typeid"]]],[11,"handle","","",489,N],[11,"into_any","","",489,[[["box"]],["box",["any"]]]],[11,"as_any","","",489,[[["self"]],["any"]]],[11,"as_any_mut","","",489,[[["self"]],["any"]]],[11,"from","","",450,[[["t"]],["t"]]],[11,"into","","",450,[[["self"]],["u"]]],[11,"to_owned","","",450,[[["self"]],["t"]]],[11,"clone_into","","",450,N],[11,"try_from","","",450,[[["u"]],["result"]]],[11,"borrow","","",450,[[["self"]],["t"]]],[11,"borrow_mut","","",450,[[["self"]],["t"]]],[11,"try_into","","",450,[[["self"]],["result"]]],[11,"get_type_id","","",450,[[["self"]],["typeid"]]],[11,"into_any","","",450,[[["box"]],["box",["any"]]]],[11,"as_any","","",450,[[["self"]],["any"]]],[11,"as_any_mut","","",450,[[["self"]],["any"]]],[11,"from","","",451,[[["t"]],["t"]]],[11,"into","","",451,[[["self"]],["u"]]],[11,"try_from","","",451,[[["u"]],["result"]]],[11,"borrow","","",451,[[["self"]],["t"]]],[11,"borrow_mut","","",451,[[["self"]],["t"]]],[11,"try_into","","",451,[[["self"]],["result"]]],[11,"get_type_id","","",451,[[["self"]],["typeid"]]],[11,"into_any","","",451,[[["box"]],["box",["any"]]]],[11,"as_any","","",451,[[["self"]],["any"]]],[11,"as_any_mut","","",451,[[["self"]],["any"]]],[11,"from","","",452,[[["t"]],["t"]]],[11,"into","","",452,[[["self"]],["u"]]],[11,"try_from","","",452,[[["u"]],["result"]]],[11,"borrow","","",452,[[["self"]],["t"]]],[11,"borrow_mut","","",452,[[["self"]],["t"]]],[11,"try_into","","",452,[[["self"]],["result"]]],[11,"get_type_id","","",452,[[["self"]],["typeid"]]],[11,"into_any","","",452,[[["box"]],["box",["any"]]]],[11,"as_any","","",452,[[["self"]],["any"]]],[11,"as_any_mut","","",452,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["t"]],["t"]]],[11,"into","","",490,[[["self"]],["u"]]],[11,"to_owned","","",490,[[["self"]],["t"]]],[11,"clone_into","","",490,N],[11,"try_from","","",490,[[["u"]],["result"]]],[11,"borrow","","",490,[[["self"]],["t"]]],[11,"borrow_mut","","",490,[[["self"]],["t"]]],[11,"try_into","","",490,[[["self"]],["result"]]],[11,"get_type_id","","",490,[[["self"]],["typeid"]]],[11,"into_any","","",490,[[["box"]],["box",["any"]]]],[11,"as_any","","",490,[[["self"]],["any"]]],[11,"as_any_mut","","",490,[[["self"]],["any"]]],[11,"from","","",491,[[["t"]],["t"]]],[11,"into","","",491,[[["self"]],["u"]]],[11,"to_owned","","",491,[[["self"]],["t"]]],[11,"clone_into","","",491,N],[11,"try_from","","",491,[[["u"]],["result"]]],[11,"borrow","","",491,[[["self"]],["t"]]],[11,"borrow_mut","","",491,[[["self"]],["t"]]],[11,"try_into","","",491,[[["self"]],["result"]]],[11,"get_type_id","","",491,[[["self"]],["typeid"]]],[11,"into_any","","",491,[[["box"]],["box",["any"]]]],[11,"as_any","","",491,[[["self"]],["any"]]],[11,"as_any_mut","","",491,[[["self"]],["any"]]],[11,"from","","",492,[[["t"]],["t"]]],[11,"into","","",492,[[["self"]],["u"]]],[11,"to_owned","","",492,[[["self"]],["t"]]],[11,"clone_into","","",492,N],[11,"try_from","","",492,[[["u"]],["result"]]],[11,"borrow","","",492,[[["self"]],["t"]]],[11,"borrow_mut","","",492,[[["self"]],["t"]]],[11,"try_into","","",492,[[["self"]],["result"]]],[11,"get_type_id","","",492,[[["self"]],["typeid"]]],[11,"into_any","","",492,[[["box"]],["box",["any"]]]],[11,"as_any","","",492,[[["self"]],["any"]]],[11,"as_any_mut","","",492,[[["self"]],["any"]]],[11,"from","","",493,[[["t"]],["t"]]],[11,"into","","",493,[[["self"]],["u"]]],[11,"to_owned","","",493,[[["self"]],["t"]]],[11,"clone_into","","",493,N],[11,"try_from","","",493,[[["u"]],["result"]]],[11,"borrow","","",493,[[["self"]],["t"]]],[11,"borrow_mut","","",493,[[["self"]],["t"]]],[11,"try_into","","",493,[[["self"]],["result"]]],[11,"get_type_id","","",493,[[["self"]],["typeid"]]],[11,"handle","","",493,N],[11,"into_any","","",493,[[["box"]],["box",["any"]]]],[11,"as_any","","",493,[[["self"]],["any"]]],[11,"as_any_mut","","",493,[[["self"]],["any"]]],[11,"from","","",454,[[["t"]],["t"]]],[11,"into","","",454,[[["self"]],["u"]]],[11,"to_owned","","",454,[[["self"]],["t"]]],[11,"clone_into","","",454,N],[11,"try_from","","",454,[[["u"]],["result"]]],[11,"borrow","","",454,[[["self"]],["t"]]],[11,"borrow_mut","","",454,[[["self"]],["t"]]],[11,"try_into","","",454,[[["self"]],["result"]]],[11,"get_type_id","","",454,[[["self"]],["typeid"]]],[11,"into_any","","",454,[[["box"]],["box",["any"]]]],[11,"as_any","","",454,[[["self"]],["any"]]],[11,"as_any_mut","","",454,[[["self"]],["any"]]],[11,"from","","",455,[[["t"]],["t"]]],[11,"into","","",455,[[["self"]],["u"]]],[11,"try_from","","",455,[[["u"]],["result"]]],[11,"borrow","","",455,[[["self"]],["t"]]],[11,"borrow_mut","","",455,[[["self"]],["t"]]],[11,"try_into","","",455,[[["self"]],["result"]]],[11,"get_type_id","","",455,[[["self"]],["typeid"]]],[11,"into_any","","",455,[[["box"]],["box",["any"]]]],[11,"as_any","","",455,[[["self"]],["any"]]],[11,"as_any_mut","","",455,[[["self"]],["any"]]],[11,"from","","",809,[[["t"]],["t"]]],[11,"into","","",809,[[["self"]],["u"]]],[11,"try_from","","",809,[[["u"]],["result"]]],[11,"borrow","","",809,[[["self"]],["t"]]],[11,"borrow_mut","","",809,[[["self"]],["t"]]],[11,"try_into","","",809,[[["self"]],["result"]]],[11,"get_type_id","","",809,[[["self"]],["typeid"]]],[11,"into_any","","",809,[[["box"]],["box",["any"]]]],[11,"as_any","","",809,[[["self"]],["any"]]],[11,"as_any_mut","","",809,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",494,[[["t"]],["t"]]],[11,"into","","",494,[[["self"]],["u"]]],[11,"to_owned","","",494,[[["self"]],["t"]]],[11,"clone_into","","",494,N],[11,"try_from","","",494,[[["u"]],["result"]]],[11,"borrow","","",494,[[["self"]],["t"]]],[11,"borrow_mut","","",494,[[["self"]],["t"]]],[11,"try_into","","",494,[[["self"]],["result"]]],[11,"get_type_id","","",494,[[["self"]],["typeid"]]],[11,"handle","","",494,N],[11,"into_any","","",494,[[["box"]],["box",["any"]]]],[11,"as_any","","",494,[[["self"]],["any"]]],[11,"as_any_mut","","",494,[[["self"]],["any"]]],[11,"from","","",456,[[["t"]],["t"]]],[11,"into","","",456,[[["self"]],["u"]]],[11,"to_owned","","",456,[[["self"]],["t"]]],[11,"clone_into","","",456,N],[11,"try_from","","",456,[[["u"]],["result"]]],[11,"borrow","","",456,[[["self"]],["t"]]],[11,"borrow_mut","","",456,[[["self"]],["t"]]],[11,"try_into","","",456,[[["self"]],["result"]]],[11,"get_type_id","","",456,[[["self"]],["typeid"]]],[11,"into_any","","",456,[[["box"]],["box",["any"]]]],[11,"as_any","","",456,[[["self"]],["any"]]],[11,"as_any_mut","","",456,[[["self"]],["any"]]],[11,"from","","",457,[[["t"]],["t"]]],[11,"into","","",457,[[["self"]],["u"]]],[11,"try_from","","",457,[[["u"]],["result"]]],[11,"borrow","","",457,[[["self"]],["t"]]],[11,"borrow_mut","","",457,[[["self"]],["t"]]],[11,"try_into","","",457,[[["self"]],["result"]]],[11,"get_type_id","","",457,[[["self"]],["typeid"]]],[11,"into_any","","",457,[[["box"]],["box",["any"]]]],[11,"as_any","","",457,[[["self"]],["any"]]],[11,"as_any_mut","","",457,[[["self"]],["any"]]],[11,"from","","",458,[[["t"]],["t"]]],[11,"into","","",458,[[["self"]],["u"]]],[11,"try_from","","",458,[[["u"]],["result"]]],[11,"borrow","","",458,[[["self"]],["t"]]],[11,"borrow_mut","","",458,[[["self"]],["t"]]],[11,"try_into","","",458,[[["self"]],["result"]]],[11,"get_type_id","","",458,[[["self"]],["typeid"]]],[11,"into_any","","",458,[[["box"]],["box",["any"]]]],[11,"as_any","","",458,[[["self"]],["any"]]],[11,"as_any_mut","","",458,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",495,[[["t"]],["t"]]],[11,"into","","",495,[[["self"]],["u"]]],[11,"to_owned","","",495,[[["self"]],["t"]]],[11,"clone_into","","",495,N],[11,"try_from","","",495,[[["u"]],["result"]]],[11,"borrow","","",495,[[["self"]],["t"]]],[11,"borrow_mut","","",495,[[["self"]],["t"]]],[11,"try_into","","",495,[[["self"]],["result"]]],[11,"get_type_id","","",495,[[["self"]],["typeid"]]],[11,"handle","","",495,N],[11,"into_any","","",495,[[["box"]],["box",["any"]]]],[11,"as_any","","",495,[[["self"]],["any"]]],[11,"as_any_mut","","",495,[[["self"]],["any"]]],[11,"from","","",460,[[["t"]],["t"]]],[11,"into","","",460,[[["self"]],["u"]]],[11,"to_owned","","",460,[[["self"]],["t"]]],[11,"clone_into","","",460,N],[11,"try_from","","",460,[[["u"]],["result"]]],[11,"borrow","","",460,[[["self"]],["t"]]],[11,"borrow_mut","","",460,[[["self"]],["t"]]],[11,"try_into","","",460,[[["self"]],["result"]]],[11,"get_type_id","","",460,[[["self"]],["typeid"]]],[11,"into_any","","",460,[[["box"]],["box",["any"]]]],[11,"as_any","","",460,[[["self"]],["any"]]],[11,"as_any_mut","","",460,[[["self"]],["any"]]],[11,"from","","",461,[[["t"]],["t"]]],[11,"into","","",461,[[["self"]],["u"]]],[11,"to_owned","","",461,[[["self"]],["t"]]],[11,"clone_into","","",461,N],[11,"try_from","","",461,[[["u"]],["result"]]],[11,"borrow","","",461,[[["self"]],["t"]]],[11,"borrow_mut","","",461,[[["self"]],["t"]]],[11,"try_into","","",461,[[["self"]],["result"]]],[11,"get_type_id","","",461,[[["self"]],["typeid"]]],[11,"into_any","","",461,[[["box"]],["box",["any"]]]],[11,"as_any","","",461,[[["self"]],["any"]]],[11,"as_any_mut","","",461,[[["self"]],["any"]]],[11,"from","","",462,[[["t"]],["t"]]],[11,"into","","",462,[[["self"]],["u"]]],[11,"try_from","","",462,[[["u"]],["result"]]],[11,"borrow","","",462,[[["self"]],["t"]]],[11,"borrow_mut","","",462,[[["self"]],["t"]]],[11,"try_into","","",462,[[["self"]],["result"]]],[11,"get_type_id","","",462,[[["self"]],["typeid"]]],[11,"into_any","","",462,[[["box"]],["box",["any"]]]],[11,"as_any","","",462,[[["self"]],["any"]]],[11,"as_any_mut","","",462,[[["self"]],["any"]]],[11,"from","","",463,[[["t"]],["t"]]],[11,"into","","",463,[[["self"]],["u"]]],[11,"try_from","","",463,[[["u"]],["result"]]],[11,"borrow","","",463,[[["self"]],["t"]]],[11,"borrow_mut","","",463,[[["self"]],["t"]]],[11,"try_into","","",463,[[["self"]],["result"]]],[11,"get_type_id","","",463,[[["self"]],["typeid"]]],[11,"into_any","","",463,[[["box"]],["box",["any"]]]],[11,"as_any","","",463,[[["self"]],["any"]]],[11,"as_any_mut","","",463,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",496,[[["t"]],["t"]]],[11,"into","","",496,[[["self"]],["u"]]],[11,"to_owned","","",496,[[["self"]],["t"]]],[11,"clone_into","","",496,N],[11,"try_from","","",496,[[["u"]],["result"]]],[11,"borrow","","",496,[[["self"]],["t"]]],[11,"borrow_mut","","",496,[[["self"]],["t"]]],[11,"try_into","","",496,[[["self"]],["result"]]],[11,"get_type_id","","",496,[[["self"]],["typeid"]]],[11,"handle","","",496,N],[11,"into_any","","",496,[[["box"]],["box",["any"]]]],[11,"as_any","","",496,[[["self"]],["any"]]],[11,"as_any_mut","","",496,[[["self"]],["any"]]],[11,"from","","",465,[[["t"]],["t"]]],[11,"into","","",465,[[["self"]],["u"]]],[11,"to_owned","","",465,[[["self"]],["t"]]],[11,"clone_into","","",465,N],[11,"try_from","","",465,[[["u"]],["result"]]],[11,"borrow","","",465,[[["self"]],["t"]]],[11,"borrow_mut","","",465,[[["self"]],["t"]]],[11,"try_into","","",465,[[["self"]],["result"]]],[11,"get_type_id","","",465,[[["self"]],["typeid"]]],[11,"into_any","","",465,[[["box"]],["box",["any"]]]],[11,"as_any","","",465,[[["self"]],["any"]]],[11,"as_any_mut","","",465,[[["self"]],["any"]]],[11,"from","","",466,[[["t"]],["t"]]],[11,"into","","",466,[[["self"]],["u"]]],[11,"try_from","","",466,[[["u"]],["result"]]],[11,"borrow","","",466,[[["self"]],["t"]]],[11,"borrow_mut","","",466,[[["self"]],["t"]]],[11,"try_into","","",466,[[["self"]],["result"]]],[11,"get_type_id","","",466,[[["self"]],["typeid"]]],[11,"into_any","","",466,[[["box"]],["box",["any"]]]],[11,"as_any","","",466,[[["self"]],["any"]]],[11,"as_any_mut","","",466,[[["self"]],["any"]]],[11,"from","","",467,[[["t"]],["t"]]],[11,"into","","",467,[[["self"]],["u"]]],[11,"try_from","","",467,[[["u"]],["result"]]],[11,"borrow","","",467,[[["self"]],["t"]]],[11,"borrow_mut","","",467,[[["self"]],["t"]]],[11,"try_into","","",467,[[["self"]],["result"]]],[11,"get_type_id","","",467,[[["self"]],["typeid"]]],[11,"into_any","","",467,[[["box"]],["box",["any"]]]],[11,"as_any","","",467,[[["self"]],["any"]]],[11,"as_any_mut","","",467,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",497,[[["t"]],["t"]]],[11,"into","","",497,[[["self"]],["u"]]],[11,"to_owned","","",497,[[["self"]],["t"]]],[11,"clone_into","","",497,N],[11,"try_from","","",497,[[["u"]],["result"]]],[11,"borrow","","",497,[[["self"]],["t"]]],[11,"borrow_mut","","",497,[[["self"]],["t"]]],[11,"try_into","","",497,[[["self"]],["result"]]],[11,"get_type_id","","",497,[[["self"]],["typeid"]]],[11,"handle","","",497,N],[11,"into_any","","",497,[[["box"]],["box",["any"]]]],[11,"as_any","","",497,[[["self"]],["any"]]],[11,"as_any_mut","","",497,[[["self"]],["any"]]],[11,"from","","",469,[[["t"]],["t"]]],[11,"into","","",469,[[["self"]],["u"]]],[11,"to_owned","","",469,[[["self"]],["t"]]],[11,"clone_into","","",469,N],[11,"try_from","","",469,[[["u"]],["result"]]],[11,"borrow","","",469,[[["self"]],["t"]]],[11,"borrow_mut","","",469,[[["self"]],["t"]]],[11,"try_into","","",469,[[["self"]],["result"]]],[11,"get_type_id","","",469,[[["self"]],["typeid"]]],[11,"into_any","","",469,[[["box"]],["box",["any"]]]],[11,"as_any","","",469,[[["self"]],["any"]]],[11,"as_any_mut","","",469,[[["self"]],["any"]]],[11,"from","","",470,[[["t"]],["t"]]],[11,"into","","",470,[[["self"]],["u"]]],[11,"try_from","","",470,[[["u"]],["result"]]],[11,"borrow","","",470,[[["self"]],["t"]]],[11,"borrow_mut","","",470,[[["self"]],["t"]]],[11,"try_into","","",470,[[["self"]],["result"]]],[11,"get_type_id","","",470,[[["self"]],["typeid"]]],[11,"into_any","","",470,[[["box"]],["box",["any"]]]],[11,"as_any","","",470,[[["self"]],["any"]]],[11,"as_any_mut","","",470,[[["self"]],["any"]]],[11,"from","","",471,[[["t"]],["t"]]],[11,"into","","",471,[[["self"]],["u"]]],[11,"try_from","","",471,[[["u"]],["result"]]],[11,"borrow","","",471,[[["self"]],["t"]]],[11,"borrow_mut","","",471,[[["self"]],["t"]]],[11,"try_into","","",471,[[["self"]],["result"]]],[11,"get_type_id","","",471,[[["self"]],["typeid"]]],[11,"into_any","","",471,[[["box"]],["box",["any"]]]],[11,"as_any","","",471,[[["self"]],["any"]]],[11,"as_any_mut","","",471,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["t"]],["t"]]],[11,"into","","",498,[[["self"]],["u"]]],[11,"to_owned","","",498,[[["self"]],["t"]]],[11,"clone_into","","",498,N],[11,"try_from","","",498,[[["u"]],["result"]]],[11,"borrow","","",498,[[["self"]],["t"]]],[11,"borrow_mut","","",498,[[["self"]],["t"]]],[11,"try_into","","",498,[[["self"]],["result"]]],[11,"get_type_id","","",498,[[["self"]],["typeid"]]],[11,"into_any","","",498,[[["box"]],["box",["any"]]]],[11,"as_any","","",498,[[["self"]],["any"]]],[11,"as_any_mut","","",498,[[["self"]],["any"]]],[11,"from","","",499,[[["t"]],["t"]]],[11,"into","","",499,[[["self"]],["u"]]],[11,"to_owned","","",499,[[["self"]],["t"]]],[11,"clone_into","","",499,N],[11,"try_from","","",499,[[["u"]],["result"]]],[11,"borrow","","",499,[[["self"]],["t"]]],[11,"borrow_mut","","",499,[[["self"]],["t"]]],[11,"try_into","","",499,[[["self"]],["result"]]],[11,"get_type_id","","",499,[[["self"]],["typeid"]]],[11,"into_any","","",499,[[["box"]],["box",["any"]]]],[11,"as_any","","",499,[[["self"]],["any"]]],[11,"as_any_mut","","",499,[[["self"]],["any"]]],[11,"from","","",500,[[["t"]],["t"]]],[11,"into","","",500,[[["self"]],["u"]]],[11,"to_owned","","",500,[[["self"]],["t"]]],[11,"clone_into","","",500,N],[11,"try_from","","",500,[[["u"]],["result"]]],[11,"borrow","","",500,[[["self"]],["t"]]],[11,"borrow_mut","","",500,[[["self"]],["t"]]],[11,"try_into","","",500,[[["self"]],["result"]]],[11,"get_type_id","","",500,[[["self"]],["typeid"]]],[11,"into_any","","",500,[[["box"]],["box",["any"]]]],[11,"as_any","","",500,[[["self"]],["any"]]],[11,"as_any_mut","","",500,[[["self"]],["any"]]],[11,"from","","",810,[[["t"]],["t"]]],[11,"into","","",810,[[["self"]],["u"]]],[11,"to_owned","","",810,[[["self"]],["t"]]],[11,"clone_into","","",810,N],[11,"try_from","","",810,[[["u"]],["result"]]],[11,"borrow","","",810,[[["self"]],["t"]]],[11,"borrow_mut","","",810,[[["self"]],["t"]]],[11,"try_into","","",810,[[["self"]],["result"]]],[11,"get_type_id","","",810,[[["self"]],["typeid"]]],[11,"handle","","",810,N],[11,"into_any","","",810,[[["box"]],["box",["any"]]]],[11,"as_any","","",810,[[["self"]],["any"]]],[11,"as_any_mut","","",810,[[["self"]],["any"]]],[11,"from","","",473,[[["t"]],["t"]]],[11,"into","","",473,[[["self"]],["u"]]],[11,"to_owned","","",473,[[["self"]],["t"]]],[11,"clone_into","","",473,N],[11,"try_from","","",473,[[["u"]],["result"]]],[11,"borrow","","",473,[[["self"]],["t"]]],[11,"borrow_mut","","",473,[[["self"]],["t"]]],[11,"try_into","","",473,[[["self"]],["result"]]],[11,"get_type_id","","",473,[[["self"]],["typeid"]]],[11,"into_any","","",473,[[["box"]],["box",["any"]]]],[11,"as_any","","",473,[[["self"]],["any"]]],[11,"as_any_mut","","",473,[[["self"]],["any"]]],[11,"from","","",474,[[["t"]],["t"]]],[11,"into","","",474,[[["self"]],["u"]]],[11,"try_from","","",474,[[["u"]],["result"]]],[11,"borrow","","",474,[[["self"]],["t"]]],[11,"borrow_mut","","",474,[[["self"]],["t"]]],[11,"try_into","","",474,[[["self"]],["result"]]],[11,"get_type_id","","",474,[[["self"]],["typeid"]]],[11,"into_any","","",474,[[["box"]],["box",["any"]]]],[11,"as_any","","",474,[[["self"]],["any"]]],[11,"as_any_mut","","",474,[[["self"]],["any"]]],[11,"from","","",811,[[["t"]],["t"]]],[11,"into","","",811,[[["self"]],["u"]]],[11,"try_from","","",811,[[["u"]],["result"]]],[11,"borrow","","",811,[[["self"]],["t"]]],[11,"borrow_mut","","",811,[[["self"]],["t"]]],[11,"try_into","","",811,[[["self"]],["result"]]],[11,"get_type_id","","",811,[[["self"]],["typeid"]]],[11,"into_any","","",811,[[["box"]],["box",["any"]]]],[11,"as_any","","",811,[[["self"]],["any"]]],[11,"as_any_mut","","",811,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",501,[[["t"]],["t"]]],[11,"into","","",501,[[["self"]],["u"]]],[11,"to_owned","","",501,[[["self"]],["t"]]],[11,"clone_into","","",501,N],[11,"try_from","","",501,[[["u"]],["result"]]],[11,"borrow","","",501,[[["self"]],["t"]]],[11,"borrow_mut","","",501,[[["self"]],["t"]]],[11,"try_into","","",501,[[["self"]],["result"]]],[11,"get_type_id","","",501,[[["self"]],["typeid"]]],[11,"handle","","",501,N],[11,"into_any","","",501,[[["box"]],["box",["any"]]]],[11,"as_any","","",501,[[["self"]],["any"]]],[11,"as_any_mut","","",501,[[["self"]],["any"]]],[11,"from","","",476,[[["t"]],["t"]]],[11,"into","","",476,[[["self"]],["u"]]],[11,"to_owned","","",476,[[["self"]],["t"]]],[11,"clone_into","","",476,N],[11,"try_from","","",476,[[["u"]],["result"]]],[11,"borrow","","",476,[[["self"]],["t"]]],[11,"borrow_mut","","",476,[[["self"]],["t"]]],[11,"try_into","","",476,[[["self"]],["result"]]],[11,"get_type_id","","",476,[[["self"]],["typeid"]]],[11,"into_any","","",476,[[["box"]],["box",["any"]]]],[11,"as_any","","",476,[[["self"]],["any"]]],[11,"as_any_mut","","",476,[[["self"]],["any"]]],[11,"from","","",477,[[["t"]],["t"]]],[11,"into","","",477,[[["self"]],["u"]]],[11,"try_from","","",477,[[["u"]],["result"]]],[11,"borrow","","",477,[[["self"]],["t"]]],[11,"borrow_mut","","",477,[[["self"]],["t"]]],[11,"try_into","","",477,[[["self"]],["result"]]],[11,"get_type_id","","",477,[[["self"]],["typeid"]]],[11,"into_any","","",477,[[["box"]],["box",["any"]]]],[11,"as_any","","",477,[[["self"]],["any"]]],[11,"as_any_mut","","",477,[[["self"]],["any"]]],[11,"from","","",478,[[["t"]],["t"]]],[11,"into","","",478,[[["self"]],["u"]]],[11,"try_from","","",478,[[["u"]],["result"]]],[11,"borrow","","",478,[[["self"]],["t"]]],[11,"borrow_mut","","",478,[[["self"]],["t"]]],[11,"try_into","","",478,[[["self"]],["result"]]],[11,"get_type_id","","",478,[[["self"]],["typeid"]]],[11,"into_any","","",478,[[["box"]],["box",["any"]]]],[11,"as_any","","",478,[[["self"]],["any"]]],[11,"as_any_mut","","",478,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",502,[[["t"]],["t"]]],[11,"into","","",502,[[["self"]],["u"]]],[11,"to_owned","","",502,[[["self"]],["t"]]],[11,"clone_into","","",502,N],[11,"try_from","","",502,[[["u"]],["result"]]],[11,"borrow","","",502,[[["self"]],["t"]]],[11,"borrow_mut","","",502,[[["self"]],["t"]]],[11,"try_into","","",502,[[["self"]],["result"]]],[11,"get_type_id","","",502,[[["self"]],["typeid"]]],[11,"handle","","",502,N],[11,"into_any","","",502,[[["box"]],["box",["any"]]]],[11,"as_any","","",502,[[["self"]],["any"]]],[11,"as_any_mut","","",502,[[["self"]],["any"]]],[11,"from","","",480,[[["t"]],["t"]]],[11,"into","","",480,[[["self"]],["u"]]],[11,"to_owned","","",480,[[["self"]],["t"]]],[11,"clone_into","","",480,N],[11,"try_from","","",480,[[["u"]],["result"]]],[11,"borrow","","",480,[[["self"]],["t"]]],[11,"borrow_mut","","",480,[[["self"]],["t"]]],[11,"try_into","","",480,[[["self"]],["result"]]],[11,"get_type_id","","",480,[[["self"]],["typeid"]]],[11,"into_any","","",480,[[["box"]],["box",["any"]]]],[11,"as_any","","",480,[[["self"]],["any"]]],[11,"as_any_mut","","",480,[[["self"]],["any"]]],[11,"from","","",481,[[["t"]],["t"]]],[11,"into","","",481,[[["self"]],["u"]]],[11,"to_owned","","",481,[[["self"]],["t"]]],[11,"clone_into","","",481,N],[11,"try_from","","",481,[[["u"]],["result"]]],[11,"borrow","","",481,[[["self"]],["t"]]],[11,"borrow_mut","","",481,[[["self"]],["t"]]],[11,"try_into","","",481,[[["self"]],["result"]]],[11,"get_type_id","","",481,[[["self"]],["typeid"]]],[11,"into_any","","",481,[[["box"]],["box",["any"]]]],[11,"as_any","","",481,[[["self"]],["any"]]],[11,"as_any_mut","","",481,[[["self"]],["any"]]],[11,"from","","",482,[[["t"]],["t"]]],[11,"into","","",482,[[["self"]],["u"]]],[11,"try_from","","",482,[[["u"]],["result"]]],[11,"borrow","","",482,[[["self"]],["t"]]],[11,"borrow_mut","","",482,[[["self"]],["t"]]],[11,"try_into","","",482,[[["self"]],["result"]]],[11,"get_type_id","","",482,[[["self"]],["typeid"]]],[11,"into_any","","",482,[[["box"]],["box",["any"]]]],[11,"as_any","","",482,[[["self"]],["any"]]],[11,"as_any_mut","","",482,[[["self"]],["any"]]],[11,"from","","",483,[[["t"]],["t"]]],[11,"into","","",483,[[["self"]],["u"]]],[11,"try_from","","",483,[[["u"]],["result"]]],[11,"borrow","","",483,[[["self"]],["t"]]],[11,"borrow_mut","","",483,[[["self"]],["t"]]],[11,"try_into","","",483,[[["self"]],["result"]]],[11,"get_type_id","","",483,[[["self"]],["typeid"]]],[11,"into_any","","",483,[[["box"]],["box",["any"]]]],[11,"as_any","","",483,[[["self"]],["any"]]],[11,"as_any_mut","","",483,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",503,[[["t"]],["t"]]],[11,"into","","",503,[[["self"]],["u"]]],[11,"to_owned","","",503,[[["self"]],["t"]]],[11,"clone_into","","",503,N],[11,"try_from","","",503,[[["u"]],["result"]]],[11,"borrow","","",503,[[["self"]],["t"]]],[11,"borrow_mut","","",503,[[["self"]],["t"]]],[11,"try_into","","",503,[[["self"]],["result"]]],[11,"get_type_id","","",503,[[["self"]],["typeid"]]],[11,"handle","","",503,N],[11,"into_any","","",503,[[["box"]],["box",["any"]]]],[11,"as_any","","",503,[[["self"]],["any"]]],[11,"as_any_mut","","",503,[[["self"]],["any"]]],[11,"from","","",485,[[["t"]],["t"]]],[11,"into","","",485,[[["self"]],["u"]]],[11,"to_owned","","",485,[[["self"]],["t"]]],[11,"clone_into","","",485,N],[11,"try_from","","",485,[[["u"]],["result"]]],[11,"borrow","","",485,[[["self"]],["t"]]],[11,"borrow_mut","","",485,[[["self"]],["t"]]],[11,"try_into","","",485,[[["self"]],["result"]]],[11,"get_type_id","","",485,[[["self"]],["typeid"]]],[11,"into_any","","",485,[[["box"]],["box",["any"]]]],[11,"as_any","","",485,[[["self"]],["any"]]],[11,"as_any_mut","","",485,[[["self"]],["any"]]],[11,"from","","",486,[[["t"]],["t"]]],[11,"into","","",486,[[["self"]],["u"]]],[11,"try_from","","",486,[[["u"]],["result"]]],[11,"borrow","","",486,[[["self"]],["t"]]],[11,"borrow_mut","","",486,[[["self"]],["t"]]],[11,"try_into","","",486,[[["self"]],["result"]]],[11,"get_type_id","","",486,[[["self"]],["typeid"]]],[11,"into_any","","",486,[[["box"]],["box",["any"]]]],[11,"as_any","","",486,[[["self"]],["any"]]],[11,"as_any_mut","","",486,[[["self"]],["any"]]],[11,"from","","",487,[[["t"]],["t"]]],[11,"into","","",487,[[["self"]],["u"]]],[11,"try_from","","",487,[[["u"]],["result"]]],[11,"borrow","","",487,[[["self"]],["t"]]],[11,"borrow_mut","","",487,[[["self"]],["t"]]],[11,"try_into","","",487,[[["self"]],["result"]]],[11,"get_type_id","","",487,[[["self"]],["typeid"]]],[11,"into_any","","",487,[[["box"]],["box",["any"]]]],[11,"as_any","","",487,[[["self"]],["any"]]],[11,"as_any_mut","","",487,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",510,[[["t"]],["t"]]],[11,"into","","",510,[[["self"]],["u"]]],[11,"to_owned","","",510,[[["self"]],["t"]]],[11,"clone_into","","",510,N],[11,"try_from","","",510,[[["u"]],["result"]]],[11,"borrow","","",510,[[["self"]],["t"]]],[11,"borrow_mut","","",510,[[["self"]],["t"]]],[11,"try_into","","",510,[[["self"]],["result"]]],[11,"get_type_id","","",510,[[["self"]],["typeid"]]],[11,"handle","","",510,N],[11,"into_any","","",510,[[["box"]],["box",["any"]]]],[11,"as_any","","",510,[[["self"]],["any"]]],[11,"as_any_mut","","",510,[[["self"]],["any"]]],[11,"from","","",504,[[["t"]],["t"]]],[11,"into","","",504,[[["self"]],["u"]]],[11,"try_from","","",504,[[["u"]],["result"]]],[11,"borrow","","",504,[[["self"]],["t"]]],[11,"borrow_mut","","",504,[[["self"]],["t"]]],[11,"try_into","","",504,[[["self"]],["result"]]],[11,"get_type_id","","",504,[[["self"]],["typeid"]]],[11,"into_any","","",504,[[["box"]],["box",["any"]]]],[11,"as_any","","",504,[[["self"]],["any"]]],[11,"as_any_mut","","",504,[[["self"]],["any"]]],[11,"from","","",812,[[["t"]],["t"]]],[11,"into","","",812,[[["self"]],["u"]]],[11,"try_from","","",812,[[["u"]],["result"]]],[11,"borrow","","",812,[[["self"]],["t"]]],[11,"borrow_mut","","",812,[[["self"]],["t"]]],[11,"try_into","","",812,[[["self"]],["result"]]],[11,"get_type_id","","",812,[[["self"]],["typeid"]]],[11,"into_any","","",812,[[["box"]],["box",["any"]]]],[11,"as_any","","",812,[[["self"]],["any"]]],[11,"as_any_mut","","",812,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",511,[[["t"]],["t"]]],[11,"into","","",511,[[["self"]],["u"]]],[11,"to_owned","","",511,[[["self"]],["t"]]],[11,"clone_into","","",511,N],[11,"try_from","","",511,[[["u"]],["result"]]],[11,"borrow","","",511,[[["self"]],["t"]]],[11,"borrow_mut","","",511,[[["self"]],["t"]]],[11,"try_into","","",511,[[["self"]],["result"]]],[11,"get_type_id","","",511,[[["self"]],["typeid"]]],[11,"handle","","",511,N],[11,"into_any","","",511,[[["box"]],["box",["any"]]]],[11,"as_any","","",511,[[["self"]],["any"]]],[11,"as_any_mut","","",511,[[["self"]],["any"]]],[11,"from","","",505,[[["t"]],["t"]]],[11,"into","","",505,[[["self"]],["u"]]],[11,"try_from","","",505,[[["u"]],["result"]]],[11,"borrow","","",505,[[["self"]],["t"]]],[11,"borrow_mut","","",505,[[["self"]],["t"]]],[11,"try_into","","",505,[[["self"]],["result"]]],[11,"get_type_id","","",505,[[["self"]],["typeid"]]],[11,"into_any","","",505,[[["box"]],["box",["any"]]]],[11,"as_any","","",505,[[["self"]],["any"]]],[11,"as_any_mut","","",505,[[["self"]],["any"]]],[11,"from","","",813,[[["t"]],["t"]]],[11,"into","","",813,[[["self"]],["u"]]],[11,"try_from","","",813,[[["u"]],["result"]]],[11,"borrow","","",813,[[["self"]],["t"]]],[11,"borrow_mut","","",813,[[["self"]],["t"]]],[11,"try_into","","",813,[[["self"]],["result"]]],[11,"get_type_id","","",813,[[["self"]],["typeid"]]],[11,"into_any","","",813,[[["box"]],["box",["any"]]]],[11,"as_any","","",813,[[["self"]],["any"]]],[11,"as_any_mut","","",813,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",814,[[["t"]],["t"]]],[11,"into","","",814,[[["self"]],["u"]]],[11,"to_owned","","",814,[[["self"]],["t"]]],[11,"clone_into","","",814,N],[11,"try_from","","",814,[[["u"]],["result"]]],[11,"borrow","","",814,[[["self"]],["t"]]],[11,"borrow_mut","","",814,[[["self"]],["t"]]],[11,"try_into","","",814,[[["self"]],["result"]]],[11,"get_type_id","","",814,[[["self"]],["typeid"]]],[11,"handle","","",814,N],[11,"into_any","","",814,[[["box"]],["box",["any"]]]],[11,"as_any","","",814,[[["self"]],["any"]]],[11,"as_any_mut","","",814,[[["self"]],["any"]]],[11,"from","","",506,[[["t"]],["t"]]],[11,"into","","",506,[[["self"]],["u"]]],[11,"try_from","","",506,[[["u"]],["result"]]],[11,"borrow","","",506,[[["self"]],["t"]]],[11,"borrow_mut","","",506,[[["self"]],["t"]]],[11,"try_into","","",506,[[["self"]],["result"]]],[11,"get_type_id","","",506,[[["self"]],["typeid"]]],[11,"into_any","","",506,[[["box"]],["box",["any"]]]],[11,"as_any","","",506,[[["self"]],["any"]]],[11,"as_any_mut","","",506,[[["self"]],["any"]]],[11,"from","","",815,[[["t"]],["t"]]],[11,"into","","",815,[[["self"]],["u"]]],[11,"try_from","","",815,[[["u"]],["result"]]],[11,"borrow","","",815,[[["self"]],["t"]]],[11,"borrow_mut","","",815,[[["self"]],["t"]]],[11,"try_into","","",815,[[["self"]],["result"]]],[11,"get_type_id","","",815,[[["self"]],["typeid"]]],[11,"into_any","","",815,[[["box"]],["box",["any"]]]],[11,"as_any","","",815,[[["self"]],["any"]]],[11,"as_any_mut","","",815,[[["self"]],["any"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",816,[[["t"]],["t"]]],[11,"into","","",816,[[["self"]],["u"]]],[11,"to_owned","","",816,[[["self"]],["t"]]],[11,"clone_into","","",816,N],[11,"try_from","","",816,[[["u"]],["result"]]],[11,"borrow","","",816,[[["self"]],["t"]]],[11,"borrow_mut","","",816,[[["self"]],["t"]]],[11,"try_into","","",816,[[["self"]],["result"]]],[11,"get_type_id","","",816,[[["self"]],["typeid"]]],[11,"handle","","",816,N],[11,"into_any","","",816,[[["box"]],["box",["any"]]]],[11,"as_any","","",816,[[["self"]],["any"]]],[11,"as_any_mut","","",816,[[["self"]],["any"]]],[11,"from","","",508,[[["t"]],["t"]]],[11,"into","","",508,[[["self"]],["u"]]],[11,"try_from","","",508,[[["u"]],["result"]]],[11,"borrow","","",508,[[["self"]],["t"]]],[11,"borrow_mut","","",508,[[["self"]],["t"]]],[11,"try_into","","",508,[[["self"]],["result"]]],[11,"get_type_id","","",508,[[["self"]],["typeid"]]],[11,"into_any","","",508,[[["box"]],["box",["any"]]]],[11,"as_any","","",508,[[["self"]],["any"]]],[11,"as_any_mut","","",508,[[["self"]],["any"]]],[11,"from","","",817,[[["t"]],["t"]]],[11,"into","","",817,[[["self"]],["u"]]],[11,"try_from","","",817,[[["u"]],["result"]]],[11,"borrow","","",817,[[["self"]],["t"]]],[11,"borrow_mut","","",817,[[["self"]],["t"]]],[11,"try_into","","",817,[[["self"]],["result"]]],[11,"get_type_id","","",817,[[["self"]],["typeid"]]],[11,"into_any","","",817,[[["box"]],["box",["any"]]]],[11,"as_any","","",817,[[["self"]],["any"]]],[11,"as_any_mut","","",817,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",533,[[["t"]],["t"]]],[11,"into","","",533,[[["self"]],["u"]]],[11,"to_owned","","",533,[[["self"]],["t"]]],[11,"clone_into","","",533,N],[11,"try_from","","",533,[[["u"]],["result"]]],[11,"borrow","","",533,[[["self"]],["t"]]],[11,"borrow_mut","","",533,[[["self"]],["t"]]],[11,"try_into","","",533,[[["self"]],["result"]]],[11,"get_type_id","","",533,[[["self"]],["typeid"]]],[11,"handle","","",533,N],[11,"into_any","","",533,[[["box"]],["box",["any"]]]],[11,"as_any","","",533,[[["self"]],["any"]]],[11,"as_any_mut","","",533,[[["self"]],["any"]]],[11,"from","","",512,[[["t"]],["t"]]],[11,"into","","",512,[[["self"]],["u"]]],[11,"try_from","","",512,[[["u"]],["result"]]],[11,"borrow","","",512,[[["self"]],["t"]]],[11,"borrow_mut","","",512,[[["self"]],["t"]]],[11,"try_into","","",512,[[["self"]],["result"]]],[11,"get_type_id","","",512,[[["self"]],["typeid"]]],[11,"into_any","","",512,[[["box"]],["box",["any"]]]],[11,"as_any","","",512,[[["self"]],["any"]]],[11,"as_any_mut","","",512,[[["self"]],["any"]]],[11,"from","","",818,[[["t"]],["t"]]],[11,"into","","",818,[[["self"]],["u"]]],[11,"try_from","","",818,[[["u"]],["result"]]],[11,"borrow","","",818,[[["self"]],["t"]]],[11,"borrow_mut","","",818,[[["self"]],["t"]]],[11,"try_into","","",818,[[["self"]],["result"]]],[11,"get_type_id","","",818,[[["self"]],["typeid"]]],[11,"into_any","","",818,[[["box"]],["box",["any"]]]],[11,"as_any","","",818,[[["self"]],["any"]]],[11,"as_any_mut","","",818,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",534,[[["t"]],["t"]]],[11,"into","","",534,[[["self"]],["u"]]],[11,"to_owned","","",534,[[["self"]],["t"]]],[11,"clone_into","","",534,N],[11,"try_from","","",534,[[["u"]],["result"]]],[11,"borrow","","",534,[[["self"]],["t"]]],[11,"borrow_mut","","",534,[[["self"]],["t"]]],[11,"try_into","","",534,[[["self"]],["result"]]],[11,"get_type_id","","",534,[[["self"]],["typeid"]]],[11,"handle","","",534,N],[11,"into_any","","",534,[[["box"]],["box",["any"]]]],[11,"as_any","","",534,[[["self"]],["any"]]],[11,"as_any_mut","","",534,[[["self"]],["any"]]],[11,"from","","",513,[[["t"]],["t"]]],[11,"into","","",513,[[["self"]],["u"]]],[11,"try_from","","",513,[[["u"]],["result"]]],[11,"borrow","","",513,[[["self"]],["t"]]],[11,"borrow_mut","","",513,[[["self"]],["t"]]],[11,"try_into","","",513,[[["self"]],["result"]]],[11,"get_type_id","","",513,[[["self"]],["typeid"]]],[11,"into_any","","",513,[[["box"]],["box",["any"]]]],[11,"as_any","","",513,[[["self"]],["any"]]],[11,"as_any_mut","","",513,[[["self"]],["any"]]],[11,"from","","",514,[[["t"]],["t"]]],[11,"into","","",514,[[["self"]],["u"]]],[11,"try_from","","",514,[[["u"]],["result"]]],[11,"borrow","","",514,[[["self"]],["t"]]],[11,"borrow_mut","","",514,[[["self"]],["t"]]],[11,"try_into","","",514,[[["self"]],["result"]]],[11,"get_type_id","","",514,[[["self"]],["typeid"]]],[11,"into_any","","",514,[[["box"]],["box",["any"]]]],[11,"as_any","","",514,[[["self"]],["any"]]],[11,"as_any_mut","","",514,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",535,[[["t"]],["t"]]],[11,"into","","",535,[[["self"]],["u"]]],[11,"to_owned","","",535,[[["self"]],["t"]]],[11,"clone_into","","",535,N],[11,"try_from","","",535,[[["u"]],["result"]]],[11,"borrow","","",535,[[["self"]],["t"]]],[11,"borrow_mut","","",535,[[["self"]],["t"]]],[11,"try_into","","",535,[[["self"]],["result"]]],[11,"get_type_id","","",535,[[["self"]],["typeid"]]],[11,"handle","","",535,N],[11,"into_any","","",535,[[["box"]],["box",["any"]]]],[11,"as_any","","",535,[[["self"]],["any"]]],[11,"as_any_mut","","",535,[[["self"]],["any"]]],[11,"from","","",516,[[["t"]],["t"]]],[11,"into","","",516,[[["self"]],["u"]]],[11,"try_from","","",516,[[["u"]],["result"]]],[11,"borrow","","",516,[[["self"]],["t"]]],[11,"borrow_mut","","",516,[[["self"]],["t"]]],[11,"try_into","","",516,[[["self"]],["result"]]],[11,"get_type_id","","",516,[[["self"]],["typeid"]]],[11,"into_any","","",516,[[["box"]],["box",["any"]]]],[11,"as_any","","",516,[[["self"]],["any"]]],[11,"as_any_mut","","",516,[[["self"]],["any"]]],[11,"from","","",517,[[["t"]],["t"]]],[11,"into","","",517,[[["self"]],["u"]]],[11,"try_from","","",517,[[["u"]],["result"]]],[11,"borrow","","",517,[[["self"]],["t"]]],[11,"borrow_mut","","",517,[[["self"]],["t"]]],[11,"try_into","","",517,[[["self"]],["result"]]],[11,"get_type_id","","",517,[[["self"]],["typeid"]]],[11,"into_any","","",517,[[["box"]],["box",["any"]]]],[11,"as_any","","",517,[[["self"]],["any"]]],[11,"as_any_mut","","",517,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",536,[[["t"]],["t"]]],[11,"into","","",536,[[["self"]],["u"]]],[11,"to_owned","","",536,[[["self"]],["t"]]],[11,"clone_into","","",536,N],[11,"try_from","","",536,[[["u"]],["result"]]],[11,"borrow","","",536,[[["self"]],["t"]]],[11,"borrow_mut","","",536,[[["self"]],["t"]]],[11,"try_into","","",536,[[["self"]],["result"]]],[11,"get_type_id","","",536,[[["self"]],["typeid"]]],[11,"handle","","",536,N],[11,"into_any","","",536,[[["box"]],["box",["any"]]]],[11,"as_any","","",536,[[["self"]],["any"]]],[11,"as_any_mut","","",536,[[["self"]],["any"]]],[11,"from","","",519,[[["t"]],["t"]]],[11,"into","","",519,[[["self"]],["u"]]],[11,"try_from","","",519,[[["u"]],["result"]]],[11,"borrow","","",519,[[["self"]],["t"]]],[11,"borrow_mut","","",519,[[["self"]],["t"]]],[11,"try_into","","",519,[[["self"]],["result"]]],[11,"get_type_id","","",519,[[["self"]],["typeid"]]],[11,"into_any","","",519,[[["box"]],["box",["any"]]]],[11,"as_any","","",519,[[["self"]],["any"]]],[11,"as_any_mut","","",519,[[["self"]],["any"]]],[11,"from","","",520,[[["t"]],["t"]]],[11,"into","","",520,[[["self"]],["u"]]],[11,"try_from","","",520,[[["u"]],["result"]]],[11,"borrow","","",520,[[["self"]],["t"]]],[11,"borrow_mut","","",520,[[["self"]],["t"]]],[11,"try_into","","",520,[[["self"]],["result"]]],[11,"get_type_id","","",520,[[["self"]],["typeid"]]],[11,"into_any","","",520,[[["box"]],["box",["any"]]]],[11,"as_any","","",520,[[["self"]],["any"]]],[11,"as_any_mut","","",520,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",819,[[["t"]],["t"]]],[11,"into","","",819,[[["self"]],["u"]]],[11,"to_owned","","",819,[[["self"]],["t"]]],[11,"clone_into","","",819,N],[11,"try_from","","",819,[[["u"]],["result"]]],[11,"borrow","","",819,[[["self"]],["t"]]],[11,"borrow_mut","","",819,[[["self"]],["t"]]],[11,"try_into","","",819,[[["self"]],["result"]]],[11,"get_type_id","","",819,[[["self"]],["typeid"]]],[11,"handle","","",819,N],[11,"into_any","","",819,[[["box"]],["box",["any"]]]],[11,"as_any","","",819,[[["self"]],["any"]]],[11,"as_any_mut","","",819,[[["self"]],["any"]]],[11,"from","","",522,[[["t"]],["t"]]],[11,"into","","",522,[[["self"]],["u"]]],[11,"try_from","","",522,[[["u"]],["result"]]],[11,"borrow","","",522,[[["self"]],["t"]]],[11,"borrow_mut","","",522,[[["self"]],["t"]]],[11,"try_into","","",522,[[["self"]],["result"]]],[11,"get_type_id","","",522,[[["self"]],["typeid"]]],[11,"into_any","","",522,[[["box"]],["box",["any"]]]],[11,"as_any","","",522,[[["self"]],["any"]]],[11,"as_any_mut","","",522,[[["self"]],["any"]]],[11,"from","","",820,[[["t"]],["t"]]],[11,"into","","",820,[[["self"]],["u"]]],[11,"try_from","","",820,[[["u"]],["result"]]],[11,"borrow","","",820,[[["self"]],["t"]]],[11,"borrow_mut","","",820,[[["self"]],["t"]]],[11,"try_into","","",820,[[["self"]],["result"]]],[11,"get_type_id","","",820,[[["self"]],["typeid"]]],[11,"into_any","","",820,[[["box"]],["box",["any"]]]],[11,"as_any","","",820,[[["self"]],["any"]]],[11,"as_any_mut","","",820,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",537,[[["t"]],["t"]]],[11,"into","","",537,[[["self"]],["u"]]],[11,"to_owned","","",537,[[["self"]],["t"]]],[11,"clone_into","","",537,N],[11,"try_from","","",537,[[["u"]],["result"]]],[11,"borrow","","",537,[[["self"]],["t"]]],[11,"borrow_mut","","",537,[[["self"]],["t"]]],[11,"try_into","","",537,[[["self"]],["result"]]],[11,"get_type_id","","",537,[[["self"]],["typeid"]]],[11,"handle","","",537,N],[11,"into_any","","",537,[[["box"]],["box",["any"]]]],[11,"as_any","","",537,[[["self"]],["any"]]],[11,"as_any_mut","","",537,[[["self"]],["any"]]],[11,"from","","",524,[[["t"]],["t"]]],[11,"into","","",524,[[["self"]],["u"]]],[11,"try_from","","",524,[[["u"]],["result"]]],[11,"borrow","","",524,[[["self"]],["t"]]],[11,"borrow_mut","","",524,[[["self"]],["t"]]],[11,"try_into","","",524,[[["self"]],["result"]]],[11,"get_type_id","","",524,[[["self"]],["typeid"]]],[11,"into_any","","",524,[[["box"]],["box",["any"]]]],[11,"as_any","","",524,[[["self"]],["any"]]],[11,"as_any_mut","","",524,[[["self"]],["any"]]],[11,"from","","",525,[[["t"]],["t"]]],[11,"into","","",525,[[["self"]],["u"]]],[11,"try_from","","",525,[[["u"]],["result"]]],[11,"borrow","","",525,[[["self"]],["t"]]],[11,"borrow_mut","","",525,[[["self"]],["t"]]],[11,"try_into","","",525,[[["self"]],["result"]]],[11,"get_type_id","","",525,[[["self"]],["typeid"]]],[11,"into_any","","",525,[[["box"]],["box",["any"]]]],[11,"as_any","","",525,[[["self"]],["any"]]],[11,"as_any_mut","","",525,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",538,[[["t"]],["t"]]],[11,"into","","",538,[[["self"]],["u"]]],[11,"to_owned","","",538,[[["self"]],["t"]]],[11,"clone_into","","",538,N],[11,"try_from","","",538,[[["u"]],["result"]]],[11,"borrow","","",538,[[["self"]],["t"]]],[11,"borrow_mut","","",538,[[["self"]],["t"]]],[11,"try_into","","",538,[[["self"]],["result"]]],[11,"get_type_id","","",538,[[["self"]],["typeid"]]],[11,"handle","","",538,N],[11,"into_any","","",538,[[["box"]],["box",["any"]]]],[11,"as_any","","",538,[[["self"]],["any"]]],[11,"as_any_mut","","",538,[[["self"]],["any"]]],[11,"from","","",527,[[["t"]],["t"]]],[11,"into","","",527,[[["self"]],["u"]]],[11,"try_from","","",527,[[["u"]],["result"]]],[11,"borrow","","",527,[[["self"]],["t"]]],[11,"borrow_mut","","",527,[[["self"]],["t"]]],[11,"try_into","","",527,[[["self"]],["result"]]],[11,"get_type_id","","",527,[[["self"]],["typeid"]]],[11,"into_any","","",527,[[["box"]],["box",["any"]]]],[11,"as_any","","",527,[[["self"]],["any"]]],[11,"as_any_mut","","",527,[[["self"]],["any"]]],[11,"from","","",528,[[["t"]],["t"]]],[11,"into","","",528,[[["self"]],["u"]]],[11,"try_from","","",528,[[["u"]],["result"]]],[11,"borrow","","",528,[[["self"]],["t"]]],[11,"borrow_mut","","",528,[[["self"]],["t"]]],[11,"try_into","","",528,[[["self"]],["result"]]],[11,"get_type_id","","",528,[[["self"]],["typeid"]]],[11,"into_any","","",528,[[["box"]],["box",["any"]]]],[11,"as_any","","",528,[[["self"]],["any"]]],[11,"as_any_mut","","",528,[[["self"]],["any"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",539,[[["t"]],["t"]]],[11,"into","","",539,[[["self"]],["u"]]],[11,"to_owned","","",539,[[["self"]],["t"]]],[11,"clone_into","","",539,N],[11,"try_from","","",539,[[["u"]],["result"]]],[11,"borrow","","",539,[[["self"]],["t"]]],[11,"borrow_mut","","",539,[[["self"]],["t"]]],[11,"try_into","","",539,[[["self"]],["result"]]],[11,"get_type_id","","",539,[[["self"]],["typeid"]]],[11,"handle","","",539,N],[11,"into_any","","",539,[[["box"]],["box",["any"]]]],[11,"as_any","","",539,[[["self"]],["any"]]],[11,"as_any_mut","","",539,[[["self"]],["any"]]],[11,"from","","",530,[[["t"]],["t"]]],[11,"into","","",530,[[["self"]],["u"]]],[11,"try_from","","",530,[[["u"]],["result"]]],[11,"borrow","","",530,[[["self"]],["t"]]],[11,"borrow_mut","","",530,[[["self"]],["t"]]],[11,"try_into","","",530,[[["self"]],["result"]]],[11,"get_type_id","","",530,[[["self"]],["typeid"]]],[11,"into_any","","",530,[[["box"]],["box",["any"]]]],[11,"as_any","","",530,[[["self"]],["any"]]],[11,"as_any_mut","","",530,[[["self"]],["any"]]],[11,"from","","",531,[[["t"]],["t"]]],[11,"into","","",531,[[["self"]],["u"]]],[11,"try_from","","",531,[[["u"]],["result"]]],[11,"borrow","","",531,[[["self"]],["t"]]],[11,"borrow_mut","","",531,[[["self"]],["t"]]],[11,"try_into","","",531,[[["self"]],["result"]]],[11,"get_type_id","","",531,[[["self"]],["typeid"]]],[11,"into_any","","",531,[[["box"]],["box",["any"]]]],[11,"as_any","","",531,[[["self"]],["any"]]],[11,"as_any_mut","","",531,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",565,[[["t"]],["t"]]],[11,"into","","",565,[[["self"]],["u"]]],[11,"to_owned","","",565,[[["self"]],["t"]]],[11,"clone_into","","",565,N],[11,"try_from","","",565,[[["u"]],["result"]]],[11,"borrow","","",565,[[["self"]],["t"]]],[11,"borrow_mut","","",565,[[["self"]],["t"]]],[11,"try_into","","",565,[[["self"]],["result"]]],[11,"get_type_id","","",565,[[["self"]],["typeid"]]],[11,"handle","","",565,N],[11,"into_any","","",565,[[["box"]],["box",["any"]]]],[11,"as_any","","",565,[[["self"]],["any"]]],[11,"as_any_mut","","",565,[[["self"]],["any"]]],[11,"from","","",540,[[["t"]],["t"]]],[11,"into","","",540,[[["self"]],["u"]]],[11,"try_from","","",540,[[["u"]],["result"]]],[11,"borrow","","",540,[[["self"]],["t"]]],[11,"borrow_mut","","",540,[[["self"]],["t"]]],[11,"try_into","","",540,[[["self"]],["result"]]],[11,"get_type_id","","",540,[[["self"]],["typeid"]]],[11,"into_any","","",540,[[["box"]],["box",["any"]]]],[11,"as_any","","",540,[[["self"]],["any"]]],[11,"as_any_mut","","",540,[[["self"]],["any"]]],[11,"from","","",821,[[["t"]],["t"]]],[11,"into","","",821,[[["self"]],["u"]]],[11,"try_from","","",821,[[["u"]],["result"]]],[11,"borrow","","",821,[[["self"]],["t"]]],[11,"borrow_mut","","",821,[[["self"]],["t"]]],[11,"try_into","","",821,[[["self"]],["result"]]],[11,"get_type_id","","",821,[[["self"]],["typeid"]]],[11,"into_any","","",821,[[["box"]],["box",["any"]]]],[11,"as_any","","",821,[[["self"]],["any"]]],[11,"as_any_mut","","",821,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",566,[[["t"]],["t"]]],[11,"into","","",566,[[["self"]],["u"]]],[11,"to_owned","","",566,[[["self"]],["t"]]],[11,"clone_into","","",566,N],[11,"try_from","","",566,[[["u"]],["result"]]],[11,"borrow","","",566,[[["self"]],["t"]]],[11,"borrow_mut","","",566,[[["self"]],["t"]]],[11,"try_into","","",566,[[["self"]],["result"]]],[11,"get_type_id","","",566,[[["self"]],["typeid"]]],[11,"handle","","",566,N],[11,"into_any","","",566,[[["box"]],["box",["any"]]]],[11,"as_any","","",566,[[["self"]],["any"]]],[11,"as_any_mut","","",566,[[["self"]],["any"]]],[11,"from","","",541,[[["t"]],["t"]]],[11,"into","","",541,[[["self"]],["u"]]],[11,"to_owned","","",541,[[["self"]],["t"]]],[11,"clone_into","","",541,N],[11,"try_from","","",541,[[["u"]],["result"]]],[11,"borrow","","",541,[[["self"]],["t"]]],[11,"borrow_mut","","",541,[[["self"]],["t"]]],[11,"try_into","","",541,[[["self"]],["result"]]],[11,"get_type_id","","",541,[[["self"]],["typeid"]]],[11,"into_any","","",541,[[["box"]],["box",["any"]]]],[11,"as_any","","",541,[[["self"]],["any"]]],[11,"as_any_mut","","",541,[[["self"]],["any"]]],[11,"from","","",542,[[["t"]],["t"]]],[11,"into","","",542,[[["self"]],["u"]]],[11,"try_from","","",542,[[["u"]],["result"]]],[11,"borrow","","",542,[[["self"]],["t"]]],[11,"borrow_mut","","",542,[[["self"]],["t"]]],[11,"try_into","","",542,[[["self"]],["result"]]],[11,"get_type_id","","",542,[[["self"]],["typeid"]]],[11,"into_any","","",542,[[["box"]],["box",["any"]]]],[11,"as_any","","",542,[[["self"]],["any"]]],[11,"as_any_mut","","",542,[[["self"]],["any"]]],[11,"from","","",543,[[["t"]],["t"]]],[11,"into","","",543,[[["self"]],["u"]]],[11,"try_from","","",543,[[["u"]],["result"]]],[11,"borrow","","",543,[[["self"]],["t"]]],[11,"borrow_mut","","",543,[[["self"]],["t"]]],[11,"try_into","","",543,[[["self"]],["result"]]],[11,"get_type_id","","",543,[[["self"]],["typeid"]]],[11,"into_any","","",543,[[["box"]],["box",["any"]]]],[11,"as_any","","",543,[[["self"]],["any"]]],[11,"as_any_mut","","",543,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",567,[[["t"]],["t"]]],[11,"into","","",567,[[["self"]],["u"]]],[11,"to_owned","","",567,[[["self"]],["t"]]],[11,"clone_into","","",567,N],[11,"try_from","","",567,[[["u"]],["result"]]],[11,"borrow","","",567,[[["self"]],["t"]]],[11,"borrow_mut","","",567,[[["self"]],["t"]]],[11,"try_into","","",567,[[["self"]],["result"]]],[11,"get_type_id","","",567,[[["self"]],["typeid"]]],[11,"handle","","",567,N],[11,"into_any","","",567,[[["box"]],["box",["any"]]]],[11,"as_any","","",567,[[["self"]],["any"]]],[11,"as_any_mut","","",567,[[["self"]],["any"]]],[11,"from","","",545,[[["t"]],["t"]]],[11,"into","","",545,[[["self"]],["u"]]],[11,"to_owned","","",545,[[["self"]],["t"]]],[11,"clone_into","","",545,N],[11,"try_from","","",545,[[["u"]],["result"]]],[11,"borrow","","",545,[[["self"]],["t"]]],[11,"borrow_mut","","",545,[[["self"]],["t"]]],[11,"try_into","","",545,[[["self"]],["result"]]],[11,"get_type_id","","",545,[[["self"]],["typeid"]]],[11,"into_any","","",545,[[["box"]],["box",["any"]]]],[11,"as_any","","",545,[[["self"]],["any"]]],[11,"as_any_mut","","",545,[[["self"]],["any"]]],[11,"from","","",546,[[["t"]],["t"]]],[11,"into","","",546,[[["self"]],["u"]]],[11,"try_from","","",546,[[["u"]],["result"]]],[11,"borrow","","",546,[[["self"]],["t"]]],[11,"borrow_mut","","",546,[[["self"]],["t"]]],[11,"try_into","","",546,[[["self"]],["result"]]],[11,"get_type_id","","",546,[[["self"]],["typeid"]]],[11,"into_any","","",546,[[["box"]],["box",["any"]]]],[11,"as_any","","",546,[[["self"]],["any"]]],[11,"as_any_mut","","",546,[[["self"]],["any"]]],[11,"from","","",547,[[["t"]],["t"]]],[11,"into","","",547,[[["self"]],["u"]]],[11,"try_from","","",547,[[["u"]],["result"]]],[11,"borrow","","",547,[[["self"]],["t"]]],[11,"borrow_mut","","",547,[[["self"]],["t"]]],[11,"try_into","","",547,[[["self"]],["result"]]],[11,"get_type_id","","",547,[[["self"]],["typeid"]]],[11,"into_any","","",547,[[["box"]],["box",["any"]]]],[11,"as_any","","",547,[[["self"]],["any"]]],[11,"as_any_mut","","",547,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",568,[[["t"]],["t"]]],[11,"into","","",568,[[["self"]],["u"]]],[11,"to_owned","","",568,[[["self"]],["t"]]],[11,"clone_into","","",568,N],[11,"try_from","","",568,[[["u"]],["result"]]],[11,"borrow","","",568,[[["self"]],["t"]]],[11,"borrow_mut","","",568,[[["self"]],["t"]]],[11,"try_into","","",568,[[["self"]],["result"]]],[11,"get_type_id","","",568,[[["self"]],["typeid"]]],[11,"handle","","",568,N],[11,"into_any","","",568,[[["box"]],["box",["any"]]]],[11,"as_any","","",568,[[["self"]],["any"]]],[11,"as_any_mut","","",568,[[["self"]],["any"]]],[11,"from","","",549,[[["t"]],["t"]]],[11,"into","","",549,[[["self"]],["u"]]],[11,"try_from","","",549,[[["u"]],["result"]]],[11,"borrow","","",549,[[["self"]],["t"]]],[11,"borrow_mut","","",549,[[["self"]],["t"]]],[11,"try_into","","",549,[[["self"]],["result"]]],[11,"get_type_id","","",549,[[["self"]],["typeid"]]],[11,"into_any","","",549,[[["box"]],["box",["any"]]]],[11,"as_any","","",549,[[["self"]],["any"]]],[11,"as_any_mut","","",549,[[["self"]],["any"]]],[11,"from","","",550,[[["t"]],["t"]]],[11,"into","","",550,[[["self"]],["u"]]],[11,"try_from","","",550,[[["u"]],["result"]]],[11,"borrow","","",550,[[["self"]],["t"]]],[11,"borrow_mut","","",550,[[["self"]],["t"]]],[11,"try_into","","",550,[[["self"]],["result"]]],[11,"get_type_id","","",550,[[["self"]],["typeid"]]],[11,"into_any","","",550,[[["box"]],["box",["any"]]]],[11,"as_any","","",550,[[["self"]],["any"]]],[11,"as_any_mut","","",550,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",822,[[["t"]],["t"]]],[11,"into","","",822,[[["self"]],["u"]]],[11,"to_owned","","",822,[[["self"]],["t"]]],[11,"clone_into","","",822,N],[11,"try_from","","",822,[[["u"]],["result"]]],[11,"borrow","","",822,[[["self"]],["t"]]],[11,"borrow_mut","","",822,[[["self"]],["t"]]],[11,"try_into","","",822,[[["self"]],["result"]]],[11,"get_type_id","","",822,[[["self"]],["typeid"]]],[11,"handle","","",822,N],[11,"into_any","","",822,[[["box"]],["box",["any"]]]],[11,"as_any","","",822,[[["self"]],["any"]]],[11,"as_any_mut","","",822,[[["self"]],["any"]]],[11,"from","","",552,[[["t"]],["t"]]],[11,"into","","",552,[[["self"]],["u"]]],[11,"try_from","","",552,[[["u"]],["result"]]],[11,"borrow","","",552,[[["self"]],["t"]]],[11,"borrow_mut","","",552,[[["self"]],["t"]]],[11,"try_into","","",552,[[["self"]],["result"]]],[11,"get_type_id","","",552,[[["self"]],["typeid"]]],[11,"into_any","","",552,[[["box"]],["box",["any"]]]],[11,"as_any","","",552,[[["self"]],["any"]]],[11,"as_any_mut","","",552,[[["self"]],["any"]]],[11,"from","","",823,[[["t"]],["t"]]],[11,"into","","",823,[[["self"]],["u"]]],[11,"try_from","","",823,[[["u"]],["result"]]],[11,"borrow","","",823,[[["self"]],["t"]]],[11,"borrow_mut","","",823,[[["self"]],["t"]]],[11,"try_into","","",823,[[["self"]],["result"]]],[11,"get_type_id","","",823,[[["self"]],["typeid"]]],[11,"into_any","","",823,[[["box"]],["box",["any"]]]],[11,"as_any","","",823,[[["self"]],["any"]]],[11,"as_any_mut","","",823,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",569,[[["t"]],["t"]]],[11,"into","","",569,[[["self"]],["u"]]],[11,"to_owned","","",569,[[["self"]],["t"]]],[11,"clone_into","","",569,N],[11,"try_from","","",569,[[["u"]],["result"]]],[11,"borrow","","",569,[[["self"]],["t"]]],[11,"borrow_mut","","",569,[[["self"]],["t"]]],[11,"try_into","","",569,[[["self"]],["result"]]],[11,"get_type_id","","",569,[[["self"]],["typeid"]]],[11,"handle","","",569,N],[11,"into_any","","",569,[[["box"]],["box",["any"]]]],[11,"as_any","","",569,[[["self"]],["any"]]],[11,"as_any_mut","","",569,[[["self"]],["any"]]],[11,"from","","",554,[[["t"]],["t"]]],[11,"into","","",554,[[["self"]],["u"]]],[11,"to_owned","","",554,[[["self"]],["t"]]],[11,"clone_into","","",554,N],[11,"try_from","","",554,[[["u"]],["result"]]],[11,"borrow","","",554,[[["self"]],["t"]]],[11,"borrow_mut","","",554,[[["self"]],["t"]]],[11,"try_into","","",554,[[["self"]],["result"]]],[11,"get_type_id","","",554,[[["self"]],["typeid"]]],[11,"into_any","","",554,[[["box"]],["box",["any"]]]],[11,"as_any","","",554,[[["self"]],["any"]]],[11,"as_any_mut","","",554,[[["self"]],["any"]]],[11,"from","","",555,[[["t"]],["t"]]],[11,"into","","",555,[[["self"]],["u"]]],[11,"try_from","","",555,[[["u"]],["result"]]],[11,"borrow","","",555,[[["self"]],["t"]]],[11,"borrow_mut","","",555,[[["self"]],["t"]]],[11,"try_into","","",555,[[["self"]],["result"]]],[11,"get_type_id","","",555,[[["self"]],["typeid"]]],[11,"into_any","","",555,[[["box"]],["box",["any"]]]],[11,"as_any","","",555,[[["self"]],["any"]]],[11,"as_any_mut","","",555,[[["self"]],["any"]]],[11,"from","","",556,[[["t"]],["t"]]],[11,"into","","",556,[[["self"]],["u"]]],[11,"try_from","","",556,[[["u"]],["result"]]],[11,"borrow","","",556,[[["self"]],["t"]]],[11,"borrow_mut","","",556,[[["self"]],["t"]]],[11,"try_into","","",556,[[["self"]],["result"]]],[11,"get_type_id","","",556,[[["self"]],["typeid"]]],[11,"into_any","","",556,[[["box"]],["box",["any"]]]],[11,"as_any","","",556,[[["self"]],["any"]]],[11,"as_any_mut","","",556,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",570,[[["t"]],["t"]]],[11,"into","","",570,[[["self"]],["u"]]],[11,"to_owned","","",570,[[["self"]],["t"]]],[11,"clone_into","","",570,N],[11,"try_from","","",570,[[["u"]],["result"]]],[11,"borrow","","",570,[[["self"]],["t"]]],[11,"borrow_mut","","",570,[[["self"]],["t"]]],[11,"try_into","","",570,[[["self"]],["result"]]],[11,"get_type_id","","",570,[[["self"]],["typeid"]]],[11,"handle","","",570,N],[11,"into_any","","",570,[[["box"]],["box",["any"]]]],[11,"as_any","","",570,[[["self"]],["any"]]],[11,"as_any_mut","","",570,[[["self"]],["any"]]],[11,"from","","",558,[[["t"]],["t"]]],[11,"into","","",558,[[["self"]],["u"]]],[11,"to_owned","","",558,[[["self"]],["t"]]],[11,"clone_into","","",558,N],[11,"try_from","","",558,[[["u"]],["result"]]],[11,"borrow","","",558,[[["self"]],["t"]]],[11,"borrow_mut","","",558,[[["self"]],["t"]]],[11,"try_into","","",558,[[["self"]],["result"]]],[11,"get_type_id","","",558,[[["self"]],["typeid"]]],[11,"into_any","","",558,[[["box"]],["box",["any"]]]],[11,"as_any","","",558,[[["self"]],["any"]]],[11,"as_any_mut","","",558,[[["self"]],["any"]]],[11,"from","","",559,[[["t"]],["t"]]],[11,"into","","",559,[[["self"]],["u"]]],[11,"try_from","","",559,[[["u"]],["result"]]],[11,"borrow","","",559,[[["self"]],["t"]]],[11,"borrow_mut","","",559,[[["self"]],["t"]]],[11,"try_into","","",559,[[["self"]],["result"]]],[11,"get_type_id","","",559,[[["self"]],["typeid"]]],[11,"into_any","","",559,[[["box"]],["box",["any"]]]],[11,"as_any","","",559,[[["self"]],["any"]]],[11,"as_any_mut","","",559,[[["self"]],["any"]]],[11,"from","","",560,[[["t"]],["t"]]],[11,"into","","",560,[[["self"]],["u"]]],[11,"try_from","","",560,[[["u"]],["result"]]],[11,"borrow","","",560,[[["self"]],["t"]]],[11,"borrow_mut","","",560,[[["self"]],["t"]]],[11,"try_into","","",560,[[["self"]],["result"]]],[11,"get_type_id","","",560,[[["self"]],["typeid"]]],[11,"into_any","","",560,[[["box"]],["box",["any"]]]],[11,"as_any","","",560,[[["self"]],["any"]]],[11,"as_any_mut","","",560,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",571,[[["t"]],["t"]]],[11,"into","","",571,[[["self"]],["u"]]],[11,"to_owned","","",571,[[["self"]],["t"]]],[11,"clone_into","","",571,N],[11,"try_from","","",571,[[["u"]],["result"]]],[11,"borrow","","",571,[[["self"]],["t"]]],[11,"borrow_mut","","",571,[[["self"]],["t"]]],[11,"try_into","","",571,[[["self"]],["result"]]],[11,"get_type_id","","",571,[[["self"]],["typeid"]]],[11,"handle","","",571,N],[11,"into_any","","",571,[[["box"]],["box",["any"]]]],[11,"as_any","","",571,[[["self"]],["any"]]],[11,"as_any_mut","","",571,[[["self"]],["any"]]],[11,"from","","",562,[[["t"]],["t"]]],[11,"into","","",562,[[["self"]],["u"]]],[11,"try_from","","",562,[[["u"]],["result"]]],[11,"borrow","","",562,[[["self"]],["t"]]],[11,"borrow_mut","","",562,[[["self"]],["t"]]],[11,"try_into","","",562,[[["self"]],["result"]]],[11,"get_type_id","","",562,[[["self"]],["typeid"]]],[11,"into_any","","",562,[[["box"]],["box",["any"]]]],[11,"as_any","","",562,[[["self"]],["any"]]],[11,"as_any_mut","","",562,[[["self"]],["any"]]],[11,"from","","",563,[[["t"]],["t"]]],[11,"into","","",563,[[["self"]],["u"]]],[11,"try_from","","",563,[[["u"]],["result"]]],[11,"borrow","","",563,[[["self"]],["t"]]],[11,"borrow_mut","","",563,[[["self"]],["t"]]],[11,"try_into","","",563,[[["self"]],["result"]]],[11,"get_type_id","","",563,[[["self"]],["typeid"]]],[11,"into_any","","",563,[[["box"]],["box",["any"]]]],[11,"as_any","","",563,[[["self"]],["any"]]],[11,"as_any_mut","","",563,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",585,[[["t"]],["t"]]],[11,"into","","",585,[[["self"]],["u"]]],[11,"to_owned","","",585,[[["self"]],["t"]]],[11,"clone_into","","",585,N],[11,"try_from","","",585,[[["u"]],["result"]]],[11,"borrow","","",585,[[["self"]],["t"]]],[11,"borrow_mut","","",585,[[["self"]],["t"]]],[11,"try_into","","",585,[[["self"]],["result"]]],[11,"get_type_id","","",585,[[["self"]],["typeid"]]],[11,"handle","","",585,N],[11,"into_any","","",585,[[["box"]],["box",["any"]]]],[11,"as_any","","",585,[[["self"]],["any"]]],[11,"as_any_mut","","",585,[[["self"]],["any"]]],[11,"from","","",572,[[["t"]],["t"]]],[11,"into","","",572,[[["self"]],["u"]]],[11,"try_from","","",572,[[["u"]],["result"]]],[11,"borrow","","",572,[[["self"]],["t"]]],[11,"borrow_mut","","",572,[[["self"]],["t"]]],[11,"try_into","","",572,[[["self"]],["result"]]],[11,"get_type_id","","",572,[[["self"]],["typeid"]]],[11,"into_any","","",572,[[["box"]],["box",["any"]]]],[11,"as_any","","",572,[[["self"]],["any"]]],[11,"as_any_mut","","",572,[[["self"]],["any"]]],[11,"from","","",824,[[["t"]],["t"]]],[11,"into","","",824,[[["self"]],["u"]]],[11,"try_from","","",824,[[["u"]],["result"]]],[11,"borrow","","",824,[[["self"]],["t"]]],[11,"borrow_mut","","",824,[[["self"]],["t"]]],[11,"try_into","","",824,[[["self"]],["result"]]],[11,"get_type_id","","",824,[[["self"]],["typeid"]]],[11,"into_any","","",824,[[["box"]],["box",["any"]]]],[11,"as_any","","",824,[[["self"]],["any"]]],[11,"as_any_mut","","",824,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",586,[[["t"]],["t"]]],[11,"into","","",586,[[["self"]],["u"]]],[11,"to_owned","","",586,[[["self"]],["t"]]],[11,"clone_into","","",586,N],[11,"try_from","","",586,[[["u"]],["result"]]],[11,"borrow","","",586,[[["self"]],["t"]]],[11,"borrow_mut","","",586,[[["self"]],["t"]]],[11,"try_into","","",586,[[["self"]],["result"]]],[11,"get_type_id","","",586,[[["self"]],["typeid"]]],[11,"handle","","",586,N],[11,"into_any","","",586,[[["box"]],["box",["any"]]]],[11,"as_any","","",586,[[["self"]],["any"]]],[11,"as_any_mut","","",586,[[["self"]],["any"]]],[11,"from","","",573,[[["t"]],["t"]]],[11,"into","","",573,[[["self"]],["u"]]],[11,"to_owned","","",573,[[["self"]],["t"]]],[11,"clone_into","","",573,N],[11,"try_from","","",573,[[["u"]],["result"]]],[11,"borrow","","",573,[[["self"]],["t"]]],[11,"borrow_mut","","",573,[[["self"]],["t"]]],[11,"try_into","","",573,[[["self"]],["result"]]],[11,"get_type_id","","",573,[[["self"]],["typeid"]]],[11,"into_any","","",573,[[["box"]],["box",["any"]]]],[11,"as_any","","",573,[[["self"]],["any"]]],[11,"as_any_mut","","",573,[[["self"]],["any"]]],[11,"from","","",574,[[["t"]],["t"]]],[11,"into","","",574,[[["self"]],["u"]]],[11,"to_owned","","",574,[[["self"]],["t"]]],[11,"clone_into","","",574,N],[11,"try_from","","",574,[[["u"]],["result"]]],[11,"borrow","","",574,[[["self"]],["t"]]],[11,"borrow_mut","","",574,[[["self"]],["t"]]],[11,"try_into","","",574,[[["self"]],["result"]]],[11,"get_type_id","","",574,[[["self"]],["typeid"]]],[11,"into_any","","",574,[[["box"]],["box",["any"]]]],[11,"as_any","","",574,[[["self"]],["any"]]],[11,"as_any_mut","","",574,[[["self"]],["any"]]],[11,"from","","",575,[[["t"]],["t"]]],[11,"into","","",575,[[["self"]],["u"]]],[11,"try_from","","",575,[[["u"]],["result"]]],[11,"borrow","","",575,[[["self"]],["t"]]],[11,"borrow_mut","","",575,[[["self"]],["t"]]],[11,"try_into","","",575,[[["self"]],["result"]]],[11,"get_type_id","","",575,[[["self"]],["typeid"]]],[11,"into_any","","",575,[[["box"]],["box",["any"]]]],[11,"as_any","","",575,[[["self"]],["any"]]],[11,"as_any_mut","","",575,[[["self"]],["any"]]],[11,"from","","",576,[[["t"]],["t"]]],[11,"into","","",576,[[["self"]],["u"]]],[11,"try_from","","",576,[[["u"]],["result"]]],[11,"borrow","","",576,[[["self"]],["t"]]],[11,"borrow_mut","","",576,[[["self"]],["t"]]],[11,"try_into","","",576,[[["self"]],["result"]]],[11,"get_type_id","","",576,[[["self"]],["typeid"]]],[11,"into_any","","",576,[[["box"]],["box",["any"]]]],[11,"as_any","","",576,[[["self"]],["any"]]],[11,"as_any_mut","","",576,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",825,[[["t"]],["t"]]],[11,"into","","",825,[[["self"]],["u"]]],[11,"to_owned","","",825,[[["self"]],["t"]]],[11,"clone_into","","",825,N],[11,"try_from","","",825,[[["u"]],["result"]]],[11,"borrow","","",825,[[["self"]],["t"]]],[11,"borrow_mut","","",825,[[["self"]],["t"]]],[11,"try_into","","",825,[[["self"]],["result"]]],[11,"get_type_id","","",825,[[["self"]],["typeid"]]],[11,"handle","","",825,N],[11,"into_any","","",825,[[["box"]],["box",["any"]]]],[11,"as_any","","",825,[[["self"]],["any"]]],[11,"as_any_mut","","",825,[[["self"]],["any"]]],[11,"from","","",578,[[["t"]],["t"]]],[11,"into","","",578,[[["self"]],["u"]]],[11,"try_from","","",578,[[["u"]],["result"]]],[11,"borrow","","",578,[[["self"]],["t"]]],[11,"borrow_mut","","",578,[[["self"]],["t"]]],[11,"try_into","","",578,[[["self"]],["result"]]],[11,"get_type_id","","",578,[[["self"]],["typeid"]]],[11,"into_any","","",578,[[["box"]],["box",["any"]]]],[11,"as_any","","",578,[[["self"]],["any"]]],[11,"as_any_mut","","",578,[[["self"]],["any"]]],[11,"from","","",826,[[["t"]],["t"]]],[11,"into","","",826,[[["self"]],["u"]]],[11,"try_from","","",826,[[["u"]],["result"]]],[11,"borrow","","",826,[[["self"]],["t"]]],[11,"borrow_mut","","",826,[[["self"]],["t"]]],[11,"try_into","","",826,[[["self"]],["result"]]],[11,"get_type_id","","",826,[[["self"]],["typeid"]]],[11,"into_any","","",826,[[["box"]],["box",["any"]]]],[11,"as_any","","",826,[[["self"]],["any"]]],[11,"as_any_mut","","",826,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",587,[[["t"]],["t"]]],[11,"into","","",587,[[["self"]],["u"]]],[11,"to_owned","","",587,[[["self"]],["t"]]],[11,"clone_into","","",587,N],[11,"try_from","","",587,[[["u"]],["result"]]],[11,"borrow","","",587,[[["self"]],["t"]]],[11,"borrow_mut","","",587,[[["self"]],["t"]]],[11,"try_into","","",587,[[["self"]],["result"]]],[11,"get_type_id","","",587,[[["self"]],["typeid"]]],[11,"handle","","",587,N],[11,"into_any","","",587,[[["box"]],["box",["any"]]]],[11,"as_any","","",587,[[["self"]],["any"]]],[11,"as_any_mut","","",587,[[["self"]],["any"]]],[11,"from","","",580,[[["t"]],["t"]]],[11,"into","","",580,[[["self"]],["u"]]],[11,"to_owned","","",580,[[["self"]],["t"]]],[11,"clone_into","","",580,N],[11,"try_from","","",580,[[["u"]],["result"]]],[11,"borrow","","",580,[[["self"]],["t"]]],[11,"borrow_mut","","",580,[[["self"]],["t"]]],[11,"try_into","","",580,[[["self"]],["result"]]],[11,"get_type_id","","",580,[[["self"]],["typeid"]]],[11,"into_any","","",580,[[["box"]],["box",["any"]]]],[11,"as_any","","",580,[[["self"]],["any"]]],[11,"as_any_mut","","",580,[[["self"]],["any"]]],[11,"from","","",581,[[["t"]],["t"]]],[11,"into","","",581,[[["self"]],["u"]]],[11,"to_owned","","",581,[[["self"]],["t"]]],[11,"clone_into","","",581,N],[11,"try_from","","",581,[[["u"]],["result"]]],[11,"borrow","","",581,[[["self"]],["t"]]],[11,"borrow_mut","","",581,[[["self"]],["t"]]],[11,"try_into","","",581,[[["self"]],["result"]]],[11,"get_type_id","","",581,[[["self"]],["typeid"]]],[11,"into_any","","",581,[[["box"]],["box",["any"]]]],[11,"as_any","","",581,[[["self"]],["any"]]],[11,"as_any_mut","","",581,[[["self"]],["any"]]],[11,"from","","",582,[[["t"]],["t"]]],[11,"into","","",582,[[["self"]],["u"]]],[11,"try_from","","",582,[[["u"]],["result"]]],[11,"borrow","","",582,[[["self"]],["t"]]],[11,"borrow_mut","","",582,[[["self"]],["t"]]],[11,"try_into","","",582,[[["self"]],["result"]]],[11,"get_type_id","","",582,[[["self"]],["typeid"]]],[11,"into_any","","",582,[[["box"]],["box",["any"]]]],[11,"as_any","","",582,[[["self"]],["any"]]],[11,"as_any_mut","","",582,[[["self"]],["any"]]],[11,"from","","",583,[[["t"]],["t"]]],[11,"into","","",583,[[["self"]],["u"]]],[11,"try_from","","",583,[[["u"]],["result"]]],[11,"borrow","","",583,[[["self"]],["t"]]],[11,"borrow_mut","","",583,[[["self"]],["t"]]],[11,"try_into","","",583,[[["self"]],["result"]]],[11,"get_type_id","","",583,[[["self"]],["typeid"]]],[11,"into_any","","",583,[[["box"]],["box",["any"]]]],[11,"as_any","","",583,[[["self"]],["any"]]],[11,"as_any_mut","","",583,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",604,[[["t"]],["t"]]],[11,"into","","",604,[[["self"]],["u"]]],[11,"to_owned","","",604,[[["self"]],["t"]]],[11,"clone_into","","",604,N],[11,"try_from","","",604,[[["u"]],["result"]]],[11,"borrow","","",604,[[["self"]],["t"]]],[11,"borrow_mut","","",604,[[["self"]],["t"]]],[11,"try_into","","",604,[[["self"]],["result"]]],[11,"get_type_id","","",604,[[["self"]],["typeid"]]],[11,"handle","","",604,N],[11,"into_any","","",604,[[["box"]],["box",["any"]]]],[11,"as_any","","",604,[[["self"]],["any"]]],[11,"as_any_mut","","",604,[[["self"]],["any"]]],[11,"from","","",588,[[["t"]],["t"]]],[11,"into","","",588,[[["self"]],["u"]]],[11,"try_from","","",588,[[["u"]],["result"]]],[11,"borrow","","",588,[[["self"]],["t"]]],[11,"borrow_mut","","",588,[[["self"]],["t"]]],[11,"try_into","","",588,[[["self"]],["result"]]],[11,"get_type_id","","",588,[[["self"]],["typeid"]]],[11,"into_any","","",588,[[["box"]],["box",["any"]]]],[11,"as_any","","",588,[[["self"]],["any"]]],[11,"as_any_mut","","",588,[[["self"]],["any"]]],[11,"from","","",589,[[["t"]],["t"]]],[11,"into","","",589,[[["self"]],["u"]]],[11,"try_from","","",589,[[["u"]],["result"]]],[11,"borrow","","",589,[[["self"]],["t"]]],[11,"borrow_mut","","",589,[[["self"]],["t"]]],[11,"try_into","","",589,[[["self"]],["result"]]],[11,"get_type_id","","",589,[[["self"]],["typeid"]]],[11,"into_any","","",589,[[["box"]],["box",["any"]]]],[11,"as_any","","",589,[[["self"]],["any"]]],[11,"as_any_mut","","",589,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",605,[[["t"]],["t"]]],[11,"into","","",605,[[["self"]],["u"]]],[11,"to_owned","","",605,[[["self"]],["t"]]],[11,"clone_into","","",605,N],[11,"try_from","","",605,[[["u"]],["result"]]],[11,"borrow","","",605,[[["self"]],["t"]]],[11,"borrow_mut","","",605,[[["self"]],["t"]]],[11,"try_into","","",605,[[["self"]],["result"]]],[11,"get_type_id","","",605,[[["self"]],["typeid"]]],[11,"handle","","",605,N],[11,"into_any","","",605,[[["box"]],["box",["any"]]]],[11,"as_any","","",605,[[["self"]],["any"]]],[11,"as_any_mut","","",605,[[["self"]],["any"]]],[11,"from","","",591,[[["t"]],["t"]]],[11,"into","","",591,[[["self"]],["u"]]],[11,"to_owned","","",591,[[["self"]],["t"]]],[11,"clone_into","","",591,N],[11,"try_from","","",591,[[["u"]],["result"]]],[11,"borrow","","",591,[[["self"]],["t"]]],[11,"borrow_mut","","",591,[[["self"]],["t"]]],[11,"try_into","","",591,[[["self"]],["result"]]],[11,"get_type_id","","",591,[[["self"]],["typeid"]]],[11,"into_any","","",591,[[["box"]],["box",["any"]]]],[11,"as_any","","",591,[[["self"]],["any"]]],[11,"as_any_mut","","",591,[[["self"]],["any"]]],[11,"from","","",592,[[["t"]],["t"]]],[11,"into","","",592,[[["self"]],["u"]]],[11,"to_owned","","",592,[[["self"]],["t"]]],[11,"clone_into","","",592,N],[11,"try_from","","",592,[[["u"]],["result"]]],[11,"borrow","","",592,[[["self"]],["t"]]],[11,"borrow_mut","","",592,[[["self"]],["t"]]],[11,"try_into","","",592,[[["self"]],["result"]]],[11,"get_type_id","","",592,[[["self"]],["typeid"]]],[11,"into_any","","",592,[[["box"]],["box",["any"]]]],[11,"as_any","","",592,[[["self"]],["any"]]],[11,"as_any_mut","","",592,[[["self"]],["any"]]],[11,"from","","",593,[[["t"]],["t"]]],[11,"into","","",593,[[["self"]],["u"]]],[11,"try_from","","",593,[[["u"]],["result"]]],[11,"borrow","","",593,[[["self"]],["t"]]],[11,"borrow_mut","","",593,[[["self"]],["t"]]],[11,"try_into","","",593,[[["self"]],["result"]]],[11,"get_type_id","","",593,[[["self"]],["typeid"]]],[11,"into_any","","",593,[[["box"]],["box",["any"]]]],[11,"as_any","","",593,[[["self"]],["any"]]],[11,"as_any_mut","","",593,[[["self"]],["any"]]],[11,"from","","",594,[[["t"]],["t"]]],[11,"into","","",594,[[["self"]],["u"]]],[11,"try_from","","",594,[[["u"]],["result"]]],[11,"borrow","","",594,[[["self"]],["t"]]],[11,"borrow_mut","","",594,[[["self"]],["t"]]],[11,"try_into","","",594,[[["self"]],["result"]]],[11,"get_type_id","","",594,[[["self"]],["typeid"]]],[11,"into_any","","",594,[[["box"]],["box",["any"]]]],[11,"as_any","","",594,[[["self"]],["any"]]],[11,"as_any_mut","","",594,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",606,[[["t"]],["t"]]],[11,"into","","",606,[[["self"]],["u"]]],[11,"to_owned","","",606,[[["self"]],["t"]]],[11,"clone_into","","",606,N],[11,"try_from","","",606,[[["u"]],["result"]]],[11,"borrow","","",606,[[["self"]],["t"]]],[11,"borrow_mut","","",606,[[["self"]],["t"]]],[11,"try_into","","",606,[[["self"]],["result"]]],[11,"get_type_id","","",606,[[["self"]],["typeid"]]],[11,"handle","","",606,N],[11,"into_any","","",606,[[["box"]],["box",["any"]]]],[11,"as_any","","",606,[[["self"]],["any"]]],[11,"as_any_mut","","",606,[[["self"]],["any"]]],[11,"from","","",596,[[["t"]],["t"]]],[11,"into","","",596,[[["self"]],["u"]]],[11,"try_from","","",596,[[["u"]],["result"]]],[11,"borrow","","",596,[[["self"]],["t"]]],[11,"borrow_mut","","",596,[[["self"]],["t"]]],[11,"try_into","","",596,[[["self"]],["result"]]],[11,"get_type_id","","",596,[[["self"]],["typeid"]]],[11,"into_any","","",596,[[["box"]],["box",["any"]]]],[11,"as_any","","",596,[[["self"]],["any"]]],[11,"as_any_mut","","",596,[[["self"]],["any"]]],[11,"from","","",597,[[["t"]],["t"]]],[11,"into","","",597,[[["self"]],["u"]]],[11,"try_from","","",597,[[["u"]],["result"]]],[11,"borrow","","",597,[[["self"]],["t"]]],[11,"borrow_mut","","",597,[[["self"]],["t"]]],[11,"try_into","","",597,[[["self"]],["result"]]],[11,"get_type_id","","",597,[[["self"]],["typeid"]]],[11,"into_any","","",597,[[["box"]],["box",["any"]]]],[11,"as_any","","",597,[[["self"]],["any"]]],[11,"as_any_mut","","",597,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",607,[[["t"]],["t"]]],[11,"into","","",607,[[["self"]],["u"]]],[11,"to_owned","","",607,[[["self"]],["t"]]],[11,"clone_into","","",607,N],[11,"try_from","","",607,[[["u"]],["result"]]],[11,"borrow","","",607,[[["self"]],["t"]]],[11,"borrow_mut","","",607,[[["self"]],["t"]]],[11,"try_into","","",607,[[["self"]],["result"]]],[11,"get_type_id","","",607,[[["self"]],["typeid"]]],[11,"handle","","",607,N],[11,"into_any","","",607,[[["box"]],["box",["any"]]]],[11,"as_any","","",607,[[["self"]],["any"]]],[11,"as_any_mut","","",607,[[["self"]],["any"]]],[11,"from","","",599,[[["t"]],["t"]]],[11,"into","","",599,[[["self"]],["u"]]],[11,"to_owned","","",599,[[["self"]],["t"]]],[11,"clone_into","","",599,N],[11,"try_from","","",599,[[["u"]],["result"]]],[11,"borrow","","",599,[[["self"]],["t"]]],[11,"borrow_mut","","",599,[[["self"]],["t"]]],[11,"try_into","","",599,[[["self"]],["result"]]],[11,"get_type_id","","",599,[[["self"]],["typeid"]]],[11,"into_any","","",599,[[["box"]],["box",["any"]]]],[11,"as_any","","",599,[[["self"]],["any"]]],[11,"as_any_mut","","",599,[[["self"]],["any"]]],[11,"from","","",600,[[["t"]],["t"]]],[11,"into","","",600,[[["self"]],["u"]]],[11,"to_owned","","",600,[[["self"]],["t"]]],[11,"clone_into","","",600,N],[11,"try_from","","",600,[[["u"]],["result"]]],[11,"borrow","","",600,[[["self"]],["t"]]],[11,"borrow_mut","","",600,[[["self"]],["t"]]],[11,"try_into","","",600,[[["self"]],["result"]]],[11,"get_type_id","","",600,[[["self"]],["typeid"]]],[11,"into_any","","",600,[[["box"]],["box",["any"]]]],[11,"as_any","","",600,[[["self"]],["any"]]],[11,"as_any_mut","","",600,[[["self"]],["any"]]],[11,"from","","",601,[[["t"]],["t"]]],[11,"into","","",601,[[["self"]],["u"]]],[11,"try_from","","",601,[[["u"]],["result"]]],[11,"borrow","","",601,[[["self"]],["t"]]],[11,"borrow_mut","","",601,[[["self"]],["t"]]],[11,"try_into","","",601,[[["self"]],["result"]]],[11,"get_type_id","","",601,[[["self"]],["typeid"]]],[11,"into_any","","",601,[[["box"]],["box",["any"]]]],[11,"as_any","","",601,[[["self"]],["any"]]],[11,"as_any_mut","","",601,[[["self"]],["any"]]],[11,"from","","",602,[[["t"]],["t"]]],[11,"into","","",602,[[["self"]],["u"]]],[11,"try_from","","",602,[[["u"]],["result"]]],[11,"borrow","","",602,[[["self"]],["t"]]],[11,"borrow_mut","","",602,[[["self"]],["t"]]],[11,"try_into","","",602,[[["self"]],["result"]]],[11,"get_type_id","","",602,[[["self"]],["typeid"]]],[11,"into_any","","",602,[[["box"]],["box",["any"]]]],[11,"as_any","","",602,[[["self"]],["any"]]],[11,"as_any_mut","","",602,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",619,[[["t"]],["t"]]],[11,"into","","",619,[[["self"]],["u"]]],[11,"to_owned","","",619,[[["self"]],["t"]]],[11,"clone_into","","",619,N],[11,"try_from","","",619,[[["u"]],["result"]]],[11,"borrow","","",619,[[["self"]],["t"]]],[11,"borrow_mut","","",619,[[["self"]],["t"]]],[11,"try_into","","",619,[[["self"]],["result"]]],[11,"get_type_id","","",619,[[["self"]],["typeid"]]],[11,"handle","","",619,N],[11,"into_any","","",619,[[["box"]],["box",["any"]]]],[11,"as_any","","",619,[[["self"]],["any"]]],[11,"as_any_mut","","",619,[[["self"]],["any"]]],[11,"from","","",608,[[["t"]],["t"]]],[11,"into","","",608,[[["self"]],["u"]]],[11,"try_from","","",608,[[["u"]],["result"]]],[11,"borrow","","",608,[[["self"]],["t"]]],[11,"borrow_mut","","",608,[[["self"]],["t"]]],[11,"try_into","","",608,[[["self"]],["result"]]],[11,"get_type_id","","",608,[[["self"]],["typeid"]]],[11,"into_any","","",608,[[["box"]],["box",["any"]]]],[11,"as_any","","",608,[[["self"]],["any"]]],[11,"as_any_mut","","",608,[[["self"]],["any"]]],[11,"from","","",827,[[["t"]],["t"]]],[11,"into","","",827,[[["self"]],["u"]]],[11,"try_from","","",827,[[["u"]],["result"]]],[11,"borrow","","",827,[[["self"]],["t"]]],[11,"borrow_mut","","",827,[[["self"]],["t"]]],[11,"try_into","","",827,[[["self"]],["result"]]],[11,"get_type_id","","",827,[[["self"]],["typeid"]]],[11,"into_any","","",827,[[["box"]],["box",["any"]]]],[11,"as_any","","",827,[[["self"]],["any"]]],[11,"as_any_mut","","",827,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",620,[[["t"]],["t"]]],[11,"into","","",620,[[["self"]],["u"]]],[11,"to_owned","","",620,[[["self"]],["t"]]],[11,"clone_into","","",620,N],[11,"try_from","","",620,[[["u"]],["result"]]],[11,"borrow","","",620,[[["self"]],["t"]]],[11,"borrow_mut","","",620,[[["self"]],["t"]]],[11,"try_into","","",620,[[["self"]],["result"]]],[11,"get_type_id","","",620,[[["self"]],["typeid"]]],[11,"handle","","",620,N],[11,"into_any","","",620,[[["box"]],["box",["any"]]]],[11,"as_any","","",620,[[["self"]],["any"]]],[11,"as_any_mut","","",620,[[["self"]],["any"]]],[11,"from","","",609,[[["t"]],["t"]]],[11,"into","","",609,[[["self"]],["u"]]],[11,"to_owned","","",609,[[["self"]],["t"]]],[11,"clone_into","","",609,N],[11,"try_from","","",609,[[["u"]],["result"]]],[11,"borrow","","",609,[[["self"]],["t"]]],[11,"borrow_mut","","",609,[[["self"]],["t"]]],[11,"try_into","","",609,[[["self"]],["result"]]],[11,"get_type_id","","",609,[[["self"]],["typeid"]]],[11,"into_any","","",609,[[["box"]],["box",["any"]]]],[11,"as_any","","",609,[[["self"]],["any"]]],[11,"as_any_mut","","",609,[[["self"]],["any"]]],[11,"from","","",610,[[["t"]],["t"]]],[11,"into","","",610,[[["self"]],["u"]]],[11,"try_from","","",610,[[["u"]],["result"]]],[11,"borrow","","",610,[[["self"]],["t"]]],[11,"borrow_mut","","",610,[[["self"]],["t"]]],[11,"try_into","","",610,[[["self"]],["result"]]],[11,"get_type_id","","",610,[[["self"]],["typeid"]]],[11,"into_any","","",610,[[["box"]],["box",["any"]]]],[11,"as_any","","",610,[[["self"]],["any"]]],[11,"as_any_mut","","",610,[[["self"]],["any"]]],[11,"from","","",611,[[["t"]],["t"]]],[11,"into","","",611,[[["self"]],["u"]]],[11,"try_from","","",611,[[["u"]],["result"]]],[11,"borrow","","",611,[[["self"]],["t"]]],[11,"borrow_mut","","",611,[[["self"]],["t"]]],[11,"try_into","","",611,[[["self"]],["result"]]],[11,"get_type_id","","",611,[[["self"]],["typeid"]]],[11,"into_any","","",611,[[["box"]],["box",["any"]]]],[11,"as_any","","",611,[[["self"]],["any"]]],[11,"as_any_mut","","",611,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",828,[[["t"]],["t"]]],[11,"into","","",828,[[["self"]],["u"]]],[11,"to_owned","","",828,[[["self"]],["t"]]],[11,"clone_into","","",828,N],[11,"try_from","","",828,[[["u"]],["result"]]],[11,"borrow","","",828,[[["self"]],["t"]]],[11,"borrow_mut","","",828,[[["self"]],["t"]]],[11,"try_into","","",828,[[["self"]],["result"]]],[11,"get_type_id","","",828,[[["self"]],["typeid"]]],[11,"handle","","",828,N],[11,"into_any","","",828,[[["box"]],["box",["any"]]]],[11,"as_any","","",828,[[["self"]],["any"]]],[11,"as_any_mut","","",828,[[["self"]],["any"]]],[11,"from","","",613,[[["t"]],["t"]]],[11,"into","","",613,[[["self"]],["u"]]],[11,"try_from","","",613,[[["u"]],["result"]]],[11,"borrow","","",613,[[["self"]],["t"]]],[11,"borrow_mut","","",613,[[["self"]],["t"]]],[11,"try_into","","",613,[[["self"]],["result"]]],[11,"get_type_id","","",613,[[["self"]],["typeid"]]],[11,"into_any","","",613,[[["box"]],["box",["any"]]]],[11,"as_any","","",613,[[["self"]],["any"]]],[11,"as_any_mut","","",613,[[["self"]],["any"]]],[11,"from","","",829,[[["t"]],["t"]]],[11,"into","","",829,[[["self"]],["u"]]],[11,"try_from","","",829,[[["u"]],["result"]]],[11,"borrow","","",829,[[["self"]],["t"]]],[11,"borrow_mut","","",829,[[["self"]],["t"]]],[11,"try_into","","",829,[[["self"]],["result"]]],[11,"get_type_id","","",829,[[["self"]],["typeid"]]],[11,"into_any","","",829,[[["box"]],["box",["any"]]]],[11,"as_any","","",829,[[["self"]],["any"]]],[11,"as_any_mut","","",829,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",621,[[["t"]],["t"]]],[11,"into","","",621,[[["self"]],["u"]]],[11,"to_owned","","",621,[[["self"]],["t"]]],[11,"clone_into","","",621,N],[11,"try_from","","",621,[[["u"]],["result"]]],[11,"borrow","","",621,[[["self"]],["t"]]],[11,"borrow_mut","","",621,[[["self"]],["t"]]],[11,"try_into","","",621,[[["self"]],["result"]]],[11,"get_type_id","","",621,[[["self"]],["typeid"]]],[11,"handle","","",621,N],[11,"into_any","","",621,[[["box"]],["box",["any"]]]],[11,"as_any","","",621,[[["self"]],["any"]]],[11,"as_any_mut","","",621,[[["self"]],["any"]]],[11,"from","","",615,[[["t"]],["t"]]],[11,"into","","",615,[[["self"]],["u"]]],[11,"to_owned","","",615,[[["self"]],["t"]]],[11,"clone_into","","",615,N],[11,"try_from","","",615,[[["u"]],["result"]]],[11,"borrow","","",615,[[["self"]],["t"]]],[11,"borrow_mut","","",615,[[["self"]],["t"]]],[11,"try_into","","",615,[[["self"]],["result"]]],[11,"get_type_id","","",615,[[["self"]],["typeid"]]],[11,"into_any","","",615,[[["box"]],["box",["any"]]]],[11,"as_any","","",615,[[["self"]],["any"]]],[11,"as_any_mut","","",615,[[["self"]],["any"]]],[11,"from","","",616,[[["t"]],["t"]]],[11,"into","","",616,[[["self"]],["u"]]],[11,"try_from","","",616,[[["u"]],["result"]]],[11,"borrow","","",616,[[["self"]],["t"]]],[11,"borrow_mut","","",616,[[["self"]],["t"]]],[11,"try_into","","",616,[[["self"]],["result"]]],[11,"get_type_id","","",616,[[["self"]],["typeid"]]],[11,"into_any","","",616,[[["box"]],["box",["any"]]]],[11,"as_any","","",616,[[["self"]],["any"]]],[11,"as_any_mut","","",616,[[["self"]],["any"]]],[11,"from","","",617,[[["t"]],["t"]]],[11,"into","","",617,[[["self"]],["u"]]],[11,"try_from","","",617,[[["u"]],["result"]]],[11,"borrow","","",617,[[["self"]],["t"]]],[11,"borrow_mut","","",617,[[["self"]],["t"]]],[11,"try_into","","",617,[[["self"]],["result"]]],[11,"get_type_id","","",617,[[["self"]],["typeid"]]],[11,"into_any","","",617,[[["box"]],["box",["any"]]]],[11,"as_any","","",617,[[["self"]],["any"]]],[11,"as_any_mut","","",617,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",630,[[["t"]],["t"]]],[11,"into","","",630,[[["self"]],["u"]]],[11,"to_owned","","",630,[[["self"]],["t"]]],[11,"clone_into","","",630,N],[11,"try_from","","",630,[[["u"]],["result"]]],[11,"borrow","","",630,[[["self"]],["t"]]],[11,"borrow_mut","","",630,[[["self"]],["t"]]],[11,"try_into","","",630,[[["self"]],["result"]]],[11,"get_type_id","","",630,[[["self"]],["typeid"]]],[11,"handle","","",630,N],[11,"into_any","","",630,[[["box"]],["box",["any"]]]],[11,"as_any","","",630,[[["self"]],["any"]]],[11,"as_any_mut","","",630,[[["self"]],["any"]]],[11,"from","","",622,[[["t"]],["t"]]],[11,"into","","",622,[[["self"]],["u"]]],[11,"to_owned","","",622,[[["self"]],["t"]]],[11,"clone_into","","",622,N],[11,"try_from","","",622,[[["u"]],["result"]]],[11,"borrow","","",622,[[["self"]],["t"]]],[11,"borrow_mut","","",622,[[["self"]],["t"]]],[11,"try_into","","",622,[[["self"]],["result"]]],[11,"get_type_id","","",622,[[["self"]],["typeid"]]],[11,"into_any","","",622,[[["box"]],["box",["any"]]]],[11,"as_any","","",622,[[["self"]],["any"]]],[11,"as_any_mut","","",622,[[["self"]],["any"]]],[11,"from","","",623,[[["t"]],["t"]]],[11,"into","","",623,[[["self"]],["u"]]],[11,"try_from","","",623,[[["u"]],["result"]]],[11,"borrow","","",623,[[["self"]],["t"]]],[11,"borrow_mut","","",623,[[["self"]],["t"]]],[11,"try_into","","",623,[[["self"]],["result"]]],[11,"get_type_id","","",623,[[["self"]],["typeid"]]],[11,"into_any","","",623,[[["box"]],["box",["any"]]]],[11,"as_any","","",623,[[["self"]],["any"]]],[11,"as_any_mut","","",623,[[["self"]],["any"]]],[11,"from","","",830,[[["t"]],["t"]]],[11,"into","","",830,[[["self"]],["u"]]],[11,"try_from","","",830,[[["u"]],["result"]]],[11,"borrow","","",830,[[["self"]],["t"]]],[11,"borrow_mut","","",830,[[["self"]],["t"]]],[11,"try_into","","",830,[[["self"]],["result"]]],[11,"get_type_id","","",830,[[["self"]],["typeid"]]],[11,"into_any","","",830,[[["box"]],["box",["any"]]]],[11,"as_any","","",830,[[["self"]],["any"]]],[11,"as_any_mut","","",830,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",631,[[["t"]],["t"]]],[11,"into","","",631,[[["self"]],["u"]]],[11,"to_owned","","",631,[[["self"]],["t"]]],[11,"clone_into","","",631,N],[11,"try_from","","",631,[[["u"]],["result"]]],[11,"borrow","","",631,[[["self"]],["t"]]],[11,"borrow_mut","","",631,[[["self"]],["t"]]],[11,"try_into","","",631,[[["self"]],["result"]]],[11,"get_type_id","","",631,[[["self"]],["typeid"]]],[11,"handle","","",631,N],[11,"into_any","","",631,[[["box"]],["box",["any"]]]],[11,"as_any","","",631,[[["self"]],["any"]]],[11,"as_any_mut","","",631,[[["self"]],["any"]]],[11,"from","","",624,[[["t"]],["t"]]],[11,"into","","",624,[[["self"]],["u"]]],[11,"try_from","","",624,[[["u"]],["result"]]],[11,"borrow","","",624,[[["self"]],["t"]]],[11,"borrow_mut","","",624,[[["self"]],["t"]]],[11,"try_into","","",624,[[["self"]],["result"]]],[11,"get_type_id","","",624,[[["self"]],["typeid"]]],[11,"into_any","","",624,[[["box"]],["box",["any"]]]],[11,"as_any","","",624,[[["self"]],["any"]]],[11,"as_any_mut","","",624,[[["self"]],["any"]]],[11,"from","","",831,[[["t"]],["t"]]],[11,"into","","",831,[[["self"]],["u"]]],[11,"try_from","","",831,[[["u"]],["result"]]],[11,"borrow","","",831,[[["self"]],["t"]]],[11,"borrow_mut","","",831,[[["self"]],["t"]]],[11,"try_into","","",831,[[["self"]],["result"]]],[11,"get_type_id","","",831,[[["self"]],["typeid"]]],[11,"into_any","","",831,[[["box"]],["box",["any"]]]],[11,"as_any","","",831,[[["self"]],["any"]]],[11,"as_any_mut","","",831,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",832,[[["t"]],["t"]]],[11,"into","","",832,[[["self"]],["u"]]],[11,"to_owned","","",832,[[["self"]],["t"]]],[11,"clone_into","","",832,N],[11,"try_from","","",832,[[["u"]],["result"]]],[11,"borrow","","",832,[[["self"]],["t"]]],[11,"borrow_mut","","",832,[[["self"]],["t"]]],[11,"try_into","","",832,[[["self"]],["result"]]],[11,"get_type_id","","",832,[[["self"]],["typeid"]]],[11,"handle","","",832,N],[11,"into_any","","",832,[[["box"]],["box",["any"]]]],[11,"as_any","","",832,[[["self"]],["any"]]],[11,"as_any_mut","","",832,[[["self"]],["any"]]],[11,"from","","",625,[[["t"]],["t"]]],[11,"into","","",625,[[["self"]],["u"]]],[11,"to_owned","","",625,[[["self"]],["t"]]],[11,"clone_into","","",625,N],[11,"try_from","","",625,[[["u"]],["result"]]],[11,"borrow","","",625,[[["self"]],["t"]]],[11,"borrow_mut","","",625,[[["self"]],["t"]]],[11,"try_into","","",625,[[["self"]],["result"]]],[11,"get_type_id","","",625,[[["self"]],["typeid"]]],[11,"into_any","","",625,[[["box"]],["box",["any"]]]],[11,"as_any","","",625,[[["self"]],["any"]]],[11,"as_any_mut","","",625,[[["self"]],["any"]]],[11,"from","","",626,[[["t"]],["t"]]],[11,"into","","",626,[[["self"]],["u"]]],[11,"try_from","","",626,[[["u"]],["result"]]],[11,"borrow","","",626,[[["self"]],["t"]]],[11,"borrow_mut","","",626,[[["self"]],["t"]]],[11,"try_into","","",626,[[["self"]],["result"]]],[11,"get_type_id","","",626,[[["self"]],["typeid"]]],[11,"into_any","","",626,[[["box"]],["box",["any"]]]],[11,"as_any","","",626,[[["self"]],["any"]]],[11,"as_any_mut","","",626,[[["self"]],["any"]]],[11,"from","","",833,[[["t"]],["t"]]],[11,"into","","",833,[[["self"]],["u"]]],[11,"try_from","","",833,[[["u"]],["result"]]],[11,"borrow","","",833,[[["self"]],["t"]]],[11,"borrow_mut","","",833,[[["self"]],["t"]]],[11,"try_into","","",833,[[["self"]],["result"]]],[11,"get_type_id","","",833,[[["self"]],["typeid"]]],[11,"into_any","","",833,[[["box"]],["box",["any"]]]],[11,"as_any","","",833,[[["self"]],["any"]]],[11,"as_any_mut","","",833,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",834,[[["t"]],["t"]]],[11,"into","","",834,[[["self"]],["u"]]],[11,"to_owned","","",834,[[["self"]],["t"]]],[11,"clone_into","","",834,N],[11,"try_from","","",834,[[["u"]],["result"]]],[11,"borrow","","",834,[[["self"]],["t"]]],[11,"borrow_mut","","",834,[[["self"]],["t"]]],[11,"try_into","","",834,[[["self"]],["result"]]],[11,"get_type_id","","",834,[[["self"]],["typeid"]]],[11,"handle","","",834,N],[11,"into_any","","",834,[[["box"]],["box",["any"]]]],[11,"as_any","","",834,[[["self"]],["any"]]],[11,"as_any_mut","","",834,[[["self"]],["any"]]],[11,"from","","",628,[[["t"]],["t"]]],[11,"into","","",628,[[["self"]],["u"]]],[11,"try_from","","",628,[[["u"]],["result"]]],[11,"borrow","","",628,[[["self"]],["t"]]],[11,"borrow_mut","","",628,[[["self"]],["t"]]],[11,"try_into","","",628,[[["self"]],["result"]]],[11,"get_type_id","","",628,[[["self"]],["typeid"]]],[11,"into_any","","",628,[[["box"]],["box",["any"]]]],[11,"as_any","","",628,[[["self"]],["any"]]],[11,"as_any_mut","","",628,[[["self"]],["any"]]],[11,"from","","",835,[[["t"]],["t"]]],[11,"into","","",835,[[["self"]],["u"]]],[11,"try_from","","",835,[[["u"]],["result"]]],[11,"borrow","","",835,[[["self"]],["t"]]],[11,"borrow_mut","","",835,[[["self"]],["t"]]],[11,"try_into","","",835,[[["self"]],["result"]]],[11,"get_type_id","","",835,[[["self"]],["typeid"]]],[11,"into_any","","",835,[[["box"]],["box",["any"]]]],[11,"as_any","","",835,[[["self"]],["any"]]],[11,"as_any_mut","","",835,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",647,[[["t"]],["t"]]],[11,"into","","",647,[[["self"]],["u"]]],[11,"to_owned","","",647,[[["self"]],["t"]]],[11,"clone_into","","",647,N],[11,"try_from","","",647,[[["u"]],["result"]]],[11,"borrow","","",647,[[["self"]],["t"]]],[11,"borrow_mut","","",647,[[["self"]],["t"]]],[11,"try_into","","",647,[[["self"]],["result"]]],[11,"get_type_id","","",647,[[["self"]],["typeid"]]],[11,"handle","","",647,N],[11,"into_any","","",647,[[["box"]],["box",["any"]]]],[11,"as_any","","",647,[[["self"]],["any"]]],[11,"as_any_mut","","",647,[[["self"]],["any"]]],[11,"from","","",632,[[["t"]],["t"]]],[11,"into","","",632,[[["self"]],["u"]]],[11,"to_owned","","",632,[[["self"]],["t"]]],[11,"clone_into","","",632,N],[11,"try_from","","",632,[[["u"]],["result"]]],[11,"borrow","","",632,[[["self"]],["t"]]],[11,"borrow_mut","","",632,[[["self"]],["t"]]],[11,"try_into","","",632,[[["self"]],["result"]]],[11,"get_type_id","","",632,[[["self"]],["typeid"]]],[11,"into_any","","",632,[[["box"]],["box",["any"]]]],[11,"as_any","","",632,[[["self"]],["any"]]],[11,"as_any_mut","","",632,[[["self"]],["any"]]],[11,"from","","",633,[[["t"]],["t"]]],[11,"into","","",633,[[["self"]],["u"]]],[11,"to_owned","","",633,[[["self"]],["t"]]],[11,"clone_into","","",633,N],[11,"try_from","","",633,[[["u"]],["result"]]],[11,"borrow","","",633,[[["self"]],["t"]]],[11,"borrow_mut","","",633,[[["self"]],["t"]]],[11,"try_into","","",633,[[["self"]],["result"]]],[11,"get_type_id","","",633,[[["self"]],["typeid"]]],[11,"into_any","","",633,[[["box"]],["box",["any"]]]],[11,"as_any","","",633,[[["self"]],["any"]]],[11,"as_any_mut","","",633,[[["self"]],["any"]]],[11,"from","","",634,[[["t"]],["t"]]],[11,"into","","",634,[[["self"]],["u"]]],[11,"try_from","","",634,[[["u"]],["result"]]],[11,"borrow","","",634,[[["self"]],["t"]]],[11,"borrow_mut","","",634,[[["self"]],["t"]]],[11,"try_into","","",634,[[["self"]],["result"]]],[11,"get_type_id","","",634,[[["self"]],["typeid"]]],[11,"into_any","","",634,[[["box"]],["box",["any"]]]],[11,"as_any","","",634,[[["self"]],["any"]]],[11,"as_any_mut","","",634,[[["self"]],["any"]]],[11,"from","","",836,[[["t"]],["t"]]],[11,"into","","",836,[[["self"]],["u"]]],[11,"try_from","","",836,[[["u"]],["result"]]],[11,"borrow","","",836,[[["self"]],["t"]]],[11,"borrow_mut","","",836,[[["self"]],["t"]]],[11,"try_into","","",836,[[["self"]],["result"]]],[11,"get_type_id","","",836,[[["self"]],["typeid"]]],[11,"into_any","","",836,[[["box"]],["box",["any"]]]],[11,"as_any","","",836,[[["self"]],["any"]]],[11,"as_any_mut","","",836,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["t"]],["t"]]],[11,"into","","",648,[[["self"]],["u"]]],[11,"to_owned","","",648,[[["self"]],["t"]]],[11,"clone_into","","",648,N],[11,"try_from","","",648,[[["u"]],["result"]]],[11,"borrow","","",648,[[["self"]],["t"]]],[11,"borrow_mut","","",648,[[["self"]],["t"]]],[11,"try_into","","",648,[[["self"]],["result"]]],[11,"get_type_id","","",648,[[["self"]],["typeid"]]],[11,"into_any","","",648,[[["box"]],["box",["any"]]]],[11,"as_any","","",648,[[["self"]],["any"]]],[11,"as_any_mut","","",648,[[["self"]],["any"]]],[11,"from","","",649,[[["t"]],["t"]]],[11,"into","","",649,[[["self"]],["u"]]],[11,"to_owned","","",649,[[["self"]],["t"]]],[11,"clone_into","","",649,N],[11,"try_from","","",649,[[["u"]],["result"]]],[11,"borrow","","",649,[[["self"]],["t"]]],[11,"borrow_mut","","",649,[[["self"]],["t"]]],[11,"try_into","","",649,[[["self"]],["result"]]],[11,"get_type_id","","",649,[[["self"]],["typeid"]]],[11,"handle","","",649,N],[11,"into_any","","",649,[[["box"]],["box",["any"]]]],[11,"as_any","","",649,[[["self"]],["any"]]],[11,"as_any_mut","","",649,[[["self"]],["any"]]],[11,"from","","",635,[[["t"]],["t"]]],[11,"into","","",635,[[["self"]],["u"]]],[11,"to_owned","","",635,[[["self"]],["t"]]],[11,"clone_into","","",635,N],[11,"try_from","","",635,[[["u"]],["result"]]],[11,"borrow","","",635,[[["self"]],["t"]]],[11,"borrow_mut","","",635,[[["self"]],["t"]]],[11,"try_into","","",635,[[["self"]],["result"]]],[11,"get_type_id","","",635,[[["self"]],["typeid"]]],[11,"into_any","","",635,[[["box"]],["box",["any"]]]],[11,"as_any","","",635,[[["self"]],["any"]]],[11,"as_any_mut","","",635,[[["self"]],["any"]]],[11,"from","","",636,[[["t"]],["t"]]],[11,"into","","",636,[[["self"]],["u"]]],[11,"try_from","","",636,[[["u"]],["result"]]],[11,"borrow","","",636,[[["self"]],["t"]]],[11,"borrow_mut","","",636,[[["self"]],["t"]]],[11,"try_into","","",636,[[["self"]],["result"]]],[11,"get_type_id","","",636,[[["self"]],["typeid"]]],[11,"into_any","","",636,[[["box"]],["box",["any"]]]],[11,"as_any","","",636,[[["self"]],["any"]]],[11,"as_any_mut","","",636,[[["self"]],["any"]]],[11,"from","","",637,[[["t"]],["t"]]],[11,"into","","",637,[[["self"]],["u"]]],[11,"try_from","","",637,[[["u"]],["result"]]],[11,"borrow","","",637,[[["self"]],["t"]]],[11,"borrow_mut","","",637,[[["self"]],["t"]]],[11,"try_into","","",637,[[["self"]],["result"]]],[11,"get_type_id","","",637,[[["self"]],["typeid"]]],[11,"into_any","","",637,[[["box"]],["box",["any"]]]],[11,"as_any","","",637,[[["self"]],["any"]]],[11,"as_any_mut","","",637,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",837,[[["t"]],["t"]]],[11,"into","","",837,[[["self"]],["u"]]],[11,"to_owned","","",837,[[["self"]],["t"]]],[11,"clone_into","","",837,N],[11,"try_from","","",837,[[["u"]],["result"]]],[11,"borrow","","",837,[[["self"]],["t"]]],[11,"borrow_mut","","",837,[[["self"]],["t"]]],[11,"try_into","","",837,[[["self"]],["result"]]],[11,"get_type_id","","",837,[[["self"]],["typeid"]]],[11,"handle","","",837,N],[11,"into_any","","",837,[[["box"]],["box",["any"]]]],[11,"as_any","","",837,[[["self"]],["any"]]],[11,"as_any_mut","","",837,[[["self"]],["any"]]],[11,"from","","",639,[[["t"]],["t"]]],[11,"into","","",639,[[["self"]],["u"]]],[11,"to_owned","","",639,[[["self"]],["t"]]],[11,"clone_into","","",639,N],[11,"try_from","","",639,[[["u"]],["result"]]],[11,"borrow","","",639,[[["self"]],["t"]]],[11,"borrow_mut","","",639,[[["self"]],["t"]]],[11,"try_into","","",639,[[["self"]],["result"]]],[11,"get_type_id","","",639,[[["self"]],["typeid"]]],[11,"into_any","","",639,[[["box"]],["box",["any"]]]],[11,"as_any","","",639,[[["self"]],["any"]]],[11,"as_any_mut","","",639,[[["self"]],["any"]]],[11,"from","","",640,[[["t"]],["t"]]],[11,"into","","",640,[[["self"]],["u"]]],[11,"to_owned","","",640,[[["self"]],["t"]]],[11,"clone_into","","",640,N],[11,"try_from","","",640,[[["u"]],["result"]]],[11,"borrow","","",640,[[["self"]],["t"]]],[11,"borrow_mut","","",640,[[["self"]],["t"]]],[11,"try_into","","",640,[[["self"]],["result"]]],[11,"get_type_id","","",640,[[["self"]],["typeid"]]],[11,"into_any","","",640,[[["box"]],["box",["any"]]]],[11,"as_any","","",640,[[["self"]],["any"]]],[11,"as_any_mut","","",640,[[["self"]],["any"]]],[11,"from","","",641,[[["t"]],["t"]]],[11,"into","","",641,[[["self"]],["u"]]],[11,"try_from","","",641,[[["u"]],["result"]]],[11,"borrow","","",641,[[["self"]],["t"]]],[11,"borrow_mut","","",641,[[["self"]],["t"]]],[11,"try_into","","",641,[[["self"]],["result"]]],[11,"get_type_id","","",641,[[["self"]],["typeid"]]],[11,"into_any","","",641,[[["box"]],["box",["any"]]]],[11,"as_any","","",641,[[["self"]],["any"]]],[11,"as_any_mut","","",641,[[["self"]],["any"]]],[11,"from","","",838,[[["t"]],["t"]]],[11,"into","","",838,[[["self"]],["u"]]],[11,"try_from","","",838,[[["u"]],["result"]]],[11,"borrow","","",838,[[["self"]],["t"]]],[11,"borrow_mut","","",838,[[["self"]],["t"]]],[11,"try_into","","",838,[[["self"]],["result"]]],[11,"get_type_id","","",838,[[["self"]],["typeid"]]],[11,"into_any","","",838,[[["box"]],["box",["any"]]]],[11,"as_any","","",838,[[["self"]],["any"]]],[11,"as_any_mut","","",838,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["t"]],["t"]]],[11,"into","","",650,[[["self"]],["u"]]],[11,"to_owned","","",650,[[["self"]],["t"]]],[11,"clone_into","","",650,N],[11,"try_from","","",650,[[["u"]],["result"]]],[11,"borrow","","",650,[[["self"]],["t"]]],[11,"borrow_mut","","",650,[[["self"]],["t"]]],[11,"try_into","","",650,[[["self"]],["result"]]],[11,"get_type_id","","",650,[[["self"]],["typeid"]]],[11,"into_any","","",650,[[["box"]],["box",["any"]]]],[11,"as_any","","",650,[[["self"]],["any"]]],[11,"as_any_mut","","",650,[[["self"]],["any"]]],[11,"from","","",651,[[["t"]],["t"]]],[11,"into","","",651,[[["self"]],["u"]]],[11,"to_owned","","",651,[[["self"]],["t"]]],[11,"clone_into","","",651,N],[11,"try_from","","",651,[[["u"]],["result"]]],[11,"borrow","","",651,[[["self"]],["t"]]],[11,"borrow_mut","","",651,[[["self"]],["t"]]],[11,"try_into","","",651,[[["self"]],["result"]]],[11,"get_type_id","","",651,[[["self"]],["typeid"]]],[11,"handle","","",651,N],[11,"into_any","","",651,[[["box"]],["box",["any"]]]],[11,"as_any","","",651,[[["self"]],["any"]]],[11,"as_any_mut","","",651,[[["self"]],["any"]]],[11,"from","","",643,[[["t"]],["t"]]],[11,"into","","",643,[[["self"]],["u"]]],[11,"to_owned","","",643,[[["self"]],["t"]]],[11,"clone_into","","",643,N],[11,"try_from","","",643,[[["u"]],["result"]]],[11,"borrow","","",643,[[["self"]],["t"]]],[11,"borrow_mut","","",643,[[["self"]],["t"]]],[11,"try_into","","",643,[[["self"]],["result"]]],[11,"get_type_id","","",643,[[["self"]],["typeid"]]],[11,"into_any","","",643,[[["box"]],["box",["any"]]]],[11,"as_any","","",643,[[["self"]],["any"]]],[11,"as_any_mut","","",643,[[["self"]],["any"]]],[11,"from","","",644,[[["t"]],["t"]]],[11,"into","","",644,[[["self"]],["u"]]],[11,"try_from","","",644,[[["u"]],["result"]]],[11,"borrow","","",644,[[["self"]],["t"]]],[11,"borrow_mut","","",644,[[["self"]],["t"]]],[11,"try_into","","",644,[[["self"]],["result"]]],[11,"get_type_id","","",644,[[["self"]],["typeid"]]],[11,"into_any","","",644,[[["box"]],["box",["any"]]]],[11,"as_any","","",644,[[["self"]],["any"]]],[11,"as_any_mut","","",644,[[["self"]],["any"]]],[11,"from","","",645,[[["t"]],["t"]]],[11,"into","","",645,[[["self"]],["u"]]],[11,"try_from","","",645,[[["u"]],["result"]]],[11,"borrow","","",645,[[["self"]],["t"]]],[11,"borrow_mut","","",645,[[["self"]],["t"]]],[11,"try_into","","",645,[[["self"]],["result"]]],[11,"get_type_id","","",645,[[["self"]],["typeid"]]],[11,"into_any","","",645,[[["box"]],["box",["any"]]]],[11,"as_any","","",645,[[["self"]],["any"]]],[11,"as_any_mut","","",645,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",663,[[["t"]],["t"]]],[11,"into","","",663,[[["self"]],["u"]]],[11,"to_owned","","",663,[[["self"]],["t"]]],[11,"clone_into","","",663,N],[11,"try_from","","",663,[[["u"]],["result"]]],[11,"borrow","","",663,[[["self"]],["t"]]],[11,"borrow_mut","","",663,[[["self"]],["t"]]],[11,"try_into","","",663,[[["self"]],["result"]]],[11,"get_type_id","","",663,[[["self"]],["typeid"]]],[11,"handle","","",663,N],[11,"into_any","","",663,[[["box"]],["box",["any"]]]],[11,"as_any","","",663,[[["self"]],["any"]]],[11,"as_any_mut","","",663,[[["self"]],["any"]]],[11,"from","","",652,[[["t"]],["t"]]],[11,"into","","",652,[[["self"]],["u"]]],[11,"try_from","","",652,[[["u"]],["result"]]],[11,"borrow","","",652,[[["self"]],["t"]]],[11,"borrow_mut","","",652,[[["self"]],["t"]]],[11,"try_into","","",652,[[["self"]],["result"]]],[11,"get_type_id","","",652,[[["self"]],["typeid"]]],[11,"into_any","","",652,[[["box"]],["box",["any"]]]],[11,"as_any","","",652,[[["self"]],["any"]]],[11,"as_any_mut","","",652,[[["self"]],["any"]]],[11,"from","","",839,[[["t"]],["t"]]],[11,"into","","",839,[[["self"]],["u"]]],[11,"try_from","","",839,[[["u"]],["result"]]],[11,"borrow","","",839,[[["self"]],["t"]]],[11,"borrow_mut","","",839,[[["self"]],["t"]]],[11,"try_into","","",839,[[["self"]],["result"]]],[11,"get_type_id","","",839,[[["self"]],["typeid"]]],[11,"into_any","","",839,[[["box"]],["box",["any"]]]],[11,"as_any","","",839,[[["self"]],["any"]]],[11,"as_any_mut","","",839,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["t"]],["t"]]],[11,"into","","",664,[[["self"]],["u"]]],[11,"to_owned","","",664,[[["self"]],["t"]]],[11,"clone_into","","",664,N],[11,"try_from","","",664,[[["u"]],["result"]]],[11,"borrow","","",664,[[["self"]],["t"]]],[11,"borrow_mut","","",664,[[["self"]],["t"]]],[11,"try_into","","",664,[[["self"]],["result"]]],[11,"get_type_id","","",664,[[["self"]],["typeid"]]],[11,"into_any","","",664,[[["box"]],["box",["any"]]]],[11,"as_any","","",664,[[["self"]],["any"]]],[11,"as_any_mut","","",664,[[["self"]],["any"]]],[11,"from","","",665,[[["t"]],["t"]]],[11,"into","","",665,[[["self"]],["u"]]],[11,"to_owned","","",665,[[["self"]],["t"]]],[11,"clone_into","","",665,N],[11,"try_from","","",665,[[["u"]],["result"]]],[11,"borrow","","",665,[[["self"]],["t"]]],[11,"borrow_mut","","",665,[[["self"]],["t"]]],[11,"try_into","","",665,[[["self"]],["result"]]],[11,"get_type_id","","",665,[[["self"]],["typeid"]]],[11,"handle","","",665,N],[11,"into_any","","",665,[[["box"]],["box",["any"]]]],[11,"as_any","","",665,[[["self"]],["any"]]],[11,"as_any_mut","","",665,[[["self"]],["any"]]],[11,"from","","",653,[[["t"]],["t"]]],[11,"into","","",653,[[["self"]],["u"]]],[11,"to_owned","","",653,[[["self"]],["t"]]],[11,"clone_into","","",653,N],[11,"try_from","","",653,[[["u"]],["result"]]],[11,"borrow","","",653,[[["self"]],["t"]]],[11,"borrow_mut","","",653,[[["self"]],["t"]]],[11,"try_into","","",653,[[["self"]],["result"]]],[11,"get_type_id","","",653,[[["self"]],["typeid"]]],[11,"into_any","","",653,[[["box"]],["box",["any"]]]],[11,"as_any","","",653,[[["self"]],["any"]]],[11,"as_any_mut","","",653,[[["self"]],["any"]]],[11,"from","","",654,[[["t"]],["t"]]],[11,"into","","",654,[[["self"]],["u"]]],[11,"try_from","","",654,[[["u"]],["result"]]],[11,"borrow","","",654,[[["self"]],["t"]]],[11,"borrow_mut","","",654,[[["self"]],["t"]]],[11,"try_into","","",654,[[["self"]],["result"]]],[11,"get_type_id","","",654,[[["self"]],["typeid"]]],[11,"into_any","","",654,[[["box"]],["box",["any"]]]],[11,"as_any","","",654,[[["self"]],["any"]]],[11,"as_any_mut","","",654,[[["self"]],["any"]]],[11,"from","","",655,[[["t"]],["t"]]],[11,"into","","",655,[[["self"]],["u"]]],[11,"try_from","","",655,[[["u"]],["result"]]],[11,"borrow","","",655,[[["self"]],["t"]]],[11,"borrow_mut","","",655,[[["self"]],["t"]]],[11,"try_into","","",655,[[["self"]],["result"]]],[11,"get_type_id","","",655,[[["self"]],["typeid"]]],[11,"into_any","","",655,[[["box"]],["box",["any"]]]],[11,"as_any","","",655,[[["self"]],["any"]]],[11,"as_any_mut","","",655,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",840,[[["t"]],["t"]]],[11,"into","","",840,[[["self"]],["u"]]],[11,"to_owned","","",840,[[["self"]],["t"]]],[11,"clone_into","","",840,N],[11,"try_from","","",840,[[["u"]],["result"]]],[11,"borrow","","",840,[[["self"]],["t"]]],[11,"borrow_mut","","",840,[[["self"]],["t"]]],[11,"try_into","","",840,[[["self"]],["result"]]],[11,"get_type_id","","",840,[[["self"]],["typeid"]]],[11,"handle","","",840,N],[11,"into_any","","",840,[[["box"]],["box",["any"]]]],[11,"as_any","","",840,[[["self"]],["any"]]],[11,"as_any_mut","","",840,[[["self"]],["any"]]],[11,"from","","",657,[[["t"]],["t"]]],[11,"into","","",657,[[["self"]],["u"]]],[11,"try_from","","",657,[[["u"]],["result"]]],[11,"borrow","","",657,[[["self"]],["t"]]],[11,"borrow_mut","","",657,[[["self"]],["t"]]],[11,"try_into","","",657,[[["self"]],["result"]]],[11,"get_type_id","","",657,[[["self"]],["typeid"]]],[11,"into_any","","",657,[[["box"]],["box",["any"]]]],[11,"as_any","","",657,[[["self"]],["any"]]],[11,"as_any_mut","","",657,[[["self"]],["any"]]],[11,"from","","",841,[[["t"]],["t"]]],[11,"into","","",841,[[["self"]],["u"]]],[11,"try_from","","",841,[[["u"]],["result"]]],[11,"borrow","","",841,[[["self"]],["t"]]],[11,"borrow_mut","","",841,[[["self"]],["t"]]],[11,"try_into","","",841,[[["self"]],["result"]]],[11,"get_type_id","","",841,[[["self"]],["typeid"]]],[11,"into_any","","",841,[[["box"]],["box",["any"]]]],[11,"as_any","","",841,[[["self"]],["any"]]],[11,"as_any_mut","","",841,[[["self"]],["any"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["t"]],["t"]]],[11,"into","","",666,[[["self"]],["u"]]],[11,"to_owned","","",666,[[["self"]],["t"]]],[11,"clone_into","","",666,N],[11,"try_from","","",666,[[["u"]],["result"]]],[11,"borrow","","",666,[[["self"]],["t"]]],[11,"borrow_mut","","",666,[[["self"]],["t"]]],[11,"try_into","","",666,[[["self"]],["result"]]],[11,"get_type_id","","",666,[[["self"]],["typeid"]]],[11,"into_any","","",666,[[["box"]],["box",["any"]]]],[11,"as_any","","",666,[[["self"]],["any"]]],[11,"as_any_mut","","",666,[[["self"]],["any"]]],[11,"from","","",667,[[["t"]],["t"]]],[11,"into","","",667,[[["self"]],["u"]]],[11,"to_owned","","",667,[[["self"]],["t"]]],[11,"clone_into","","",667,N],[11,"try_from","","",667,[[["u"]],["result"]]],[11,"borrow","","",667,[[["self"]],["t"]]],[11,"borrow_mut","","",667,[[["self"]],["t"]]],[11,"try_into","","",667,[[["self"]],["result"]]],[11,"get_type_id","","",667,[[["self"]],["typeid"]]],[11,"handle","","",667,N],[11,"into_any","","",667,[[["box"]],["box",["any"]]]],[11,"as_any","","",667,[[["self"]],["any"]]],[11,"as_any_mut","","",667,[[["self"]],["any"]]],[11,"from","","",659,[[["t"]],["t"]]],[11,"into","","",659,[[["self"]],["u"]]],[11,"to_owned","","",659,[[["self"]],["t"]]],[11,"clone_into","","",659,N],[11,"try_from","","",659,[[["u"]],["result"]]],[11,"borrow","","",659,[[["self"]],["t"]]],[11,"borrow_mut","","",659,[[["self"]],["t"]]],[11,"try_into","","",659,[[["self"]],["result"]]],[11,"get_type_id","","",659,[[["self"]],["typeid"]]],[11,"into_any","","",659,[[["box"]],["box",["any"]]]],[11,"as_any","","",659,[[["self"]],["any"]]],[11,"as_any_mut","","",659,[[["self"]],["any"]]],[11,"from","","",660,[[["t"]],["t"]]],[11,"into","","",660,[[["self"]],["u"]]],[11,"try_from","","",660,[[["u"]],["result"]]],[11,"borrow","","",660,[[["self"]],["t"]]],[11,"borrow_mut","","",660,[[["self"]],["t"]]],[11,"try_into","","",660,[[["self"]],["result"]]],[11,"get_type_id","","",660,[[["self"]],["typeid"]]],[11,"into_any","","",660,[[["box"]],["box",["any"]]]],[11,"as_any","","",660,[[["self"]],["any"]]],[11,"as_any_mut","","",660,[[["self"]],["any"]]],[11,"from","","",661,[[["t"]],["t"]]],[11,"into","","",661,[[["self"]],["u"]]],[11,"try_from","","",661,[[["u"]],["result"]]],[11,"borrow","","",661,[[["self"]],["t"]]],[11,"borrow_mut","","",661,[[["self"]],["t"]]],[11,"try_into","","",661,[[["self"]],["result"]]],[11,"get_type_id","","",661,[[["self"]],["typeid"]]],[11,"into_any","","",661,[[["box"]],["box",["any"]]]],[11,"as_any","","",661,[[["self"]],["any"]]],[11,"as_any_mut","","",661,[[["self"]],["any"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",842,[[["t"]],["t"]]],[11,"into","","",842,[[["self"]],["u"]]],[11,"to_owned","","",842,[[["self"]],["t"]]],[11,"clone_into","","",842,N],[11,"try_from","","",842,[[["u"]],["result"]]],[11,"borrow","","",842,[[["self"]],["t"]]],[11,"borrow_mut","","",842,[[["self"]],["t"]]],[11,"try_into","","",842,[[["self"]],["result"]]],[11,"get_type_id","","",842,[[["self"]],["typeid"]]],[11,"handle","","",842,N],[11,"into_any","","",842,[[["box"]],["box",["any"]]]],[11,"as_any","","",842,[[["self"]],["any"]]],[11,"as_any_mut","","",842,[[["self"]],["any"]]],[11,"from","","",668,[[["t"]],["t"]]],[11,"into","","",668,[[["self"]],["u"]]],[11,"to_owned","","",668,[[["self"]],["t"]]],[11,"clone_into","","",668,N],[11,"try_from","","",668,[[["u"]],["result"]]],[11,"borrow","","",668,[[["self"]],["t"]]],[11,"borrow_mut","","",668,[[["self"]],["t"]]],[11,"try_into","","",668,[[["self"]],["result"]]],[11,"get_type_id","","",668,[[["self"]],["typeid"]]],[11,"into_any","","",668,[[["box"]],["box",["any"]]]],[11,"as_any","","",668,[[["self"]],["any"]]],[11,"as_any_mut","","",668,[[["self"]],["any"]]],[11,"from","","",669,[[["t"]],["t"]]],[11,"into","","",669,[[["self"]],["u"]]],[11,"try_from","","",669,[[["u"]],["result"]]],[11,"borrow","","",669,[[["self"]],["t"]]],[11,"borrow_mut","","",669,[[["self"]],["t"]]],[11,"try_into","","",669,[[["self"]],["result"]]],[11,"get_type_id","","",669,[[["self"]],["typeid"]]],[11,"into_any","","",669,[[["box"]],["box",["any"]]]],[11,"as_any","","",669,[[["self"]],["any"]]],[11,"as_any_mut","","",669,[[["self"]],["any"]]],[11,"from","","",670,[[["t"]],["t"]]],[11,"into","","",670,[[["self"]],["u"]]],[11,"try_from","","",670,[[["u"]],["result"]]],[11,"borrow","","",670,[[["self"]],["t"]]],[11,"borrow_mut","","",670,[[["self"]],["t"]]],[11,"try_into","","",670,[[["self"]],["result"]]],[11,"get_type_id","","",670,[[["self"]],["typeid"]]],[11,"into_any","","",670,[[["box"]],["box",["any"]]]],[11,"as_any","","",670,[[["self"]],["any"]]],[11,"as_any_mut","","",670,[[["self"]],["any"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",843,[[["t"]],["t"]]],[11,"into","","",843,[[["self"]],["u"]]],[11,"to_owned","","",843,[[["self"]],["t"]]],[11,"clone_into","","",843,N],[11,"try_from","","",843,[[["u"]],["result"]]],[11,"borrow","","",843,[[["self"]],["t"]]],[11,"borrow_mut","","",843,[[["self"]],["t"]]],[11,"try_into","","",843,[[["self"]],["result"]]],[11,"get_type_id","","",843,[[["self"]],["typeid"]]],[11,"handle","","",843,N],[11,"into_any","","",843,[[["box"]],["box",["any"]]]],[11,"as_any","","",843,[[["self"]],["any"]]],[11,"as_any_mut","","",843,[[["self"]],["any"]]],[11,"from","","",672,[[["t"]],["t"]]],[11,"into","","",672,[[["self"]],["u"]]],[11,"to_owned","","",672,[[["self"]],["t"]]],[11,"clone_into","","",672,N],[11,"try_from","","",672,[[["u"]],["result"]]],[11,"borrow","","",672,[[["self"]],["t"]]],[11,"borrow_mut","","",672,[[["self"]],["t"]]],[11,"try_into","","",672,[[["self"]],["result"]]],[11,"get_type_id","","",672,[[["self"]],["typeid"]]],[11,"into_any","","",672,[[["box"]],["box",["any"]]]],[11,"as_any","","",672,[[["self"]],["any"]]],[11,"as_any_mut","","",672,[[["self"]],["any"]]],[11,"from","","",844,[[["t"]],["t"]]],[11,"into","","",844,[[["self"]],["u"]]],[11,"try_from","","",844,[[["u"]],["result"]]],[11,"borrow","","",844,[[["self"]],["t"]]],[11,"borrow_mut","","",844,[[["self"]],["t"]]],[11,"try_into","","",844,[[["self"]],["result"]]],[11,"get_type_id","","",844,[[["self"]],["typeid"]]],[11,"into_any","","",844,[[["box"]],["box",["any"]]]],[11,"as_any","","",844,[[["self"]],["any"]]],[11,"as_any_mut","","",844,[[["self"]],["any"]]],[11,"from","","",673,[[["t"]],["t"]]],[11,"into","","",673,[[["self"]],["u"]]],[11,"try_from","","",673,[[["u"]],["result"]]],[11,"borrow","","",673,[[["self"]],["t"]]],[11,"borrow_mut","","",673,[[["self"]],["t"]]],[11,"try_into","","",673,[[["self"]],["result"]]],[11,"get_type_id","","",673,[[["self"]],["typeid"]]],[11,"into_any","","",673,[[["box"]],["box",["any"]]]],[11,"as_any","","",673,[[["self"]],["any"]]],[11,"as_any_mut","","",673,[[["self"]],["any"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",845,[[["t"]],["t"]]],[11,"into","","",845,[[["self"]],["u"]]],[11,"to_owned","","",845,[[["self"]],["t"]]],[11,"clone_into","","",845,N],[11,"try_from","","",845,[[["u"]],["result"]]],[11,"borrow","","",845,[[["self"]],["t"]]],[11,"borrow_mut","","",845,[[["self"]],["t"]]],[11,"try_into","","",845,[[["self"]],["result"]]],[11,"get_type_id","","",845,[[["self"]],["typeid"]]],[11,"handle","","",845,N],[11,"into_any","","",845,[[["box"]],["box",["any"]]]],[11,"as_any","","",845,[[["self"]],["any"]]],[11,"as_any_mut","","",845,[[["self"]],["any"]]],[11,"from","","",675,[[["t"]],["t"]]],[11,"into","","",675,[[["self"]],["u"]]],[11,"to_owned","","",675,[[["self"]],["t"]]],[11,"clone_into","","",675,N],[11,"try_from","","",675,[[["u"]],["result"]]],[11,"borrow","","",675,[[["self"]],["t"]]],[11,"borrow_mut","","",675,[[["self"]],["t"]]],[11,"try_into","","",675,[[["self"]],["result"]]],[11,"get_type_id","","",675,[[["self"]],["typeid"]]],[11,"into_any","","",675,[[["box"]],["box",["any"]]]],[11,"as_any","","",675,[[["self"]],["any"]]],[11,"as_any_mut","","",675,[[["self"]],["any"]]],[11,"from","","",676,[[["t"]],["t"]]],[11,"into","","",676,[[["self"]],["u"]]],[11,"try_from","","",676,[[["u"]],["result"]]],[11,"borrow","","",676,[[["self"]],["t"]]],[11,"borrow_mut","","",676,[[["self"]],["t"]]],[11,"try_into","","",676,[[["self"]],["result"]]],[11,"get_type_id","","",676,[[["self"]],["typeid"]]],[11,"into_any","","",676,[[["box"]],["box",["any"]]]],[11,"as_any","","",676,[[["self"]],["any"]]],[11,"as_any_mut","","",676,[[["self"]],["any"]]],[11,"from","","",677,[[["t"]],["t"]]],[11,"into","","",677,[[["self"]],["u"]]],[11,"try_from","","",677,[[["u"]],["result"]]],[11,"borrow","","",677,[[["self"]],["t"]]],[11,"borrow_mut","","",677,[[["self"]],["t"]]],[11,"try_into","","",677,[[["self"]],["result"]]],[11,"get_type_id","","",677,[[["self"]],["typeid"]]],[11,"into_any","","",677,[[["box"]],["box",["any"]]]],[11,"as_any","","",677,[[["self"]],["any"]]],[11,"as_any_mut","","",677,[[["self"]],["any"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",846,[[["t"]],["t"]]],[11,"into","","",846,[[["self"]],["u"]]],[11,"to_owned","","",846,[[["self"]],["t"]]],[11,"clone_into","","",846,N],[11,"try_from","","",846,[[["u"]],["result"]]],[11,"borrow","","",846,[[["self"]],["t"]]],[11,"borrow_mut","","",846,[[["self"]],["t"]]],[11,"try_into","","",846,[[["self"]],["result"]]],[11,"get_type_id","","",846,[[["self"]],["typeid"]]],[11,"handle","","",846,N],[11,"into_any","","",846,[[["box"]],["box",["any"]]]],[11,"as_any","","",846,[[["self"]],["any"]]],[11,"as_any_mut","","",846,[[["self"]],["any"]]],[11,"from","","",679,[[["t"]],["t"]]],[11,"into","","",679,[[["self"]],["u"]]],[11,"to_owned","","",679,[[["self"]],["t"]]],[11,"clone_into","","",679,N],[11,"try_from","","",679,[[["u"]],["result"]]],[11,"borrow","","",679,[[["self"]],["t"]]],[11,"borrow_mut","","",679,[[["self"]],["t"]]],[11,"try_into","","",679,[[["self"]],["result"]]],[11,"get_type_id","","",679,[[["self"]],["typeid"]]],[11,"into_any","","",679,[[["box"]],["box",["any"]]]],[11,"as_any","","",679,[[["self"]],["any"]]],[11,"as_any_mut","","",679,[[["self"]],["any"]]],[11,"from","","",847,[[["t"]],["t"]]],[11,"into","","",847,[[["self"]],["u"]]],[11,"try_from","","",847,[[["u"]],["result"]]],[11,"borrow","","",847,[[["self"]],["t"]]],[11,"borrow_mut","","",847,[[["self"]],["t"]]],[11,"try_into","","",847,[[["self"]],["result"]]],[11,"get_type_id","","",847,[[["self"]],["typeid"]]],[11,"into_any","","",847,[[["box"]],["box",["any"]]]],[11,"as_any","","",847,[[["self"]],["any"]]],[11,"as_any_mut","","",847,[[["self"]],["any"]]],[11,"from","","",680,[[["t"]],["t"]]],[11,"into","","",680,[[["self"]],["u"]]],[11,"try_from","","",680,[[["u"]],["result"]]],[11,"borrow","","",680,[[["self"]],["t"]]],[11,"borrow_mut","","",680,[[["self"]],["t"]]],[11,"try_into","","",680,[[["self"]],["result"]]],[11,"get_type_id","","",680,[[["self"]],["typeid"]]],[11,"into_any","","",680,[[["box"]],["box",["any"]]]],[11,"as_any","","",680,[[["self"]],["any"]]],[11,"as_any_mut","","",680,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",848,[[["t"]],["t"]]],[11,"into","","",848,[[["self"]],["u"]]],[11,"to_owned","","",848,[[["self"]],["t"]]],[11,"clone_into","","",848,N],[11,"try_from","","",848,[[["u"]],["result"]]],[11,"borrow","","",848,[[["self"]],["t"]]],[11,"borrow_mut","","",848,[[["self"]],["t"]]],[11,"try_into","","",848,[[["self"]],["result"]]],[11,"get_type_id","","",848,[[["self"]],["typeid"]]],[11,"handle","","",848,N],[11,"into_any","","",848,[[["box"]],["box",["any"]]]],[11,"as_any","","",848,[[["self"]],["any"]]],[11,"as_any_mut","","",848,[[["self"]],["any"]]],[11,"from","","",681,[[["t"]],["t"]]],[11,"into","","",681,[[["self"]],["u"]]],[11,"to_owned","","",681,[[["self"]],["t"]]],[11,"clone_into","","",681,N],[11,"try_from","","",681,[[["u"]],["result"]]],[11,"borrow","","",681,[[["self"]],["t"]]],[11,"borrow_mut","","",681,[[["self"]],["t"]]],[11,"try_into","","",681,[[["self"]],["result"]]],[11,"get_type_id","","",681,[[["self"]],["typeid"]]],[11,"into_any","","",681,[[["box"]],["box",["any"]]]],[11,"as_any","","",681,[[["self"]],["any"]]],[11,"as_any_mut","","",681,[[["self"]],["any"]]],[11,"from","","",682,[[["t"]],["t"]]],[11,"into","","",682,[[["self"]],["u"]]],[11,"try_from","","",682,[[["u"]],["result"]]],[11,"borrow","","",682,[[["self"]],["t"]]],[11,"borrow_mut","","",682,[[["self"]],["t"]]],[11,"try_into","","",682,[[["self"]],["result"]]],[11,"get_type_id","","",682,[[["self"]],["typeid"]]],[11,"into_any","","",682,[[["box"]],["box",["any"]]]],[11,"as_any","","",682,[[["self"]],["any"]]],[11,"as_any_mut","","",682,[[["self"]],["any"]]],[11,"from","","",683,[[["t"]],["t"]]],[11,"into","","",683,[[["self"]],["u"]]],[11,"try_from","","",683,[[["u"]],["result"]]],[11,"borrow","","",683,[[["self"]],["t"]]],[11,"borrow_mut","","",683,[[["self"]],["t"]]],[11,"try_into","","",683,[[["self"]],["result"]]],[11,"get_type_id","","",683,[[["self"]],["typeid"]]],[11,"into_any","","",683,[[["box"]],["box",["any"]]]],[11,"as_any","","",683,[[["self"]],["any"]]],[11,"as_any_mut","","",683,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["t"]],["t"]]],[11,"into","","",849,[[["self"]],["u"]]],[11,"to_owned","","",849,[[["self"]],["t"]]],[11,"clone_into","","",849,N],[11,"try_from","","",849,[[["u"]],["result"]]],[11,"borrow","","",849,[[["self"]],["t"]]],[11,"borrow_mut","","",849,[[["self"]],["t"]]],[11,"try_into","","",849,[[["self"]],["result"]]],[11,"get_type_id","","",849,[[["self"]],["typeid"]]],[11,"into_any","","",849,[[["box"]],["box",["any"]]]],[11,"as_any","","",849,[[["self"]],["any"]]],[11,"as_any_mut","","",849,[[["self"]],["any"]]],[11,"from","","",850,[[["t"]],["t"]]],[11,"into","","",850,[[["self"]],["u"]]],[11,"to_owned","","",850,[[["self"]],["t"]]],[11,"clone_into","","",850,N],[11,"try_from","","",850,[[["u"]],["result"]]],[11,"borrow","","",850,[[["self"]],["t"]]],[11,"borrow_mut","","",850,[[["self"]],["t"]]],[11,"try_into","","",850,[[["self"]],["result"]]],[11,"get_type_id","","",850,[[["self"]],["typeid"]]],[11,"handle","","",850,N],[11,"into_any","","",850,[[["box"]],["box",["any"]]]],[11,"as_any","","",850,[[["self"]],["any"]]],[11,"as_any_mut","","",850,[[["self"]],["any"]]],[11,"from","","",685,[[["t"]],["t"]]],[11,"into","","",685,[[["self"]],["u"]]],[11,"to_owned","","",685,[[["self"]],["t"]]],[11,"clone_into","","",685,N],[11,"try_from","","",685,[[["u"]],["result"]]],[11,"borrow","","",685,[[["self"]],["t"]]],[11,"borrow_mut","","",685,[[["self"]],["t"]]],[11,"try_into","","",685,[[["self"]],["result"]]],[11,"get_type_id","","",685,[[["self"]],["typeid"]]],[11,"into_any","","",685,[[["box"]],["box",["any"]]]],[11,"as_any","","",685,[[["self"]],["any"]]],[11,"as_any_mut","","",685,[[["self"]],["any"]]],[11,"from","","",686,[[["t"]],["t"]]],[11,"into","","",686,[[["self"]],["u"]]],[11,"to_owned","","",686,[[["self"]],["t"]]],[11,"clone_into","","",686,N],[11,"try_from","","",686,[[["u"]],["result"]]],[11,"borrow","","",686,[[["self"]],["t"]]],[11,"borrow_mut","","",686,[[["self"]],["t"]]],[11,"try_into","","",686,[[["self"]],["result"]]],[11,"get_type_id","","",686,[[["self"]],["typeid"]]],[11,"into_any","","",686,[[["box"]],["box",["any"]]]],[11,"as_any","","",686,[[["self"]],["any"]]],[11,"as_any_mut","","",686,[[["self"]],["any"]]],[11,"from","","",687,[[["t"]],["t"]]],[11,"into","","",687,[[["self"]],["u"]]],[11,"to_owned","","",687,[[["self"]],["t"]]],[11,"clone_into","","",687,N],[11,"try_from","","",687,[[["u"]],["result"]]],[11,"borrow","","",687,[[["self"]],["t"]]],[11,"borrow_mut","","",687,[[["self"]],["t"]]],[11,"try_into","","",687,[[["self"]],["result"]]],[11,"get_type_id","","",687,[[["self"]],["typeid"]]],[11,"into_any","","",687,[[["box"]],["box",["any"]]]],[11,"as_any","","",687,[[["self"]],["any"]]],[11,"as_any_mut","","",687,[[["self"]],["any"]]],[11,"from","","",688,[[["t"]],["t"]]],[11,"into","","",688,[[["self"]],["u"]]],[11,"try_from","","",688,[[["u"]],["result"]]],[11,"borrow","","",688,[[["self"]],["t"]]],[11,"borrow_mut","","",688,[[["self"]],["t"]]],[11,"try_into","","",688,[[["self"]],["result"]]],[11,"get_type_id","","",688,[[["self"]],["typeid"]]],[11,"into_any","","",688,[[["box"]],["box",["any"]]]],[11,"as_any","","",688,[[["self"]],["any"]]],[11,"as_any_mut","","",688,[[["self"]],["any"]]],[11,"from","","",851,[[["t"]],["t"]]],[11,"into","","",851,[[["self"]],["u"]]],[11,"try_from","","",851,[[["u"]],["result"]]],[11,"borrow","","",851,[[["self"]],["t"]]],[11,"borrow_mut","","",851,[[["self"]],["t"]]],[11,"try_into","","",851,[[["self"]],["result"]]],[11,"get_type_id","","",851,[[["self"]],["typeid"]]],[11,"into_any","","",851,[[["box"]],["box",["any"]]]],[11,"as_any","","",851,[[["self"]],["any"]]],[11,"as_any_mut","","",851,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",852,[[["t"]],["t"]]],[11,"into","","",852,[[["self"]],["u"]]],[11,"to_owned","","",852,[[["self"]],["t"]]],[11,"clone_into","","",852,N],[11,"try_from","","",852,[[["u"]],["result"]]],[11,"borrow","","",852,[[["self"]],["t"]]],[11,"borrow_mut","","",852,[[["self"]],["t"]]],[11,"try_into","","",852,[[["self"]],["result"]]],[11,"get_type_id","","",852,[[["self"]],["typeid"]]],[11,"handle","","",852,N],[11,"into_any","","",852,[[["box"]],["box",["any"]]]],[11,"as_any","","",852,[[["self"]],["any"]]],[11,"as_any_mut","","",852,[[["self"]],["any"]]],[11,"from","","",689,[[["t"]],["t"]]],[11,"into","","",689,[[["self"]],["u"]]],[11,"to_owned","","",689,[[["self"]],["t"]]],[11,"clone_into","","",689,N],[11,"try_from","","",689,[[["u"]],["result"]]],[11,"borrow","","",689,[[["self"]],["t"]]],[11,"borrow_mut","","",689,[[["self"]],["t"]]],[11,"try_into","","",689,[[["self"]],["result"]]],[11,"get_type_id","","",689,[[["self"]],["typeid"]]],[11,"into_any","","",689,[[["box"]],["box",["any"]]]],[11,"as_any","","",689,[[["self"]],["any"]]],[11,"as_any_mut","","",689,[[["self"]],["any"]]],[11,"from","","",690,[[["t"]],["t"]]],[11,"into","","",690,[[["self"]],["u"]]],[11,"try_from","","",690,[[["u"]],["result"]]],[11,"borrow","","",690,[[["self"]],["t"]]],[11,"borrow_mut","","",690,[[["self"]],["t"]]],[11,"try_into","","",690,[[["self"]],["result"]]],[11,"get_type_id","","",690,[[["self"]],["typeid"]]],[11,"into_any","","",690,[[["box"]],["box",["any"]]]],[11,"as_any","","",690,[[["self"]],["any"]]],[11,"as_any_mut","","",690,[[["self"]],["any"]]],[11,"from","","",691,[[["t"]],["t"]]],[11,"into","","",691,[[["self"]],["u"]]],[11,"try_from","","",691,[[["u"]],["result"]]],[11,"borrow","","",691,[[["self"]],["t"]]],[11,"borrow_mut","","",691,[[["self"]],["t"]]],[11,"try_into","","",691,[[["self"]],["result"]]],[11,"get_type_id","","",691,[[["self"]],["typeid"]]],[11,"into_any","","",691,[[["box"]],["box",["any"]]]],[11,"as_any","","",691,[[["self"]],["any"]]],[11,"as_any_mut","","",691,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",853,[[["t"]],["t"]]],[11,"into","","",853,[[["self"]],["u"]]],[11,"to_owned","","",853,[[["self"]],["t"]]],[11,"clone_into","","",853,N],[11,"try_from","","",853,[[["u"]],["result"]]],[11,"borrow","","",853,[[["self"]],["t"]]],[11,"borrow_mut","","",853,[[["self"]],["t"]]],[11,"try_into","","",853,[[["self"]],["result"]]],[11,"get_type_id","","",853,[[["self"]],["typeid"]]],[11,"handle","","",853,N],[11,"into_any","","",853,[[["box"]],["box",["any"]]]],[11,"as_any","","",853,[[["self"]],["any"]]],[11,"as_any_mut","","",853,[[["self"]],["any"]]],[11,"from","","",693,[[["t"]],["t"]]],[11,"into","","",693,[[["self"]],["u"]]],[11,"to_owned","","",693,[[["self"]],["t"]]],[11,"clone_into","","",693,N],[11,"try_from","","",693,[[["u"]],["result"]]],[11,"borrow","","",693,[[["self"]],["t"]]],[11,"borrow_mut","","",693,[[["self"]],["t"]]],[11,"try_into","","",693,[[["self"]],["result"]]],[11,"get_type_id","","",693,[[["self"]],["typeid"]]],[11,"into_any","","",693,[[["box"]],["box",["any"]]]],[11,"as_any","","",693,[[["self"]],["any"]]],[11,"as_any_mut","","",693,[[["self"]],["any"]]],[11,"from","","",694,[[["t"]],["t"]]],[11,"into","","",694,[[["self"]],["u"]]],[11,"to_owned","","",694,[[["self"]],["t"]]],[11,"clone_into","","",694,N],[11,"try_from","","",694,[[["u"]],["result"]]],[11,"borrow","","",694,[[["self"]],["t"]]],[11,"borrow_mut","","",694,[[["self"]],["t"]]],[11,"try_into","","",694,[[["self"]],["result"]]],[11,"get_type_id","","",694,[[["self"]],["typeid"]]],[11,"into_any","","",694,[[["box"]],["box",["any"]]]],[11,"as_any","","",694,[[["self"]],["any"]]],[11,"as_any_mut","","",694,[[["self"]],["any"]]],[11,"from","","",695,[[["t"]],["t"]]],[11,"into","","",695,[[["self"]],["u"]]],[11,"try_from","","",695,[[["u"]],["result"]]],[11,"borrow","","",695,[[["self"]],["t"]]],[11,"borrow_mut","","",695,[[["self"]],["t"]]],[11,"try_into","","",695,[[["self"]],["result"]]],[11,"get_type_id","","",695,[[["self"]],["typeid"]]],[11,"into_any","","",695,[[["box"]],["box",["any"]]]],[11,"as_any","","",695,[[["self"]],["any"]]],[11,"as_any_mut","","",695,[[["self"]],["any"]]],[11,"from","","",696,[[["t"]],["t"]]],[11,"into","","",696,[[["self"]],["u"]]],[11,"try_from","","",696,[[["u"]],["result"]]],[11,"borrow","","",696,[[["self"]],["t"]]],[11,"borrow_mut","","",696,[[["self"]],["t"]]],[11,"try_into","","",696,[[["self"]],["result"]]],[11,"get_type_id","","",696,[[["self"]],["typeid"]]],[11,"into_any","","",696,[[["box"]],["box",["any"]]]],[11,"as_any","","",696,[[["self"]],["any"]]],[11,"as_any_mut","","",696,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",854,[[["t"]],["t"]]],[11,"into","","",854,[[["self"]],["u"]]],[11,"to_owned","","",854,[[["self"]],["t"]]],[11,"clone_into","","",854,N],[11,"try_from","","",854,[[["u"]],["result"]]],[11,"borrow","","",854,[[["self"]],["t"]]],[11,"borrow_mut","","",854,[[["self"]],["t"]]],[11,"try_into","","",854,[[["self"]],["result"]]],[11,"get_type_id","","",854,[[["self"]],["typeid"]]],[11,"handle","","",854,N],[11,"into_any","","",854,[[["box"]],["box",["any"]]]],[11,"as_any","","",854,[[["self"]],["any"]]],[11,"as_any_mut","","",854,[[["self"]],["any"]]],[11,"from","","",698,[[["t"]],["t"]]],[11,"into","","",698,[[["self"]],["u"]]],[11,"to_owned","","",698,[[["self"]],["t"]]],[11,"clone_into","","",698,N],[11,"try_from","","",698,[[["u"]],["result"]]],[11,"borrow","","",698,[[["self"]],["t"]]],[11,"borrow_mut","","",698,[[["self"]],["t"]]],[11,"try_into","","",698,[[["self"]],["result"]]],[11,"get_type_id","","",698,[[["self"]],["typeid"]]],[11,"into_any","","",698,[[["box"]],["box",["any"]]]],[11,"as_any","","",698,[[["self"]],["any"]]],[11,"as_any_mut","","",698,[[["self"]],["any"]]],[11,"from","","",699,[[["t"]],["t"]]],[11,"into","","",699,[[["self"]],["u"]]],[11,"try_from","","",699,[[["u"]],["result"]]],[11,"borrow","","",699,[[["self"]],["t"]]],[11,"borrow_mut","","",699,[[["self"]],["t"]]],[11,"try_into","","",699,[[["self"]],["result"]]],[11,"get_type_id","","",699,[[["self"]],["typeid"]]],[11,"into_any","","",699,[[["box"]],["box",["any"]]]],[11,"as_any","","",699,[[["self"]],["any"]]],[11,"as_any_mut","","",699,[[["self"]],["any"]]],[11,"from","","",700,[[["t"]],["t"]]],[11,"into","","",700,[[["self"]],["u"]]],[11,"try_from","","",700,[[["u"]],["result"]]],[11,"borrow","","",700,[[["self"]],["t"]]],[11,"borrow_mut","","",700,[[["self"]],["t"]]],[11,"try_into","","",700,[[["self"]],["result"]]],[11,"get_type_id","","",700,[[["self"]],["typeid"]]],[11,"into_any","","",700,[[["box"]],["box",["any"]]]],[11,"as_any","","",700,[[["self"]],["any"]]],[11,"as_any_mut","","",700,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",855,[[["t"]],["t"]]],[11,"into","","",855,[[["self"]],["u"]]],[11,"to_owned","","",855,[[["self"]],["t"]]],[11,"clone_into","","",855,N],[11,"try_from","","",855,[[["u"]],["result"]]],[11,"borrow","","",855,[[["self"]],["t"]]],[11,"borrow_mut","","",855,[[["self"]],["t"]]],[11,"try_into","","",855,[[["self"]],["result"]]],[11,"get_type_id","","",855,[[["self"]],["typeid"]]],[11,"handle","","",855,N],[11,"into_any","","",855,[[["box"]],["box",["any"]]]],[11,"as_any","","",855,[[["self"]],["any"]]],[11,"as_any_mut","","",855,[[["self"]],["any"]]],[11,"from","","",702,[[["t"]],["t"]]],[11,"into","","",702,[[["self"]],["u"]]],[11,"to_owned","","",702,[[["self"]],["t"]]],[11,"clone_into","","",702,N],[11,"try_from","","",702,[[["u"]],["result"]]],[11,"borrow","","",702,[[["self"]],["t"]]],[11,"borrow_mut","","",702,[[["self"]],["t"]]],[11,"try_into","","",702,[[["self"]],["result"]]],[11,"get_type_id","","",702,[[["self"]],["typeid"]]],[11,"into_any","","",702,[[["box"]],["box",["any"]]]],[11,"as_any","","",702,[[["self"]],["any"]]],[11,"as_any_mut","","",702,[[["self"]],["any"]]],[11,"from","","",703,[[["t"]],["t"]]],[11,"into","","",703,[[["self"]],["u"]]],[11,"try_from","","",703,[[["u"]],["result"]]],[11,"borrow","","",703,[[["self"]],["t"]]],[11,"borrow_mut","","",703,[[["self"]],["t"]]],[11,"try_into","","",703,[[["self"]],["result"]]],[11,"get_type_id","","",703,[[["self"]],["typeid"]]],[11,"into_any","","",703,[[["box"]],["box",["any"]]]],[11,"as_any","","",703,[[["self"]],["any"]]],[11,"as_any_mut","","",703,[[["self"]],["any"]]],[11,"from","","",704,[[["t"]],["t"]]],[11,"into","","",704,[[["self"]],["u"]]],[11,"try_from","","",704,[[["u"]],["result"]]],[11,"borrow","","",704,[[["self"]],["t"]]],[11,"borrow_mut","","",704,[[["self"]],["t"]]],[11,"try_into","","",704,[[["self"]],["result"]]],[11,"get_type_id","","",704,[[["self"]],["typeid"]]],[11,"into_any","","",704,[[["box"]],["box",["any"]]]],[11,"as_any","","",704,[[["self"]],["any"]]],[11,"as_any_mut","","",704,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["t"]],["t"]]],[11,"into","","",856,[[["self"]],["u"]]],[11,"to_owned","","",856,[[["self"]],["t"]]],[11,"clone_into","","",856,N],[11,"try_from","","",856,[[["u"]],["result"]]],[11,"borrow","","",856,[[["self"]],["t"]]],[11,"borrow_mut","","",856,[[["self"]],["t"]]],[11,"try_into","","",856,[[["self"]],["result"]]],[11,"get_type_id","","",856,[[["self"]],["typeid"]]],[11,"into_any","","",856,[[["box"]],["box",["any"]]]],[11,"as_any","","",856,[[["self"]],["any"]]],[11,"as_any_mut","","",856,[[["self"]],["any"]]],[11,"from","","",857,[[["t"]],["t"]]],[11,"into","","",857,[[["self"]],["u"]]],[11,"to_owned","","",857,[[["self"]],["t"]]],[11,"clone_into","","",857,N],[11,"try_from","","",857,[[["u"]],["result"]]],[11,"borrow","","",857,[[["self"]],["t"]]],[11,"borrow_mut","","",857,[[["self"]],["t"]]],[11,"try_into","","",857,[[["self"]],["result"]]],[11,"get_type_id","","",857,[[["self"]],["typeid"]]],[11,"handle","","",857,N],[11,"into_any","","",857,[[["box"]],["box",["any"]]]],[11,"as_any","","",857,[[["self"]],["any"]]],[11,"as_any_mut","","",857,[[["self"]],["any"]]],[11,"from","","",706,[[["t"]],["t"]]],[11,"into","","",706,[[["self"]],["u"]]],[11,"to_owned","","",706,[[["self"]],["t"]]],[11,"clone_into","","",706,N],[11,"try_from","","",706,[[["u"]],["result"]]],[11,"borrow","","",706,[[["self"]],["t"]]],[11,"borrow_mut","","",706,[[["self"]],["t"]]],[11,"try_into","","",706,[[["self"]],["result"]]],[11,"get_type_id","","",706,[[["self"]],["typeid"]]],[11,"into_any","","",706,[[["box"]],["box",["any"]]]],[11,"as_any","","",706,[[["self"]],["any"]]],[11,"as_any_mut","","",706,[[["self"]],["any"]]],[11,"from","","",707,[[["t"]],["t"]]],[11,"into","","",707,[[["self"]],["u"]]],[11,"to_owned","","",707,[[["self"]],["t"]]],[11,"clone_into","","",707,N],[11,"try_from","","",707,[[["u"]],["result"]]],[11,"borrow","","",707,[[["self"]],["t"]]],[11,"borrow_mut","","",707,[[["self"]],["t"]]],[11,"try_into","","",707,[[["self"]],["result"]]],[11,"get_type_id","","",707,[[["self"]],["typeid"]]],[11,"into_any","","",707,[[["box"]],["box",["any"]]]],[11,"as_any","","",707,[[["self"]],["any"]]],[11,"as_any_mut","","",707,[[["self"]],["any"]]],[11,"from","","",708,[[["t"]],["t"]]],[11,"into","","",708,[[["self"]],["u"]]],[11,"to_owned","","",708,[[["self"]],["t"]]],[11,"clone_into","","",708,N],[11,"try_from","","",708,[[["u"]],["result"]]],[11,"borrow","","",708,[[["self"]],["t"]]],[11,"borrow_mut","","",708,[[["self"]],["t"]]],[11,"try_into","","",708,[[["self"]],["result"]]],[11,"get_type_id","","",708,[[["self"]],["typeid"]]],[11,"into_any","","",708,[[["box"]],["box",["any"]]]],[11,"as_any","","",708,[[["self"]],["any"]]],[11,"as_any_mut","","",708,[[["self"]],["any"]]],[11,"from","","",709,[[["t"]],["t"]]],[11,"into","","",709,[[["self"]],["u"]]],[11,"try_from","","",709,[[["u"]],["result"]]],[11,"borrow","","",709,[[["self"]],["t"]]],[11,"borrow_mut","","",709,[[["self"]],["t"]]],[11,"try_into","","",709,[[["self"]],["result"]]],[11,"get_type_id","","",709,[[["self"]],["typeid"]]],[11,"into_any","","",709,[[["box"]],["box",["any"]]]],[11,"as_any","","",709,[[["self"]],["any"]]],[11,"as_any_mut","","",709,[[["self"]],["any"]]],[11,"from","","",858,[[["t"]],["t"]]],[11,"into","","",858,[[["self"]],["u"]]],[11,"try_from","","",858,[[["u"]],["result"]]],[11,"borrow","","",858,[[["self"]],["t"]]],[11,"borrow_mut","","",858,[[["self"]],["t"]]],[11,"try_into","","",858,[[["self"]],["result"]]],[11,"get_type_id","","",858,[[["self"]],["typeid"]]],[11,"into_any","","",858,[[["box"]],["box",["any"]]]],[11,"as_any","","",858,[[["self"]],["any"]]],[11,"as_any_mut","","",858,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",859,[[["t"]],["t"]]],[11,"into","","",859,[[["self"]],["u"]]],[11,"to_owned","","",859,[[["self"]],["t"]]],[11,"clone_into","","",859,N],[11,"try_from","","",859,[[["u"]],["result"]]],[11,"borrow","","",859,[[["self"]],["t"]]],[11,"borrow_mut","","",859,[[["self"]],["t"]]],[11,"try_into","","",859,[[["self"]],["result"]]],[11,"get_type_id","","",859,[[["self"]],["typeid"]]],[11,"handle","","",859,N],[11,"into_any","","",859,[[["box"]],["box",["any"]]]],[11,"as_any","","",859,[[["self"]],["any"]]],[11,"as_any_mut","","",859,[[["self"]],["any"]]],[11,"from","","",711,[[["t"]],["t"]]],[11,"into","","",711,[[["self"]],["u"]]],[11,"to_owned","","",711,[[["self"]],["t"]]],[11,"clone_into","","",711,N],[11,"try_from","","",711,[[["u"]],["result"]]],[11,"borrow","","",711,[[["self"]],["t"]]],[11,"borrow_mut","","",711,[[["self"]],["t"]]],[11,"try_into","","",711,[[["self"]],["result"]]],[11,"get_type_id","","",711,[[["self"]],["typeid"]]],[11,"into_any","","",711,[[["box"]],["box",["any"]]]],[11,"as_any","","",711,[[["self"]],["any"]]],[11,"as_any_mut","","",711,[[["self"]],["any"]]],[11,"from","","",712,[[["t"]],["t"]]],[11,"into","","",712,[[["self"]],["u"]]],[11,"try_from","","",712,[[["u"]],["result"]]],[11,"borrow","","",712,[[["self"]],["t"]]],[11,"borrow_mut","","",712,[[["self"]],["t"]]],[11,"try_into","","",712,[[["self"]],["result"]]],[11,"get_type_id","","",712,[[["self"]],["typeid"]]],[11,"into_any","","",712,[[["box"]],["box",["any"]]]],[11,"as_any","","",712,[[["self"]],["any"]]],[11,"as_any_mut","","",712,[[["self"]],["any"]]],[11,"from","","",713,[[["t"]],["t"]]],[11,"into","","",713,[[["self"]],["u"]]],[11,"try_from","","",713,[[["u"]],["result"]]],[11,"borrow","","",713,[[["self"]],["t"]]],[11,"borrow_mut","","",713,[[["self"]],["t"]]],[11,"try_into","","",713,[[["self"]],["result"]]],[11,"get_type_id","","",713,[[["self"]],["typeid"]]],[11,"into_any","","",713,[[["box"]],["box",["any"]]]],[11,"as_any","","",713,[[["self"]],["any"]]],[11,"as_any_mut","","",713,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",860,[[["t"]],["t"]]],[11,"into","","",860,[[["self"]],["u"]]],[11,"to_owned","","",860,[[["self"]],["t"]]],[11,"clone_into","","",860,N],[11,"try_from","","",860,[[["u"]],["result"]]],[11,"borrow","","",860,[[["self"]],["t"]]],[11,"borrow_mut","","",860,[[["self"]],["t"]]],[11,"try_into","","",860,[[["self"]],["result"]]],[11,"get_type_id","","",860,[[["self"]],["typeid"]]],[11,"handle","","",860,N],[11,"into_any","","",860,[[["box"]],["box",["any"]]]],[11,"as_any","","",860,[[["self"]],["any"]]],[11,"as_any_mut","","",860,[[["self"]],["any"]]],[11,"from","","",715,[[["t"]],["t"]]],[11,"into","","",715,[[["self"]],["u"]]],[11,"to_owned","","",715,[[["self"]],["t"]]],[11,"clone_into","","",715,N],[11,"try_from","","",715,[[["u"]],["result"]]],[11,"borrow","","",715,[[["self"]],["t"]]],[11,"borrow_mut","","",715,[[["self"]],["t"]]],[11,"try_into","","",715,[[["self"]],["result"]]],[11,"get_type_id","","",715,[[["self"]],["typeid"]]],[11,"into_any","","",715,[[["box"]],["box",["any"]]]],[11,"as_any","","",715,[[["self"]],["any"]]],[11,"as_any_mut","","",715,[[["self"]],["any"]]],[11,"from","","",716,[[["t"]],["t"]]],[11,"into","","",716,[[["self"]],["u"]]],[11,"to_owned","","",716,[[["self"]],["t"]]],[11,"clone_into","","",716,N],[11,"try_from","","",716,[[["u"]],["result"]]],[11,"borrow","","",716,[[["self"]],["t"]]],[11,"borrow_mut","","",716,[[["self"]],["t"]]],[11,"try_into","","",716,[[["self"]],["result"]]],[11,"get_type_id","","",716,[[["self"]],["typeid"]]],[11,"into_any","","",716,[[["box"]],["box",["any"]]]],[11,"as_any","","",716,[[["self"]],["any"]]],[11,"as_any_mut","","",716,[[["self"]],["any"]]],[11,"from","","",717,[[["t"]],["t"]]],[11,"into","","",717,[[["self"]],["u"]]],[11,"try_from","","",717,[[["u"]],["result"]]],[11,"borrow","","",717,[[["self"]],["t"]]],[11,"borrow_mut","","",717,[[["self"]],["t"]]],[11,"try_into","","",717,[[["self"]],["result"]]],[11,"get_type_id","","",717,[[["self"]],["typeid"]]],[11,"into_any","","",717,[[["box"]],["box",["any"]]]],[11,"as_any","","",717,[[["self"]],["any"]]],[11,"as_any_mut","","",717,[[["self"]],["any"]]],[11,"from","","",718,[[["t"]],["t"]]],[11,"into","","",718,[[["self"]],["u"]]],[11,"try_from","","",718,[[["u"]],["result"]]],[11,"borrow","","",718,[[["self"]],["t"]]],[11,"borrow_mut","","",718,[[["self"]],["t"]]],[11,"try_into","","",718,[[["self"]],["result"]]],[11,"get_type_id","","",718,[[["self"]],["typeid"]]],[11,"into_any","","",718,[[["box"]],["box",["any"]]]],[11,"as_any","","",718,[[["self"]],["any"]]],[11,"as_any_mut","","",718,[[["self"]],["any"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",861,[[["t"]],["t"]]],[11,"into","","",861,[[["self"]],["u"]]],[11,"to_owned","","",861,[[["self"]],["t"]]],[11,"clone_into","","",861,N],[11,"try_from","","",861,[[["u"]],["result"]]],[11,"borrow","","",861,[[["self"]],["t"]]],[11,"borrow_mut","","",861,[[["self"]],["t"]]],[11,"try_into","","",861,[[["self"]],["result"]]],[11,"get_type_id","","",861,[[["self"]],["typeid"]]],[11,"handle","","",861,N],[11,"into_any","","",861,[[["box"]],["box",["any"]]]],[11,"as_any","","",861,[[["self"]],["any"]]],[11,"as_any_mut","","",861,[[["self"]],["any"]]],[11,"from","","",720,[[["t"]],["t"]]],[11,"into","","",720,[[["self"]],["u"]]],[11,"to_owned","","",720,[[["self"]],["t"]]],[11,"clone_into","","",720,N],[11,"try_from","","",720,[[["u"]],["result"]]],[11,"borrow","","",720,[[["self"]],["t"]]],[11,"borrow_mut","","",720,[[["self"]],["t"]]],[11,"try_into","","",720,[[["self"]],["result"]]],[11,"get_type_id","","",720,[[["self"]],["typeid"]]],[11,"into_any","","",720,[[["box"]],["box",["any"]]]],[11,"as_any","","",720,[[["self"]],["any"]]],[11,"as_any_mut","","",720,[[["self"]],["any"]]],[11,"from","","",721,[[["t"]],["t"]]],[11,"into","","",721,[[["self"]],["u"]]],[11,"try_from","","",721,[[["u"]],["result"]]],[11,"borrow","","",721,[[["self"]],["t"]]],[11,"borrow_mut","","",721,[[["self"]],["t"]]],[11,"try_into","","",721,[[["self"]],["result"]]],[11,"get_type_id","","",721,[[["self"]],["typeid"]]],[11,"into_any","","",721,[[["box"]],["box",["any"]]]],[11,"as_any","","",721,[[["self"]],["any"]]],[11,"as_any_mut","","",721,[[["self"]],["any"]]],[11,"from","","",722,[[["t"]],["t"]]],[11,"into","","",722,[[["self"]],["u"]]],[11,"try_from","","",722,[[["u"]],["result"]]],[11,"borrow","","",722,[[["self"]],["t"]]],[11,"borrow_mut","","",722,[[["self"]],["t"]]],[11,"try_into","","",722,[[["self"]],["result"]]],[11,"get_type_id","","",722,[[["self"]],["typeid"]]],[11,"into_any","","",722,[[["box"]],["box",["any"]]]],[11,"as_any","","",722,[[["self"]],["any"]]],[11,"as_any_mut","","",722,[[["self"]],["any"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",862,[[["t"]],["t"]]],[11,"into","","",862,[[["self"]],["u"]]],[11,"to_owned","","",862,[[["self"]],["t"]]],[11,"clone_into","","",862,N],[11,"try_from","","",862,[[["u"]],["result"]]],[11,"borrow","","",862,[[["self"]],["t"]]],[11,"borrow_mut","","",862,[[["self"]],["t"]]],[11,"try_into","","",862,[[["self"]],["result"]]],[11,"get_type_id","","",862,[[["self"]],["typeid"]]],[11,"handle","","",862,N],[11,"into_any","","",862,[[["box"]],["box",["any"]]]],[11,"as_any","","",862,[[["self"]],["any"]]],[11,"as_any_mut","","",862,[[["self"]],["any"]]],[11,"from","","",724,[[["t"]],["t"]]],[11,"into","","",724,[[["self"]],["u"]]],[11,"to_owned","","",724,[[["self"]],["t"]]],[11,"clone_into","","",724,N],[11,"try_from","","",724,[[["u"]],["result"]]],[11,"borrow","","",724,[[["self"]],["t"]]],[11,"borrow_mut","","",724,[[["self"]],["t"]]],[11,"try_into","","",724,[[["self"]],["result"]]],[11,"get_type_id","","",724,[[["self"]],["typeid"]]],[11,"into_any","","",724,[[["box"]],["box",["any"]]]],[11,"as_any","","",724,[[["self"]],["any"]]],[11,"as_any_mut","","",724,[[["self"]],["any"]]],[11,"from","","",725,[[["t"]],["t"]]],[11,"into","","",725,[[["self"]],["u"]]],[11,"try_from","","",725,[[["u"]],["result"]]],[11,"borrow","","",725,[[["self"]],["t"]]],[11,"borrow_mut","","",725,[[["self"]],["t"]]],[11,"try_into","","",725,[[["self"]],["result"]]],[11,"get_type_id","","",725,[[["self"]],["typeid"]]],[11,"into_any","","",725,[[["box"]],["box",["any"]]]],[11,"as_any","","",725,[[["self"]],["any"]]],[11,"as_any_mut","","",725,[[["self"]],["any"]]],[11,"from","","",863,[[["t"]],["t"]]],[11,"into","","",863,[[["self"]],["u"]]],[11,"try_from","","",863,[[["u"]],["result"]]],[11,"borrow","","",863,[[["self"]],["t"]]],[11,"borrow_mut","","",863,[[["self"]],["t"]]],[11,"try_into","","",863,[[["self"]],["result"]]],[11,"get_type_id","","",863,[[["self"]],["typeid"]]],[11,"into_any","","",863,[[["box"]],["box",["any"]]]],[11,"as_any","","",863,[[["self"]],["any"]]],[11,"as_any_mut","","",863,[[["self"]],["any"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",864,[[["t"]],["t"]]],[11,"into","","",864,[[["self"]],["u"]]],[11,"to_owned","","",864,[[["self"]],["t"]]],[11,"clone_into","","",864,N],[11,"try_from","","",864,[[["u"]],["result"]]],[11,"borrow","","",864,[[["self"]],["t"]]],[11,"borrow_mut","","",864,[[["self"]],["t"]]],[11,"try_into","","",864,[[["self"]],["result"]]],[11,"get_type_id","","",864,[[["self"]],["typeid"]]],[11,"handle","","",864,N],[11,"into_any","","",864,[[["box"]],["box",["any"]]]],[11,"as_any","","",864,[[["self"]],["any"]]],[11,"as_any_mut","","",864,[[["self"]],["any"]]],[11,"from","","",726,[[["t"]],["t"]]],[11,"into","","",726,[[["self"]],["u"]]],[11,"to_owned","","",726,[[["self"]],["t"]]],[11,"clone_into","","",726,N],[11,"try_from","","",726,[[["u"]],["result"]]],[11,"borrow","","",726,[[["self"]],["t"]]],[11,"borrow_mut","","",726,[[["self"]],["t"]]],[11,"try_into","","",726,[[["self"]],["result"]]],[11,"get_type_id","","",726,[[["self"]],["typeid"]]],[11,"into_any","","",726,[[["box"]],["box",["any"]]]],[11,"as_any","","",726,[[["self"]],["any"]]],[11,"as_any_mut","","",726,[[["self"]],["any"]]],[11,"from","","",727,[[["t"]],["t"]]],[11,"into","","",727,[[["self"]],["u"]]],[11,"try_from","","",727,[[["u"]],["result"]]],[11,"borrow","","",727,[[["self"]],["t"]]],[11,"borrow_mut","","",727,[[["self"]],["t"]]],[11,"try_into","","",727,[[["self"]],["result"]]],[11,"get_type_id","","",727,[[["self"]],["typeid"]]],[11,"into_any","","",727,[[["box"]],["box",["any"]]]],[11,"as_any","","",727,[[["self"]],["any"]]],[11,"as_any_mut","","",727,[[["self"]],["any"]]],[11,"from","","",865,[[["t"]],["t"]]],[11,"into","","",865,[[["self"]],["u"]]],[11,"try_from","","",865,[[["u"]],["result"]]],[11,"borrow","","",865,[[["self"]],["t"]]],[11,"borrow_mut","","",865,[[["self"]],["t"]]],[11,"try_into","","",865,[[["self"]],["result"]]],[11,"get_type_id","","",865,[[["self"]],["typeid"]]],[11,"into_any","","",865,[[["box"]],["box",["any"]]]],[11,"as_any","","",865,[[["self"]],["any"]]],[11,"as_any_mut","","",865,[[["self"]],["any"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",866,[[["t"]],["t"]]],[11,"into","","",866,[[["self"]],["u"]]],[11,"to_owned","","",866,[[["self"]],["t"]]],[11,"clone_into","","",866,N],[11,"try_from","","",866,[[["u"]],["result"]]],[11,"borrow","","",866,[[["self"]],["t"]]],[11,"borrow_mut","","",866,[[["self"]],["t"]]],[11,"try_into","","",866,[[["self"]],["result"]]],[11,"get_type_id","","",866,[[["self"]],["typeid"]]],[11,"handle","","",866,N],[11,"into_any","","",866,[[["box"]],["box",["any"]]]],[11,"as_any","","",866,[[["self"]],["any"]]],[11,"as_any_mut","","",866,[[["self"]],["any"]]],[11,"from","","",728,[[["t"]],["t"]]],[11,"into","","",728,[[["self"]],["u"]]],[11,"to_owned","","",728,[[["self"]],["t"]]],[11,"clone_into","","",728,N],[11,"try_from","","",728,[[["u"]],["result"]]],[11,"borrow","","",728,[[["self"]],["t"]]],[11,"borrow_mut","","",728,[[["self"]],["t"]]],[11,"try_into","","",728,[[["self"]],["result"]]],[11,"get_type_id","","",728,[[["self"]],["typeid"]]],[11,"into_any","","",728,[[["box"]],["box",["any"]]]],[11,"as_any","","",728,[[["self"]],["any"]]],[11,"as_any_mut","","",728,[[["self"]],["any"]]],[11,"from","","",729,[[["t"]],["t"]]],[11,"into","","",729,[[["self"]],["u"]]],[11,"try_from","","",729,[[["u"]],["result"]]],[11,"borrow","","",729,[[["self"]],["t"]]],[11,"borrow_mut","","",729,[[["self"]],["t"]]],[11,"try_into","","",729,[[["self"]],["result"]]],[11,"get_type_id","","",729,[[["self"]],["typeid"]]],[11,"into_any","","",729,[[["box"]],["box",["any"]]]],[11,"as_any","","",729,[[["self"]],["any"]]],[11,"as_any_mut","","",729,[[["self"]],["any"]]],[11,"from","","",867,[[["t"]],["t"]]],[11,"into","","",867,[[["self"]],["u"]]],[11,"try_from","","",867,[[["u"]],["result"]]],[11,"borrow","","",867,[[["self"]],["t"]]],[11,"borrow_mut","","",867,[[["self"]],["t"]]],[11,"try_into","","",867,[[["self"]],["result"]]],[11,"get_type_id","","",867,[[["self"]],["typeid"]]],[11,"into_any","","",867,[[["box"]],["box",["any"]]]],[11,"as_any","","",867,[[["self"]],["any"]]],[11,"as_any_mut","","",867,[[["self"]],["any"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",868,[[["t"]],["t"]]],[11,"into","","",868,[[["self"]],["u"]]],[11,"to_owned","","",868,[[["self"]],["t"]]],[11,"clone_into","","",868,N],[11,"try_from","","",868,[[["u"]],["result"]]],[11,"borrow","","",868,[[["self"]],["t"]]],[11,"borrow_mut","","",868,[[["self"]],["t"]]],[11,"try_into","","",868,[[["self"]],["result"]]],[11,"get_type_id","","",868,[[["self"]],["typeid"]]],[11,"handle","","",868,N],[11,"into_any","","",868,[[["box"]],["box",["any"]]]],[11,"as_any","","",868,[[["self"]],["any"]]],[11,"as_any_mut","","",868,[[["self"]],["any"]]],[11,"from","","",731,[[["t"]],["t"]]],[11,"into","","",731,[[["self"]],["u"]]],[11,"to_owned","","",731,[[["self"]],["t"]]],[11,"clone_into","","",731,N],[11,"try_from","","",731,[[["u"]],["result"]]],[11,"borrow","","",731,[[["self"]],["t"]]],[11,"borrow_mut","","",731,[[["self"]],["t"]]],[11,"try_into","","",731,[[["self"]],["result"]]],[11,"get_type_id","","",731,[[["self"]],["typeid"]]],[11,"into_any","","",731,[[["box"]],["box",["any"]]]],[11,"as_any","","",731,[[["self"]],["any"]]],[11,"as_any_mut","","",731,[[["self"]],["any"]]],[11,"from","","",732,[[["t"]],["t"]]],[11,"into","","",732,[[["self"]],["u"]]],[11,"try_from","","",732,[[["u"]],["result"]]],[11,"borrow","","",732,[[["self"]],["t"]]],[11,"borrow_mut","","",732,[[["self"]],["t"]]],[11,"try_into","","",732,[[["self"]],["result"]]],[11,"get_type_id","","",732,[[["self"]],["typeid"]]],[11,"into_any","","",732,[[["box"]],["box",["any"]]]],[11,"as_any","","",732,[[["self"]],["any"]]],[11,"as_any_mut","","",732,[[["self"]],["any"]]],[11,"from","","",869,[[["t"]],["t"]]],[11,"into","","",869,[[["self"]],["u"]]],[11,"try_from","","",869,[[["u"]],["result"]]],[11,"borrow","","",869,[[["self"]],["t"]]],[11,"borrow_mut","","",869,[[["self"]],["t"]]],[11,"try_into","","",869,[[["self"]],["result"]]],[11,"get_type_id","","",869,[[["self"]],["typeid"]]],[11,"into_any","","",869,[[["box"]],["box",["any"]]]],[11,"as_any","","",869,[[["self"]],["any"]]],[11,"as_any_mut","","",869,[[["self"]],["any"]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"],["capability"]],["bool"]]],[11,"eq","","",1,[[["self"],["presentmethod"]],["bool"]]],[11,"eq","","",2,[[["self"],["error"]],["bool"]]],[11,"eq","","",15,[[["self"],["zwpfullscreenshellv1"]],["bool"]]],[11,"ne","","",15,[[["self"],["zwpfullscreenshellv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",734,[[["self"],["zwpfullscreenshellmodefeedbackv1"]],["bool"]]],[11,"ne","","",734,[[["self"],["zwpfullscreenshellmodefeedbackv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",8,[[["self"],["capability"]],["bool"]]],[11,"eq","","",9,[[["self"],["presentmethod"]],["bool"]]],[11,"eq","","",10,[[["self"],["error"]],["bool"]]],[11,"eq","","",16,[[["self"],["zwpfullscreenshellv1"]],["bool"]]],[11,"ne","","",16,[[["self"],["zwpfullscreenshellv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["self"],["zwpfullscreenshellmodefeedbackv1"]],["bool"]]],[11,"ne","","",17,[[["self"],["zwpfullscreenshellmodefeedbackv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",24,[[["self"],["zwpidleinhibitmanagerv1"]],["bool"]]],[11,"ne","","",24,[[["self"],["zwpidleinhibitmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",25,[[["self"],["zwpidleinhibitorv1"]],["bool"]]],[11,"ne","","",25,[[["self"],["zwpidleinhibitorv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",739,[[["self"],["zwpidleinhibitmanagerv1"]],["bool"]]],[11,"ne","","",739,[[["self"],["zwpidleinhibitmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",741,[[["self"],["zwpidleinhibitorv1"]],["bool"]]],[11,"ne","","",741,[[["self"],["zwpidleinhibitorv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",43,[[["self"],["zwpinputmethodcontextv1"]],["bool"]]],[11,"ne","","",43,[[["self"],["zwpinputmethodcontextv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",743,[[["self"],["zwpinputmethodv1"]],["bool"]]],[11,"ne","","",743,[[["self"],["zwpinputmethodv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["self"],["zwpinputpanelv1"]],["bool"]]],[11,"ne","","",44,[[["self"],["zwpinputpanelv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",32,[[["self"],["position"]],["bool"]]],[11,"eq","","",45,[[["self"],["zwpinputpanelsurfacev1"]],["bool"]]],[11,"ne","","",45,[[["self"],["zwpinputpanelsurfacev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",46,[[["self"],["zwpinputmethodcontextv1"]],["bool"]]],[11,"ne","","",46,[[["self"],["zwpinputmethodcontextv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",47,[[["self"],["zwpinputmethodv1"]],["bool"]]],[11,"ne","","",47,[[["self"],["zwpinputmethodv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",748,[[["self"],["zwpinputpanelv1"]],["bool"]]],[11,"ne","","",748,[[["self"],["zwpinputpanelv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",40,[[["self"],["position"]],["bool"]]],[11,"eq","","",750,[[["self"],["zwpinputpanelsurfacev1"]],["bool"]]],[11,"ne","","",750,[[["self"],["zwpinputpanelsurfacev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",57,[[["self"],["zwpinputtimestampsmanagerv1"]],["bool"]]],[11,"ne","","",57,[[["self"],["zwpinputtimestampsmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",58,[[["self"],["zwpinputtimestampsv1"]],["bool"]]],[11,"ne","","",58,[[["self"],["zwpinputtimestampsv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",753,[[["self"],["zwpinputtimestampsmanagerv1"]],["bool"]]],[11,"ne","","",753,[[["self"],["zwpinputtimestampsmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",59,[[["self"],["zwpinputtimestampsv1"]],["bool"]]],[11,"ne","","",59,[[["self"],["zwpinputtimestampsv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",60,[[["self"],["error"]],["bool"]]],[11,"eq","","",71,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"]],["bool"]]],[11,"ne","","",71,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",72,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]],["bool"]]],[11,"ne","","",72,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",65,[[["self"],["error"]],["bool"]]],[11,"eq","","",756,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"]],["bool"]]],[11,"ne","","",756,[[["self"],["zwpkeyboardshortcutsinhibitmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",73,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]],["bool"]]],[11,"ne","","",73,[[["self"],["zwpkeyboardshortcutsinhibitorv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",90,[[["self"],["zwplinuxdmabufv1"]],["bool"]]],[11,"ne","","",90,[[["self"],["zwplinuxdmabufv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",77,[[["self"],["error"]],["bool"]]],[11,"eq","","",78,[[["self"],["flags"]],["bool"]]],[11,"eq","","",91,[[["self"],["zwplinuxbufferparamsv1"]],["bool"]]],[11,"ne","","",91,[[["self"],["zwplinuxbufferparamsv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",92,[[["self"],["zwplinuxdmabufv1"]],["bool"]]],[11,"ne","","",92,[[["self"],["zwplinuxdmabufv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",85,[[["self"],["error"]],["bool"]]],[11,"eq","","",86,[[["self"],["flags"]],["bool"]]],[11,"eq","","",93,[[["self"],["zwplinuxbufferparamsv1"]],["bool"]]],[11,"ne","","",93,[[["self"],["zwplinuxbufferparamsv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",94,[[["self"],["error"]],["bool"]]],[11,"eq","","",107,[[["self"],["zwplinuxexplicitsynchronizationv1"]],["bool"]]],[11,"ne","","",107,[[["self"],["zwplinuxexplicitsynchronizationv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",96,[[["self"],["error"]],["bool"]]],[11,"eq","","",108,[[["self"],["zwplinuxsurfacesynchronizationv1"]],["bool"]]],[11,"ne","","",108,[[["self"],["zwplinuxsurfacesynchronizationv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",760,[[["self"],["zwplinuxbufferreleasev1"]],["bool"]]],[11,"ne","","",760,[[["self"],["zwplinuxbufferreleasev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",100,[[["self"],["error"]],["bool"]]],[11,"eq","","",762,[[["self"],["zwplinuxexplicitsynchronizationv1"]],["bool"]]],[11,"ne","","",762,[[["self"],["zwplinuxexplicitsynchronizationv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",103,[[["self"],["error"]],["bool"]]],[11,"eq","","",764,[[["self"],["zwplinuxsurfacesynchronizationv1"]],["bool"]]],[11,"ne","","",764,[[["self"],["zwplinuxsurfacesynchronizationv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",109,[[["self"],["zwplinuxbufferreleasev1"]],["bool"]]],[11,"ne","","",109,[[["self"],["zwplinuxbufferreleasev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",110,[[["self"],["error"]],["bool"]]],[11,"eq","","",111,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",129,[[["self"],["zwppointerconstraintsv1"]],["bool"]]],[11,"ne","","",129,[[["self"],["zwppointerconstraintsv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",130,[[["self"],["zwplockedpointerv1"]],["bool"]]],[11,"ne","","",130,[[["self"],["zwplockedpointerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["self"],["zwpconfinedpointerv1"]],["bool"]]],[11,"ne","","",131,[[["self"],["zwpconfinedpointerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",119,[[["self"],["error"]],["bool"]]],[11,"eq","","",120,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",768,[[["self"],["zwppointerconstraintsv1"]],["bool"]]],[11,"ne","","",768,[[["self"],["zwppointerconstraintsv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",132,[[["self"],["zwplockedpointerv1"]],["bool"]]],[11,"ne","","",132,[[["self"],["zwplockedpointerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",133,[[["self"],["zwpconfinedpointerv1"]],["bool"]]],[11,"ne","","",133,[[["self"],["zwpconfinedpointerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",149,[[["self"],["zwppointergesturesv1"]],["bool"]]],[11,"ne","","",149,[[["self"],["zwppointergesturesv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",150,[[["self"],["zwppointergestureswipev1"]],["bool"]]],[11,"ne","","",150,[[["self"],["zwppointergestureswipev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",151,[[["self"],["zwppointergesturepinchv1"]],["bool"]]],[11,"ne","","",151,[[["self"],["zwppointergesturepinchv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",771,[[["self"],["zwppointergesturesv1"]],["bool"]]],[11,"ne","","",771,[[["self"],["zwppointergesturesv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",152,[[["self"],["zwppointergestureswipev1"]],["bool"]]],[11,"ne","","",152,[[["self"],["zwppointergestureswipev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",153,[[["self"],["zwppointergesturepinchv1"]],["bool"]]],[11,"ne","","",153,[[["self"],["zwppointergesturepinchv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",175,[[["self"],["zwpprimaryselectiondevicemanagerv1"]],["bool"]]],[11,"ne","","",175,[[["self"],["zwpprimaryselectiondevicemanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",176,[[["self"],["zwpprimaryselectiondevicev1"]],["bool"]]],[11,"ne","","",176,[[["self"],["zwpprimaryselectiondevicev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",177,[[["self"],["zwpprimaryselectionofferv1"]],["bool"]]],[11,"ne","","",177,[[["self"],["zwpprimaryselectionofferv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",178,[[["self"],["zwpprimaryselectionsourcev1"]],["bool"]]],[11,"ne","","",178,[[["self"],["zwpprimaryselectionsourcev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",774,[[["self"],["zwpprimaryselectiondevicemanagerv1"]],["bool"]]],[11,"ne","","",774,[[["self"],["zwpprimaryselectiondevicemanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",179,[[["self"],["zwpprimaryselectiondevicev1"]],["bool"]]],[11,"ne","","",179,[[["self"],["zwpprimaryselectiondevicev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",180,[[["self"],["zwpprimaryselectionofferv1"]],["bool"]]],[11,"ne","","",180,[[["self"],["zwpprimaryselectionofferv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",181,[[["self"],["zwpprimaryselectionsourcev1"]],["bool"]]],[11,"ne","","",181,[[["self"],["zwpprimaryselectionsourcev1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",191,[[["self"],["zwprelativepointermanagerv1"]],["bool"]]],[11,"ne","","",191,[[["self"],["zwprelativepointermanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",192,[[["self"],["zwprelativepointerv1"]],["bool"]]],[11,"ne","","",192,[[["self"],["zwprelativepointerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",777,[[["self"],["zwprelativepointermanagerv1"]],["bool"]]],[11,"ne","","",777,[[["self"],["zwprelativepointermanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",193,[[["self"],["zwprelativepointerv1"]],["bool"]]],[11,"ne","","",193,[[["self"],["zwprelativepointerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",223,[[["self"],["zwptabletmanagerv1"]],["bool"]]],[11,"ne","","",223,[[["self"],["zwptabletmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",224,[[["self"],["zwptabletseatv1"]],["bool"]]],[11,"ne","","",224,[[["self"],["zwptabletseatv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",198,[[["self"],["type"]],["bool"]]],[11,"eq","","",199,[[["self"],["capability"]],["bool"]]],[11,"eq","","",200,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",201,[[["self"],["error"]],["bool"]]],[11,"eq","","",225,[[["self"],["zwptablettoolv1"]],["bool"]]],[11,"ne","","",225,[[["self"],["zwptablettoolv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",226,[[["self"],["zwptabletv1"]],["bool"]]],[11,"ne","","",226,[[["self"],["zwptabletv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",780,[[["self"],["zwptabletmanagerv1"]],["bool"]]],[11,"ne","","",780,[[["self"],["zwptabletmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",227,[[["self"],["zwptabletseatv1"]],["bool"]]],[11,"ne","","",227,[[["self"],["zwptabletseatv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",213,[[["self"],["type"]],["bool"]]],[11,"eq","","",214,[[["self"],["capability"]],["bool"]]],[11,"eq","","",215,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",216,[[["self"],["error"]],["bool"]]],[11,"eq","","",228,[[["self"],["zwptablettoolv1"]],["bool"]]],[11,"ne","","",228,[[["self"],["zwptablettoolv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",229,[[["self"],["zwptabletv1"]],["bool"]]],[11,"ne","","",229,[[["self"],["zwptabletv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",289,[[["self"],["zwptabletmanagerv2"]],["bool"]]],[11,"ne","","",289,[[["self"],["zwptabletmanagerv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",290,[[["self"],["zwptabletseatv2"]],["bool"]]],[11,"ne","","",290,[[["self"],["zwptabletseatv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",234,[[["self"],["type"]],["bool"]]],[11,"eq","","",235,[[["self"],["capability"]],["bool"]]],[11,"eq","","",236,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",237,[[["self"],["error"]],["bool"]]],[11,"eq","","",291,[[["self"],["zwptablettoolv2"]],["bool"]]],[11,"ne","","",291,[[["self"],["zwptablettoolv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",292,[[["self"],["zwptabletv2"]],["bool"]]],[11,"ne","","",292,[[["self"],["zwptabletv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",244,[[["self"],["source"]],["bool"]]],[11,"eq","","",293,[[["self"],["zwptabletpadringv2"]],["bool"]]],[11,"ne","","",293,[[["self"],["zwptabletpadringv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",248,[[["self"],["source"]],["bool"]]],[11,"eq","","",294,[[["self"],["zwptabletpadstripv2"]],["bool"]]],[11,"ne","","",294,[[["self"],["zwptabletpadstripv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",295,[[["self"],["zwptabletpadgroupv2"]],["bool"]]],[11,"ne","","",295,[[["self"],["zwptabletpadgroupv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",255,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",296,[[["self"],["zwptabletpadv2"]],["bool"]]],[11,"ne","","",296,[[["self"],["zwptabletpadv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",783,[[["self"],["zwptabletmanagerv2"]],["bool"]]],[11,"ne","","",783,[[["self"],["zwptabletmanagerv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",297,[[["self"],["zwptabletseatv2"]],["bool"]]],[11,"ne","","",297,[[["self"],["zwptabletseatv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",264,[[["self"],["type"]],["bool"]]],[11,"eq","","",265,[[["self"],["capability"]],["bool"]]],[11,"eq","","",266,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",267,[[["self"],["error"]],["bool"]]],[11,"eq","","",298,[[["self"],["zwptablettoolv2"]],["bool"]]],[11,"ne","","",298,[[["self"],["zwptablettoolv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",299,[[["self"],["zwptabletv2"]],["bool"]]],[11,"ne","","",299,[[["self"],["zwptabletv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",274,[[["self"],["source"]],["bool"]]],[11,"eq","","",300,[[["self"],["zwptabletpadringv2"]],["bool"]]],[11,"ne","","",300,[[["self"],["zwptabletpadringv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",278,[[["self"],["source"]],["bool"]]],[11,"eq","","",301,[[["self"],["zwptabletpadstripv2"]],["bool"]]],[11,"ne","","",301,[[["self"],["zwptabletpadstripv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",302,[[["self"],["zwptabletpadgroupv2"]],["bool"]]],[11,"ne","","",302,[[["self"],["zwptabletpadgroupv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",285,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",303,[[["self"],["zwptabletpadv2"]],["bool"]]],[11,"ne","","",303,[[["self"],["zwptabletpadv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",304,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",305,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",306,[[["self"],["preeditstyle"]],["bool"]]],[11,"eq","","",307,[[["self"],["textdirection"]],["bool"]]],[11,"eq","","",321,[[["self"],["zwptextinputv1"]],["bool"]]],[11,"ne","","",321,[[["self"],["zwptextinputv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",322,[[["self"],["zwptextinputmanagerv1"]],["bool"]]],[11,"ne","","",322,[[["self"],["zwptextinputmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",312,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",313,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",314,[[["self"],["preeditstyle"]],["bool"]]],[11,"eq","","",315,[[["self"],["textdirection"]],["bool"]]],[11,"eq","","",323,[[["self"],["zwptextinputv1"]],["bool"]]],[11,"ne","","",323,[[["self"],["zwptextinputv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",786,[[["self"],["zwptextinputmanagerv1"]],["bool"]]],[11,"ne","","",786,[[["self"],["zwptextinputmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",324,[[["self"],["changecause"]],["bool"]]],[11,"eq","","",337,[[["self"],["contenthint"]],["bool"]]],[11,"ne","","",337,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",325,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",338,[[["self"],["zwptextinputv3"]],["bool"]]],[11,"ne","","",338,[[["self"],["zwptextinputv3"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",339,[[["self"],["zwptextinputmanagerv3"]],["bool"]]],[11,"ne","","",339,[[["self"],["zwptextinputmanagerv3"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",330,[[["self"],["changecause"]],["bool"]]],[11,"eq","","",340,[[["self"],["contenthint"]],["bool"]]],[11,"ne","","",340,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",331,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",341,[[["self"],["zwptextinputv3"]],["bool"]]],[11,"ne","","",341,[[["self"],["zwptextinputv3"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",789,[[["self"],["zwptextinputmanagerv3"]],["bool"]]],[11,"ne","","",789,[[["self"],["zwptextinputmanagerv3"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",355,[[["self"],["zxdgdecorationmanagerv1"]],["bool"]]],[11,"ne","","",355,[[["self"],["zxdgdecorationmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",343,[[["self"],["error"]],["bool"]]],[11,"eq","","",344,[[["self"],["mode"]],["bool"]]],[11,"eq","","",356,[[["self"],["zxdgtopleveldecorationv1"]],["bool"]]],[11,"ne","","",356,[[["self"],["zxdgtopleveldecorationv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",792,[[["self"],["zxdgdecorationmanagerv1"]],["bool"]]],[11,"ne","","",792,[[["self"],["zxdgdecorationmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",350,[[["self"],["error"]],["bool"]]],[11,"eq","","",351,[[["self"],["mode"]],["bool"]]],[11,"eq","","",357,[[["self"],["zxdgtopleveldecorationv1"]],["bool"]]],[11,"ne","","",357,[[["self"],["zxdgtopleveldecorationv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",376,[[["self"],["zxdgexporterv1"]],["bool"]]],[11,"ne","","",376,[[["self"],["zxdgexporterv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",377,[[["self"],["zxdgimporterv1"]],["bool"]]],[11,"ne","","",377,[[["self"],["zxdgimporterv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",378,[[["self"],["zxdgexportedv1"]],["bool"]]],[11,"ne","","",378,[[["self"],["zxdgexportedv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",379,[[["self"],["zxdgimportedv1"]],["bool"]]],[11,"ne","","",379,[[["self"],["zxdgimportedv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",796,[[["self"],["zxdgexporterv1"]],["bool"]]],[11,"ne","","",796,[[["self"],["zxdgexporterv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",798,[[["self"],["zxdgimporterv1"]],["bool"]]],[11,"ne","","",798,[[["self"],["zxdgimporterv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",380,[[["self"],["zxdgexportedv1"]],["bool"]]],[11,"ne","","",380,[[["self"],["zxdgexportedv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",381,[[["self"],["zxdgimportedv1"]],["bool"]]],[11,"ne","","",381,[[["self"],["zxdgimportedv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",400,[[["self"],["zxdgexporterv2"]],["bool"]]],[11,"ne","","",400,[[["self"],["zxdgexporterv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",401,[[["self"],["zxdgimporterv2"]],["bool"]]],[11,"ne","","",401,[[["self"],["zxdgimporterv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",402,[[["self"],["zxdgexportedv2"]],["bool"]]],[11,"ne","","",402,[[["self"],["zxdgexportedv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",403,[[["self"],["zxdgimportedv2"]],["bool"]]],[11,"ne","","",403,[[["self"],["zxdgimportedv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",802,[[["self"],["zxdgexporterv2"]],["bool"]]],[11,"ne","","",802,[[["self"],["zxdgexporterv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",804,[[["self"],["zxdgimporterv2"]],["bool"]]],[11,"ne","","",804,[[["self"],["zxdgimporterv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",404,[[["self"],["zxdgexportedv2"]],["bool"]]],[11,"ne","","",404,[[["self"],["zxdgexportedv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",405,[[["self"],["zxdgimportedv2"]],["bool"]]],[11,"ne","","",405,[[["self"],["zxdgimportedv2"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",415,[[["self"],["zxdgoutputmanagerv1"]],["bool"]]],[11,"ne","","",415,[[["self"],["zxdgoutputmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",416,[[["self"],["zxdgoutputv1"]],["bool"]]],[11,"ne","","",416,[[["self"],["zxdgoutputv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",807,[[["self"],["zxdgoutputmanagerv1"]],["bool"]]],[11,"ne","","",807,[[["self"],["zxdgoutputmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",417,[[["self"],["zxdgoutputv1"]],["bool"]]],[11,"ne","","",417,[[["self"],["zxdgoutputv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",418,[[["self"],["version"]],["bool"]]],[11,"eq","","",419,[[["self"],["error"]],["bool"]]],[11,"eq","","",444,[[["self"],["xdgshell"]],["bool"]]],[11,"ne","","",444,[[["self"],["xdgshell"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",423,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",424,[[["self"],["state"]],["bool"]]],[11,"eq","","",445,[[["self"],["xdgsurface"]],["bool"]]],[11,"ne","","",445,[[["self"],["xdgsurface"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",446,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",446,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",431,[[["self"],["version"]],["bool"]]],[11,"eq","","",432,[[["self"],["error"]],["bool"]]],[11,"eq","","",447,[[["self"],["xdgshell"]],["bool"]]],[11,"ne","","",447,[[["self"],["xdgshell"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",436,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",437,[[["self"],["state"]],["bool"]]],[11,"eq","","",448,[[["self"],["xdgsurface"]],["bool"]]],[11,"ne","","",448,[[["self"],["xdgsurface"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",449,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",449,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",450,[[["self"],["error"]],["bool"]]],[11,"eq","","",489,[[["self"],["zxdgshellv6"]],["bool"]]],[11,"ne","","",489,[[["self"],["zxdgshellv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",454,[[["self"],["error"]],["bool"]]],[11,"eq","","",490,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",490,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",491,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",491,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","","",493,[[["self"],["zxdgpositionerv6"]],["bool"]]],[11,"ne","","",493,[[["self"],["zxdgpositionerv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",456,[[["self"],["error"]],["bool"]]],[11,"eq","","",494,[[["self"],["zxdgsurfacev6"]],["bool"]]],[11,"ne","","",494,[[["self"],["zxdgsurfacev6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",460,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",461,[[["self"],["state"]],["bool"]]],[11,"eq","","",495,[[["self"],["zxdgtoplevelv6"]],["bool"]]],[11,"ne","","",495,[[["self"],["zxdgtoplevelv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",465,[[["self"],["error"]],["bool"]]],[11,"eq","","",496,[[["self"],["zxdgpopupv6"]],["bool"]]],[11,"ne","","",496,[[["self"],["zxdgpopupv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",469,[[["self"],["error"]],["bool"]]],[11,"eq","","",497,[[["self"],["zxdgshellv6"]],["bool"]]],[11,"ne","","",497,[[["self"],["zxdgshellv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",473,[[["self"],["error"]],["bool"]]],[11,"eq","","",498,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",498,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",499,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",499,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","","",810,[[["self"],["zxdgpositionerv6"]],["bool"]]],[11,"ne","","",810,[[["self"],["zxdgpositionerv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",476,[[["self"],["error"]],["bool"]]],[11,"eq","","",501,[[["self"],["zxdgsurfacev6"]],["bool"]]],[11,"ne","","",501,[[["self"],["zxdgsurfacev6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",480,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",481,[[["self"],["state"]],["bool"]]],[11,"eq","","",502,[[["self"],["zxdgtoplevelv6"]],["bool"]]],[11,"ne","","",502,[[["self"],["zxdgtoplevelv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",485,[[["self"],["error"]],["bool"]]],[11,"eq","","",503,[[["self"],["zxdgpopupv6"]],["bool"]]],[11,"ne","","",503,[[["self"],["zxdgpopupv6"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",510,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"]],["bool"]]],[11,"ne","","",510,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",511,[[["self"],["zwpxwaylandkeyboardgrabv1"]],["bool"]]],[11,"ne","","",511,[[["self"],["zwpxwaylandkeyboardgrabv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",814,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"]],["bool"]]],[11,"ne","","",814,[[["self"],["zwpxwaylandkeyboardgrabmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",816,[[["self"],["zwpxwaylandkeyboardgrabv1"]],["bool"]]],[11,"ne","","",816,[[["self"],["zwpxwaylandkeyboardgrabv1"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",533,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"ne","","",533,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",534,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"ne","","",534,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",535,[[["self"],["gtkprimaryselectionoffer"]],["bool"]]],[11,"ne","","",535,[[["self"],["gtkprimaryselectionoffer"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",536,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"ne","","",536,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",819,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"ne","","",819,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",537,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"ne","","",537,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",538,[[["self"],["gtkprimaryselectionoffer"]],["bool"]]],[11,"ne","","",538,[[["self"],["gtkprimaryselectionoffer"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",539,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"ne","","",539,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",565,[[["self"],["zwlrdatacontrolmanagerv1"]],["bool"]]],[11,"ne","","",565,[[["self"],["zwlrdatacontrolmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",541,[[["self"],["error"]],["bool"]]],[11,"eq","","",566,[[["self"],["zwlrdatacontroldevicev1"]],["bool"]]],[11,"ne","","",566,[[["self"],["zwlrdatacontroldevicev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",545,[[["self"],["error"]],["bool"]]],[11,"eq","","",567,[[["self"],["zwlrdatacontrolsourcev1"]],["bool"]]],[11,"ne","","",567,[[["self"],["zwlrdatacontrolsourcev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",568,[[["self"],["zwlrdatacontrolofferv1"]],["bool"]]],[11,"ne","","",568,[[["self"],["zwlrdatacontrolofferv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",822,[[["self"],["zwlrdatacontrolmanagerv1"]],["bool"]]],[11,"ne","","",822,[[["self"],["zwlrdatacontrolmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",554,[[["self"],["error"]],["bool"]]],[11,"eq","","",569,[[["self"],["zwlrdatacontroldevicev1"]],["bool"]]],[11,"ne","","",569,[[["self"],["zwlrdatacontroldevicev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",558,[[["self"],["error"]],["bool"]]],[11,"eq","","",570,[[["self"],["zwlrdatacontrolsourcev1"]],["bool"]]],[11,"ne","","",570,[[["self"],["zwlrdatacontrolsourcev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",571,[[["self"],["zwlrdatacontrolofferv1"]],["bool"]]],[11,"ne","","",571,[[["self"],["zwlrdatacontrolofferv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",585,[[["self"],["zwlrexportdmabufmanagerv1"]],["bool"]]],[11,"ne","","",585,[[["self"],["zwlrexportdmabufmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",573,[[["self"],["flags"]],["bool"]]],[11,"eq","","",574,[[["self"],["cancelreason"]],["bool"]]],[11,"eq","","",586,[[["self"],["zwlrexportdmabufframev1"]],["bool"]]],[11,"ne","","",586,[[["self"],["zwlrexportdmabufframev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",825,[[["self"],["zwlrexportdmabufmanagerv1"]],["bool"]]],[11,"ne","","",825,[[["self"],["zwlrexportdmabufmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",580,[[["self"],["flags"]],["bool"]]],[11,"eq","","",581,[[["self"],["cancelreason"]],["bool"]]],[11,"eq","","",587,[[["self"],["zwlrexportdmabufframev1"]],["bool"]]],[11,"ne","","",587,[[["self"],["zwlrexportdmabufframev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",604,[[["self"],["zwlrforeigntoplevelmanagerv1"]],["bool"]]],[11,"ne","","",604,[[["self"],["zwlrforeigntoplevelmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",591,[[["self"],["state"]],["bool"]]],[11,"eq","","",592,[[["self"],["error"]],["bool"]]],[11,"eq","","",605,[[["self"],["zwlrforeigntoplevelhandlev1"]],["bool"]]],[11,"ne","","",605,[[["self"],["zwlrforeigntoplevelhandlev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",606,[[["self"],["zwlrforeigntoplevelmanagerv1"]],["bool"]]],[11,"ne","","",606,[[["self"],["zwlrforeigntoplevelmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",599,[[["self"],["state"]],["bool"]]],[11,"eq","","",600,[[["self"],["error"]],["bool"]]],[11,"eq","","",607,[[["self"],["zwlrforeigntoplevelhandlev1"]],["bool"]]],[11,"ne","","",607,[[["self"],["zwlrforeigntoplevelhandlev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",619,[[["self"],["zwlrgammacontrolmanagerv1"]],["bool"]]],[11,"ne","","",619,[[["self"],["zwlrgammacontrolmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",609,[[["self"],["error"]],["bool"]]],[11,"eq","","",620,[[["self"],["zwlrgammacontrolv1"]],["bool"]]],[11,"ne","","",620,[[["self"],["zwlrgammacontrolv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",828,[[["self"],["zwlrgammacontrolmanagerv1"]],["bool"]]],[11,"ne","","",828,[[["self"],["zwlrgammacontrolmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",615,[[["self"],["error"]],["bool"]]],[11,"eq","","",621,[[["self"],["zwlrgammacontrolv1"]],["bool"]]],[11,"ne","","",621,[[["self"],["zwlrgammacontrolv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",622,[[["self"],["error"]],["bool"]]],[11,"eq","","",630,[[["self"],["zwlrinputinhibitmanagerv1"]],["bool"]]],[11,"ne","","",630,[[["self"],["zwlrinputinhibitmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",631,[[["self"],["zwlrinputinhibitorv1"]],["bool"]]],[11,"ne","","",631,[[["self"],["zwlrinputinhibitorv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",625,[[["self"],["error"]],["bool"]]],[11,"eq","","",832,[[["self"],["zwlrinputinhibitmanagerv1"]],["bool"]]],[11,"ne","","",832,[[["self"],["zwlrinputinhibitmanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",834,[[["self"],["zwlrinputinhibitorv1"]],["bool"]]],[11,"ne","","",834,[[["self"],["zwlrinputinhibitorv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",632,[[["self"],["error"]],["bool"]]],[11,"eq","","",633,[[["self"],["layer"]],["bool"]]],[11,"eq","","",647,[[["self"],["zwlrlayershellv1"]],["bool"]]],[11,"ne","","",647,[[["self"],["zwlrlayershellv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",635,[[["self"],["error"]],["bool"]]],[11,"eq","","",648,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",648,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",649,[[["self"],["zwlrlayersurfacev1"]],["bool"]]],[11,"ne","","",649,[[["self"],["zwlrlayersurfacev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",639,[[["self"],["error"]],["bool"]]],[11,"eq","","",640,[[["self"],["layer"]],["bool"]]],[11,"eq","","",837,[[["self"],["zwlrlayershellv1"]],["bool"]]],[11,"ne","","",837,[[["self"],["zwlrlayershellv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",643,[[["self"],["error"]],["bool"]]],[11,"eq","","",650,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",650,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",651,[[["self"],["zwlrlayersurfacev1"]],["bool"]]],[11,"ne","","",651,[[["self"],["zwlrlayersurfacev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",663,[[["self"],["zwlrscreencopymanagerv1"]],["bool"]]],[11,"ne","","",663,[[["self"],["zwlrscreencopymanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",653,[[["self"],["error"]],["bool"]]],[11,"eq","","",664,[[["self"],["flags"]],["bool"]]],[11,"ne","","",664,[[["self"],["flags"]],["bool"]]],[11,"eq","","",665,[[["self"],["zwlrscreencopyframev1"]],["bool"]]],[11,"ne","","",665,[[["self"],["zwlrscreencopyframev1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",840,[[["self"],["zwlrscreencopymanagerv1"]],["bool"]]],[11,"ne","","",840,[[["self"],["zwlrscreencopymanagerv1"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",659,[[["self"],["error"]],["bool"]]],[11,"eq","","",666,[[["self"],["flags"]],["bool"]]],[11,"ne","","",666,[[["self"],["flags"]],["bool"]]],[11,"eq","","",667,[[["self"],["zwlrscreencopyframev1"]],["bool"]]],[11,"ne","","",667,[[["self"],["zwlrscreencopyframev1"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation","",668,[[["self"],["error"]],["bool"]]],[11,"eq","","",842,[[["self"],["wppresentation"]],["bool"]]],[11,"ne","","",842,[[["self"],["wppresentation"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation_feedback","",672,[[["self"],["kind"]],["bool"]]],[11,"eq","","",843,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"ne","","",843,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation","",675,[[["self"],["error"]],["bool"]]],[11,"eq","","",845,[[["self"],["wppresentation"]],["bool"]]],[11,"ne","","",845,[[["self"],["wppresentation"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation_feedback","",679,[[["self"],["kind"]],["bool"]]],[11,"eq","","",846,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"ne","","",846,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_wm_base","",681,[[["self"],["error"]],["bool"]]],[11,"eq","","",848,[[["self"],["xdgwmbase"]],["bool"]]],[11,"ne","","",848,[[["self"],["xdgwmbase"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_positioner","",685,[[["self"],["error"]],["bool"]]],[11,"eq","","",686,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",687,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","","",850,[[["self"],["xdgpositioner"]],["bool"]]],[11,"ne","","",850,[[["self"],["xdgpositioner"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_surface","",689,[[["self"],["error"]],["bool"]]],[11,"eq","","",852,[[["self"],["xdgsurface"]],["bool"]]],[11,"ne","","",852,[[["self"],["xdgsurface"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_toplevel","",693,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",694,[[["self"],["state"]],["bool"]]],[11,"eq","","",853,[[["self"],["xdgtoplevel"]],["bool"]]],[11,"ne","","",853,[[["self"],["xdgtoplevel"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_popup","",698,[[["self"],["error"]],["bool"]]],[11,"eq","","",854,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",854,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_wm_base","",702,[[["self"],["error"]],["bool"]]],[11,"eq","","",855,[[["self"],["xdgwmbase"]],["bool"]]],[11,"ne","","",855,[[["self"],["xdgwmbase"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_positioner","",706,[[["self"],["error"]],["bool"]]],[11,"eq","","",707,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",708,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","","",857,[[["self"],["xdgpositioner"]],["bool"]]],[11,"ne","","",857,[[["self"],["xdgpositioner"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_surface","",711,[[["self"],["error"]],["bool"]]],[11,"eq","","",859,[[["self"],["xdgsurface"]],["bool"]]],[11,"ne","","",859,[[["self"],["xdgsurface"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_toplevel","",715,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",716,[[["self"],["state"]],["bool"]]],[11,"eq","","",860,[[["self"],["xdgtoplevel"]],["bool"]]],[11,"ne","","",860,[[["self"],["xdgtoplevel"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_popup","",720,[[["self"],["error"]],["bool"]]],[11,"eq","","",861,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",861,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewporter","",724,[[["self"],["error"]],["bool"]]],[11,"eq","","",862,[[["self"],["wpviewporter"]],["bool"]]],[11,"ne","","",862,[[["self"],["wpviewporter"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewport","",726,[[["self"],["error"]],["bool"]]],[11,"eq","","",864,[[["self"],["wpviewport"]],["bool"]]],[11,"ne","","",864,[[["self"],["wpviewport"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewporter","",728,[[["self"],["error"]],["bool"]]],[11,"eq","","",866,[[["self"],["wpviewporter"]],["bool"]]],[11,"ne","","",866,[[["self"],["wpviewporter"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewport","",731,[[["self"],["error"]],["bool"]]],[11,"eq","","",868,[[["self"],["wpviewport"]],["bool"]]],[11,"ne","","",868,[[["self"],["wpviewport"]],["bool"]]],[11,"as_ref","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",15,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",734,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",16,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",24,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",25,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",739,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",741,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",43,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",743,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",45,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",46,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",47,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",748,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",750,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",57,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",58,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",753,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",59,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",71,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",72,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",756,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",73,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",90,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",91,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",92,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",93,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",107,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",108,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",760,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",762,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",764,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",109,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",129,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",130,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",768,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",132,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",133,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",149,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",150,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",151,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",771,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",152,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",153,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",175,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",176,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",177,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",178,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",774,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",179,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",180,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",181,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",191,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",192,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",777,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",193,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",223,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",224,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",225,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",226,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",780,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",227,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",228,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",229,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",289,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",290,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",291,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",292,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",293,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",294,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",295,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",296,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",783,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",297,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",298,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",299,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",300,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",301,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",302,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",303,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",321,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",322,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",323,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",786,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",338,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",339,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",341,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",789,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",355,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",356,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",792,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",357,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",376,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",377,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",378,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",379,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",796,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",798,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",380,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",381,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",400,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",401,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",402,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",403,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",802,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",804,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",404,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",405,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",415,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",416,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",807,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",417,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",444,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",445,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",446,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",447,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",448,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",449,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",489,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",493,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",494,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",495,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",496,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",497,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",810,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",501,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",502,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",503,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",510,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",511,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",814,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",816,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",533,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",534,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",535,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",536,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",819,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",537,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",538,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",539,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",565,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",566,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",567,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",568,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",822,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",569,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",570,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",571,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",585,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",586,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",825,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",587,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",604,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",605,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",606,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",607,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",619,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",620,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",828,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",621,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",630,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",631,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",832,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",834,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",647,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",649,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",837,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",651,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",663,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",665,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",840,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",667,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::presentation_time::client::wp_presentation","",842,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::presentation_time::client::wp_presentation_feedback","",843,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation","",845,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation_feedback","",846,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_wm_base","",848,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_positioner","",850,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_surface","",852,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_toplevel","",853,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_popup","",854,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_wm_base","",855,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_positioner","",857,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_surface","",859,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_toplevel","",860,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_popup","",861,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::viewporter::client::wp_viewporter","",862,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::viewporter::client::wp_viewport","",864,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewporter","",866,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewport","",868,[[["self"]],["resource"]]],[11,"cmp","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["contenthint"]],["ordering"]]],[11,"cmp","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["contenthint"]],["ordering"]]],[11,"cmp","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","","",491,[[["self"],["gravity"]],["ordering"]]],[11,"cmp","","",492,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","","",499,[[["self"],["gravity"]],["ordering"]]],[11,"cmp","","",500,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["flags"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["flags"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"]],["capability"]]],[11,"clone","","",1,[[["self"]],["presentmethod"]]],[11,"clone","","",2,[[["self"]],["error"]]],[11,"clone","","",15,[[["self"]],["zwpfullscreenshellv1"]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",734,[[["self"]],["zwpfullscreenshellmodefeedbackv1"]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",8,[[["self"]],["capability"]]],[11,"clone","","",9,[[["self"]],["presentmethod"]]],[11,"clone","","",10,[[["self"]],["error"]]],[11,"clone","","",16,[[["self"]],["zwpfullscreenshellv1"]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["self"]],["zwpfullscreenshellmodefeedbackv1"]]],[11,"clone","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",24,[[["self"]],["zwpidleinhibitmanagerv1"]]],[11,"clone","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",25,[[["self"]],["zwpidleinhibitorv1"]]],[11,"clone","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",739,[[["self"]],["zwpidleinhibitmanagerv1"]]],[11,"clone","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",741,[[["self"]],["zwpidleinhibitorv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",43,[[["self"]],["zwpinputmethodcontextv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",743,[[["self"]],["zwpinputmethodv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["self"]],["zwpinputpanelv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",32,[[["self"]],["position"]]],[11,"clone","","",45,[[["self"]],["zwpinputpanelsurfacev1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",46,[[["self"]],["zwpinputmethodcontextv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",47,[[["self"]],["zwpinputmethodv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",748,[[["self"]],["zwpinputpanelv1"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",40,[[["self"]],["position"]]],[11,"clone","","",750,[[["self"]],["zwpinputpanelsurfacev1"]]],[11,"clone","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",57,[[["self"]],["zwpinputtimestampsmanagerv1"]]],[11,"clone","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",58,[[["self"]],["zwpinputtimestampsv1"]]],[11,"clone","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",753,[[["self"]],["zwpinputtimestampsmanagerv1"]]],[11,"clone","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",59,[[["self"]],["zwpinputtimestampsv1"]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",60,[[["self"]],["error"]]],[11,"clone","","",71,[[["self"]],["zwpkeyboardshortcutsinhibitmanagerv1"]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",72,[[["self"]],["zwpkeyboardshortcutsinhibitorv1"]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",65,[[["self"]],["error"]]],[11,"clone","","",756,[[["self"]],["zwpkeyboardshortcutsinhibitmanagerv1"]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",73,[[["self"]],["zwpkeyboardshortcutsinhibitorv1"]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",90,[[["self"]],["zwplinuxdmabufv1"]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",77,[[["self"]],["error"]]],[11,"clone","","",78,[[["self"]],["flags"]]],[11,"clone","","",91,[[["self"]],["zwplinuxbufferparamsv1"]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",92,[[["self"]],["zwplinuxdmabufv1"]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",85,[[["self"]],["error"]]],[11,"clone","","",86,[[["self"]],["flags"]]],[11,"clone","","",93,[[["self"]],["zwplinuxbufferparamsv1"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",94,[[["self"]],["error"]]],[11,"clone","","",107,[[["self"]],["zwplinuxexplicitsynchronizationv1"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",96,[[["self"]],["error"]]],[11,"clone","","",108,[[["self"]],["zwplinuxsurfacesynchronizationv1"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",760,[[["self"]],["zwplinuxbufferreleasev1"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",100,[[["self"]],["error"]]],[11,"clone","","",762,[[["self"]],["zwplinuxexplicitsynchronizationv1"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",103,[[["self"]],["error"]]],[11,"clone","","",764,[[["self"]],["zwplinuxsurfacesynchronizationv1"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",109,[[["self"]],["zwplinuxbufferreleasev1"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",110,[[["self"]],["error"]]],[11,"clone","","",111,[[["self"]],["lifetime"]]],[11,"clone","","",129,[[["self"]],["zwppointerconstraintsv1"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",130,[[["self"]],["zwplockedpointerv1"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["self"]],["zwpconfinedpointerv1"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",119,[[["self"]],["error"]]],[11,"clone","","",120,[[["self"]],["lifetime"]]],[11,"clone","","",768,[[["self"]],["zwppointerconstraintsv1"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",132,[[["self"]],["zwplockedpointerv1"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",133,[[["self"]],["zwpconfinedpointerv1"]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",149,[[["self"]],["zwppointergesturesv1"]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",150,[[["self"]],["zwppointergestureswipev1"]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",151,[[["self"]],["zwppointergesturepinchv1"]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",771,[[["self"]],["zwppointergesturesv1"]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",152,[[["self"]],["zwppointergestureswipev1"]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",153,[[["self"]],["zwppointergesturepinchv1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",175,[[["self"]],["zwpprimaryselectiondevicemanagerv1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",176,[[["self"]],["zwpprimaryselectiondevicev1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",177,[[["self"]],["zwpprimaryselectionofferv1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",178,[[["self"]],["zwpprimaryselectionsourcev1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",774,[[["self"]],["zwpprimaryselectiondevicemanagerv1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",179,[[["self"]],["zwpprimaryselectiondevicev1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",180,[[["self"]],["zwpprimaryselectionofferv1"]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",181,[[["self"]],["zwpprimaryselectionsourcev1"]]],[11,"clone","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",191,[[["self"]],["zwprelativepointermanagerv1"]]],[11,"clone","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",192,[[["self"]],["zwprelativepointerv1"]]],[11,"clone","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",777,[[["self"]],["zwprelativepointermanagerv1"]]],[11,"clone","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",193,[[["self"]],["zwprelativepointerv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",223,[[["self"]],["zwptabletmanagerv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",224,[[["self"]],["zwptabletseatv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",198,[[["self"]],["type"]]],[11,"clone","","",199,[[["self"]],["capability"]]],[11,"clone","","",200,[[["self"]],["buttonstate"]]],[11,"clone","","",201,[[["self"]],["error"]]],[11,"clone","","",225,[[["self"]],["zwptablettoolv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",226,[[["self"]],["zwptabletv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",780,[[["self"]],["zwptabletmanagerv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",227,[[["self"]],["zwptabletseatv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",213,[[["self"]],["type"]]],[11,"clone","","",214,[[["self"]],["capability"]]],[11,"clone","","",215,[[["self"]],["buttonstate"]]],[11,"clone","","",216,[[["self"]],["error"]]],[11,"clone","","",228,[[["self"]],["zwptablettoolv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",229,[[["self"]],["zwptabletv1"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",289,[[["self"]],["zwptabletmanagerv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",290,[[["self"]],["zwptabletseatv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",234,[[["self"]],["type"]]],[11,"clone","","",235,[[["self"]],["capability"]]],[11,"clone","","",236,[[["self"]],["buttonstate"]]],[11,"clone","","",237,[[["self"]],["error"]]],[11,"clone","","",291,[[["self"]],["zwptablettoolv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",292,[[["self"]],["zwptabletv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",244,[[["self"]],["source"]]],[11,"clone","","",293,[[["self"]],["zwptabletpadringv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",248,[[["self"]],["source"]]],[11,"clone","","",294,[[["self"]],["zwptabletpadstripv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",295,[[["self"]],["zwptabletpadgroupv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",255,[[["self"]],["buttonstate"]]],[11,"clone","","",296,[[["self"]],["zwptabletpadv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",783,[[["self"]],["zwptabletmanagerv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",297,[[["self"]],["zwptabletseatv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",264,[[["self"]],["type"]]],[11,"clone","","",265,[[["self"]],["capability"]]],[11,"clone","","",266,[[["self"]],["buttonstate"]]],[11,"clone","","",267,[[["self"]],["error"]]],[11,"clone","","",298,[[["self"]],["zwptablettoolv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",299,[[["self"]],["zwptabletv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",274,[[["self"]],["source"]]],[11,"clone","","",300,[[["self"]],["zwptabletpadringv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",278,[[["self"]],["source"]]],[11,"clone","","",301,[[["self"]],["zwptabletpadstripv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",302,[[["self"]],["zwptabletpadgroupv2"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",285,[[["self"]],["buttonstate"]]],[11,"clone","","",303,[[["self"]],["zwptabletpadv2"]]],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",304,[[["self"]],["contenthint"]]],[11,"clone","","",305,[[["self"]],["contentpurpose"]]],[11,"clone","","",306,[[["self"]],["preeditstyle"]]],[11,"clone","","",307,[[["self"]],["textdirection"]]],[11,"clone","","",321,[[["self"]],["zwptextinputv1"]]],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",322,[[["self"]],["zwptextinputmanagerv1"]]],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",312,[[["self"]],["contenthint"]]],[11,"clone","","",313,[[["self"]],["contentpurpose"]]],[11,"clone","","",314,[[["self"]],["preeditstyle"]]],[11,"clone","","",315,[[["self"]],["textdirection"]]],[11,"clone","","",323,[[["self"]],["zwptextinputv1"]]],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",786,[[["self"]],["zwptextinputmanagerv1"]]],[11,"clone","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",324,[[["self"]],["changecause"]]],[11,"clone","","",337,[[["self"]],["contenthint"]]],[11,"clone","","",325,[[["self"]],["contentpurpose"]]],[11,"clone","","",338,[[["self"]],["zwptextinputv3"]]],[11,"clone","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",339,[[["self"]],["zwptextinputmanagerv3"]]],[11,"clone","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",330,[[["self"]],["changecause"]]],[11,"clone","","",340,[[["self"]],["contenthint"]]],[11,"clone","","",331,[[["self"]],["contentpurpose"]]],[11,"clone","","",341,[[["self"]],["zwptextinputv3"]]],[11,"clone","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",789,[[["self"]],["zwptextinputmanagerv3"]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",355,[[["self"]],["zxdgdecorationmanagerv1"]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",343,[[["self"]],["error"]]],[11,"clone","","",344,[[["self"]],["mode"]]],[11,"clone","","",356,[[["self"]],["zxdgtopleveldecorationv1"]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",792,[[["self"]],["zxdgdecorationmanagerv1"]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",350,[[["self"]],["error"]]],[11,"clone","","",351,[[["self"]],["mode"]]],[11,"clone","","",357,[[["self"]],["zxdgtopleveldecorationv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",376,[[["self"]],["zxdgexporterv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",377,[[["self"]],["zxdgimporterv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",378,[[["self"]],["zxdgexportedv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",379,[[["self"]],["zxdgimportedv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",796,[[["self"]],["zxdgexporterv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",798,[[["self"]],["zxdgimporterv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",380,[[["self"]],["zxdgexportedv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",381,[[["self"]],["zxdgimportedv1"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",400,[[["self"]],["zxdgexporterv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",401,[[["self"]],["zxdgimporterv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",402,[[["self"]],["zxdgexportedv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",403,[[["self"]],["zxdgimportedv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",802,[[["self"]],["zxdgexporterv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",804,[[["self"]],["zxdgimporterv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",404,[[["self"]],["zxdgexportedv2"]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",405,[[["self"]],["zxdgimportedv2"]]],[11,"clone","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",415,[[["self"]],["zxdgoutputmanagerv1"]]],[11,"clone","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",416,[[["self"]],["zxdgoutputv1"]]],[11,"clone","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",807,[[["self"]],["zxdgoutputmanagerv1"]]],[11,"clone","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",417,[[["self"]],["zxdgoutputv1"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",418,[[["self"]],["version"]]],[11,"clone","","",419,[[["self"]],["error"]]],[11,"clone","","",444,[[["self"]],["xdgshell"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",423,[[["self"]],["resizeedge"]]],[11,"clone","","",424,[[["self"]],["state"]]],[11,"clone","","",445,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",446,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",431,[[["self"]],["version"]]],[11,"clone","","",432,[[["self"]],["error"]]],[11,"clone","","",447,[[["self"]],["xdgshell"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",436,[[["self"]],["resizeedge"]]],[11,"clone","","",437,[[["self"]],["state"]]],[11,"clone","","",448,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",449,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",450,[[["self"]],["error"]]],[11,"clone","","",489,[[["self"]],["zxdgshellv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",454,[[["self"]],["error"]]],[11,"clone","","",490,[[["self"]],["anchor"]]],[11,"clone","","",491,[[["self"]],["gravity"]]],[11,"clone","","",492,[[["self"]],["constraintadjustment"]]],[11,"clone","","",493,[[["self"]],["zxdgpositionerv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",456,[[["self"]],["error"]]],[11,"clone","","",494,[[["self"]],["zxdgsurfacev6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",460,[[["self"]],["resizeedge"]]],[11,"clone","","",461,[[["self"]],["state"]]],[11,"clone","","",495,[[["self"]],["zxdgtoplevelv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",465,[[["self"]],["error"]]],[11,"clone","","",496,[[["self"]],["zxdgpopupv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",469,[[["self"]],["error"]]],[11,"clone","","",497,[[["self"]],["zxdgshellv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",473,[[["self"]],["error"]]],[11,"clone","","",498,[[["self"]],["anchor"]]],[11,"clone","","",499,[[["self"]],["gravity"]]],[11,"clone","","",500,[[["self"]],["constraintadjustment"]]],[11,"clone","","",810,[[["self"]],["zxdgpositionerv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",476,[[["self"]],["error"]]],[11,"clone","","",501,[[["self"]],["zxdgsurfacev6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",480,[[["self"]],["resizeedge"]]],[11,"clone","","",481,[[["self"]],["state"]]],[11,"clone","","",502,[[["self"]],["zxdgtoplevelv6"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",485,[[["self"]],["error"]]],[11,"clone","","",503,[[["self"]],["zxdgpopupv6"]]],[11,"clone","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",510,[[["self"]],["zwpxwaylandkeyboardgrabmanagerv1"]]],[11,"clone","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",511,[[["self"]],["zwpxwaylandkeyboardgrabv1"]]],[11,"clone","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",814,[[["self"]],["zwpxwaylandkeyboardgrabmanagerv1"]]],[11,"clone","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",816,[[["self"]],["zwpxwaylandkeyboardgrabv1"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",533,[[["self"]],["gtkprimaryselectiondevicemanager"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",534,[[["self"]],["gtkprimaryselectiondevice"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",535,[[["self"]],["gtkprimaryselectionoffer"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",536,[[["self"]],["gtkprimaryselectionsource"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",819,[[["self"]],["gtkprimaryselectiondevicemanager"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",537,[[["self"]],["gtkprimaryselectiondevice"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",538,[[["self"]],["gtkprimaryselectionoffer"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",539,[[["self"]],["gtkprimaryselectionsource"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",565,[[["self"]],["zwlrdatacontrolmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",541,[[["self"]],["error"]]],[11,"clone","","",566,[[["self"]],["zwlrdatacontroldevicev1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",545,[[["self"]],["error"]]],[11,"clone","","",567,[[["self"]],["zwlrdatacontrolsourcev1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",568,[[["self"]],["zwlrdatacontrolofferv1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",822,[[["self"]],["zwlrdatacontrolmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",554,[[["self"]],["error"]]],[11,"clone","","",569,[[["self"]],["zwlrdatacontroldevicev1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",558,[[["self"]],["error"]]],[11,"clone","","",570,[[["self"]],["zwlrdatacontrolsourcev1"]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",571,[[["self"]],["zwlrdatacontrolofferv1"]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",585,[[["self"]],["zwlrexportdmabufmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",573,[[["self"]],["flags"]]],[11,"clone","","",574,[[["self"]],["cancelreason"]]],[11,"clone","","",586,[[["self"]],["zwlrexportdmabufframev1"]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",825,[[["self"]],["zwlrexportdmabufmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",580,[[["self"]],["flags"]]],[11,"clone","","",581,[[["self"]],["cancelreason"]]],[11,"clone","","",587,[[["self"]],["zwlrexportdmabufframev1"]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",604,[[["self"]],["zwlrforeigntoplevelmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",591,[[["self"]],["state"]]],[11,"clone","","",592,[[["self"]],["error"]]],[11,"clone","","",605,[[["self"]],["zwlrforeigntoplevelhandlev1"]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",606,[[["self"]],["zwlrforeigntoplevelmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",599,[[["self"]],["state"]]],[11,"clone","","",600,[[["self"]],["error"]]],[11,"clone","","",607,[[["self"]],["zwlrforeigntoplevelhandlev1"]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",619,[[["self"]],["zwlrgammacontrolmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",609,[[["self"]],["error"]]],[11,"clone","","",620,[[["self"]],["zwlrgammacontrolv1"]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",828,[[["self"]],["zwlrgammacontrolmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",615,[[["self"]],["error"]]],[11,"clone","","",621,[[["self"]],["zwlrgammacontrolv1"]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",622,[[["self"]],["error"]]],[11,"clone","","",630,[[["self"]],["zwlrinputinhibitmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",631,[[["self"]],["zwlrinputinhibitorv1"]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",625,[[["self"]],["error"]]],[11,"clone","","",832,[[["self"]],["zwlrinputinhibitmanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",834,[[["self"]],["zwlrinputinhibitorv1"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",632,[[["self"]],["error"]]],[11,"clone","","",633,[[["self"]],["layer"]]],[11,"clone","","",647,[[["self"]],["zwlrlayershellv1"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",635,[[["self"]],["error"]]],[11,"clone","","",648,[[["self"]],["anchor"]]],[11,"clone","","",649,[[["self"]],["zwlrlayersurfacev1"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",639,[[["self"]],["error"]]],[11,"clone","","",640,[[["self"]],["layer"]]],[11,"clone","","",837,[[["self"]],["zwlrlayershellv1"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",643,[[["self"]],["error"]]],[11,"clone","","",650,[[["self"]],["anchor"]]],[11,"clone","","",651,[[["self"]],["zwlrlayersurfacev1"]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",663,[[["self"]],["zwlrscreencopymanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",653,[[["self"]],["error"]]],[11,"clone","","",664,[[["self"]],["flags"]]],[11,"clone","","",665,[[["self"]],["zwlrscreencopyframev1"]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",840,[[["self"]],["zwlrscreencopymanagerv1"]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",659,[[["self"]],["error"]]],[11,"clone","","",666,[[["self"]],["flags"]]],[11,"clone","","",667,[[["self"]],["zwlrscreencopyframev1"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",668,[[["self"]],["error"]]],[11,"clone","","",842,[[["self"]],["wppresentation"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",672,[[["self"]],["kind"]]],[11,"clone","","",843,[[["self"]],["wppresentationfeedback"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",675,[[["self"]],["error"]]],[11,"clone","","",845,[[["self"]],["wppresentation"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",679,[[["self"]],["kind"]]],[11,"clone","","",846,[[["self"]],["wppresentationfeedback"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",681,[[["self"]],["error"]]],[11,"clone","","",848,[[["self"]],["xdgwmbase"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",685,[[["self"]],["error"]]],[11,"clone","","",686,[[["self"]],["anchor"]]],[11,"clone","","",687,[[["self"]],["gravity"]]],[11,"clone","","",849,[[["self"]],["constraintadjustment"]]],[11,"clone","","",850,[[["self"]],["xdgpositioner"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",689,[[["self"]],["error"]]],[11,"clone","","",852,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",693,[[["self"]],["resizeedge"]]],[11,"clone","","",694,[[["self"]],["state"]]],[11,"clone","","",853,[[["self"]],["xdgtoplevel"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",698,[[["self"]],["error"]]],[11,"clone","","",854,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",702,[[["self"]],["error"]]],[11,"clone","","",855,[[["self"]],["xdgwmbase"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",706,[[["self"]],["error"]]],[11,"clone","","",707,[[["self"]],["anchor"]]],[11,"clone","","",708,[[["self"]],["gravity"]]],[11,"clone","","",856,[[["self"]],["constraintadjustment"]]],[11,"clone","","",857,[[["self"]],["xdgpositioner"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",711,[[["self"]],["error"]]],[11,"clone","","",859,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",715,[[["self"]],["resizeedge"]]],[11,"clone","","",716,[[["self"]],["state"]]],[11,"clone","","",860,[[["self"]],["xdgtoplevel"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",720,[[["self"]],["error"]]],[11,"clone","","",861,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",724,[[["self"]],["error"]]],[11,"clone","","",862,[[["self"]],["wpviewporter"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",726,[[["self"]],["error"]]],[11,"clone","","",864,[[["self"]],["wpviewport"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",728,[[["self"]],["error"]]],[11,"clone","","",866,[[["self"]],["wpviewporter"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",731,[[["self"]],["error"]]],[11,"clone","","",868,[[["self"]],["wpviewport"]]],[11,"extend","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["t"]]]],[11,"extend","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["t"]]]],[11,"extend","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["t"]]]],[11,"extend","","",491,[[["self"],["t"]]]],[11,"extend","","",492,[[["self"],["t"]]]],[11,"extend","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["t"]]]],[11,"extend","","",499,[[["self"],["t"]]]],[11,"extend","","",500,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["t"]]]],[11,"extend","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["t"]]]],[11,"extend","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["t"]]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",15,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",734,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",16,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",24,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",25,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",739,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",741,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",43,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",743,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",45,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",46,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",47,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",748,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",750,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",57,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",58,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",753,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",59,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",71,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",72,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",756,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",73,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",90,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",91,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",92,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",93,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",107,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",108,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",760,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",762,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",764,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",109,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",129,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",130,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",768,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",132,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",133,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",149,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",150,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",151,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",771,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",152,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",153,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",175,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",176,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",177,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",178,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",774,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",179,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",180,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",181,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",191,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",192,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",777,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",193,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",223,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",224,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",225,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",226,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",780,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",227,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",228,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",229,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",289,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",290,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",291,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",292,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",293,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",294,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",295,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",296,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",783,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",297,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",298,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",299,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",300,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",301,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",302,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",303,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",321,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",322,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",323,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",786,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",338,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",339,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",341,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",789,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",355,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",356,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",792,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",357,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",376,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",377,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",378,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",379,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",796,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",798,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",380,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",381,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",400,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",401,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",402,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",403,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",802,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",804,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",404,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",405,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",415,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",416,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",807,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",417,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",444,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",445,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",446,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",447,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",448,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",449,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",489,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",493,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",494,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",495,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",496,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",497,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",810,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",501,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",502,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",503,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",510,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",511,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",814,[[["resource"]],["self"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",816,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",533,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",534,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",535,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",536,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",819,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",537,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",538,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",539,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",565,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",566,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",567,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",568,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",822,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",569,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",570,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",571,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",585,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",586,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",825,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",587,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",604,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",605,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",606,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",607,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",619,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",620,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",828,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",621,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",630,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",631,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",832,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",834,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",647,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",649,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",837,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",651,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",663,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",665,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",840,[[["resource"]],["self"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",667,[[["resource"]],["self"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",842,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",843,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",845,[[["resource"]],["self"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",846,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",848,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",850,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",852,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",853,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",854,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",855,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",857,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",859,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",860,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",861,[[["resource"]],["self"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",862,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",864,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",866,[[["resource"]],["self"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",868,[[["resource"]],["self"]]],[11,"partial_cmp","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["contenthint"]],["option",["ordering"]]]],[11,"lt","","",337,[[["self"],["contenthint"]],["bool"]]],[11,"le","","",337,[[["self"],["contenthint"]],["bool"]]],[11,"gt","","",337,[[["self"],["contenthint"]],["bool"]]],[11,"ge","","",337,[[["self"],["contenthint"]],["bool"]]],[11,"partial_cmp","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["contenthint"]],["option",["ordering"]]]],[11,"lt","","",340,[[["self"],["contenthint"]],["bool"]]],[11,"le","","",340,[[["self"],["contenthint"]],["bool"]]],[11,"gt","","",340,[[["self"],["contenthint"]],["bool"]]],[11,"ge","","",340,[[["self"],["contenthint"]],["bool"]]],[11,"partial_cmp","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",490,[[["self"],["anchor"]],["bool"]]],[11,"le","","",490,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",490,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",490,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","","",491,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",491,[[["self"],["gravity"]],["bool"]]],[11,"le","","",491,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",491,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",491,[[["self"],["gravity"]],["bool"]]],[11,"partial_cmp","","",492,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",492,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",498,[[["self"],["anchor"]],["bool"]]],[11,"le","","",498,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",498,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",498,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","","",499,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",499,[[["self"],["gravity"]],["bool"]]],[11,"le","","",499,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",499,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",499,[[["self"],["gravity"]],["bool"]]],[11,"partial_cmp","","",500,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",500,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",648,[[["self"],["anchor"]],["bool"]]],[11,"le","","",648,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",648,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",648,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",650,[[["self"],["anchor"]],["bool"]]],[11,"le","","",650,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",650,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",650,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",664,[[["self"],["flags"]],["bool"]]],[11,"le","","",664,[[["self"],["flags"]],["bool"]]],[11,"gt","","",664,[[["self"],["flags"]],["bool"]]],[11,"ge","","",664,[[["self"],["flags"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",666,[[["self"],["flags"]],["bool"]]],[11,"le","","",666,[[["self"],["flags"]],["bool"]]],[11,"gt","","",666,[[["self"],["flags"]],["bool"]]],[11,"ge","","",666,[[["self"],["flags"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",491,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",492,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",499,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",500,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",198,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",248,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",255,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",264,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",266,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",267,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",274,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",278,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",285,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",304,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",305,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",306,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",307,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",312,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",313,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",314,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",315,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",324,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",337,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",325,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",330,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",340,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",331,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",343,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",344,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",350,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",351,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",418,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",419,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",423,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",424,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",431,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",432,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",436,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",437,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",450,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",454,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",490,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",491,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",492,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",456,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",460,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",461,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",465,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",469,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",473,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",498,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",499,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",500,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",476,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",480,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",481,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",485,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",541,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",545,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",554,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",558,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",573,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",574,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",580,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",581,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",591,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",592,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",599,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",600,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",609,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",615,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",622,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",625,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",632,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",633,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",635,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",648,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",639,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",640,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",643,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",650,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",653,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",664,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",659,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",666,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation","",668,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",672,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation","",675,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",679,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_wm_base","",681,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",685,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",686,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",687,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",849,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_surface","",689,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_toplevel","",693,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",694,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_popup","",698,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_wm_base","",702,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",706,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",707,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",708,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",856,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_surface","",711,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_toplevel","",715,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",716,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_popup","",720,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewporter","",724,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewport","",726,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewporter","",728,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewport","",731,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",491,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",492,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",499,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",500,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",491,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",492,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",499,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",500,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",491,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",492,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",499,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",500,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["self"],["formatter"]],["result"]]],[11,"hash","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,N],[11,"hash","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,N],[11,"hash","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,N],[11,"hash","","",491,N],[11,"hash","","",492,N],[11,"hash","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,N],[11,"hash","","",499,N],[11,"hash","","",500,N],[11,"hash","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,N],[11,"hash","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,N],[11,"hash","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,N],[11,"hash","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,N],[11,"hash","wayland_protocols::xdg_shell::client::xdg_positioner","",849,N],[11,"hash","wayland_protocols::xdg_shell::server::xdg_positioner","",856,N],[11,"sub","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the set difference of the two sets of flags.",337,[[["self"],["contenthint"]],["contenthint"]]],[11,"sub","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the set difference of the two sets of flags.",340,[[["self"],["contenthint"]],["contenthint"]]],[11,"sub","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the set difference of the two sets of flags.",490,[[["self"],["anchor"]],["anchor"]]],[11,"sub","","Returns the set difference of the two sets of flags.",491,[[["self"],["gravity"]],["gravity"]]],[11,"sub","","Returns the set difference of the two sets of flags.",492,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the set difference of the two sets of flags.",498,[[["self"],["anchor"]],["anchor"]]],[11,"sub","","Returns the set difference of the two sets of flags.",499,[[["self"],["gravity"]],["gravity"]]],[11,"sub","","Returns the set difference of the two sets of flags.",500,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the set difference of the two sets of flags.",648,[[["self"],["anchor"]],["anchor"]]],[11,"sub","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the set difference of the two sets of flags.",650,[[["self"],["anchor"]],["anchor"]]],[11,"sub","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the set difference of the two sets of flags.",664,[[["self"],["flags"]],["flags"]]],[11,"sub","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the set difference of the two sets of flags.",666,[[["self"],["flags"]],["flags"]]],[11,"sub","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the set difference of the two sets of flags.",849,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the set difference of the two sets of flags.",856,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Disables all flags enabled in the set.",337,[[["self"],["contenthint"]]]],[11,"sub_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Disables all flags enabled in the set.",340,[[["self"],["contenthint"]]]],[11,"sub_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Disables all flags enabled in the set.",490,[[["self"],["anchor"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",491,[[["self"],["gravity"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",492,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Disables all flags enabled in the set.",498,[[["self"],["anchor"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",499,[[["self"],["gravity"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",500,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Disables all flags enabled in the set.",648,[[["self"],["anchor"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Disables all flags enabled in the set.",650,[[["self"],["anchor"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Disables all flags enabled in the set.",664,[[["self"],["flags"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Disables all flags enabled in the set.",666,[[["self"],["flags"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags enabled in the set.",849,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags enabled in the set.",856,[[["self"],["constraintadjustment"]]]],[11,"not","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the complement of this set of flags.",337,[[["self"]],["contenthint"]]],[11,"not","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the complement of this set of flags.",340,[[["self"]],["contenthint"]]],[11,"not","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the complement of this set of flags.",490,[[["self"]],["anchor"]]],[11,"not","","Returns the complement of this set of flags.",491,[[["self"]],["gravity"]]],[11,"not","","Returns the complement of this set of flags.",492,[[["self"]],["constraintadjustment"]]],[11,"not","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the complement of this set of flags.",498,[[["self"]],["anchor"]]],[11,"not","","Returns the complement of this set of flags.",499,[[["self"]],["gravity"]]],[11,"not","","Returns the complement of this set of flags.",500,[[["self"]],["constraintadjustment"]]],[11,"not","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the complement of this set of flags.",648,[[["self"]],["anchor"]]],[11,"not","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the complement of this set of flags.",650,[[["self"]],["anchor"]]],[11,"not","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the complement of this set of flags.",664,[[["self"]],["flags"]]],[11,"not","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the complement of this set of flags.",666,[[["self"]],["flags"]]],[11,"not","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the complement of this set of flags.",849,[[["self"]],["constraintadjustment"]]],[11,"not","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the complement of this set of flags.",856,[[["self"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the intersection between the two sets of flags.",337,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitand","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the intersection between the two sets of flags.",340,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitand","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the intersection between the two sets of flags.",490,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",491,[[["self"],["gravity"]],["gravity"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",492,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the intersection between the two sets of flags.",498,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",499,[[["self"],["gravity"]],["gravity"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",500,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the intersection between the two sets of flags.",648,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the intersection between the two sets of flags.",650,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the intersection between the two sets of flags.",664,[[["self"],["flags"]],["flags"]]],[11,"bitand","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the intersection between the two sets of flags.",666,[[["self"],["flags"]],["flags"]]],[11,"bitand","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the intersection between the two sets of flags.",849,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the intersection between the two sets of flags.",856,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the union of the two sets of flags.",337,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the union of the two sets of flags.",340,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the union of the two sets of flags.",490,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","","Returns the union of the two sets of flags.",491,[[["self"],["gravity"]],["gravity"]]],[11,"bitor","","Returns the union of the two sets of flags.",492,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the union of the two sets of flags.",498,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","","Returns the union of the two sets of flags.",499,[[["self"],["gravity"]],["gravity"]]],[11,"bitor","","Returns the union of the two sets of flags.",500,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the union of the two sets of flags.",648,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the union of the two sets of flags.",650,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the union of the two sets of flags.",664,[[["self"],["flags"]],["flags"]]],[11,"bitor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the union of the two sets of flags.",666,[[["self"],["flags"]],["flags"]]],[11,"bitor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the union of the two sets of flags.",849,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the union of the two sets of flags.",856,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the left flags, but with all the right flags…",337,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitxor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the left flags, but with all the right flags…",340,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitxor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the left flags, but with all the right flags…",490,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",491,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",492,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the left flags, but with all the right flags…",498,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",499,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",500,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the left flags, but with all the right flags…",648,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the left flags, but with all the right flags…",650,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the left flags, but with all the right flags…",664,[[["self"],["flags"]],["flags"]]],[11,"bitxor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the left flags, but with all the right flags…",666,[[["self"],["flags"]],["flags"]]],[11,"bitxor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the left flags, but with all the right flags…",849,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the left flags, but with all the right flags…",856,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Disables all flags disabled in the set.",337,[[["self"],["contenthint"]]]],[11,"bitand_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Disables all flags disabled in the set.",340,[[["self"],["contenthint"]]]],[11,"bitand_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Disables all flags disabled in the set.",490,[[["self"],["anchor"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",491,[[["self"],["gravity"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",492,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Disables all flags disabled in the set.",498,[[["self"],["anchor"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",499,[[["self"],["gravity"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",500,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Disables all flags disabled in the set.",648,[[["self"],["anchor"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Disables all flags disabled in the set.",650,[[["self"],["anchor"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Disables all flags disabled in the set.",664,[[["self"],["flags"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Disables all flags disabled in the set.",666,[[["self"],["flags"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags disabled in the set.",849,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags disabled in the set.",856,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Adds the set of flags.",337,[[["self"],["contenthint"]]]],[11,"bitor_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Adds the set of flags.",340,[[["self"],["contenthint"]]]],[11,"bitor_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Adds the set of flags.",490,[[["self"],["anchor"]]]],[11,"bitor_assign","","Adds the set of flags.",491,[[["self"],["gravity"]]]],[11,"bitor_assign","","Adds the set of flags.",492,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Adds the set of flags.",498,[[["self"],["anchor"]]]],[11,"bitor_assign","","Adds the set of flags.",499,[[["self"],["gravity"]]]],[11,"bitor_assign","","Adds the set of flags.",500,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Adds the set of flags.",648,[[["self"],["anchor"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Adds the set of flags.",650,[[["self"],["anchor"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Adds the set of flags.",664,[[["self"],["flags"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Adds the set of flags.",666,[[["self"],["flags"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Adds the set of flags.",849,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Adds the set of flags.",856,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Toggles the set of flags.",337,[[["self"],["contenthint"]]]],[11,"bitxor_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Toggles the set of flags.",340,[[["self"],["contenthint"]]]],[11,"bitxor_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Toggles the set of flags.",490,[[["self"],["anchor"]]]],[11,"bitxor_assign","","Toggles the set of flags.",491,[[["self"],["gravity"]]]],[11,"bitxor_assign","","Toggles the set of flags.",492,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Toggles the set of flags.",498,[[["self"],["anchor"]]]],[11,"bitxor_assign","","Toggles the set of flags.",499,[[["self"],["gravity"]]]],[11,"bitxor_assign","","Toggles the set of flags.",500,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Toggles the set of flags.",648,[[["self"],["anchor"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Toggles the set of flags.",650,[[["self"],["anchor"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Toggles the set of flags.",664,[[["self"],["flags"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Toggles the set of flags.",666,[[["self"],["flags"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Toggles the set of flags.",849,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Toggles the set of flags.",856,[[["self"],["constraintadjustment"]]]],[11,"from_iter","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",337,[[["t"]],["contenthint"]]],[11,"from_iter","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",340,[[["t"]],["contenthint"]]],[11,"from_iter","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",490,[[["t"]],["anchor"]]],[11,"from_iter","","",491,[[["t"]],["gravity"]]],[11,"from_iter","","",492,[[["t"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",498,[[["t"]],["anchor"]]],[11,"from_iter","","",499,[[["t"]],["gravity"]]],[11,"from_iter","","",500,[[["t"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",648,[[["t"]],["anchor"]]],[11,"from_iter","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",650,[[["t"]],["anchor"]]],[11,"from_iter","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",664,[[["t"]],["flags"]]],[11,"from_iter","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",666,[[["t"]],["flags"]]],[11,"from_iter","wayland_protocols::xdg_shell::client::xdg_positioner","",849,[[["t"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::xdg_shell::server::xdg_positioner","",856,[[["t"]],["constraintadjustment"]]],[11,"handle","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",15,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",734,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",24,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",25,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",43,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",743,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",44,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",45,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",57,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",58,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",71,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",72,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",90,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",91,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",107,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",108,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",760,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",129,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",130,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",149,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",150,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",151,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",175,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",176,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",177,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",178,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",191,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",192,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",223,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",224,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",225,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",226,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",289,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",290,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",291,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",292,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",293,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",294,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",295,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",296,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",321,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",322,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",338,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",339,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",355,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",356,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",376,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",377,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",378,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",379,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",400,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",401,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",402,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",403,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",415,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",416,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",444,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",445,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",446,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",489,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",493,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",494,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",495,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",496,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",510,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",511,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",533,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",534,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",535,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",536,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",565,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",566,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",567,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",568,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",585,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",586,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",604,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",605,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",619,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",620,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",630,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",631,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",647,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",649,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",663,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",665,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::presentation_time::client::wp_presentation","",842,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::presentation_time::client::wp_presentation_feedback","",843,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::client::xdg_wm_base","",848,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::client::xdg_positioner","",850,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::client::xdg_surface","",852,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::client::xdg_toplevel","",853,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::client::xdg_popup","",854,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::viewporter::client::wp_viewporter","",862,[[["t"],["event"],["self"]]]],[11,"handle","wayland_protocols::viewporter::client::wp_viewport","",864,[[["t"],["event"],["self"]]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",3,[[["self"]],["bool"]]],[11,"opcode","","",3,[[["self"]],["u16"]]],[11,"since","","",3,[[["self"]],["u32"]]],[11,"child","","",3,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",3,N],[11,"into_raw","","",3,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"opcode","","",4,[[["self"]],["u16"]]],[11,"since","","",4,[[["self"]],["u32"]]],[11,"child","","",4,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",4,N],[11,"into_raw","","",4,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",735,[[["self"]],["bool"]]],[11,"opcode","","",735,[[["self"]],["u16"]]],[11,"since","","",735,[[["self"]],["u32"]]],[11,"child","","",735,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",735,N],[11,"into_raw","","",735,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",6,[[["self"]],["bool"]]],[11,"opcode","","",6,[[["self"]],["u16"]]],[11,"since","","",6,[[["self"]],["u32"]]],[11,"child","","",6,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",6,N],[11,"into_raw","","",6,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",11,[[["self"]],["bool"]]],[11,"opcode","","",11,[[["self"]],["u16"]]],[11,"since","","",11,[[["self"]],["u32"]]],[11,"child","","",11,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",11,N],[11,"into_raw","","",11,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",12,[[["self"]],["bool"]]],[11,"opcode","","",12,[[["self"]],["u16"]]],[11,"since","","",12,[[["self"]],["u32"]]],[11,"child","","",12,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",12,N],[11,"into_raw","","",12,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",736,[[["self"]],["bool"]]],[11,"opcode","","",736,[[["self"]],["u16"]]],[11,"since","","",736,[[["self"]],["u32"]]],[11,"child","","",736,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",736,N],[11,"into_raw","","",736,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",14,[[["self"]],["bool"]]],[11,"opcode","","",14,[[["self"]],["u16"]]],[11,"since","","",14,[[["self"]],["u32"]]],[11,"child","","",14,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",14,N],[11,"into_raw","","",14,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",737,[[["self"]],["bool"]]],[11,"opcode","","",737,[[["self"]],["u16"]]],[11,"since","","",737,[[["self"]],["u32"]]],[11,"child","","",737,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",737,N],[11,"into_raw","","",737,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",19,[[["self"]],["bool"]]],[11,"opcode","","",19,[[["self"]],["u16"]]],[11,"since","","",19,[[["self"]],["u32"]]],[11,"child","","",19,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",19,N],[11,"into_raw","","",19,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",738,[[["self"]],["bool"]]],[11,"opcode","","",738,[[["self"]],["u16"]]],[11,"since","","",738,[[["self"]],["u32"]]],[11,"child","","",738,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",738,N],[11,"into_raw","","",738,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",20,[[["self"]],["bool"]]],[11,"opcode","","",20,[[["self"]],["u16"]]],[11,"since","","",20,[[["self"]],["u32"]]],[11,"child","","",20,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",20,N],[11,"into_raw","","",20,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",740,[[["self"]],["bool"]]],[11,"opcode","","",740,[[["self"]],["u16"]]],[11,"since","","",740,[[["self"]],["u32"]]],[11,"child","","",740,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",740,N],[11,"into_raw","","",740,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"since","","",22,[[["self"]],["u32"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",742,[[["self"]],["bool"]]],[11,"opcode","","",742,[[["self"]],["u16"]]],[11,"since","","",742,[[["self"]],["u32"]]],[11,"child","","",742,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",742,N],[11,"into_raw","","",742,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"since","","",26,[[["self"]],["u32"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"since","","",27,[[["self"]],["u32"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",744,[[["self"]],["bool"]]],[11,"opcode","","",744,[[["self"]],["u16"]]],[11,"since","","",744,[[["self"]],["u32"]]],[11,"child","","",744,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",744,N],[11,"into_raw","","",744,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"since","","",29,[[["self"]],["u32"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"since","","",31,[[["self"]],["u32"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",745,[[["self"]],["bool"]]],[11,"opcode","","",745,[[["self"]],["u16"]]],[11,"since","","",745,[[["self"]],["u32"]]],[11,"child","","",745,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",745,N],[11,"into_raw","","",745,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"since","","",33,[[["self"]],["u32"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",746,[[["self"]],["bool"]]],[11,"opcode","","",746,[[["self"]],["u16"]]],[11,"since","","",746,[[["self"]],["u32"]]],[11,"child","","",746,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",746,N],[11,"into_raw","","",746,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"since","","",34,[[["self"]],["u32"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"since","","",35,[[["self"]],["u32"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",35,N],[11,"into_raw","","",35,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",747,[[["self"]],["bool"]]],[11,"opcode","","",747,[[["self"]],["u16"]]],[11,"since","","",747,[[["self"]],["u32"]]],[11,"child","","",747,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",747,N],[11,"into_raw","","",747,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"since","","",37,[[["self"]],["u32"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",38,[[["self"]],["bool"]]],[11,"opcode","","",38,[[["self"]],["u16"]]],[11,"since","","",38,[[["self"]],["u32"]]],[11,"child","","",38,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",38,N],[11,"into_raw","","",38,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",749,[[["self"]],["bool"]]],[11,"opcode","","",749,[[["self"]],["u16"]]],[11,"since","","",749,[[["self"]],["u32"]]],[11,"child","","",749,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",749,N],[11,"into_raw","","",749,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",41,[[["self"]],["bool"]]],[11,"opcode","","",41,[[["self"]],["u16"]]],[11,"since","","",41,[[["self"]],["u32"]]],[11,"child","","",41,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",41,N],[11,"into_raw","","",41,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",751,[[["self"]],["bool"]]],[11,"opcode","","",751,[[["self"]],["u16"]]],[11,"since","","",751,[[["self"]],["u32"]]],[11,"child","","",751,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",751,N],[11,"into_raw","","",751,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",48,[[["self"]],["bool"]]],[11,"opcode","","",48,[[["self"]],["u16"]]],[11,"since","","",48,[[["self"]],["u32"]]],[11,"child","","",48,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",48,N],[11,"into_raw","","",48,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",752,[[["self"]],["bool"]]],[11,"opcode","","",752,[[["self"]],["u16"]]],[11,"since","","",752,[[["self"]],["u32"]]],[11,"child","","",752,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",752,N],[11,"into_raw","","",752,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",49,[[["self"]],["bool"]]],[11,"opcode","","",49,[[["self"]],["u16"]]],[11,"since","","",49,[[["self"]],["u32"]]],[11,"child","","",49,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",49,N],[11,"into_raw","","",49,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"since","","",50,[[["self"]],["u32"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",50,N],[11,"into_raw","","",50,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",52,[[["self"]],["bool"]]],[11,"opcode","","",52,[[["self"]],["u16"]]],[11,"since","","",52,[[["self"]],["u32"]]],[11,"child","","",52,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",52,N],[11,"into_raw","","",52,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",754,[[["self"]],["bool"]]],[11,"opcode","","",754,[[["self"]],["u16"]]],[11,"since","","",754,[[["self"]],["u32"]]],[11,"child","","",754,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",754,N],[11,"into_raw","","",754,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"since","","",54,[[["self"]],["u32"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",54,N],[11,"into_raw","","",54,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"since","","",55,[[["self"]],["u32"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",55,N],[11,"into_raw","","",55,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"since","","",61,[[["self"]],["u32"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",755,[[["self"]],["bool"]]],[11,"opcode","","",755,[[["self"]],["u16"]]],[11,"since","","",755,[[["self"]],["u32"]]],[11,"child","","",755,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",755,N],[11,"into_raw","","",755,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"since","","",62,[[["self"]],["u32"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",62,N],[11,"into_raw","","",62,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"since","","",63,[[["self"]],["u32"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",63,N],[11,"into_raw","","",63,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"since","","",66,[[["self"]],["u32"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",66,N],[11,"into_raw","","",66,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",757,[[["self"]],["bool"]]],[11,"opcode","","",757,[[["self"]],["u16"]]],[11,"since","","",757,[[["self"]],["u32"]]],[11,"child","","",757,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",757,N],[11,"into_raw","","",757,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",68,[[["self"]],["bool"]]],[11,"opcode","","",68,[[["self"]],["u16"]]],[11,"since","","",68,[[["self"]],["u32"]]],[11,"child","","",68,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",68,N],[11,"into_raw","","",68,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"since","","",69,[[["self"]],["u32"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",69,N],[11,"into_raw","","",69,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",74,[[["self"]],["bool"]]],[11,"opcode","","",74,[[["self"]],["u16"]]],[11,"since","","",74,[[["self"]],["u32"]]],[11,"child","","",74,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",74,N],[11,"into_raw","","",74,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"since","","",75,[[["self"]],["u32"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",75,N],[11,"into_raw","","",75,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"since","","",79,[[["self"]],["u32"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",79,N],[11,"into_raw","","",79,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",80,[[["self"]],["bool"]]],[11,"opcode","","",80,[[["self"]],["u16"]]],[11,"since","","",80,[[["self"]],["u32"]]],[11,"child","","",80,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",80,N],[11,"into_raw","","",80,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"since","","",82,[[["self"]],["u32"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",82,N],[11,"into_raw","","",82,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",83,[[["self"]],["bool"]]],[11,"opcode","","",83,[[["self"]],["u16"]]],[11,"since","","",83,[[["self"]],["u32"]]],[11,"child","","",83,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",83,N],[11,"into_raw","","",83,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",87,[[["self"]],["bool"]]],[11,"opcode","","",87,[[["self"]],["u16"]]],[11,"since","","",87,[[["self"]],["u32"]]],[11,"child","","",87,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",87,N],[11,"into_raw","","",87,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",88,[[["self"]],["bool"]]],[11,"opcode","","",88,[[["self"]],["u16"]]],[11,"since","","",88,[[["self"]],["u32"]]],[11,"child","","",88,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",88,N],[11,"into_raw","","",88,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",95,[[["self"]],["bool"]]],[11,"opcode","","",95,[[["self"]],["u16"]]],[11,"since","","",95,[[["self"]],["u32"]]],[11,"child","","",95,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",95,N],[11,"into_raw","","",95,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",758,[[["self"]],["bool"]]],[11,"opcode","","",758,[[["self"]],["u16"]]],[11,"since","","",758,[[["self"]],["u32"]]],[11,"child","","",758,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",758,N],[11,"into_raw","","",758,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",97,N],[11,"into_raw","","",97,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",759,[[["self"]],["bool"]]],[11,"opcode","","",759,[[["self"]],["u16"]]],[11,"since","","",759,[[["self"]],["u32"]]],[11,"child","","",759,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",759,N],[11,"into_raw","","",759,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",761,[[["self"]],["bool"]]],[11,"opcode","","",761,[[["self"]],["u16"]]],[11,"since","","",761,[[["self"]],["u32"]]],[11,"child","","",761,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",761,N],[11,"into_raw","","",761,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",98,[[["self"]],["bool"]]],[11,"opcode","","",98,[[["self"]],["u16"]]],[11,"since","","",98,[[["self"]],["u32"]]],[11,"child","","",98,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",98,N],[11,"into_raw","","",98,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",101,N],[11,"into_raw","","",101,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",763,[[["self"]],["bool"]]],[11,"opcode","","",763,[[["self"]],["u16"]]],[11,"since","","",763,[[["self"]],["u32"]]],[11,"child","","",763,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",763,N],[11,"into_raw","","",763,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",104,[[["self"]],["bool"]]],[11,"opcode","","",104,[[["self"]],["u16"]]],[11,"since","","",104,[[["self"]],["u32"]]],[11,"child","","",104,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",104,N],[11,"into_raw","","",104,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",765,[[["self"]],["bool"]]],[11,"opcode","","",765,[[["self"]],["u16"]]],[11,"since","","",765,[[["self"]],["u32"]]],[11,"child","","",765,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",765,N],[11,"into_raw","","",765,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",766,[[["self"]],["bool"]]],[11,"opcode","","",766,[[["self"]],["u16"]]],[11,"since","","",766,[[["self"]],["u32"]]],[11,"child","","",766,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",766,N],[11,"into_raw","","",766,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",106,[[["self"]],["bool"]]],[11,"opcode","","",106,[[["self"]],["u16"]]],[11,"since","","",106,[[["self"]],["u32"]]],[11,"child","","",106,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",106,N],[11,"into_raw","","",106,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",112,[[["self"]],["bool"]]],[11,"opcode","","",112,[[["self"]],["u16"]]],[11,"since","","",112,[[["self"]],["u32"]]],[11,"child","","",112,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",112,N],[11,"into_raw","","",112,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",767,[[["self"]],["bool"]]],[11,"opcode","","",767,[[["self"]],["u16"]]],[11,"since","","",767,[[["self"]],["u32"]]],[11,"child","","",767,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",767,N],[11,"into_raw","","",767,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",113,[[["self"]],["bool"]]],[11,"opcode","","",113,[[["self"]],["u16"]]],[11,"since","","",113,[[["self"]],["u32"]]],[11,"child","","",113,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",113,N],[11,"into_raw","","",113,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",114,[[["self"]],["bool"]]],[11,"opcode","","",114,[[["self"]],["u16"]]],[11,"since","","",114,[[["self"]],["u32"]]],[11,"child","","",114,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",114,N],[11,"into_raw","","",114,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",116,[[["self"]],["bool"]]],[11,"opcode","","",116,[[["self"]],["u16"]]],[11,"since","","",116,[[["self"]],["u32"]]],[11,"child","","",116,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",116,N],[11,"into_raw","","",116,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",117,[[["self"]],["bool"]]],[11,"opcode","","",117,[[["self"]],["u16"]]],[11,"since","","",117,[[["self"]],["u32"]]],[11,"child","","",117,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",117,N],[11,"into_raw","","",117,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",121,[[["self"]],["bool"]]],[11,"opcode","","",121,[[["self"]],["u16"]]],[11,"since","","",121,[[["self"]],["u32"]]],[11,"child","","",121,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",121,N],[11,"into_raw","","",121,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",769,[[["self"]],["bool"]]],[11,"opcode","","",769,[[["self"]],["u16"]]],[11,"since","","",769,[[["self"]],["u32"]]],[11,"child","","",769,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",769,N],[11,"into_raw","","",769,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",123,[[["self"]],["bool"]]],[11,"opcode","","",123,[[["self"]],["u16"]]],[11,"since","","",123,[[["self"]],["u32"]]],[11,"child","","",123,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",123,N],[11,"into_raw","","",123,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",124,[[["self"]],["bool"]]],[11,"opcode","","",124,[[["self"]],["u16"]]],[11,"since","","",124,[[["self"]],["u32"]]],[11,"child","","",124,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",124,N],[11,"into_raw","","",124,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",126,[[["self"]],["bool"]]],[11,"opcode","","",126,[[["self"]],["u16"]]],[11,"since","","",126,[[["self"]],["u32"]]],[11,"child","","",126,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",126,N],[11,"into_raw","","",126,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",127,[[["self"]],["bool"]]],[11,"opcode","","",127,[[["self"]],["u16"]]],[11,"since","","",127,[[["self"]],["u32"]]],[11,"child","","",127,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",127,N],[11,"into_raw","","",127,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",134,[[["self"]],["bool"]]],[11,"opcode","","",134,[[["self"]],["u16"]]],[11,"since","","",134,[[["self"]],["u32"]]],[11,"child","","",134,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",134,N],[11,"into_raw","","",134,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",770,[[["self"]],["bool"]]],[11,"opcode","","",770,[[["self"]],["u16"]]],[11,"since","","",770,[[["self"]],["u32"]]],[11,"child","","",770,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",770,N],[11,"into_raw","","",770,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",135,[[["self"]],["bool"]]],[11,"opcode","","",135,[[["self"]],["u16"]]],[11,"since","","",135,[[["self"]],["u32"]]],[11,"child","","",135,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",135,N],[11,"into_raw","","",135,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",136,[[["self"]],["bool"]]],[11,"opcode","","",136,[[["self"]],["u16"]]],[11,"since","","",136,[[["self"]],["u32"]]],[11,"child","","",136,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",136,N],[11,"into_raw","","",136,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",138,[[["self"]],["bool"]]],[11,"opcode","","",138,[[["self"]],["u16"]]],[11,"since","","",138,[[["self"]],["u32"]]],[11,"child","","",138,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",138,N],[11,"into_raw","","",138,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",139,[[["self"]],["bool"]]],[11,"opcode","","",139,[[["self"]],["u16"]]],[11,"since","","",139,[[["self"]],["u32"]]],[11,"child","","",139,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",139,N],[11,"into_raw","","",139,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",141,[[["self"]],["bool"]]],[11,"opcode","","",141,[[["self"]],["u16"]]],[11,"since","","",141,[[["self"]],["u32"]]],[11,"child","","",141,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",141,N],[11,"into_raw","","",141,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",772,[[["self"]],["bool"]]],[11,"opcode","","",772,[[["self"]],["u16"]]],[11,"since","","",772,[[["self"]],["u32"]]],[11,"child","","",772,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",772,N],[11,"into_raw","","",772,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",143,[[["self"]],["bool"]]],[11,"opcode","","",143,[[["self"]],["u16"]]],[11,"since","","",143,[[["self"]],["u32"]]],[11,"child","","",143,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",143,N],[11,"into_raw","","",143,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",144,[[["self"]],["bool"]]],[11,"opcode","","",144,[[["self"]],["u16"]]],[11,"since","","",144,[[["self"]],["u32"]]],[11,"child","","",144,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",144,N],[11,"into_raw","","",144,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",146,[[["self"]],["bool"]]],[11,"opcode","","",146,[[["self"]],["u16"]]],[11,"since","","",146,[[["self"]],["u32"]]],[11,"child","","",146,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",146,N],[11,"into_raw","","",146,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",147,[[["self"]],["bool"]]],[11,"opcode","","",147,[[["self"]],["u16"]]],[11,"since","","",147,[[["self"]],["u32"]]],[11,"child","","",147,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",147,N],[11,"into_raw","","",147,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",154,[[["self"]],["bool"]]],[11,"opcode","","",154,[[["self"]],["u16"]]],[11,"since","","",154,[[["self"]],["u32"]]],[11,"child","","",154,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",154,N],[11,"into_raw","","",154,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",773,[[["self"]],["bool"]]],[11,"opcode","","",773,[[["self"]],["u16"]]],[11,"since","","",773,[[["self"]],["u32"]]],[11,"child","","",773,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",773,N],[11,"into_raw","","",773,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",155,[[["self"]],["bool"]]],[11,"opcode","","",155,[[["self"]],["u16"]]],[11,"since","","",155,[[["self"]],["u32"]]],[11,"child","","",155,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",155,N],[11,"into_raw","","",155,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",156,[[["self"]],["bool"]]],[11,"opcode","","",156,[[["self"]],["u16"]]],[11,"since","","",156,[[["self"]],["u32"]]],[11,"child","","",156,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",156,N],[11,"into_raw","","",156,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",158,[[["self"]],["bool"]]],[11,"opcode","","",158,[[["self"]],["u16"]]],[11,"since","","",158,[[["self"]],["u32"]]],[11,"child","","",158,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",158,N],[11,"into_raw","","",158,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",159,[[["self"]],["bool"]]],[11,"opcode","","",159,[[["self"]],["u16"]]],[11,"since","","",159,[[["self"]],["u32"]]],[11,"child","","",159,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",159,N],[11,"into_raw","","",159,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",161,[[["self"]],["bool"]]],[11,"opcode","","",161,[[["self"]],["u16"]]],[11,"since","","",161,[[["self"]],["u32"]]],[11,"child","","",161,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",161,N],[11,"into_raw","","",161,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",162,[[["self"]],["bool"]]],[11,"opcode","","",162,[[["self"]],["u16"]]],[11,"since","","",162,[[["self"]],["u32"]]],[11,"child","","",162,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",162,N],[11,"into_raw","","",162,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",164,[[["self"]],["bool"]]],[11,"opcode","","",164,[[["self"]],["u16"]]],[11,"since","","",164,[[["self"]],["u32"]]],[11,"child","","",164,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",164,N],[11,"into_raw","","",164,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",775,[[["self"]],["bool"]]],[11,"opcode","","",775,[[["self"]],["u16"]]],[11,"since","","",775,[[["self"]],["u32"]]],[11,"child","","",775,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",775,N],[11,"into_raw","","",775,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",166,[[["self"]],["bool"]]],[11,"opcode","","",166,[[["self"]],["u16"]]],[11,"since","","",166,[[["self"]],["u32"]]],[11,"child","","",166,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",166,N],[11,"into_raw","","",166,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",167,[[["self"]],["bool"]]],[11,"opcode","","",167,[[["self"]],["u16"]]],[11,"since","","",167,[[["self"]],["u32"]]],[11,"child","","",167,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",167,N],[11,"into_raw","","",167,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",169,[[["self"]],["bool"]]],[11,"opcode","","",169,[[["self"]],["u16"]]],[11,"since","","",169,[[["self"]],["u32"]]],[11,"child","","",169,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",169,N],[11,"into_raw","","",169,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",170,[[["self"]],["bool"]]],[11,"opcode","","",170,[[["self"]],["u16"]]],[11,"since","","",170,[[["self"]],["u32"]]],[11,"child","","",170,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",170,N],[11,"into_raw","","",170,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",172,[[["self"]],["bool"]]],[11,"opcode","","",172,[[["self"]],["u16"]]],[11,"since","","",172,[[["self"]],["u32"]]],[11,"child","","",172,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",172,N],[11,"into_raw","","",172,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",173,[[["self"]],["bool"]]],[11,"opcode","","",173,[[["self"]],["u16"]]],[11,"since","","",173,[[["self"]],["u32"]]],[11,"child","","",173,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",173,N],[11,"into_raw","","",173,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",182,[[["self"]],["bool"]]],[11,"opcode","","",182,[[["self"]],["u16"]]],[11,"since","","",182,[[["self"]],["u32"]]],[11,"child","","",182,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",182,N],[11,"into_raw","","",182,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",776,[[["self"]],["bool"]]],[11,"opcode","","",776,[[["self"]],["u16"]]],[11,"since","","",776,[[["self"]],["u32"]]],[11,"child","","",776,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",776,N],[11,"into_raw","","",776,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",183,[[["self"]],["bool"]]],[11,"opcode","","",183,[[["self"]],["u16"]]],[11,"since","","",183,[[["self"]],["u32"]]],[11,"child","","",183,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",183,N],[11,"into_raw","","",183,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",184,[[["self"]],["bool"]]],[11,"opcode","","",184,[[["self"]],["u16"]]],[11,"since","","",184,[[["self"]],["u32"]]],[11,"child","","",184,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",184,N],[11,"into_raw","","",184,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",186,[[["self"]],["bool"]]],[11,"opcode","","",186,[[["self"]],["u16"]]],[11,"since","","",186,[[["self"]],["u32"]]],[11,"child","","",186,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",186,N],[11,"into_raw","","",186,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",778,[[["self"]],["bool"]]],[11,"opcode","","",778,[[["self"]],["u16"]]],[11,"since","","",778,[[["self"]],["u32"]]],[11,"child","","",778,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",778,N],[11,"into_raw","","",778,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",188,[[["self"]],["bool"]]],[11,"opcode","","",188,[[["self"]],["u16"]]],[11,"since","","",188,[[["self"]],["u32"]]],[11,"child","","",188,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",188,N],[11,"into_raw","","",188,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",189,[[["self"]],["bool"]]],[11,"opcode","","",189,[[["self"]],["u16"]]],[11,"since","","",189,[[["self"]],["u32"]]],[11,"child","","",189,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",189,N],[11,"into_raw","","",189,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",194,[[["self"]],["bool"]]],[11,"opcode","","",194,[[["self"]],["u16"]]],[11,"since","","",194,[[["self"]],["u32"]]],[11,"child","","",194,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",194,N],[11,"into_raw","","",194,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",779,[[["self"]],["bool"]]],[11,"opcode","","",779,[[["self"]],["u16"]]],[11,"since","","",779,[[["self"]],["u32"]]],[11,"child","","",779,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",779,N],[11,"into_raw","","",779,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",195,[[["self"]],["bool"]]],[11,"opcode","","",195,[[["self"]],["u16"]]],[11,"since","","",195,[[["self"]],["u32"]]],[11,"child","","",195,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",195,N],[11,"into_raw","","",195,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",196,[[["self"]],["bool"]]],[11,"opcode","","",196,[[["self"]],["u16"]]],[11,"since","","",196,[[["self"]],["u32"]]],[11,"child","","",196,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",196,N],[11,"into_raw","","",196,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",202,[[["self"]],["bool"]]],[11,"opcode","","",202,[[["self"]],["u16"]]],[11,"since","","",202,[[["self"]],["u32"]]],[11,"child","","",202,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",202,N],[11,"into_raw","","",202,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",203,[[["self"]],["bool"]]],[11,"opcode","","",203,[[["self"]],["u16"]]],[11,"since","","",203,[[["self"]],["u32"]]],[11,"child","","",203,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",203,N],[11,"into_raw","","",203,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",205,[[["self"]],["bool"]]],[11,"opcode","","",205,[[["self"]],["u16"]]],[11,"since","","",205,[[["self"]],["u32"]]],[11,"child","","",205,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",205,N],[11,"into_raw","","",205,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",206,[[["self"]],["bool"]]],[11,"opcode","","",206,[[["self"]],["u16"]]],[11,"since","","",206,[[["self"]],["u32"]]],[11,"child","","",206,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",206,N],[11,"into_raw","","",206,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",208,[[["self"]],["bool"]]],[11,"opcode","","",208,[[["self"]],["u16"]]],[11,"since","","",208,[[["self"]],["u32"]]],[11,"child","","",208,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",208,N],[11,"into_raw","","",208,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",781,[[["self"]],["bool"]]],[11,"opcode","","",781,[[["self"]],["u16"]]],[11,"since","","",781,[[["self"]],["u32"]]],[11,"child","","",781,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",781,N],[11,"into_raw","","",781,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",210,[[["self"]],["bool"]]],[11,"opcode","","",210,[[["self"]],["u16"]]],[11,"since","","",210,[[["self"]],["u32"]]],[11,"child","","",210,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",210,N],[11,"into_raw","","",210,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",211,[[["self"]],["bool"]]],[11,"opcode","","",211,[[["self"]],["u16"]]],[11,"since","","",211,[[["self"]],["u32"]]],[11,"child","","",211,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",211,N],[11,"into_raw","","",211,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",217,[[["self"]],["bool"]]],[11,"opcode","","",217,[[["self"]],["u16"]]],[11,"since","","",217,[[["self"]],["u32"]]],[11,"child","","",217,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",217,N],[11,"into_raw","","",217,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",218,[[["self"]],["bool"]]],[11,"opcode","","",218,[[["self"]],["u16"]]],[11,"since","","",218,[[["self"]],["u32"]]],[11,"child","","",218,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",218,N],[11,"into_raw","","",218,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",220,[[["self"]],["bool"]]],[11,"opcode","","",220,[[["self"]],["u16"]]],[11,"since","","",220,[[["self"]],["u32"]]],[11,"child","","",220,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",220,N],[11,"into_raw","","",220,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",221,[[["self"]],["bool"]]],[11,"opcode","","",221,[[["self"]],["u16"]]],[11,"since","","",221,[[["self"]],["u32"]]],[11,"child","","",221,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",221,N],[11,"into_raw","","",221,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",230,[[["self"]],["bool"]]],[11,"opcode","","",230,[[["self"]],["u16"]]],[11,"since","","",230,[[["self"]],["u32"]]],[11,"child","","",230,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",230,N],[11,"into_raw","","",230,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",782,[[["self"]],["bool"]]],[11,"opcode","","",782,[[["self"]],["u16"]]],[11,"since","","",782,[[["self"]],["u32"]]],[11,"child","","",782,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",782,N],[11,"into_raw","","",782,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",231,[[["self"]],["bool"]]],[11,"opcode","","",231,[[["self"]],["u16"]]],[11,"since","","",231,[[["self"]],["u32"]]],[11,"child","","",231,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",231,N],[11,"into_raw","","",231,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",232,[[["self"]],["bool"]]],[11,"opcode","","",232,[[["self"]],["u16"]]],[11,"since","","",232,[[["self"]],["u32"]]],[11,"child","","",232,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",232,N],[11,"into_raw","","",232,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",238,[[["self"]],["bool"]]],[11,"opcode","","",238,[[["self"]],["u16"]]],[11,"since","","",238,[[["self"]],["u32"]]],[11,"child","","",238,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",238,N],[11,"into_raw","","",238,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",239,[[["self"]],["bool"]]],[11,"opcode","","",239,[[["self"]],["u16"]]],[11,"since","","",239,[[["self"]],["u32"]]],[11,"child","","",239,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",239,N],[11,"into_raw","","",239,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",241,[[["self"]],["bool"]]],[11,"opcode","","",241,[[["self"]],["u16"]]],[11,"since","","",241,[[["self"]],["u32"]]],[11,"child","","",241,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",241,N],[11,"into_raw","","",241,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",242,[[["self"]],["bool"]]],[11,"opcode","","",242,[[["self"]],["u16"]]],[11,"since","","",242,[[["self"]],["u32"]]],[11,"child","","",242,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",242,N],[11,"into_raw","","",242,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",245,[[["self"]],["bool"]]],[11,"opcode","","",245,[[["self"]],["u16"]]],[11,"since","","",245,[[["self"]],["u32"]]],[11,"child","","",245,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",245,N],[11,"into_raw","","",245,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",246,[[["self"]],["bool"]]],[11,"opcode","","",246,[[["self"]],["u16"]]],[11,"since","","",246,[[["self"]],["u32"]]],[11,"child","","",246,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",246,N],[11,"into_raw","","",246,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",249,[[["self"]],["bool"]]],[11,"opcode","","",249,[[["self"]],["u16"]]],[11,"since","","",249,[[["self"]],["u32"]]],[11,"child","","",249,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",249,N],[11,"into_raw","","",249,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",250,[[["self"]],["bool"]]],[11,"opcode","","",250,[[["self"]],["u16"]]],[11,"since","","",250,[[["self"]],["u32"]]],[11,"child","","",250,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",250,N],[11,"into_raw","","",250,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",252,[[["self"]],["bool"]]],[11,"opcode","","",252,[[["self"]],["u16"]]],[11,"since","","",252,[[["self"]],["u32"]]],[11,"child","","",252,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",252,N],[11,"into_raw","","",252,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",253,[[["self"]],["bool"]]],[11,"opcode","","",253,[[["self"]],["u16"]]],[11,"since","","",253,[[["self"]],["u32"]]],[11,"child","","",253,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",253,N],[11,"into_raw","","",253,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",256,[[["self"]],["bool"]]],[11,"opcode","","",256,[[["self"]],["u16"]]],[11,"since","","",256,[[["self"]],["u32"]]],[11,"child","","",256,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",256,N],[11,"into_raw","","",256,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",257,[[["self"]],["bool"]]],[11,"opcode","","",257,[[["self"]],["u16"]]],[11,"since","","",257,[[["self"]],["u32"]]],[11,"child","","",257,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",257,N],[11,"into_raw","","",257,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",259,[[["self"]],["bool"]]],[11,"opcode","","",259,[[["self"]],["u16"]]],[11,"since","","",259,[[["self"]],["u32"]]],[11,"child","","",259,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",259,N],[11,"into_raw","","",259,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",784,[[["self"]],["bool"]]],[11,"opcode","","",784,[[["self"]],["u16"]]],[11,"since","","",784,[[["self"]],["u32"]]],[11,"child","","",784,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",784,N],[11,"into_raw","","",784,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",261,[[["self"]],["bool"]]],[11,"opcode","","",261,[[["self"]],["u16"]]],[11,"since","","",261,[[["self"]],["u32"]]],[11,"child","","",261,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",261,N],[11,"into_raw","","",261,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",262,[[["self"]],["bool"]]],[11,"opcode","","",262,[[["self"]],["u16"]]],[11,"since","","",262,[[["self"]],["u32"]]],[11,"child","","",262,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",262,N],[11,"into_raw","","",262,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",268,[[["self"]],["bool"]]],[11,"opcode","","",268,[[["self"]],["u16"]]],[11,"since","","",268,[[["self"]],["u32"]]],[11,"child","","",268,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",268,N],[11,"into_raw","","",268,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",269,[[["self"]],["bool"]]],[11,"opcode","","",269,[[["self"]],["u16"]]],[11,"since","","",269,[[["self"]],["u32"]]],[11,"child","","",269,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",269,N],[11,"into_raw","","",269,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",271,[[["self"]],["bool"]]],[11,"opcode","","",271,[[["self"]],["u16"]]],[11,"since","","",271,[[["self"]],["u32"]]],[11,"child","","",271,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",271,N],[11,"into_raw","","",271,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",272,[[["self"]],["bool"]]],[11,"opcode","","",272,[[["self"]],["u16"]]],[11,"since","","",272,[[["self"]],["u32"]]],[11,"child","","",272,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",272,N],[11,"into_raw","","",272,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",275,[[["self"]],["bool"]]],[11,"opcode","","",275,[[["self"]],["u16"]]],[11,"since","","",275,[[["self"]],["u32"]]],[11,"child","","",275,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",275,N],[11,"into_raw","","",275,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",276,[[["self"]],["bool"]]],[11,"opcode","","",276,[[["self"]],["u16"]]],[11,"since","","",276,[[["self"]],["u32"]]],[11,"child","","",276,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",276,N],[11,"into_raw","","",276,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",279,[[["self"]],["bool"]]],[11,"opcode","","",279,[[["self"]],["u16"]]],[11,"since","","",279,[[["self"]],["u32"]]],[11,"child","","",279,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",279,N],[11,"into_raw","","",279,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",280,[[["self"]],["bool"]]],[11,"opcode","","",280,[[["self"]],["u16"]]],[11,"since","","",280,[[["self"]],["u32"]]],[11,"child","","",280,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",280,N],[11,"into_raw","","",280,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",282,[[["self"]],["bool"]]],[11,"opcode","","",282,[[["self"]],["u16"]]],[11,"since","","",282,[[["self"]],["u32"]]],[11,"child","","",282,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",282,N],[11,"into_raw","","",282,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",283,[[["self"]],["bool"]]],[11,"opcode","","",283,[[["self"]],["u16"]]],[11,"since","","",283,[[["self"]],["u32"]]],[11,"child","","",283,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",283,N],[11,"into_raw","","",283,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",286,[[["self"]],["bool"]]],[11,"opcode","","",286,[[["self"]],["u16"]]],[11,"since","","",286,[[["self"]],["u32"]]],[11,"child","","",286,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",286,N],[11,"into_raw","","",286,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",287,[[["self"]],["bool"]]],[11,"opcode","","",287,[[["self"]],["u16"]]],[11,"since","","",287,[[["self"]],["u32"]]],[11,"child","","",287,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",287,N],[11,"into_raw","","",287,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",308,[[["self"]],["bool"]]],[11,"opcode","","",308,[[["self"]],["u16"]]],[11,"since","","",308,[[["self"]],["u32"]]],[11,"child","","",308,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",308,N],[11,"into_raw","","",308,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",309,[[["self"]],["bool"]]],[11,"opcode","","",309,[[["self"]],["u16"]]],[11,"since","","",309,[[["self"]],["u32"]]],[11,"child","","",309,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",309,N],[11,"into_raw","","",309,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",311,[[["self"]],["bool"]]],[11,"opcode","","",311,[[["self"]],["u16"]]],[11,"since","","",311,[[["self"]],["u32"]]],[11,"child","","",311,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",311,N],[11,"into_raw","","",311,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",785,[[["self"]],["bool"]]],[11,"opcode","","",785,[[["self"]],["u16"]]],[11,"since","","",785,[[["self"]],["u32"]]],[11,"child","","",785,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",785,N],[11,"into_raw","","",785,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",316,[[["self"]],["bool"]]],[11,"opcode","","",316,[[["self"]],["u16"]]],[11,"since","","",316,[[["self"]],["u32"]]],[11,"child","","",316,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",316,N],[11,"into_raw","","",316,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",317,[[["self"]],["bool"]]],[11,"opcode","","",317,[[["self"]],["u16"]]],[11,"since","","",317,[[["self"]],["u32"]]],[11,"child","","",317,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",317,N],[11,"into_raw","","",317,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",319,[[["self"]],["bool"]]],[11,"opcode","","",319,[[["self"]],["u16"]]],[11,"since","","",319,[[["self"]],["u32"]]],[11,"child","","",319,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",319,N],[11,"into_raw","","",319,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",787,[[["self"]],["bool"]]],[11,"opcode","","",787,[[["self"]],["u16"]]],[11,"since","","",787,[[["self"]],["u32"]]],[11,"child","","",787,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",787,N],[11,"into_raw","","",787,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",326,[[["self"]],["bool"]]],[11,"opcode","","",326,[[["self"]],["u16"]]],[11,"since","","",326,[[["self"]],["u32"]]],[11,"child","","",326,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",326,N],[11,"into_raw","","",326,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",327,[[["self"]],["bool"]]],[11,"opcode","","",327,[[["self"]],["u16"]]],[11,"since","","",327,[[["self"]],["u32"]]],[11,"child","","",327,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",327,N],[11,"into_raw","","",327,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",329,[[["self"]],["bool"]]],[11,"opcode","","",329,[[["self"]],["u16"]]],[11,"since","","",329,[[["self"]],["u32"]]],[11,"child","","",329,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",329,N],[11,"into_raw","","",329,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",788,[[["self"]],["bool"]]],[11,"opcode","","",788,[[["self"]],["u16"]]],[11,"since","","",788,[[["self"]],["u32"]]],[11,"child","","",788,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",788,N],[11,"into_raw","","",788,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",332,[[["self"]],["bool"]]],[11,"opcode","","",332,[[["self"]],["u16"]]],[11,"since","","",332,[[["self"]],["u32"]]],[11,"child","","",332,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",332,N],[11,"into_raw","","",332,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",333,[[["self"]],["bool"]]],[11,"opcode","","",333,[[["self"]],["u16"]]],[11,"since","","",333,[[["self"]],["u32"]]],[11,"child","","",333,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",333,N],[11,"into_raw","","",333,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",335,[[["self"]],["bool"]]],[11,"opcode","","",335,[[["self"]],["u16"]]],[11,"since","","",335,[[["self"]],["u32"]]],[11,"child","","",335,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",335,N],[11,"into_raw","","",335,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",790,[[["self"]],["bool"]]],[11,"opcode","","",790,[[["self"]],["u16"]]],[11,"since","","",790,[[["self"]],["u32"]]],[11,"child","","",790,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",790,N],[11,"into_raw","","",790,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",342,[[["self"]],["bool"]]],[11,"opcode","","",342,[[["self"]],["u16"]]],[11,"since","","",342,[[["self"]],["u32"]]],[11,"child","","",342,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",342,N],[11,"into_raw","","",342,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",791,[[["self"]],["bool"]]],[11,"opcode","","",791,[[["self"]],["u16"]]],[11,"since","","",791,[[["self"]],["u32"]]],[11,"child","","",791,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",791,N],[11,"into_raw","","",791,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",345,[[["self"]],["bool"]]],[11,"opcode","","",345,[[["self"]],["u16"]]],[11,"since","","",345,[[["self"]],["u32"]]],[11,"child","","",345,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",345,N],[11,"into_raw","","",345,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",346,[[["self"]],["bool"]]],[11,"opcode","","",346,[[["self"]],["u16"]]],[11,"since","","",346,[[["self"]],["u32"]]],[11,"child","","",346,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",346,N],[11,"into_raw","","",346,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",348,[[["self"]],["bool"]]],[11,"opcode","","",348,[[["self"]],["u16"]]],[11,"since","","",348,[[["self"]],["u32"]]],[11,"child","","",348,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",348,N],[11,"into_raw","","",348,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",793,[[["self"]],["bool"]]],[11,"opcode","","",793,[[["self"]],["u16"]]],[11,"since","","",793,[[["self"]],["u32"]]],[11,"child","","",793,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",793,N],[11,"into_raw","","",793,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",352,[[["self"]],["bool"]]],[11,"opcode","","",352,[[["self"]],["u16"]]],[11,"since","","",352,[[["self"]],["u32"]]],[11,"child","","",352,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",352,N],[11,"into_raw","","",352,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",353,[[["self"]],["bool"]]],[11,"opcode","","",353,[[["self"]],["u16"]]],[11,"since","","",353,[[["self"]],["u32"]]],[11,"child","","",353,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",353,N],[11,"into_raw","","",353,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",358,[[["self"]],["bool"]]],[11,"opcode","","",358,[[["self"]],["u16"]]],[11,"since","","",358,[[["self"]],["u32"]]],[11,"child","","",358,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",358,N],[11,"into_raw","","",358,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",794,[[["self"]],["bool"]]],[11,"opcode","","",794,[[["self"]],["u16"]]],[11,"since","","",794,[[["self"]],["u32"]]],[11,"child","","",794,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",794,N],[11,"into_raw","","",794,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",359,[[["self"]],["bool"]]],[11,"opcode","","",359,[[["self"]],["u16"]]],[11,"since","","",359,[[["self"]],["u32"]]],[11,"child","","",359,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",359,N],[11,"into_raw","","",359,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",795,[[["self"]],["bool"]]],[11,"opcode","","",795,[[["self"]],["u16"]]],[11,"since","","",795,[[["self"]],["u32"]]],[11,"child","","",795,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",795,N],[11,"into_raw","","",795,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",360,[[["self"]],["bool"]]],[11,"opcode","","",360,[[["self"]],["u16"]]],[11,"since","","",360,[[["self"]],["u32"]]],[11,"child","","",360,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",360,N],[11,"into_raw","","",360,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",361,[[["self"]],["bool"]]],[11,"opcode","","",361,[[["self"]],["u16"]]],[11,"since","","",361,[[["self"]],["u32"]]],[11,"child","","",361,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",361,N],[11,"into_raw","","",361,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",363,[[["self"]],["bool"]]],[11,"opcode","","",363,[[["self"]],["u16"]]],[11,"since","","",363,[[["self"]],["u32"]]],[11,"child","","",363,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",363,N],[11,"into_raw","","",363,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",364,[[["self"]],["bool"]]],[11,"opcode","","",364,[[["self"]],["u16"]]],[11,"since","","",364,[[["self"]],["u32"]]],[11,"child","","",364,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",364,N],[11,"into_raw","","",364,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",366,[[["self"]],["bool"]]],[11,"opcode","","",366,[[["self"]],["u16"]]],[11,"since","","",366,[[["self"]],["u32"]]],[11,"child","","",366,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",366,N],[11,"into_raw","","",366,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",797,[[["self"]],["bool"]]],[11,"opcode","","",797,[[["self"]],["u16"]]],[11,"since","","",797,[[["self"]],["u32"]]],[11,"child","","",797,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",797,N],[11,"into_raw","","",797,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",368,[[["self"]],["bool"]]],[11,"opcode","","",368,[[["self"]],["u16"]]],[11,"since","","",368,[[["self"]],["u32"]]],[11,"child","","",368,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",368,N],[11,"into_raw","","",368,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",799,[[["self"]],["bool"]]],[11,"opcode","","",799,[[["self"]],["u16"]]],[11,"since","","",799,[[["self"]],["u32"]]],[11,"child","","",799,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",799,N],[11,"into_raw","","",799,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",370,[[["self"]],["bool"]]],[11,"opcode","","",370,[[["self"]],["u16"]]],[11,"since","","",370,[[["self"]],["u32"]]],[11,"child","","",370,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",370,N],[11,"into_raw","","",370,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",371,[[["self"]],["bool"]]],[11,"opcode","","",371,[[["self"]],["u16"]]],[11,"since","","",371,[[["self"]],["u32"]]],[11,"child","","",371,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",371,N],[11,"into_raw","","",371,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",373,[[["self"]],["bool"]]],[11,"opcode","","",373,[[["self"]],["u16"]]],[11,"since","","",373,[[["self"]],["u32"]]],[11,"child","","",373,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",373,N],[11,"into_raw","","",373,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",374,[[["self"]],["bool"]]],[11,"opcode","","",374,[[["self"]],["u16"]]],[11,"since","","",374,[[["self"]],["u32"]]],[11,"child","","",374,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",374,N],[11,"into_raw","","",374,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",382,[[["self"]],["bool"]]],[11,"opcode","","",382,[[["self"]],["u16"]]],[11,"since","","",382,[[["self"]],["u32"]]],[11,"child","","",382,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",382,N],[11,"into_raw","","",382,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",800,[[["self"]],["bool"]]],[11,"opcode","","",800,[[["self"]],["u16"]]],[11,"since","","",800,[[["self"]],["u32"]]],[11,"child","","",800,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",800,N],[11,"into_raw","","",800,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",383,[[["self"]],["bool"]]],[11,"opcode","","",383,[[["self"]],["u16"]]],[11,"since","","",383,[[["self"]],["u32"]]],[11,"child","","",383,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",383,N],[11,"into_raw","","",383,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",801,[[["self"]],["bool"]]],[11,"opcode","","",801,[[["self"]],["u16"]]],[11,"since","","",801,[[["self"]],["u32"]]],[11,"child","","",801,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",801,N],[11,"into_raw","","",801,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",384,[[["self"]],["bool"]]],[11,"opcode","","",384,[[["self"]],["u16"]]],[11,"since","","",384,[[["self"]],["u32"]]],[11,"child","","",384,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",384,N],[11,"into_raw","","",384,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",385,[[["self"]],["bool"]]],[11,"opcode","","",385,[[["self"]],["u16"]]],[11,"since","","",385,[[["self"]],["u32"]]],[11,"child","","",385,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",385,N],[11,"into_raw","","",385,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",387,[[["self"]],["bool"]]],[11,"opcode","","",387,[[["self"]],["u16"]]],[11,"since","","",387,[[["self"]],["u32"]]],[11,"child","","",387,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",387,N],[11,"into_raw","","",387,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",388,[[["self"]],["bool"]]],[11,"opcode","","",388,[[["self"]],["u16"]]],[11,"since","","",388,[[["self"]],["u32"]]],[11,"child","","",388,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",388,N],[11,"into_raw","","",388,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",390,[[["self"]],["bool"]]],[11,"opcode","","",390,[[["self"]],["u16"]]],[11,"since","","",390,[[["self"]],["u32"]]],[11,"child","","",390,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",390,N],[11,"into_raw","","",390,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",803,[[["self"]],["bool"]]],[11,"opcode","","",803,[[["self"]],["u16"]]],[11,"since","","",803,[[["self"]],["u32"]]],[11,"child","","",803,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",803,N],[11,"into_raw","","",803,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",392,[[["self"]],["bool"]]],[11,"opcode","","",392,[[["self"]],["u16"]]],[11,"since","","",392,[[["self"]],["u32"]]],[11,"child","","",392,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",392,N],[11,"into_raw","","",392,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",805,[[["self"]],["bool"]]],[11,"opcode","","",805,[[["self"]],["u16"]]],[11,"since","","",805,[[["self"]],["u32"]]],[11,"child","","",805,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",805,N],[11,"into_raw","","",805,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",394,[[["self"]],["bool"]]],[11,"opcode","","",394,[[["self"]],["u16"]]],[11,"since","","",394,[[["self"]],["u32"]]],[11,"child","","",394,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",394,N],[11,"into_raw","","",394,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",395,[[["self"]],["bool"]]],[11,"opcode","","",395,[[["self"]],["u16"]]],[11,"since","","",395,[[["self"]],["u32"]]],[11,"child","","",395,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",395,N],[11,"into_raw","","",395,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",397,[[["self"]],["bool"]]],[11,"opcode","","",397,[[["self"]],["u16"]]],[11,"since","","",397,[[["self"]],["u32"]]],[11,"child","","",397,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",397,N],[11,"into_raw","","",397,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",398,[[["self"]],["bool"]]],[11,"opcode","","",398,[[["self"]],["u16"]]],[11,"since","","",398,[[["self"]],["u32"]]],[11,"child","","",398,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",398,N],[11,"into_raw","","",398,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",406,[[["self"]],["bool"]]],[11,"opcode","","",406,[[["self"]],["u16"]]],[11,"since","","",406,[[["self"]],["u32"]]],[11,"child","","",406,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",406,N],[11,"into_raw","","",406,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",806,[[["self"]],["bool"]]],[11,"opcode","","",806,[[["self"]],["u16"]]],[11,"since","","",806,[[["self"]],["u32"]]],[11,"child","","",806,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",806,N],[11,"into_raw","","",806,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",407,[[["self"]],["bool"]]],[11,"opcode","","",407,[[["self"]],["u16"]]],[11,"since","","",407,[[["self"]],["u32"]]],[11,"child","","",407,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",407,N],[11,"into_raw","","",407,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",408,[[["self"]],["bool"]]],[11,"opcode","","",408,[[["self"]],["u16"]]],[11,"since","","",408,[[["self"]],["u32"]]],[11,"child","","",408,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",408,N],[11,"into_raw","","",408,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",410,[[["self"]],["bool"]]],[11,"opcode","","",410,[[["self"]],["u16"]]],[11,"since","","",410,[[["self"]],["u32"]]],[11,"child","","",410,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",410,N],[11,"into_raw","","",410,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",808,[[["self"]],["bool"]]],[11,"opcode","","",808,[[["self"]],["u16"]]],[11,"since","","",808,[[["self"]],["u32"]]],[11,"child","","",808,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",808,N],[11,"into_raw","","",808,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",412,[[["self"]],["bool"]]],[11,"opcode","","",412,[[["self"]],["u16"]]],[11,"since","","",412,[[["self"]],["u32"]]],[11,"child","","",412,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",412,N],[11,"into_raw","","",412,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",413,[[["self"]],["bool"]]],[11,"opcode","","",413,[[["self"]],["u16"]]],[11,"since","","",413,[[["self"]],["u32"]]],[11,"child","","",413,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",413,N],[11,"into_raw","","",413,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",420,[[["self"]],["bool"]]],[11,"opcode","","",420,[[["self"]],["u16"]]],[11,"since","","",420,[[["self"]],["u32"]]],[11,"child","","",420,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",420,N],[11,"into_raw","","",420,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",421,[[["self"]],["bool"]]],[11,"opcode","","",421,[[["self"]],["u16"]]],[11,"since","","",421,[[["self"]],["u32"]]],[11,"child","","",421,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",421,N],[11,"into_raw","","",421,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",425,[[["self"]],["bool"]]],[11,"opcode","","",425,[[["self"]],["u16"]]],[11,"since","","",425,[[["self"]],["u32"]]],[11,"child","","",425,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",425,N],[11,"into_raw","","",425,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",426,[[["self"]],["bool"]]],[11,"opcode","","",426,[[["self"]],["u16"]]],[11,"since","","",426,[[["self"]],["u32"]]],[11,"child","","",426,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",426,N],[11,"into_raw","","",426,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",428,[[["self"]],["bool"]]],[11,"opcode","","",428,[[["self"]],["u16"]]],[11,"since","","",428,[[["self"]],["u32"]]],[11,"child","","",428,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",428,N],[11,"into_raw","","",428,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",429,[[["self"]],["bool"]]],[11,"opcode","","",429,[[["self"]],["u16"]]],[11,"since","","",429,[[["self"]],["u32"]]],[11,"child","","",429,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",429,N],[11,"into_raw","","",429,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",433,[[["self"]],["bool"]]],[11,"opcode","","",433,[[["self"]],["u16"]]],[11,"since","","",433,[[["self"]],["u32"]]],[11,"child","","",433,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",433,N],[11,"into_raw","","",433,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",434,[[["self"]],["bool"]]],[11,"opcode","","",434,[[["self"]],["u16"]]],[11,"since","","",434,[[["self"]],["u32"]]],[11,"child","","",434,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",434,N],[11,"into_raw","","",434,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",438,[[["self"]],["bool"]]],[11,"opcode","","",438,[[["self"]],["u16"]]],[11,"since","","",438,[[["self"]],["u32"]]],[11,"child","","",438,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",438,N],[11,"into_raw","","",438,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",439,[[["self"]],["bool"]]],[11,"opcode","","",439,[[["self"]],["u16"]]],[11,"since","","",439,[[["self"]],["u32"]]],[11,"child","","",439,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",439,N],[11,"into_raw","","",439,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",441,[[["self"]],["bool"]]],[11,"opcode","","",441,[[["self"]],["u16"]]],[11,"since","","",441,[[["self"]],["u32"]]],[11,"child","","",441,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",441,N],[11,"into_raw","","",441,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",442,[[["self"]],["bool"]]],[11,"opcode","","",442,[[["self"]],["u16"]]],[11,"since","","",442,[[["self"]],["u32"]]],[11,"child","","",442,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",442,N],[11,"into_raw","","",442,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",451,[[["self"]],["bool"]]],[11,"opcode","","",451,[[["self"]],["u16"]]],[11,"since","","",451,[[["self"]],["u32"]]],[11,"child","","",451,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",451,N],[11,"into_raw","","",451,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",452,[[["self"]],["bool"]]],[11,"opcode","","",452,[[["self"]],["u16"]]],[11,"since","","",452,[[["self"]],["u32"]]],[11,"child","","",452,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",452,N],[11,"into_raw","","",452,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",455,[[["self"]],["bool"]]],[11,"opcode","","",455,[[["self"]],["u16"]]],[11,"since","","",455,[[["self"]],["u32"]]],[11,"child","","",455,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",455,N],[11,"into_raw","","",455,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",809,[[["self"]],["bool"]]],[11,"opcode","","",809,[[["self"]],["u16"]]],[11,"since","","",809,[[["self"]],["u32"]]],[11,"child","","",809,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",809,N],[11,"into_raw","","",809,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",457,[[["self"]],["bool"]]],[11,"opcode","","",457,[[["self"]],["u16"]]],[11,"since","","",457,[[["self"]],["u32"]]],[11,"child","","",457,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",457,N],[11,"into_raw","","",457,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",458,[[["self"]],["bool"]]],[11,"opcode","","",458,[[["self"]],["u16"]]],[11,"since","","",458,[[["self"]],["u32"]]],[11,"child","","",458,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",458,N],[11,"into_raw","","",458,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",462,[[["self"]],["bool"]]],[11,"opcode","","",462,[[["self"]],["u16"]]],[11,"since","","",462,[[["self"]],["u32"]]],[11,"child","","",462,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",462,N],[11,"into_raw","","",462,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",463,[[["self"]],["bool"]]],[11,"opcode","","",463,[[["self"]],["u16"]]],[11,"since","","",463,[[["self"]],["u32"]]],[11,"child","","",463,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",463,N],[11,"into_raw","","",463,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",466,[[["self"]],["bool"]]],[11,"opcode","","",466,[[["self"]],["u16"]]],[11,"since","","",466,[[["self"]],["u32"]]],[11,"child","","",466,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",466,N],[11,"into_raw","","",466,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",467,[[["self"]],["bool"]]],[11,"opcode","","",467,[[["self"]],["u16"]]],[11,"since","","",467,[[["self"]],["u32"]]],[11,"child","","",467,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",467,N],[11,"into_raw","","",467,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",470,[[["self"]],["bool"]]],[11,"opcode","","",470,[[["self"]],["u16"]]],[11,"since","","",470,[[["self"]],["u32"]]],[11,"child","","",470,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",470,N],[11,"into_raw","","",470,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",471,[[["self"]],["bool"]]],[11,"opcode","","",471,[[["self"]],["u16"]]],[11,"since","","",471,[[["self"]],["u32"]]],[11,"child","","",471,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",471,N],[11,"into_raw","","",471,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",474,[[["self"]],["bool"]]],[11,"opcode","","",474,[[["self"]],["u16"]]],[11,"since","","",474,[[["self"]],["u32"]]],[11,"child","","",474,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",474,N],[11,"into_raw","","",474,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",811,[[["self"]],["bool"]]],[11,"opcode","","",811,[[["self"]],["u16"]]],[11,"since","","",811,[[["self"]],["u32"]]],[11,"child","","",811,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",811,N],[11,"into_raw","","",811,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",477,[[["self"]],["bool"]]],[11,"opcode","","",477,[[["self"]],["u16"]]],[11,"since","","",477,[[["self"]],["u32"]]],[11,"child","","",477,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",477,N],[11,"into_raw","","",477,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",478,[[["self"]],["bool"]]],[11,"opcode","","",478,[[["self"]],["u16"]]],[11,"since","","",478,[[["self"]],["u32"]]],[11,"child","","",478,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",478,N],[11,"into_raw","","",478,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",482,[[["self"]],["bool"]]],[11,"opcode","","",482,[[["self"]],["u16"]]],[11,"since","","",482,[[["self"]],["u32"]]],[11,"child","","",482,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",482,N],[11,"into_raw","","",482,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",483,[[["self"]],["bool"]]],[11,"opcode","","",483,[[["self"]],["u16"]]],[11,"since","","",483,[[["self"]],["u32"]]],[11,"child","","",483,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",483,N],[11,"into_raw","","",483,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",486,[[["self"]],["bool"]]],[11,"opcode","","",486,[[["self"]],["u16"]]],[11,"since","","",486,[[["self"]],["u32"]]],[11,"child","","",486,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",486,N],[11,"into_raw","","",486,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",487,[[["self"]],["bool"]]],[11,"opcode","","",487,[[["self"]],["u16"]]],[11,"since","","",487,[[["self"]],["u32"]]],[11,"child","","",487,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",487,N],[11,"into_raw","","",487,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",504,[[["self"]],["bool"]]],[11,"opcode","","",504,[[["self"]],["u16"]]],[11,"since","","",504,[[["self"]],["u32"]]],[11,"child","","",504,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",504,N],[11,"into_raw","","",504,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",812,[[["self"]],["bool"]]],[11,"opcode","","",812,[[["self"]],["u16"]]],[11,"since","","",812,[[["self"]],["u32"]]],[11,"child","","",812,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",812,N],[11,"into_raw","","",812,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",505,[[["self"]],["bool"]]],[11,"opcode","","",505,[[["self"]],["u16"]]],[11,"since","","",505,[[["self"]],["u32"]]],[11,"child","","",505,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",505,N],[11,"into_raw","","",505,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",813,[[["self"]],["bool"]]],[11,"opcode","","",813,[[["self"]],["u16"]]],[11,"since","","",813,[[["self"]],["u32"]]],[11,"child","","",813,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",813,N],[11,"into_raw","","",813,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",506,[[["self"]],["bool"]]],[11,"opcode","","",506,[[["self"]],["u16"]]],[11,"since","","",506,[[["self"]],["u32"]]],[11,"child","","",506,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",506,N],[11,"into_raw","","",506,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",815,[[["self"]],["bool"]]],[11,"opcode","","",815,[[["self"]],["u16"]]],[11,"since","","",815,[[["self"]],["u32"]]],[11,"child","","",815,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",815,N],[11,"into_raw","","",815,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",508,[[["self"]],["bool"]]],[11,"opcode","","",508,[[["self"]],["u16"]]],[11,"since","","",508,[[["self"]],["u32"]]],[11,"child","","",508,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",508,N],[11,"into_raw","","",508,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",817,[[["self"]],["bool"]]],[11,"opcode","","",817,[[["self"]],["u16"]]],[11,"since","","",817,[[["self"]],["u32"]]],[11,"child","","",817,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",817,N],[11,"into_raw","","",817,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",512,[[["self"]],["bool"]]],[11,"opcode","","",512,[[["self"]],["u16"]]],[11,"since","","",512,[[["self"]],["u32"]]],[11,"child","","",512,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",512,N],[11,"into_raw","","",512,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",818,[[["self"]],["bool"]]],[11,"opcode","","",818,[[["self"]],["u16"]]],[11,"since","","",818,[[["self"]],["u32"]]],[11,"child","","",818,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",818,N],[11,"into_raw","","",818,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",513,[[["self"]],["bool"]]],[11,"opcode","","",513,[[["self"]],["u16"]]],[11,"since","","",513,[[["self"]],["u32"]]],[11,"child","","",513,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",513,N],[11,"into_raw","","",513,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",514,[[["self"]],["bool"]]],[11,"opcode","","",514,[[["self"]],["u16"]]],[11,"since","","",514,[[["self"]],["u32"]]],[11,"child","","",514,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",514,N],[11,"into_raw","","",514,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",516,[[["self"]],["bool"]]],[11,"opcode","","",516,[[["self"]],["u16"]]],[11,"since","","",516,[[["self"]],["u32"]]],[11,"child","","",516,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",516,N],[11,"into_raw","","",516,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",517,[[["self"]],["bool"]]],[11,"opcode","","",517,[[["self"]],["u16"]]],[11,"since","","",517,[[["self"]],["u32"]]],[11,"child","","",517,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",517,N],[11,"into_raw","","",517,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",519,[[["self"]],["bool"]]],[11,"opcode","","",519,[[["self"]],["u16"]]],[11,"since","","",519,[[["self"]],["u32"]]],[11,"child","","",519,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",519,N],[11,"into_raw","","",519,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",520,[[["self"]],["bool"]]],[11,"opcode","","",520,[[["self"]],["u16"]]],[11,"since","","",520,[[["self"]],["u32"]]],[11,"child","","",520,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",520,N],[11,"into_raw","","",520,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",522,[[["self"]],["bool"]]],[11,"opcode","","",522,[[["self"]],["u16"]]],[11,"since","","",522,[[["self"]],["u32"]]],[11,"child","","",522,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",522,N],[11,"into_raw","","",522,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",820,[[["self"]],["bool"]]],[11,"opcode","","",820,[[["self"]],["u16"]]],[11,"since","","",820,[[["self"]],["u32"]]],[11,"child","","",820,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",820,N],[11,"into_raw","","",820,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",524,[[["self"]],["bool"]]],[11,"opcode","","",524,[[["self"]],["u16"]]],[11,"since","","",524,[[["self"]],["u32"]]],[11,"child","","",524,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",524,N],[11,"into_raw","","",524,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",525,[[["self"]],["bool"]]],[11,"opcode","","",525,[[["self"]],["u16"]]],[11,"since","","",525,[[["self"]],["u32"]]],[11,"child","","",525,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",525,N],[11,"into_raw","","",525,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",527,[[["self"]],["bool"]]],[11,"opcode","","",527,[[["self"]],["u16"]]],[11,"since","","",527,[[["self"]],["u32"]]],[11,"child","","",527,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",527,N],[11,"into_raw","","",527,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",528,[[["self"]],["bool"]]],[11,"opcode","","",528,[[["self"]],["u16"]]],[11,"since","","",528,[[["self"]],["u32"]]],[11,"child","","",528,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",528,N],[11,"into_raw","","",528,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",530,[[["self"]],["bool"]]],[11,"opcode","","",530,[[["self"]],["u16"]]],[11,"since","","",530,[[["self"]],["u32"]]],[11,"child","","",530,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",530,N],[11,"into_raw","","",530,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",531,[[["self"]],["bool"]]],[11,"opcode","","",531,[[["self"]],["u16"]]],[11,"since","","",531,[[["self"]],["u32"]]],[11,"child","","",531,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",531,N],[11,"into_raw","","",531,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1","",540,[[["self"]],["bool"]]],[11,"opcode","","",540,[[["self"]],["u16"]]],[11,"since","","",540,[[["self"]],["u32"]]],[11,"child","","",540,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",540,N],[11,"into_raw","","",540,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",821,[[["self"]],["bool"]]],[11,"opcode","","",821,[[["self"]],["u16"]]],[11,"since","","",821,[[["self"]],["u32"]]],[11,"child","","",821,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",821,N],[11,"into_raw","","",821,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1","",542,[[["self"]],["bool"]]],[11,"opcode","","",542,[[["self"]],["u16"]]],[11,"since","","",542,[[["self"]],["u32"]]],[11,"child","","",542,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",542,N],[11,"into_raw","","",542,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",543,[[["self"]],["bool"]]],[11,"opcode","","",543,[[["self"]],["u16"]]],[11,"since","","",543,[[["self"]],["u32"]]],[11,"child","","",543,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",543,N],[11,"into_raw","","",543,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1","",546,[[["self"]],["bool"]]],[11,"opcode","","",546,[[["self"]],["u16"]]],[11,"since","","",546,[[["self"]],["u32"]]],[11,"child","","",546,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",546,N],[11,"into_raw","","",546,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",547,[[["self"]],["bool"]]],[11,"opcode","","",547,[[["self"]],["u16"]]],[11,"since","","",547,[[["self"]],["u32"]]],[11,"child","","",547,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",547,N],[11,"into_raw","","",547,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1","",549,[[["self"]],["bool"]]],[11,"opcode","","",549,[[["self"]],["u16"]]],[11,"since","","",549,[[["self"]],["u32"]]],[11,"child","","",549,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",549,N],[11,"into_raw","","",549,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",550,[[["self"]],["bool"]]],[11,"opcode","","",550,[[["self"]],["u16"]]],[11,"since","","",550,[[["self"]],["u32"]]],[11,"child","","",550,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",550,N],[11,"into_raw","","",550,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",552,[[["self"]],["bool"]]],[11,"opcode","","",552,[[["self"]],["u16"]]],[11,"since","","",552,[[["self"]],["u32"]]],[11,"child","","",552,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",552,N],[11,"into_raw","","",552,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",823,[[["self"]],["bool"]]],[11,"opcode","","",823,[[["self"]],["u16"]]],[11,"since","","",823,[[["self"]],["u32"]]],[11,"child","","",823,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",823,N],[11,"into_raw","","",823,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",555,[[["self"]],["bool"]]],[11,"opcode","","",555,[[["self"]],["u16"]]],[11,"since","","",555,[[["self"]],["u32"]]],[11,"child","","",555,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",555,N],[11,"into_raw","","",555,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",556,[[["self"]],["bool"]]],[11,"opcode","","",556,[[["self"]],["u16"]]],[11,"since","","",556,[[["self"]],["u32"]]],[11,"child","","",556,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",556,N],[11,"into_raw","","",556,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",559,[[["self"]],["bool"]]],[11,"opcode","","",559,[[["self"]],["u16"]]],[11,"since","","",559,[[["self"]],["u32"]]],[11,"child","","",559,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",559,N],[11,"into_raw","","",559,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",560,[[["self"]],["bool"]]],[11,"opcode","","",560,[[["self"]],["u16"]]],[11,"since","","",560,[[["self"]],["u32"]]],[11,"child","","",560,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",560,N],[11,"into_raw","","",560,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",562,[[["self"]],["bool"]]],[11,"opcode","","",562,[[["self"]],["u16"]]],[11,"since","","",562,[[["self"]],["u32"]]],[11,"child","","",562,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",562,N],[11,"into_raw","","",562,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",563,[[["self"]],["bool"]]],[11,"opcode","","",563,[[["self"]],["u16"]]],[11,"since","","",563,[[["self"]],["u32"]]],[11,"child","","",563,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",563,N],[11,"into_raw","","",563,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",572,[[["self"]],["bool"]]],[11,"opcode","","",572,[[["self"]],["u16"]]],[11,"since","","",572,[[["self"]],["u32"]]],[11,"child","","",572,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",572,N],[11,"into_raw","","",572,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",824,[[["self"]],["bool"]]],[11,"opcode","","",824,[[["self"]],["u16"]]],[11,"since","","",824,[[["self"]],["u32"]]],[11,"child","","",824,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",824,N],[11,"into_raw","","",824,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",575,[[["self"]],["bool"]]],[11,"opcode","","",575,[[["self"]],["u16"]]],[11,"since","","",575,[[["self"]],["u32"]]],[11,"child","","",575,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",575,N],[11,"into_raw","","",575,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",576,[[["self"]],["bool"]]],[11,"opcode","","",576,[[["self"]],["u16"]]],[11,"since","","",576,[[["self"]],["u32"]]],[11,"child","","",576,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",576,N],[11,"into_raw","","",576,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",578,[[["self"]],["bool"]]],[11,"opcode","","",578,[[["self"]],["u16"]]],[11,"since","","",578,[[["self"]],["u32"]]],[11,"child","","",578,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",578,N],[11,"into_raw","","",578,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",826,[[["self"]],["bool"]]],[11,"opcode","","",826,[[["self"]],["u16"]]],[11,"since","","",826,[[["self"]],["u32"]]],[11,"child","","",826,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",826,N],[11,"into_raw","","",826,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",582,[[["self"]],["bool"]]],[11,"opcode","","",582,[[["self"]],["u16"]]],[11,"since","","",582,[[["self"]],["u32"]]],[11,"child","","",582,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",582,N],[11,"into_raw","","",582,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",583,[[["self"]],["bool"]]],[11,"opcode","","",583,[[["self"]],["u16"]]],[11,"since","","",583,[[["self"]],["u32"]]],[11,"child","","",583,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",583,N],[11,"into_raw","","",583,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",588,[[["self"]],["bool"]]],[11,"opcode","","",588,[[["self"]],["u16"]]],[11,"since","","",588,[[["self"]],["u32"]]],[11,"child","","",588,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",588,N],[11,"into_raw","","",588,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",589,[[["self"]],["bool"]]],[11,"opcode","","",589,[[["self"]],["u16"]]],[11,"since","","",589,[[["self"]],["u32"]]],[11,"child","","",589,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",589,N],[11,"into_raw","","",589,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",593,[[["self"]],["bool"]]],[11,"opcode","","",593,[[["self"]],["u16"]]],[11,"since","","",593,[[["self"]],["u32"]]],[11,"child","","",593,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",593,N],[11,"into_raw","","",593,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",594,[[["self"]],["bool"]]],[11,"opcode","","",594,[[["self"]],["u16"]]],[11,"since","","",594,[[["self"]],["u32"]]],[11,"child","","",594,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",594,N],[11,"into_raw","","",594,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",596,[[["self"]],["bool"]]],[11,"opcode","","",596,[[["self"]],["u16"]]],[11,"since","","",596,[[["self"]],["u32"]]],[11,"child","","",596,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",596,N],[11,"into_raw","","",596,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",597,[[["self"]],["bool"]]],[11,"opcode","","",597,[[["self"]],["u16"]]],[11,"since","","",597,[[["self"]],["u32"]]],[11,"child","","",597,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",597,N],[11,"into_raw","","",597,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",601,[[["self"]],["bool"]]],[11,"opcode","","",601,[[["self"]],["u16"]]],[11,"since","","",601,[[["self"]],["u32"]]],[11,"child","","",601,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",601,N],[11,"into_raw","","",601,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",602,[[["self"]],["bool"]]],[11,"opcode","","",602,[[["self"]],["u16"]]],[11,"since","","",602,[[["self"]],["u32"]]],[11,"child","","",602,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",602,N],[11,"into_raw","","",602,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",608,[[["self"]],["bool"]]],[11,"opcode","","",608,[[["self"]],["u16"]]],[11,"since","","",608,[[["self"]],["u32"]]],[11,"child","","",608,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",608,N],[11,"into_raw","","",608,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",827,[[["self"]],["bool"]]],[11,"opcode","","",827,[[["self"]],["u16"]]],[11,"since","","",827,[[["self"]],["u32"]]],[11,"child","","",827,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",827,N],[11,"into_raw","","",827,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",610,[[["self"]],["bool"]]],[11,"opcode","","",610,[[["self"]],["u16"]]],[11,"since","","",610,[[["self"]],["u32"]]],[11,"child","","",610,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",610,N],[11,"into_raw","","",610,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",611,[[["self"]],["bool"]]],[11,"opcode","","",611,[[["self"]],["u16"]]],[11,"since","","",611,[[["self"]],["u32"]]],[11,"child","","",611,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",611,N],[11,"into_raw","","",611,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",613,[[["self"]],["bool"]]],[11,"opcode","","",613,[[["self"]],["u16"]]],[11,"since","","",613,[[["self"]],["u32"]]],[11,"child","","",613,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",613,N],[11,"into_raw","","",613,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",829,[[["self"]],["bool"]]],[11,"opcode","","",829,[[["self"]],["u16"]]],[11,"since","","",829,[[["self"]],["u32"]]],[11,"child","","",829,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",829,N],[11,"into_raw","","",829,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",616,[[["self"]],["bool"]]],[11,"opcode","","",616,[[["self"]],["u16"]]],[11,"since","","",616,[[["self"]],["u32"]]],[11,"child","","",616,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",616,N],[11,"into_raw","","",616,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",617,[[["self"]],["bool"]]],[11,"opcode","","",617,[[["self"]],["u16"]]],[11,"since","","",617,[[["self"]],["u32"]]],[11,"child","","",617,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",617,N],[11,"into_raw","","",617,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",623,[[["self"]],["bool"]]],[11,"opcode","","",623,[[["self"]],["u16"]]],[11,"since","","",623,[[["self"]],["u32"]]],[11,"child","","",623,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",623,N],[11,"into_raw","","",623,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",830,[[["self"]],["bool"]]],[11,"opcode","","",830,[[["self"]],["u16"]]],[11,"since","","",830,[[["self"]],["u32"]]],[11,"child","","",830,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",830,N],[11,"into_raw","","",830,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",624,[[["self"]],["bool"]]],[11,"opcode","","",624,[[["self"]],["u16"]]],[11,"since","","",624,[[["self"]],["u32"]]],[11,"child","","",624,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",624,N],[11,"into_raw","","",624,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",831,[[["self"]],["bool"]]],[11,"opcode","","",831,[[["self"]],["u16"]]],[11,"since","","",831,[[["self"]],["u32"]]],[11,"child","","",831,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",831,N],[11,"into_raw","","",831,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",626,[[["self"]],["bool"]]],[11,"opcode","","",626,[[["self"]],["u16"]]],[11,"since","","",626,[[["self"]],["u32"]]],[11,"child","","",626,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",626,N],[11,"into_raw","","",626,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",833,[[["self"]],["bool"]]],[11,"opcode","","",833,[[["self"]],["u16"]]],[11,"since","","",833,[[["self"]],["u32"]]],[11,"child","","",833,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",833,N],[11,"into_raw","","",833,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",628,[[["self"]],["bool"]]],[11,"opcode","","",628,[[["self"]],["u16"]]],[11,"since","","",628,[[["self"]],["u32"]]],[11,"child","","",628,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",628,N],[11,"into_raw","","",628,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",835,[[["self"]],["bool"]]],[11,"opcode","","",835,[[["self"]],["u16"]]],[11,"since","","",835,[[["self"]],["u32"]]],[11,"child","","",835,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",835,N],[11,"into_raw","","",835,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",634,[[["self"]],["bool"]]],[11,"opcode","","",634,[[["self"]],["u16"]]],[11,"since","","",634,[[["self"]],["u32"]]],[11,"child","","",634,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",634,N],[11,"into_raw","","",634,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",836,[[["self"]],["bool"]]],[11,"opcode","","",836,[[["self"]],["u16"]]],[11,"since","","",836,[[["self"]],["u32"]]],[11,"child","","",836,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",836,N],[11,"into_raw","","",836,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",636,[[["self"]],["bool"]]],[11,"opcode","","",636,[[["self"]],["u16"]]],[11,"since","","",636,[[["self"]],["u32"]]],[11,"child","","",636,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",636,N],[11,"into_raw","","",636,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",637,[[["self"]],["bool"]]],[11,"opcode","","",637,[[["self"]],["u16"]]],[11,"since","","",637,[[["self"]],["u32"]]],[11,"child","","",637,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",637,N],[11,"into_raw","","",637,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",641,[[["self"]],["bool"]]],[11,"opcode","","",641,[[["self"]],["u16"]]],[11,"since","","",641,[[["self"]],["u32"]]],[11,"child","","",641,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",641,N],[11,"into_raw","","",641,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",838,[[["self"]],["bool"]]],[11,"opcode","","",838,[[["self"]],["u16"]]],[11,"since","","",838,[[["self"]],["u32"]]],[11,"child","","",838,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",838,N],[11,"into_raw","","",838,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",644,[[["self"]],["bool"]]],[11,"opcode","","",644,[[["self"]],["u16"]]],[11,"since","","",644,[[["self"]],["u32"]]],[11,"child","","",644,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",644,N],[11,"into_raw","","",644,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",645,[[["self"]],["bool"]]],[11,"opcode","","",645,[[["self"]],["u16"]]],[11,"since","","",645,[[["self"]],["u32"]]],[11,"child","","",645,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",645,N],[11,"into_raw","","",645,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",652,[[["self"]],["bool"]]],[11,"opcode","","",652,[[["self"]],["u16"]]],[11,"since","","",652,[[["self"]],["u32"]]],[11,"child","","",652,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",652,N],[11,"into_raw","","",652,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",839,[[["self"]],["bool"]]],[11,"opcode","","",839,[[["self"]],["u16"]]],[11,"since","","",839,[[["self"]],["u32"]]],[11,"child","","",839,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",839,N],[11,"into_raw","","",839,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",654,[[["self"]],["bool"]]],[11,"opcode","","",654,[[["self"]],["u16"]]],[11,"since","","",654,[[["self"]],["u32"]]],[11,"child","","",654,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",654,N],[11,"into_raw","","",654,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",655,[[["self"]],["bool"]]],[11,"opcode","","",655,[[["self"]],["u16"]]],[11,"since","","",655,[[["self"]],["u32"]]],[11,"child","","",655,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",655,N],[11,"into_raw","","",655,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",657,[[["self"]],["bool"]]],[11,"opcode","","",657,[[["self"]],["u16"]]],[11,"since","","",657,[[["self"]],["u32"]]],[11,"child","","",657,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",657,N],[11,"into_raw","","",657,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",841,[[["self"]],["bool"]]],[11,"opcode","","",841,[[["self"]],["u16"]]],[11,"since","","",841,[[["self"]],["u32"]]],[11,"child","","",841,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",841,N],[11,"into_raw","","",841,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",660,[[["self"]],["bool"]]],[11,"opcode","","",660,[[["self"]],["u16"]]],[11,"since","","",660,[[["self"]],["u32"]]],[11,"child","","",660,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",660,N],[11,"into_raw","","",660,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",661,[[["self"]],["bool"]]],[11,"opcode","","",661,[[["self"]],["u16"]]],[11,"since","","",661,[[["self"]],["u32"]]],[11,"child","","",661,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",661,N],[11,"into_raw","","",661,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation","",669,[[["self"]],["bool"]]],[11,"opcode","","",669,[[["self"]],["u16"]]],[11,"since","","",669,[[["self"]],["u32"]]],[11,"child","","",669,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",669,N],[11,"into_raw","","",669,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",670,[[["self"]],["bool"]]],[11,"opcode","","",670,[[["self"]],["u16"]]],[11,"since","","",670,[[["self"]],["u32"]]],[11,"child","","",670,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",670,N],[11,"into_raw","","",670,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation_feedback","",844,[[["self"]],["bool"]]],[11,"opcode","","",844,[[["self"]],["u16"]]],[11,"since","","",844,[[["self"]],["u32"]]],[11,"child","","",844,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",844,N],[11,"into_raw","","",844,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",673,[[["self"]],["bool"]]],[11,"opcode","","",673,[[["self"]],["u16"]]],[11,"since","","",673,[[["self"]],["u32"]]],[11,"child","","",673,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",673,N],[11,"into_raw","","",673,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation","",676,[[["self"]],["bool"]]],[11,"opcode","","",676,[[["self"]],["u16"]]],[11,"since","","",676,[[["self"]],["u32"]]],[11,"child","","",676,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",676,N],[11,"into_raw","","",676,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",677,[[["self"]],["bool"]]],[11,"opcode","","",677,[[["self"]],["u16"]]],[11,"since","","",677,[[["self"]],["u32"]]],[11,"child","","",677,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",677,N],[11,"into_raw","","",677,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation_feedback","",847,[[["self"]],["bool"]]],[11,"opcode","","",847,[[["self"]],["u16"]]],[11,"since","","",847,[[["self"]],["u32"]]],[11,"child","","",847,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",847,N],[11,"into_raw","","",847,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",680,[[["self"]],["bool"]]],[11,"opcode","","",680,[[["self"]],["u16"]]],[11,"since","","",680,[[["self"]],["u32"]]],[11,"child","","",680,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",680,N],[11,"into_raw","","",680,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_wm_base","",682,[[["self"]],["bool"]]],[11,"opcode","","",682,[[["self"]],["u16"]]],[11,"since","","",682,[[["self"]],["u32"]]],[11,"child","","",682,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",682,N],[11,"into_raw","","",682,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",683,[[["self"]],["bool"]]],[11,"opcode","","",683,[[["self"]],["u16"]]],[11,"since","","",683,[[["self"]],["u32"]]],[11,"child","","",683,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",683,N],[11,"into_raw","","",683,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_positioner","",688,[[["self"]],["bool"]]],[11,"opcode","","",688,[[["self"]],["u16"]]],[11,"since","","",688,[[["self"]],["u32"]]],[11,"child","","",688,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",688,N],[11,"into_raw","","",688,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",851,[[["self"]],["bool"]]],[11,"opcode","","",851,[[["self"]],["u16"]]],[11,"since","","",851,[[["self"]],["u32"]]],[11,"child","","",851,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",851,N],[11,"into_raw","","",851,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_surface","",690,[[["self"]],["bool"]]],[11,"opcode","","",690,[[["self"]],["u16"]]],[11,"since","","",690,[[["self"]],["u32"]]],[11,"child","","",690,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",690,N],[11,"into_raw","","",690,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",691,[[["self"]],["bool"]]],[11,"opcode","","",691,[[["self"]],["u16"]]],[11,"since","","",691,[[["self"]],["u32"]]],[11,"child","","",691,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",691,N],[11,"into_raw","","",691,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_toplevel","",695,[[["self"]],["bool"]]],[11,"opcode","","",695,[[["self"]],["u16"]]],[11,"since","","",695,[[["self"]],["u32"]]],[11,"child","","",695,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",695,N],[11,"into_raw","","",695,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",696,[[["self"]],["bool"]]],[11,"opcode","","",696,[[["self"]],["u16"]]],[11,"since","","",696,[[["self"]],["u32"]]],[11,"child","","",696,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",696,N],[11,"into_raw","","",696,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_popup","",699,[[["self"]],["bool"]]],[11,"opcode","","",699,[[["self"]],["u16"]]],[11,"since","","",699,[[["self"]],["u32"]]],[11,"child","","",699,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",699,N],[11,"into_raw","","",699,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",700,[[["self"]],["bool"]]],[11,"opcode","","",700,[[["self"]],["u16"]]],[11,"since","","",700,[[["self"]],["u32"]]],[11,"child","","",700,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",700,N],[11,"into_raw","","",700,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_wm_base","",703,[[["self"]],["bool"]]],[11,"opcode","","",703,[[["self"]],["u16"]]],[11,"since","","",703,[[["self"]],["u32"]]],[11,"child","","",703,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",703,N],[11,"into_raw","","",703,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",704,[[["self"]],["bool"]]],[11,"opcode","","",704,[[["self"]],["u16"]]],[11,"since","","",704,[[["self"]],["u32"]]],[11,"child","","",704,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",704,N],[11,"into_raw","","",704,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_positioner","",709,[[["self"]],["bool"]]],[11,"opcode","","",709,[[["self"]],["u16"]]],[11,"since","","",709,[[["self"]],["u32"]]],[11,"child","","",709,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",709,N],[11,"into_raw","","",709,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",858,[[["self"]],["bool"]]],[11,"opcode","","",858,[[["self"]],["u16"]]],[11,"since","","",858,[[["self"]],["u32"]]],[11,"child","","",858,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",858,N],[11,"into_raw","","",858,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_surface","",712,[[["self"]],["bool"]]],[11,"opcode","","",712,[[["self"]],["u16"]]],[11,"since","","",712,[[["self"]],["u32"]]],[11,"child","","",712,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",712,N],[11,"into_raw","","",712,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",713,[[["self"]],["bool"]]],[11,"opcode","","",713,[[["self"]],["u16"]]],[11,"since","","",713,[[["self"]],["u32"]]],[11,"child","","",713,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",713,N],[11,"into_raw","","",713,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_toplevel","",717,[[["self"]],["bool"]]],[11,"opcode","","",717,[[["self"]],["u16"]]],[11,"since","","",717,[[["self"]],["u32"]]],[11,"child","","",717,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",717,N],[11,"into_raw","","",717,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",718,[[["self"]],["bool"]]],[11,"opcode","","",718,[[["self"]],["u16"]]],[11,"since","","",718,[[["self"]],["u32"]]],[11,"child","","",718,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",718,N],[11,"into_raw","","",718,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_popup","",721,[[["self"]],["bool"]]],[11,"opcode","","",721,[[["self"]],["u16"]]],[11,"since","","",721,[[["self"]],["u32"]]],[11,"child","","",721,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",721,N],[11,"into_raw","","",721,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",722,[[["self"]],["bool"]]],[11,"opcode","","",722,[[["self"]],["u16"]]],[11,"since","","",722,[[["self"]],["u32"]]],[11,"child","","",722,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",722,N],[11,"into_raw","","",722,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewporter","",725,[[["self"]],["bool"]]],[11,"opcode","","",725,[[["self"]],["u16"]]],[11,"since","","",725,[[["self"]],["u32"]]],[11,"child","","",725,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",725,N],[11,"into_raw","","",725,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",863,[[["self"]],["bool"]]],[11,"opcode","","",863,[[["self"]],["u16"]]],[11,"since","","",863,[[["self"]],["u32"]]],[11,"child","","",863,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",863,N],[11,"into_raw","","",863,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewport","",727,[[["self"]],["bool"]]],[11,"opcode","","",727,[[["self"]],["u16"]]],[11,"since","","",727,[[["self"]],["u32"]]],[11,"child","","",727,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",727,N],[11,"into_raw","","",727,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",865,[[["self"]],["bool"]]],[11,"opcode","","",865,[[["self"]],["u16"]]],[11,"since","","",865,[[["self"]],["u32"]]],[11,"child","","",865,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",865,N],[11,"into_raw","","",865,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewporter","",729,[[["self"]],["bool"]]],[11,"opcode","","",729,[[["self"]],["u16"]]],[11,"since","","",729,[[["self"]],["u32"]]],[11,"child","","",729,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",729,N],[11,"into_raw","","",729,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",867,[[["self"]],["bool"]]],[11,"opcode","","",867,[[["self"]],["u16"]]],[11,"since","","",867,[[["self"]],["u32"]]],[11,"child","","",867,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",867,N],[11,"into_raw","","",867,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewport","",732,[[["self"]],["bool"]]],[11,"opcode","","",732,[[["self"]],["u16"]]],[11,"since","","",732,[[["self"]],["u32"]]],[11,"child","","",732,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",732,N],[11,"into_raw","","",732,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",869,[[["self"]],["bool"]]],[11,"opcode","","",869,[[["self"]],["u16"]]],[11,"since","","",869,[[["self"]],["u32"]]],[11,"child","","",869,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",869,N],[11,"into_raw","","",869,[[["self"],["u32"]],["message"]]],[11,"handle","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",16,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",739,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",741,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",46,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",47,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",748,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",750,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",753,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",59,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",756,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",73,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",92,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",93,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",762,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",764,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",109,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",768,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",132,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",133,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",771,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",152,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",153,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",774,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",179,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",180,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",181,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",777,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",193,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",780,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",227,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",228,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",229,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",783,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",297,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",298,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",299,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",300,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",301,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",302,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",303,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",323,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",786,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",341,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",789,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",792,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",357,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",796,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",798,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",380,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",381,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",802,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",804,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",404,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",405,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",807,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",417,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",447,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",448,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",449,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",497,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",810,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",501,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",502,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",503,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",814,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",816,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",819,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",537,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",538,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",539,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",822,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",569,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",570,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",571,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",825,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",587,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",606,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",607,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",828,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",621,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",832,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",834,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",837,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",651,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",840,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",667,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::presentation_time::server::wp_presentation","",845,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::presentation_time::server::wp_presentation_feedback","",846,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::server::xdg_wm_base","",855,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::server::xdg_positioner","",857,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::server::xdg_surface","",859,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::server::xdg_toplevel","",860,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::xdg_shell::server::xdg_popup","",861,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::viewporter::server::wp_viewporter","",866,[[["t"],["request"],["self"]]]],[11,"handle","wayland_protocols::viewporter::server::wp_viewport","",868,[[["t"],["request"],["self"]]]],[11,"clock_id","wayland_protocols::presentation_time::client::wp_presentation","clock ID for timestamps",671,[[["self"],["wppresentation"],["u32"]]]],[11,"from_raw","","",668,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",668,[[["self"]],["u32"]]],[11,"destroy","","unbind from the presentation interface",842,N],[11,"feedback","","request presentation feedback information",842,[[["self"],["wlsurface"],["f"]],["result",["wppresentationfeedback"]]]],[11,"sync_output","wayland_protocols::presentation_time::client::wp_presentation_feedback","presentation synchronized to this output",674,[[["self"],["wppresentationfeedback"],["wloutput"]]]],[11,"presented","","the content update was displayed",674,[[["self"],["wppresentationfeedback"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"discarded","","the content update was not displayed",674,[[["self"],["wppresentationfeedback"]]]],[11,"from_raw","","",672,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",672,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::presentation_time::server::wp_presentation","unbind from the presentation interface",678,[[["self"],["wppresentation"]]]],[11,"feedback","","request presentation feedback information",678,[[["self"],["wppresentation"],["wlsurface"],["newresource",["wppresentationfeedback"]]]]],[11,"from_raw","","",675,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",675,[[["self"]],["u32"]]],[11,"clock_id","","clock ID for timestamps",845,N],[11,"from_raw","wayland_protocols::presentation_time::server::wp_presentation_feedback","",679,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",679,[[["self"]],["u32"]]],[11,"sync_output","","presentation synchronized to this output",846,N],[11,"presented","","the content update was displayed",846,N],[11,"discarded","","the content update was not displayed",846,N],[11,"ping","wayland_protocols::xdg_shell::client::xdg_wm_base","check if the client is alive",684,[[["self"],["xdgwmbase"],["u32"]]]],[11,"from_raw","","",681,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",681,[[["self"]],["u32"]]],[11,"destroy","","destroy xdg_wm_base",848,N],[11,"create_positioner","","create a positioner object",848,[[["self"],["f"]],["result",["xdgpositioner"]]]],[11,"get_xdg_surface","","create a shell surface from a surface",848,[[["self"],["wlsurface"],["f"]],["result",["xdgsurface"]]]],[11,"pong","","respond to a ping event",848,N],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_positioner","",685,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",685,[[["self"]],["u32"]]],[11,"from_raw","","",686,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",686,[[["self"]],["u32"]]],[11,"from_raw","","",687,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",687,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",849,N],[18,"SlideX","","move along the x axis until unconstrained",849,N],[18,"SlideY","","move along the y axis until unconstrained",849,N],[18,"FlipX","","invert the anchor and gravity on the x axis",849,N],[18,"FlipY","","invert the anchor and gravity on the y axis",849,N],[18,"ResizeX","","horizontally resize the surface",849,N],[18,"ResizeY","","vertically resize the surface",849,N],[11,"empty","","Returns an empty set of flags.",849,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",849,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",849,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",849,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",849,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",849,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",849,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",849,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",849,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",849,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",849,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",849,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",849,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",849,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_positioner object",850,N],[11,"set_size","","set the size of the to-be positioned rectangle",850,N],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",850,N],[11,"set_anchor","","set anchor rectangle anchor",850,N],[11,"set_gravity","","set child surface gravity",850,N],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",850,N],[11,"set_offset","","set surface position offset",850,N],[11,"configure","wayland_protocols::xdg_shell::client::xdg_surface","suggest a surface change",692,[[["self"],["xdgsurface"],["u32"]]]],[11,"from_raw","","",689,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",689,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_surface",852,N],[11,"get_toplevel","","assign the xdg_toplevel surface role",852,[[["self"],["f"]],["result",["xdgtoplevel"]]]],[11,"get_popup","","assign the xdg_popup surface role",852,[[["self"],["option",["xdgsurface"]],["xdgpositioner"],["f"]],["result",["xdgpopup"]]]],[11,"set_window_geometry","","set the new window geometry",852,N],[11,"ack_configure","","ack a configure event",852,N],[11,"configure","wayland_protocols::xdg_shell::client::xdg_toplevel","suggest a surface change",697,[[["self"],["xdgtoplevel"],["i32"],["i32"],["vec",["u8"]]]]],[11,"close","","surface wants to be closed",697,[[["self"],["xdgtoplevel"]]]],[11,"from_raw","","",693,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",693,[[["self"]],["u32"]]],[11,"from_raw","","",694,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",694,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_toplevel",853,N],[11,"set_parent","","set the parent of this surface",853,N],[11,"set_title","","set surface title",853,N],[11,"set_app_id","","set application ID",853,N],[11,"show_window_menu","","show the window menu",853,N],[11,"_move","","start an interactive move",853,N],[11,"resize","","start an interactive resize",853,N],[11,"set_max_size","","set the maximum size",853,N],[11,"set_min_size","","set the minimum size",853,N],[11,"set_maximized","","maximize the window",853,N],[11,"unset_maximized","","unmaximize the window",853,N],[11,"set_fullscreen","","set the window as fullscreen on an output",853,N],[11,"unset_fullscreen","","unset the window as fullscreen",853,N],[11,"set_minimized","","set the window as minimized",853,N],[11,"configure","wayland_protocols::xdg_shell::client::xdg_popup","configure the popup surface",701,[[["self"],["xdgpopup"],["i32"],["i32"],["i32"],["i32"]]]],[11,"popup_done","","popup interaction is done",701,[[["self"],["xdgpopup"]]]],[11,"from_raw","","",698,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",698,[[["self"]],["u32"]]],[11,"destroy","","remove xdg_popup interface",854,N],[11,"grab","","make the popup take an explicit grab",854,N],[11,"destroy","wayland_protocols::xdg_shell::server::xdg_wm_base","destroy xdg_wm_base",705,[[["self"],["xdgwmbase"]]]],[11,"create_positioner","","create a positioner object",705,[[["self"],["xdgwmbase"],["newresource",["xdgpositioner"]]]]],[11,"get_xdg_surface","","create a shell surface from a surface",705,[[["self"],["xdgwmbase"],["newresource",["xdgsurface"]],["wlsurface"]]]],[11,"pong","","respond to a ping event",705,[[["self"],["xdgwmbase"],["u32"]]]],[11,"from_raw","","",702,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",702,[[["self"]],["u32"]]],[11,"ping","","check if the client is alive",855,N],[11,"destroy","wayland_protocols::xdg_shell::server::xdg_positioner","destroy the xdg_positioner object",710,[[["self"],["xdgpositioner"]]]],[11,"set_size","","set the size of the to-be positioned rectangle",710,[[["self"],["xdgpositioner"],["i32"],["i32"]]]],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",710,[[["self"],["xdgpositioner"],["i32"],["i32"],["i32"],["i32"]]]],[11,"set_anchor","","set anchor rectangle anchor",710,[[["self"],["xdgpositioner"],["anchor"]]]],[11,"set_gravity","","set child surface gravity",710,[[["self"],["xdgpositioner"],["gravity"]]]],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",710,[[["self"],["xdgpositioner"],["u32"]]]],[11,"set_offset","","set surface position offset",710,[[["self"],["xdgpositioner"],["i32"],["i32"]]]],[11,"from_raw","","",706,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",706,[[["self"]],["u32"]]],[11,"from_raw","","",707,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",707,[[["self"]],["u32"]]],[11,"from_raw","","",708,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",708,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",856,N],[18,"SlideX","","move along the x axis until unconstrained",856,N],[18,"SlideY","","move along the y axis until unconstrained",856,N],[18,"FlipX","","invert the anchor and gravity on the x axis",856,N],[18,"FlipY","","invert the anchor and gravity on the y axis",856,N],[18,"ResizeX","","horizontally resize the surface",856,N],[18,"ResizeY","","vertically resize the surface",856,N],[11,"empty","","Returns an empty set of flags.",856,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",856,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",856,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",856,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",856,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",856,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",856,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",856,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",856,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",856,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",856,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",856,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",856,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",856,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::xdg_shell::server::xdg_surface","destroy the xdg_surface",714,[[["self"],["xdgsurface"]]]],[11,"get_toplevel","","assign the xdg_toplevel surface role",714,[[["self"],["xdgsurface"],["newresource",["xdgtoplevel"]]]]],[11,"get_popup","","assign the xdg_popup surface role",714,[[["self"],["xdgsurface"],["newresource",["xdgpopup"]],["option",["xdgsurface"]],["xdgpositioner"]]]],[11,"set_window_geometry","","set the new window geometry",714,[[["self"],["xdgsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ack_configure","","ack a configure event",714,[[["self"],["xdgsurface"],["u32"]]]],[11,"from_raw","","",711,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",711,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",859,N],[11,"destroy","wayland_protocols::xdg_shell::server::xdg_toplevel","destroy the xdg_toplevel",719,[[["self"],["xdgtoplevel"]]]],[11,"set_parent","","set the parent of this surface",719,[[["self"],["xdgtoplevel"],["option",["xdgtoplevel"]]]]],[11,"set_title","","set surface title",719,[[["self"],["xdgtoplevel"],["string"]]]],[11,"set_app_id","","set application ID",719,[[["self"],["xdgtoplevel"],["string"]]]],[11,"show_window_menu","","show the window menu",719,[[["self"],["xdgtoplevel"],["wlseat"],["u32"],["i32"],["i32"]]]],[11,"_move","","start an interactive move",719,[[["self"],["xdgtoplevel"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",719,[[["self"],["xdgtoplevel"],["wlseat"],["u32"],["u32"]]]],[11,"set_max_size","","set the maximum size",719,[[["self"],["xdgtoplevel"],["i32"],["i32"]]]],[11,"set_min_size","","set the minimum size",719,[[["self"],["xdgtoplevel"],["i32"],["i32"]]]],[11,"set_maximized","","maximize the window",719,[[["self"],["xdgtoplevel"]]]],[11,"unset_maximized","","unmaximize the window",719,[[["self"],["xdgtoplevel"]]]],[11,"set_fullscreen","","set the window as fullscreen on an output",719,[[["self"],["xdgtoplevel"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","unset the window as fullscreen",719,[[["self"],["xdgtoplevel"]]]],[11,"set_minimized","","set the window as minimized",719,[[["self"],["xdgtoplevel"]]]],[11,"from_raw","","",715,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",715,[[["self"]],["u32"]]],[11,"from_raw","","",716,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",716,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",860,N],[11,"close","","surface wants to be closed",860,N],[11,"destroy","wayland_protocols::xdg_shell::server::xdg_popup","remove xdg_popup interface",723,[[["self"],["xdgpopup"]]]],[11,"grab","","make the popup take an explicit grab",723,[[["self"],["xdgpopup"],["wlseat"],["u32"]]]],[11,"from_raw","","",720,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",720,[[["self"]],["u32"]]],[11,"configure","","configure the popup surface",861,N],[11,"popup_done","","popup interaction is done",861,N],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewporter","",724,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",724,[[["self"]],["u32"]]],[11,"destroy","","unbind from the cropping and scaling interface",862,N],[11,"get_viewport","","extend surface interface for crop and scale",862,[[["self"],["wlsurface"],["f"]],["result",["wpviewport"]]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewport","",726,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",726,[[["self"]],["u32"]]],[11,"destroy","","remove scaling and cropping from the surface",864,N],[11,"set_source","","set the source rectangle for cropping",864,N],[11,"set_destination","","set the surface size for scaling",864,N],[11,"destroy","wayland_protocols::viewporter::server::wp_viewporter","unbind from the cropping and scaling interface",730,[[["self"],["wpviewporter"]]]],[11,"get_viewport","","extend surface interface for crop and scale",730,[[["self"],["wpviewporter"],["newresource",["wpviewport"]],["wlsurface"]]]],[11,"from_raw","","",728,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",728,[[["self"]],["u32"]]],[11,"destroy","wayland_protocols::viewporter::server::wp_viewport","remove scaling and cropping from the surface",733,[[["self"],["wpviewport"]]]],[11,"set_source","","set the source rectangle for cropping",733,[[["self"],["wpviewport"],["f64"],["f64"],["f64"],["f64"]]]],[11,"set_destination","","set the surface size for scaling",733,[[["self"],["wpviewport"],["i32"],["i32"]]]],[11,"from_raw","","",731,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",731,[[["self"]],["u32"]]]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Event"],[8,"EventHandler"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[4,"Request"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Position"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Event"],[4,"Request"],[8,"RequestHandler"],[4,"Position"],[4,"Request"],[8,"RequestHandler"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputPanelV1"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpInputTimestampsManagerV1"],[3,"ZwpInputTimestampsV1"],[3,"ZwpInputTimestampsV1"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Event"],[3,"ZwpLinuxExplicitSynchronizationV1"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[3,"ZwpPrimarySelectionDeviceV1"],[3,"ZwpPrimarySelectionOfferV1"],[3,"ZwpPrimarySelectionSourceV1"],[3,"ZwpPrimarySelectionDeviceV1"],[3,"ZwpPrimarySelectionOfferV1"],[3,"ZwpPrimarySelectionSourceV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[3,"ContentHint"],[3,"ZwpTextInputV3"],[3,"ZwpTextInputManagerV3"],[3,"ContentHint"],[3,"ZwpTextInputV3"],[4,"Request"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZxdgExporterV1"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZxdgExporterV2"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[3,"ZxdgOutputV1"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Request"],[4,"Request"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"GtkPrimarySelectionDeviceManager"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwlrDataControlManagerV1"],[3,"ZwlrDataControlDeviceV1"],[3,"ZwlrDataControlSourceV1"],[3,"ZwlrDataControlOfferV1"],[3,"ZwlrDataControlDeviceV1"],[3,"ZwlrDataControlSourceV1"],[3,"ZwlrDataControlOfferV1"],[4,"Request"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwlrExportDmabufManagerV1"],[3,"ZwlrExportDmabufFrameV1"],[3,"ZwlrExportDmabufFrameV1"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwlrForeignToplevelManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[3,"ZwlrForeignToplevelManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwlrGammaControlManagerV1"],[3,"ZwlrGammaControlV1"],[3,"ZwlrGammaControlV1"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[3,"ZwlrInputInhibitManagerV1"],[3,"ZwlrInputInhibitorV1"],[4,"Error"],[4,"Layer"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Layer"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwlrLayerShellV1"],[3,"Anchor"],[3,"ZwlrLayerSurfaceV1"],[3,"Anchor"],[3,"ZwlrLayerSurfaceV1"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[3,"ZwlrScreencopyManagerV1"],[3,"Flags"],[3,"ZwlrScreencopyFrameV1"],[3,"Flags"],[3,"ZwlrScreencopyFrameV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Kind"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"EventHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[3,"ZwpInputMethodV1"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Request"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Event"],[4,"Event"],[3,"ZwpInputTimestampsManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Request"],[3,"ZwpLinuxExplicitSynchronizationV1"],[4,"Event"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[4,"Event"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[4,"Event"],[4,"Event"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV2"],[4,"Event"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwpTextInputManagerV3"],[4,"Event"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[4,"Event"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[4,"Event"],[4,"Event"],[3,"ZxdgPositionerV6"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[4,"Event"],[4,"Event"],[3,"ZwlrDataControlManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[4,"Event"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[4,"Event"],[4,"Event"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Event"],[4,"Event"],[3,"ZwlrLayerShellV1"],[4,"Event"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[4,"Event"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"]]};
searchIndex["wayland_server"]={"doc":"Server-side Wayland connector","items":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of…",N,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",1,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Client","","A handle to a client connected to your server",N,N],[3,"Display","","The wayland display",N,N],[3,"Global","","A handle to a global object",N,N],[3,"NewResource","","A newly-created resource that needs implementation",N,N],[3,"Resource","","An handle to a wayland resource",N,N],[3,"AnonymousObject","","Anonymous interface",N,N],[3,"ResourceMap","","A handle to the object map internal to the lib state",N,N],[11,"alive","","Check whether this client is still connected to the server",2,[[["self"]],["bool"]]],[11,"equals","","Check whether this client handle refers to the same client…",2,[[["self"],["client"]],["bool"]]],[11,"flush","","Flush the pending events to this client",2,[[["self"]]]],[11,"kill","","Kills this client",2,[[["self"]]]],[11,"data_map","","Access the map handling user data associated to this client",2,[[["self"]],["userdatamap"]]],[11,"add_destructor","","Add a destructor for this client",2,[[["self"],["f"]]]],[11,"create_resource","","Create a new resource for this client",2,[[["self"],["u32"]],["option",["newresource"]]]],[11,"new","","Create a new display",3,[[["loophandle"]],["display"]]],[11,"create_global","","Create a new global object",3,[[["self"],["u32"],["f"]],["global"]]],[11,"create_global_with_filter","","Create a new global object with a filter",3,[[["self"],["u32"],["f1"],["f2"]],["global"]]],[11,"flush_clients","","Flush events to the clients",3,[[["self"]]]],[11,"add_socket","","Add a listening socket to this display",3,[[["self"],["option"]],["ioresult"]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",3,[[["self"]],["ioresult",["osstring"]]]],[11,"add_socket_from","","Add existing listening socket to this display",3,[[["self"],["t"]],["ioresult"]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw…",3,[[["self"],["rawfd"]],["ioresult"]]],[11,"create_client","","Create a new client to this display from an…",3,[[["self"],["rawfd"]],["client"]]],[11,"destroy","","Destroy the associated global object.",4,[[["self"]]]],[11,"send","","Send an event through this object",5,N],[11,"is_alive","","Check if the object associated with this resource is still…",5,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object…",5,[[["self"]],["u32"]]],[11,"equals","","Check if the other resource refers to the same underlying…",5,[[["self"],["resource"]],["bool"]]],[11,"same_client_as","","Check if this resource and the other belong to the same…",5,[[["self"],["resource"]],["bool"]]],[11,"post_error","","Posts a protocol error to this resource",5,[[["self"],["u32"],["string"]]]],[11,"user_data","","Access the arbitrary payload associated to this object",5,[[["self"]],["option"]]],[11,"client","","Retrieve an handle to the client associated with this…",5,[[["self"]],["option",["client"]]]],[11,"id","","Retrieve the object id of this wayland object",5,[[["self"]],["u32"]]],[11,"implement","","Implement this resource using a handler, destructor and…",6,[[["self"],["t"],["option"],["ud"]],["i"]]],[11,"implement_closure","","Implement this resource using given function, destructor,…",6,[[["self"],["f"],["option"],["ud"]],["i"]]],[11,"implement_dummy","","Implement this resource using a dummy handler which does…",6,[[["self"]],["i"]]],[11,"implement_threadsafe","","Implement this resource using a handler, destructor and…",6,[[["self"],["t"],["option"],["ud"]],["i"]]],[11,"implement_closure_threadsafe","","Implement this resource using given function, destructor,…",6,[[["self"],["f"],["option"],["ud"]],["i"]]],[11,"get","","Retrieve the Resource corresponding to a given id",7,[[["self"],["u32"]],["option",["resource"]]]],[11,"get_new","","Create a new resource for a given id",7,[[["self"],["u32"]],["option",["newresource"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",N,N],[0,"wl_callback","wayland_server::protocol","callback object",N,N],[3,"WlCallback","wayland_server::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",8,N],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",8,N],[17,"EVT_DONE_SINCE","wayland_server::protocol::wl_callback","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",9,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",9,N],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",9,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",9,N],[4,"Event","wayland_server::protocol::wl_compositor","",N,N],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_surface","","create new surface",10,[[["self"],["wlcompositor"],["newresource",["wlsurface"]]]]],[11,"create_region","","create new region",10,[[["self"],["wlcompositor"],["newresource",["wlregion"]]]]],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",11,N],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",11,N],[12,"offset","","",11,N],[12,"width","","",11,N],[12,"height","","",11,N],[12,"stride","","",11,N],[12,"format","","",11,N],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",11,N],[13,"Resize","","change the size of the pool mapping",11,N],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",11,N],[4,"Event","wayland_server::protocol::wl_shm_pool","",N,N],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_buffer","","create a buffer from the pool",12,[[["self"],["wlshmpool"],["newresource",["wlbuffer"]],["i32"],["i32"],["i32"],["i32"],["format"]]]],[11,"destroy","","destroy the pool",12,[[["self"],["wlshmpool"]]]],[11,"resize","","change the size of the pool mapping",12,[[["self"],["wlshmpool"],["i32"]]]],[0,"wl_shm","wayland_server::protocol","shared memory support",N,N],[3,"WlShm","wayland_server::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",13,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",13,N],[13,"InvalidFd","","mmapping the file descriptor failed",13,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",14,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",14,N],[13,"C8","","8-bit color index format, [7:0] C",14,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",14,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",14,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",14,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",14,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",14,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",14,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",14,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",14,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",14,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",14,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",14,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",14,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",14,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",14,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",14,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",14,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",14,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",14,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",14,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",14,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",14,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",14,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",14,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",14,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",14,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",14,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",14,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",14,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",14,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",14,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",14,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",14,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",14,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",14,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",14,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",14,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",14,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",14,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",14,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",14,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",14,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",14,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",14,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",14,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",14,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",14,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",14,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",14,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",14,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",14,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",14,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",14,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",14,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",14,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",14,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",15,N],[12,"id","wayland_server::protocol::wl_shm::Request","",15,N],[12,"fd","","",15,N],[12,"size","","",15,N],[4,"Event","wayland_server::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",16,N],[12,"format","wayland_server::protocol::wl_shm::Event","",16,N],[17,"REQ_CREATE_POOL_SINCE","wayland_server::protocol::wl_shm","The minimal object version supporting this request",N,N],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_pool","","create a shm pool",17,[[["self"],["wlshm"],["newresource",["wlshmpool"]],["rawfd"],["i32"]]]],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",18,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",19,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy a buffer",20,[[["self"],["wlbuffer"]]]],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",21,N],[13,"InvalidActionMask","","action mask contains invalid values",21,N],[13,"InvalidAction","","action argument has an invalid value",21,N],[13,"InvalidOffer","","offer doesn't accept this request",21,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",22,N],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",22,N],[12,"mime_type","","",22,N],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",22,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",22,N],[12,"fd","","",22,N],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",22,N],[13,"Finish","","the offer will no longer be used",22,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",22,N],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",22,N],[12,"preferred_action","","",22,N],[4,"Event","wayland_server::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",23,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",23,N],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",23,N],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",23,N],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",23,N],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",23,N],[17,"REQ_ACCEPT_SINCE","wayland_server::protocol::wl_data_offer","The minimal object version supporting this request",N,N],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"accept","","accept one of the offered mime types",24,[[["self"],["wldataoffer"],["u32"],["option",["string"]]]]],[11,"receive","","request that the data is transferred",24,[[["self"],["wldataoffer"],["string"],["rawfd"]]]],[11,"destroy","","destroy data offer",24,[[["self"],["wldataoffer"]]]],[11,"finish","","the offer will no longer be used",24,[[["self"],["wldataoffer"]]]],[11,"set_actions","","set the available/preferred drag-and-drop actions",24,[[["self"],["wldataoffer"],["u32"],["u32"]]]],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",25,N],[13,"InvalidSource","","source doesn't accept this request",25,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",26,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",26,N],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",26,N],[13,"SetActions","","set the available drag-and-drop actions",26,N],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",26,N],[4,"Event","wayland_server::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",27,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",27,N],[13,"Send","wayland_server::protocol::wl_data_source","send the data",27,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",27,N],[12,"fd","","",27,N],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",27,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",27,N],[13,"DndFinished","","the drag-and-drop operation concluded",27,N],[13,"Action","","notify the selected action",27,N],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",27,N],[17,"REQ_OFFER_SINCE","wayland_server::protocol::wl_data_source","The minimal object version supporting this request",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"offer","","add an offered mime type",28,[[["self"],["wldatasource"],["string"]]]],[11,"destroy","","destroy the data source",28,[[["self"],["wldatasource"]]]],[11,"set_actions","","set the available drag-and-drop actions",28,[[["self"],["wldatasource"],["u32"]]]],[0,"wl_data_device","wayland_server::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",29,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",30,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",30,N],[12,"origin","","",30,N],[12,"icon","","",30,N],[12,"serial","","",30,N],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",30,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",30,N],[12,"serial","","",30,N],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",30,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",31,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",31,N],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",31,N],[12,"serial","wayland_server::protocol::wl_data_device::Event","",31,N],[12,"surface","","",31,N],[12,"x","","",31,N],[12,"y","","",31,N],[12,"id","","",31,N],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",31,N],[13,"Motion","","drag-and-drop session motion",31,N],[12,"time","wayland_server::protocol::wl_data_device::Event","",31,N],[12,"x","","",31,N],[12,"y","","",31,N],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",31,N],[13,"Selection","","advertise new selection",31,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",31,N],[17,"REQ_START_DRAG_SINCE","wayland_server::protocol::wl_data_device","The minimal object version supporting this request",N,N],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"start_drag","","start drag-and-drop operation",32,[[["self"],["wldatadevice"],["option",["wldatasource"]],["wlsurface"],["option",["wlsurface"]],["u32"]]]],[11,"set_selection","","copy data to the selection",32,[[["self"],["wldatadevice"],["option",["wldatasource"]],["u32"]]]],[11,"release","","destroy data device",32,[[["self"],["wldatadevice"]]]],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",N,N],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",33,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",33,N],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",33,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",33,N],[12,"seat","","",33,N],[4,"Event","wayland_server::protocol::wl_data_device_manager","",N,N],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"create_data_source","","create a new data source",34,[[["self"],["wldatadevicemanager"],["newresource",["wldatasource"]]]]],[11,"get_data_device","","create a new data device",34,[[["self"],["wldatadevicemanager"],["newresource",["wldatadevice"]],["wlseat"]]]],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_server::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",35,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",36,N],[12,"id","wayland_server::protocol::wl_shell::Request","",36,N],[12,"surface","","",36,N],[4,"Event","wayland_server::protocol::wl_shell","",N,N],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_shell_surface","","create a shell surface from a surface",37,[[["self"],["wlshell"],["newresource",["wlshellsurface"]],["wlsurface"]]]],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",38,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on…",38,N],[13,"Driver","","switch output mode to the smallest mode that can fit the…",38,N],[13,"Fill","","no upscaling, center on output and add black borders to…",38,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",39,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[12,"edges","","",39,N],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",39,N],[13,"SetTransient","","make the surface a transient surface",39,N],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"x","","",39,N],[12,"y","","",39,N],[12,"flags","","",39,N],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",39,N],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"framerate","","",39,N],[12,"output","","",39,N],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",39,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,N],[12,"serial","","",39,N],[12,"parent","","",39,N],[12,"x","","",39,N],[12,"y","","",39,N],[12,"flags","","",39,N],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",39,N],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",39,N],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",39,N],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",39,N],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",39,N],[4,"Event","wayland_server::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",40,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",40,N],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",40,N],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",40,N],[12,"width","","",40,N],[12,"height","","",40,N],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",40,N],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"pong","","respond to a ping event",41,[[["self"],["wlshellsurface"],["u32"]]]],[11,"_move","","start an interactive move",41,[[["self"],["wlshellsurface"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",41,[[["self"],["wlshellsurface"],["wlseat"],["u32"],["resize"]]]],[11,"set_toplevel","","make the surface a toplevel surface",41,[[["self"],["wlshellsurface"]]]],[11,"set_transient","","make the surface a transient surface",41,[[["self"],["wlshellsurface"],["wlsurface"],["i32"],["i32"],["transient"]]]],[11,"set_fullscreen","","make the surface a fullscreen surface",41,[[["self"],["wlshellsurface"],["fullscreenmethod"],["u32"],["option",["wloutput"]]]]],[11,"set_popup","","make the surface a popup surface",41,[[["self"],["wlshellsurface"],["wlseat"],["u32"],["wlsurface"],["i32"],["i32"],["transient"]]]],[11,"set_maximized","","make the surface a maximized surface",41,[[["self"],["wlshellsurface"],["option",["wloutput"]]]]],[11,"set_title","","set surface title",41,[[["self"],["wlshellsurface"],["string"]]]],[11,"set_class","","set surface class",41,[[["self"],["wlshellsurface"],["string"]]]],[0,"wl_surface","wayland_server::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_server::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",42,N],[13,"InvalidTransform","","buffer transform value is invalid",42,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",43,N],[13,"Attach","","set the surface contents",43,N],[12,"buffer","wayland_server::protocol::wl_surface::Request","",43,N],[12,"x","","",43,N],[12,"y","","",43,N],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",43,N],[12,"x","wayland_server::protocol::wl_surface::Request","",43,N],[12,"y","","",43,N],[12,"width","","",43,N],[12,"height","","",43,N],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",43,N],[12,"callback","wayland_server::protocol::wl_surface::Request","",43,N],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",43,N],[12,"region","wayland_server::protocol::wl_surface::Request","",43,N],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",43,N],[12,"region","wayland_server::protocol::wl_surface::Request","",43,N],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",43,N],[13,"SetBufferTransform","","sets the buffer transformation",43,N],[12,"transform","wayland_server::protocol::wl_surface::Request","",43,N],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",43,N],[12,"scale","wayland_server::protocol::wl_surface::Request","",43,N],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",43,N],[12,"x","wayland_server::protocol::wl_surface::Request","",43,N],[12,"y","","",43,N],[12,"width","","",43,N],[12,"height","","",43,N],[4,"Event","wayland_server::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",44,N],[12,"output","wayland_server::protocol::wl_surface::Event","",44,N],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",44,N],[12,"output","wayland_server::protocol::wl_surface::Event","",44,N],[17,"REQ_DESTROY_SINCE","wayland_server::protocol::wl_surface","The minimal object version supporting this request",N,N],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","delete surface",45,[[["self"],["wlsurface"]]]],[11,"attach","","set the surface contents",45,[[["self"],["wlsurface"],["option",["wlbuffer"]],["i32"],["i32"]]]],[11,"damage","","mark part of the surface damaged",45,[[["self"],["wlsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"frame","","request a frame throttling hint",45,[[["self"],["wlsurface"],["newresource",["wlcallback"]]]]],[11,"set_opaque_region","","set opaque region",45,[[["self"],["wlsurface"],["option",["wlregion"]]]]],[11,"set_input_region","","set input region",45,[[["self"],["wlsurface"],["option",["wlregion"]]]]],[11,"commit","","commit pending surface state",45,[[["self"],["wlsurface"]]]],[11,"set_buffer_transform","","sets the buffer transformation",45,[[["self"],["wlsurface"],["transform"]]]],[11,"set_buffer_scale","","sets the buffer scaling factor",45,[[["self"],["wlsurface"],["i32"]]]],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",45,[[["self"],["wlsurface"],["i32"],["i32"],["i32"],["i32"]]]],[0,"wl_seat","wayland_server::protocol","group of input devices",N,N],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",46,N],[12,"id","wayland_server::protocol::wl_seat::Request","",46,N],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",46,N],[12,"id","wayland_server::protocol::wl_seat::Request","",46,N],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",46,N],[12,"id","wayland_server::protocol::wl_seat::Request","",46,N],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",46,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",47,N],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",47,N],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",47,N],[12,"name","wayland_server::protocol::wl_seat::Event","",47,N],[17,"REQ_GET_POINTER_SINCE","wayland_server::protocol::wl_seat","The minimal object version supporting this request",N,N],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"get_pointer","","return pointer object",48,[[["self"],["wlseat"],["newresource",["wlpointer"]]]]],[11,"get_keyboard","","return keyboard object",48,[[["self"],["wlseat"],["newresource",["wlkeyboard"]]]]],[11,"get_touch","","return touch object",48,[[["self"],["wlseat"],["newresource",["wltouch"]]]]],[11,"release","","release the seat object",48,[[["self"],["wlseat"]]]],[0,"wl_pointer","wayland_server::protocol","pointer input device",N,N],[3,"WlPointer","wayland_server::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",49,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",50,N],[13,"Pressed","","the button is pressed",50,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",51,N],[13,"HorizontalScroll","","horizontal axis",51,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel rotation",52,N],[13,"Finger","","finger on a touch surface",52,N],[13,"Continuous","","continuous coordinate space",52,N],[13,"WheelTilt","","a physical wheel tilt",52,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",53,N],[12,"serial","wayland_server::protocol::wl_pointer::Request","",53,N],[12,"surface","","",53,N],[12,"hotspot_x","","",53,N],[12,"hotspot_y","","",53,N],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",53,N],[4,"Event","","",N,N],[13,"Enter","","enter event",54,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"surface","","",54,N],[12,"surface_x","","",54,N],[12,"surface_y","","",54,N],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",54,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"surface","","",54,N],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",54,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"surface_x","","",54,N],[12,"surface_y","","",54,N],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",54,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"time","","",54,N],[12,"button","","",54,N],[12,"state","","",54,N],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",54,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"axis","","",54,N],[12,"value","","",54,N],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",54,N],[13,"AxisSource","","axis source event",54,N],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",54,N],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",54,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"axis","","",54,N],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",54,N],[12,"axis","wayland_server::protocol::wl_pointer::Event","",54,N],[12,"discrete","","",54,N],[17,"REQ_SET_CURSOR_SINCE","wayland_server::protocol::wl_pointer","The minimal object version supporting this request",N,N],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"set_cursor","","set the pointer surface",55,[[["self"],["wlpointer"],["u32"],["option",["wlsurface"]],["i32"],["i32"]]]],[11,"release","","release the pointer object",55,[[["self"],["wlpointer"]]]],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",56,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",56,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",57,N],[13,"Pressed","","key is pressed",57,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",58,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",59,N],[12,"format","wayland_server::protocol::wl_keyboard::Event","",59,N],[12,"fd","","",59,N],[12,"size","","",59,N],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",59,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",59,N],[12,"surface","","",59,N],[12,"keys","","",59,N],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",59,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",59,N],[12,"surface","","",59,N],[13,"Key","wayland_server::protocol::wl_keyboard","key event",59,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",59,N],[12,"time","","",59,N],[12,"key","","",59,N],[12,"state","","",59,N],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",59,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",59,N],[12,"mods_depressed","","",59,N],[12,"mods_latched","","",59,N],[12,"mods_locked","","",59,N],[12,"group","","",59,N],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",59,N],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",59,N],[12,"delay","","",59,N],[17,"REQ_RELEASE_SINCE","wayland_server::protocol::wl_keyboard","The minimal object version supporting this request",N,N],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"release","","release the keyboard object",60,[[["self"],["wlkeyboard"]]]],[0,"wl_touch","wayland_server::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_server::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",61,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",62,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",62,N],[12,"time","","",62,N],[12,"surface","","",62,N],[12,"id","","",62,N],[12,"x","","",62,N],[12,"y","","",62,N],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",62,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",62,N],[12,"time","","",62,N],[12,"id","","",62,N],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",62,N],[12,"time","wayland_server::protocol::wl_touch::Event","",62,N],[12,"id","","",62,N],[12,"x","","",62,N],[12,"y","","",62,N],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",62,N],[13,"Cancel","","touch session cancelled",62,N],[13,"Shape","","update shape of touch point",62,N],[12,"id","wayland_server::protocol::wl_touch::Event","",62,N],[12,"major","","",62,N],[12,"minor","","",62,N],[13,"Orientation","wayland_server::protocol::wl_touch","update orientation of touch point",62,N],[12,"id","wayland_server::protocol::wl_touch::Event","",62,N],[12,"orientation","","",62,N],[17,"REQ_RELEASE_SINCE","wayland_server::protocol::wl_touch","The minimal object version supporting this request",N,N],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"release","","release the touch object",63,[[["self"],["wltouch"]]]],[0,"wl_output","wayland_server::protocol","compositor output region",N,N],[3,"Mode","wayland_server::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",64,N],[13,"None","","no geometry",64,N],[13,"HorizontalRgb","","horizontal RGB",64,N],[13,"HorizontalBgr","","horizontal BGR",64,N],[13,"VerticalRgb","","vertical RGB",64,N],[13,"VerticalBgr","","vertical BGR",64,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",65,N],[13,"_90","","90 degrees counter-clockwise",65,N],[13,"_180","","180 degrees counter-clockwise",65,N],[13,"_270","","270 degrees counter-clockwise",65,N],[13,"Flipped","","180 degree flip around a vertical axis",65,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",65,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",65,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",65,N],[4,"Request","","",N,N],[13,"Release","","release the output object",66,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",67,N],[12,"x","wayland_server::protocol::wl_output::Event","",67,N],[12,"y","","",67,N],[12,"physical_width","","",67,N],[12,"physical_height","","",67,N],[12,"subpixel","","",67,N],[12,"make","","",67,N],[12,"model","","",67,N],[12,"transform","","",67,N],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",67,N],[12,"flags","wayland_server::protocol::wl_output::Event","",67,N],[12,"width","","",67,N],[12,"height","","",67,N],[12,"refresh","","",67,N],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",67,N],[13,"Scale","","output scaling properties",67,N],[12,"factor","wayland_server::protocol::wl_output::Event","",67,N],[17,"REQ_RELEASE_SINCE","wayland_server::protocol::wl_output","The minimal object version supporting this request",N,N],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",N,N],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"release","","release the output object",68,[[["self"],["wloutput"]]]],[0,"wl_region","wayland_server::protocol","region interface",N,N],[3,"WlRegion","wayland_server::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",69,N],[13,"Add","","add rectangle to region",69,N],[12,"x","wayland_server::protocol::wl_region::Request","",69,N],[12,"y","","",69,N],[12,"width","","",69,N],[12,"height","","",69,N],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",69,N],[12,"x","wayland_server::protocol::wl_region::Request","",69,N],[12,"y","","",69,N],[12,"width","","",69,N],[12,"height","","",69,N],[4,"Event","wayland_server::protocol::wl_region","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","destroy region",70,[[["self"],["wlregion"]]]],[11,"add","","add rectangle to region",70,[[["self"],["wlregion"],["i32"],["i32"],["i32"],["i32"]]]],[11,"subtract","","subtract rectangle from region",70,[[["self"],["wlregion"],["i32"],["i32"],["i32"],["i32"]]]],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",71,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",72,N],[13,"GetSubsurface","","give a surface the role sub-surface",72,N],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",72,N],[12,"surface","","",72,N],[12,"parent","","",72,N],[4,"Event","wayland_server::protocol::wl_subcompositor","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","unbind from the subcompositor interface",73,[[["self"],["wlsubcompositor"]]]],[11,"get_subsurface","","give a surface the role sub-surface",73,[[["self"],["wlsubcompositor"],["newresource",["wlsubsurface"]],["wlsurface"],["wlsurface"]]]],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",74,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",75,N],[13,"SetPosition","","reposition the sub-surface",75,N],[12,"x","wayland_server::protocol::wl_subsurface::Request","",75,N],[12,"y","","",75,N],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",75,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",75,N],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",75,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",75,N],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",75,N],[13,"SetDesync","","set sub-surface to desynchronized mode",75,N],[4,"Event","","",N,N],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",N,N],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",N,N],[8,"RequestHandler","","An interface for handling requests.",N,N],[11,"destroy","","remove sub-surface interface",76,[[["self"],["wlsubsurface"]]]],[11,"set_position","","reposition the sub-surface",76,[[["self"],["wlsubsurface"],["i32"],["i32"]]]],[11,"place_above","","restack the sub-surface",76,[[["self"],["wlsubsurface"],["wlsurface"]]]],[11,"place_below","","restack the sub-surface",76,[[["self"],["wlsubsurface"],["wlsurface"]]]],[11,"set_sync","","set sub-surface to synchronized mode",76,[[["self"],["wlsubsurface"]]]],[11,"set_desync","","set sub-surface to desynchronized mode",76,[[["self"],["wlsubsurface"]]]],[11,"done","wayland_server::protocol::wl_callback","done event",77,N],[11,"create_surface","wayland_server::protocol::wl_compositor","create new surface",10,[[["self"],["wlcompositor"],["newresource",["wlsurface"]]]]],[11,"create_region","","create new region",10,[[["self"],["wlcompositor"],["newresource",["wlregion"]]]]],[11,"create_buffer","wayland_server::protocol::wl_shm_pool","create a buffer from the pool",12,[[["self"],["wlshmpool"],["newresource",["wlbuffer"]],["i32"],["i32"],["i32"],["i32"],["format"]]]],[11,"destroy","","destroy the pool",12,[[["self"],["wlshmpool"]]]],[11,"resize","","change the size of the pool mapping",12,[[["self"],["wlshmpool"],["i32"]]]],[11,"create_pool","wayland_server::protocol::wl_shm","create a shm pool",17,[[["self"],["wlshm"],["newresource",["wlshmpool"]],["rawfd"],["i32"]]]],[11,"from_raw","","",13,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",13,[[["self"]],["u32"]]],[11,"from_raw","","",14,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",14,[[["self"]],["u32"]]],[11,"format","","pixel format description",78,N],[11,"destroy","wayland_server::protocol::wl_buffer","destroy a buffer",20,[[["self"],["wlbuffer"]]]],[11,"release","","compositor releases buffer",79,N],[11,"accept","wayland_server::protocol::wl_data_offer","accept one of the offered mime types",24,[[["self"],["wldataoffer"],["u32"],["option",["string"]]]]],[11,"receive","","request that the data is transferred",24,[[["self"],["wldataoffer"],["string"],["rawfd"]]]],[11,"destroy","","destroy data offer",24,[[["self"],["wldataoffer"]]]],[11,"finish","","the offer will no longer be used",24,[[["self"],["wldataoffer"]]]],[11,"set_actions","","set the available/preferred drag-and-drop actions",24,[[["self"],["wldataoffer"],["u32"],["u32"]]]],[11,"from_raw","","",21,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",21,[[["self"]],["u32"]]],[11,"offer","","advertise offered mime type",80,N],[11,"source_actions","","notify the source-side available actions",80,N],[11,"action","","notify the selected action",80,N],[11,"offer","wayland_server::protocol::wl_data_source","add an offered mime type",28,[[["self"],["wldatasource"],["string"]]]],[11,"destroy","","destroy the data source",28,[[["self"],["wldatasource"]]]],[11,"set_actions","","set the available drag-and-drop actions",28,[[["self"],["wldatasource"],["u32"]]]],[11,"from_raw","","",25,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",25,[[["self"]],["u32"]]],[11,"target","","a target accepts an offered mime type",81,N],[11,"send","","send the data",81,N],[11,"cancelled","","selection was cancelled",81,N],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",81,N],[11,"dnd_finished","","the drag-and-drop operation concluded",81,N],[11,"action","","notify the selected action",81,N],[11,"start_drag","wayland_server::protocol::wl_data_device","start drag-and-drop operation",32,[[["self"],["wldatadevice"],["option",["wldatasource"]],["wlsurface"],["option",["wlsurface"]],["u32"]]]],[11,"set_selection","","copy data to the selection",32,[[["self"],["wldatadevice"],["option",["wldatasource"]],["u32"]]]],[11,"release","","destroy data device",32,[[["self"],["wldatadevice"]]]],[11,"from_raw","","",29,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",29,[[["self"]],["u32"]]],[11,"data_offer","","introduce a new wl_data_offer",82,N],[11,"enter","","initiate drag-and-drop session",82,N],[11,"leave","","end drag-and-drop session",82,N],[11,"motion","","drag-and-drop session motion",82,N],[11,"drop","","end drag-and-drop session successfully",82,N],[11,"selection","","advertise new selection",82,N],[11,"create_data_source","wayland_server::protocol::wl_data_device_manager","create a new data source",34,[[["self"],["wldatadevicemanager"],["newresource",["wldatasource"]]]]],[11,"get_data_device","","create a new data device",34,[[["self"],["wldatadevicemanager"],["newresource",["wldatadevice"]],["wlseat"]]]],[18,"None","","no action",83,N],[18,"Copy","","copy action",83,N],[18,"Move","","move action",83,N],[18,"Ask","","ask action",83,N],[11,"empty","","Returns an empty set of flags.",83,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",83,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",83,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",83,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",83,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",83,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",83,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",83,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",83,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",83,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",83,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",83,[[["self"],["dndaction"],["bool"]]]],[11,"from_raw","","",83,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",83,[[["self"]],["u32"]]],[11,"get_shell_surface","wayland_server::protocol::wl_shell","create a shell surface from a surface",37,[[["self"],["wlshell"],["newresource",["wlshellsurface"]],["wlsurface"]]]],[11,"from_raw","","",35,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",35,[[["self"]],["u32"]]],[11,"pong","wayland_server::protocol::wl_shell_surface","respond to a ping event",41,[[["self"],["wlshellsurface"],["u32"]]]],[11,"_move","","start an interactive move",41,[[["self"],["wlshellsurface"],["wlseat"],["u32"]]]],[11,"resize","","start an interactive resize",41,[[["self"],["wlshellsurface"],["wlseat"],["u32"],["resize"]]]],[11,"set_toplevel","","make the surface a toplevel surface",41,[[["self"],["wlshellsurface"]]]],[11,"set_transient","","make the surface a transient surface",41,[[["self"],["wlshellsurface"],["wlsurface"],["i32"],["i32"],["transient"]]]],[11,"set_fullscreen","","make the surface a fullscreen surface",41,[[["self"],["wlshellsurface"],["fullscreenmethod"],["u32"],["option",["wloutput"]]]]],[11,"set_popup","","make the surface a popup surface",41,[[["self"],["wlshellsurface"],["wlseat"],["u32"],["wlsurface"],["i32"],["i32"],["transient"]]]],[11,"set_maximized","","make the surface a maximized surface",41,[[["self"],["wlshellsurface"],["option",["wloutput"]]]]],[11,"set_title","","set surface title",41,[[["self"],["wlshellsurface"],["string"]]]],[11,"set_class","","set surface class",41,[[["self"],["wlshellsurface"],["string"]]]],[18,"None","","no edge",84,N],[18,"Top","","top edge",84,N],[18,"Bottom","","bottom edge",84,N],[18,"Left","","left edge",84,N],[18,"TopLeft","","top and left edges",84,N],[18,"BottomLeft","","bottom and left edges",84,N],[18,"Right","","right edge",84,N],[18,"TopRight","","top and right edges",84,N],[18,"BottomRight","","bottom and right edges",84,N],[11,"empty","","Returns an empty set of flags.",84,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",84,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",84,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",84,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",84,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",84,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",84,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",84,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",84,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",84,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",84,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",84,[[["self"],["resize"],["bool"]]]],[11,"from_raw","","",84,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",84,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",85,N],[11,"empty","","Returns an empty set of flags.",85,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",85,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",85,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",85,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",85,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",85,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",85,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",85,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",85,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",85,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",85,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",85,[[["self"],["transient"],["bool"]]]],[11,"from_raw","","",85,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",85,[[["self"]],["u32"]]],[11,"from_raw","","",38,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",38,[[["self"]],["u32"]]],[11,"ping","","ping client",86,N],[11,"configure","","suggest resize",86,N],[11,"popup_done","","popup interaction is done",86,N],[11,"destroy","wayland_server::protocol::wl_surface","delete surface",45,[[["self"],["wlsurface"]]]],[11,"attach","","set the surface contents",45,[[["self"],["wlsurface"],["option",["wlbuffer"]],["i32"],["i32"]]]],[11,"damage","","mark part of the surface damaged",45,[[["self"],["wlsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"frame","","request a frame throttling hint",45,[[["self"],["wlsurface"],["newresource",["wlcallback"]]]]],[11,"set_opaque_region","","set opaque region",45,[[["self"],["wlsurface"],["option",["wlregion"]]]]],[11,"set_input_region","","set input region",45,[[["self"],["wlsurface"],["option",["wlregion"]]]]],[11,"commit","","commit pending surface state",45,[[["self"],["wlsurface"]]]],[11,"set_buffer_transform","","sets the buffer transformation",45,[[["self"],["wlsurface"],["transform"]]]],[11,"set_buffer_scale","","sets the buffer scaling factor",45,[[["self"],["wlsurface"],["i32"]]]],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",45,[[["self"],["wlsurface"],["i32"],["i32"],["i32"],["i32"]]]],[11,"from_raw","","",42,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",42,[[["self"]],["u32"]]],[11,"enter","","surface enters an output",87,N],[11,"leave","","surface leaves an output",87,N],[11,"get_pointer","wayland_server::protocol::wl_seat","return pointer object",48,[[["self"],["wlseat"],["newresource",["wlpointer"]]]]],[11,"get_keyboard","","return keyboard object",48,[[["self"],["wlseat"],["newresource",["wlkeyboard"]]]]],[11,"get_touch","","return touch object",48,[[["self"],["wlseat"],["newresource",["wltouch"]]]]],[11,"release","","release the seat object",48,[[["self"],["wlseat"]]]],[18,"Pointer","","the seat has pointer devices",88,N],[18,"Keyboard","","the seat has one or more keyboards",88,N],[18,"Touch","","the seat has touch devices",88,N],[11,"empty","","Returns an empty set of flags.",88,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",88,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",88,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",88,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",88,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",88,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",88,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",88,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",88,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",88,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",88,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",88,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",88,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",88,[[["self"]],["u32"]]],[11,"capabilities","","seat capabilities changed",89,N],[11,"name","","unique identifier for this seat",89,N],[11,"set_cursor","wayland_server::protocol::wl_pointer","set the pointer surface",55,[[["self"],["wlpointer"],["u32"],["option",["wlsurface"]],["i32"],["i32"]]]],[11,"release","","release the pointer object",55,[[["self"],["wlpointer"]]]],[11,"from_raw","","",49,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[11,"from_raw","","",50,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",50,[[["self"]],["u32"]]],[11,"from_raw","","",51,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",51,[[["self"]],["u32"]]],[11,"from_raw","","",52,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",52,[[["self"]],["u32"]]],[11,"enter","","enter event",90,N],[11,"leave","","leave event",90,N],[11,"motion","","pointer motion event",90,N],[11,"button","","pointer button event",90,N],[11,"axis","","axis event",90,N],[11,"frame","","end of a pointer event sequence",90,N],[11,"axis_source","","axis source event",90,N],[11,"axis_stop","","axis stop event",90,N],[11,"axis_discrete","","axis click event",90,N],[11,"release","wayland_server::protocol::wl_keyboard","release the keyboard object",60,[[["self"],["wlkeyboard"]]]],[11,"from_raw","","",56,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",56,[[["self"]],["u32"]]],[11,"from_raw","","",57,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",57,[[["self"]],["u32"]]],[11,"keymap","","keyboard mapping",91,N],[11,"enter","","enter event",91,N],[11,"leave","","leave event",91,N],[11,"key","","key event",91,N],[11,"modifiers","","modifier and group state",91,N],[11,"repeat_info","","repeat rate and delay",91,N],[11,"release","wayland_server::protocol::wl_touch","release the touch object",63,[[["self"],["wltouch"]]]],[11,"down","","touch down event and beginning of a touch sequence",92,N],[11,"up","","end of a touch event sequence",92,N],[11,"motion","","update of touch point coordinates",92,N],[11,"frame","","end of touch frame event",92,N],[11,"cancel","","touch session cancelled",92,N],[11,"shape","","update shape of touch point",92,N],[11,"orientation","","update orientation of touch point",92,N],[11,"release","wayland_server::protocol::wl_output","release the output object",68,[[["self"],["wloutput"]]]],[11,"from_raw","","",64,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",64,[[["self"]],["u32"]]],[11,"from_raw","","",65,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",93,N],[18,"Preferred","","indicates this is the preferred mode",93,N],[11,"empty","","Returns an empty set of flags.",93,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",93,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",93,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",93,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",93,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",93,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",93,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",93,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",93,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",93,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",93,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",93,[[["self"],["mode"],["bool"]]]],[11,"from_raw","","",93,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",93,[[["self"]],["u32"]]],[11,"geometry","","properties of the output",94,N],[11,"mode","","advertise available modes for the output",94,N],[11,"done","","sent all information about output",94,N],[11,"scale","","output scaling properties",94,N],[11,"destroy","wayland_server::protocol::wl_region","destroy region",70,[[["self"],["wlregion"]]]],[11,"add","","add rectangle to region",70,[[["self"],["wlregion"],["i32"],["i32"],["i32"],["i32"]]]],[11,"subtract","","subtract rectangle from region",70,[[["self"],["wlregion"],["i32"],["i32"],["i32"],["i32"]]]],[11,"destroy","wayland_server::protocol::wl_subcompositor","unbind from the subcompositor interface",73,[[["self"],["wlsubcompositor"]]]],[11,"get_subsurface","","give a surface the role sub-surface",73,[[["self"],["wlsubcompositor"],["newresource",["wlsubsurface"]],["wlsurface"],["wlsurface"]]]],[11,"from_raw","","",71,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",71,[[["self"]],["u32"]]],[11,"destroy","wayland_server::protocol::wl_subsurface","remove sub-surface interface",76,[[["self"],["wlsubsurface"]]]],[11,"set_position","","reposition the sub-surface",76,[[["self"],["wlsubsurface"],["i32"],["i32"]]]],[11,"place_above","","restack the sub-surface",76,[[["self"],["wlsubsurface"],["wlsurface"]]]],[11,"place_below","","restack the sub-surface",76,[[["self"],["wlsubsurface"],["wlsurface"]]]],[11,"set_sync","","set sub-surface to synchronized mode",76,[[["self"],["wlsubsurface"]]]],[11,"set_desync","","set sub-surface to desynchronized mode",76,[[["self"],["wlsubsurface"]]]],[11,"from_raw","","",74,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",74,[[["self"]],["u32"]]],[8,"HandledBy","wayland_server","Provides a callback function to handle requests of the…",N,N],[10,"handle","","Handles an event.",95,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],["box",["any"]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],["box",["any"]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],["box",["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],["box",["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],["box",["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],["box",["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],["box",["any"]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_any","","",98,[[["box"]],["box",["any"]]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],["box",["any"]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_callback","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_any","","",77,[[["box"]],["box",["any"]]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_any","","",99,[[["box"]],["box",["any"]]]],[11,"as_any","","",99,[[["self"]],["any"]]],[11,"as_any_mut","","",99,[[["self"]],["any"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],["box",["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_compositor","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],["box",["any"]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],["box",["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],["box",["any"]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into_any","","",102,[[["box"]],["box",["any"]]]],[11,"as_any","","",102,[[["self"]],["any"]]],[11,"as_any_mut","","",102,[[["self"]],["any"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],["box",["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],["box",["any"]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_shm","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],["box",["any"]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],["box",["any"]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],["box",["any"]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],["box",["any"]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_any","","",16,[[["box"]],["box",["any"]]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_buffer","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],["box",["any"]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],["box",["any"]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_any","","",19,[[["box"]],["box",["any"]]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_data_offer","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_any","","",80,[[["box"]],["box",["any"]]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_any","","",21,[[["box"]],["box",["any"]]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],["box",["any"]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],["box",["any"]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_data_source","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],["box",["any"]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],["box",["any"]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],["box",["any"]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],["box",["any"]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_data_device","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],["box",["any"]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],["box",["any"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_any","","",30,[[["box"]],["box",["any"]]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],["box",["any"]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_any","","",83,[[["box"]],["box",["any"]]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],["box",["any"]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],["box",["any"]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],["box",["any"]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_shell","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],["box",["any"]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],["box",["any"]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_any","","",36,[[["box"]],["box",["any"]]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_any","","",107,[[["box"]],["box",["any"]]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_shell_surface","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],["box",["any"]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],["box",["any"]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],["box",["any"]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],["box",["any"]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],["box",["any"]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_any","","",40,[[["box"]],["box",["any"]]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_surface","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],["box",["any"]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_any","","",42,[[["box"]],["box",["any"]]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],["box",["any"]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],["box",["any"]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_seat","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],["box",["any"]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],["box",["any"]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_any","","",46,[[["box"]],["box",["any"]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],["box",["any"]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_pointer","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_any","","",90,[[["box"]],["box",["any"]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],["box",["any"]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_any","","",50,[[["box"]],["box",["any"]]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],["box",["any"]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],["box",["any"]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],["box",["any"]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],["box",["any"]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_keyboard","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],["box",["any"]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_any","","",56,[[["box"]],["box",["any"]]]],[11,"as_any","","",56,[[["self"]],["any"]]],[11,"as_any_mut","","",56,[[["self"]],["any"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_any","","",57,[[["box"]],["box",["any"]]]],[11,"as_any","","",57,[[["self"]],["any"]]],[11,"as_any_mut","","",57,[[["self"]],["any"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],["box",["any"]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_any","","",59,[[["box"]],["box",["any"]]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_touch","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_any","","",92,[[["box"]],["box",["any"]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],["box",["any"]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],["box",["any"]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_output","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_any","","",93,[[["box"]],["box",["any"]]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],["box",["any"]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_any","","",64,[[["box"]],["box",["any"]]]],[11,"as_any","","",64,[[["self"]],["any"]]],[11,"as_any_mut","","",64,[[["self"]],["any"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_any","","",65,[[["box"]],["box",["any"]]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],["box",["any"]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],["box",["any"]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_region","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into_any","","",108,[[["box"]],["box",["any"]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_any","","",69,[[["box"]],["box",["any"]]]],[11,"as_any","","",69,[[["self"]],["any"]]],[11,"as_any_mut","","",69,[[["self"]],["any"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into_any","","",109,[[["box"]],["box",["any"]]]],[11,"as_any","","",109,[[["self"]],["any"]]],[11,"as_any_mut","","",109,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into_any","","",110,[[["box"]],["box",["any"]]]],[11,"as_any","","",110,[[["self"]],["any"]]],[11,"as_any_mut","","",110,[[["self"]],["any"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],["box",["any"]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_any","","",72,[[["box"]],["box",["any"]]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into_any","","",111,[[["box"]],["box",["any"]]]],[11,"as_any","","",111,[[["self"]],["any"]]],[11,"as_any_mut","","",111,[[["self"]],["any"]]],[11,"from","wayland_server::protocol::wl_subsurface","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into_any","","",112,[[["box"]],["box",["any"]]]],[11,"as_any","","",112,[[["self"]],["any"]]],[11,"as_any_mut","","",112,[[["self"]],["any"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_any","","",74,[[["box"]],["box",["any"]]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],["box",["any"]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into_any","","",113,[[["box"]],["box",["any"]]]],[11,"as_any","","",113,[[["self"]],["any"]]],[11,"as_any_mut","","",113,[[["self"]],["any"]]],[11,"default","wayland_server","",96,[[],["userdatamap"]]],[11,"is_destructor","","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",97,N],[11,"into_raw","","",97,[[["self"],["u32"]],["message"]]],[11,"handle","wayland_server::protocol::wl_callback","",77,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_compositor","",100,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_shm_pool","",102,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_shm","",78,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_buffer","",79,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_data_offer","",80,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_data_source","",81,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_data_device","",82,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_data_device_manager","",104,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_shell","",106,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_shell_surface","",86,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_surface","",87,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_seat","",89,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_pointer","",90,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_keyboard","",91,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_touch","",92,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_output","",94,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_region","",108,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_subcompositor","",110,[[["t"],["request"],["self"]]]],[11,"handle","wayland_server::protocol::wl_subsurface","",112,[[["t"],["request"],["self"]]]],[11,"eq","wayland_server","",5,[[["self"],["resource"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_callback","",77,[[["self"],["wlcallback"]],["bool"]]],[11,"ne","","",77,[[["self"],["wlcallback"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_compositor","",100,[[["self"],["wlcompositor"]],["bool"]]],[11,"ne","","",100,[[["self"],["wlcompositor"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm_pool","",102,[[["self"],["wlshmpool"]],["bool"]]],[11,"ne","","",102,[[["self"],["wlshmpool"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm","",13,[[["self"],["error"]],["bool"]]],[11,"eq","","",14,[[["self"],["format"]],["bool"]]],[11,"eq","","",78,[[["self"],["wlshm"]],["bool"]]],[11,"ne","","",78,[[["self"],["wlshm"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_buffer","",79,[[["self"],["wlbuffer"]],["bool"]]],[11,"ne","","",79,[[["self"],["wlbuffer"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_offer","",21,[[["self"],["error"]],["bool"]]],[11,"eq","","",80,[[["self"],["wldataoffer"]],["bool"]]],[11,"ne","","",80,[[["self"],["wldataoffer"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_source","",25,[[["self"],["error"]],["bool"]]],[11,"eq","","",81,[[["self"],["wldatasource"]],["bool"]]],[11,"ne","","",81,[[["self"],["wldatasource"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device","",29,[[["self"],["error"]],["bool"]]],[11,"eq","","",82,[[["self"],["wldatadevice"]],["bool"]]],[11,"ne","","",82,[[["self"],["wldatadevice"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",83,[[["self"],["dndaction"]],["bool"]]],[11,"eq","","",104,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"ne","","",104,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell","",35,[[["self"],["error"]],["bool"]]],[11,"eq","","",106,[[["self"],["wlshell"]],["bool"]]],[11,"ne","","",106,[[["self"],["wlshell"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["resize"]],["bool"]]],[11,"ne","","",84,[[["self"],["resize"]],["bool"]]],[11,"eq","","",85,[[["self"],["transient"]],["bool"]]],[11,"ne","","",85,[[["self"],["transient"]],["bool"]]],[11,"eq","","",38,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"eq","","",86,[[["self"],["wlshellsurface"]],["bool"]]],[11,"ne","","",86,[[["self"],["wlshellsurface"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_surface","",42,[[["self"],["error"]],["bool"]]],[11,"eq","","",87,[[["self"],["wlsurface"]],["bool"]]],[11,"ne","","",87,[[["self"],["wlsurface"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_seat","",88,[[["self"],["capability"]],["bool"]]],[11,"ne","","",88,[[["self"],["capability"]],["bool"]]],[11,"eq","","",89,[[["self"],["wlseat"]],["bool"]]],[11,"ne","","",89,[[["self"],["wlseat"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_pointer","",49,[[["self"],["error"]],["bool"]]],[11,"eq","","",50,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",51,[[["self"],["axis"]],["bool"]]],[11,"eq","","",52,[[["self"],["axissource"]],["bool"]]],[11,"eq","","",90,[[["self"],["wlpointer"]],["bool"]]],[11,"ne","","",90,[[["self"],["wlpointer"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_keyboard","",56,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","","",57,[[["self"],["keystate"]],["bool"]]],[11,"eq","","",91,[[["self"],["wlkeyboard"]],["bool"]]],[11,"ne","","",91,[[["self"],["wlkeyboard"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_touch","",92,[[["self"],["wltouch"]],["bool"]]],[11,"ne","","",92,[[["self"],["wltouch"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_output","",64,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",65,[[["self"],["transform"]],["bool"]]],[11,"eq","","",93,[[["self"],["mode"]],["bool"]]],[11,"ne","","",93,[[["self"],["mode"]],["bool"]]],[11,"eq","","",94,[[["self"],["wloutput"]],["bool"]]],[11,"ne","","",94,[[["self"],["wloutput"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_region","",108,[[["self"],["wlregion"]],["bool"]]],[11,"ne","","",108,[[["self"],["wlregion"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subcompositor","",71,[[["self"],["error"]],["bool"]]],[11,"eq","","",110,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"ne","","",110,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subsurface","",74,[[["self"],["error"]],["bool"]]],[11,"eq","","",112,[[["self"],["wlsubsurface"]],["bool"]]],[11,"ne","","",112,[[["self"],["wlsubsurface"]],["bool"]]],[11,"eq","wayland_server","",98,[[["self"],["anonymousobject"]],["bool"]]],[11,"ne","","",98,[[["self"],["anonymousobject"]],["bool"]]],[11,"as_ref","wayland_server::protocol::wl_callback","",77,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_compositor","",100,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shm_pool","",102,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shm","",78,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_buffer","",79,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_offer","",80,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_source","",81,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_device","",82,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_device_manager","",104,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shell","",106,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shell_surface","",86,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_surface","",87,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_seat","",89,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_pointer","",90,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_keyboard","",91,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_touch","",92,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_output","",94,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_region","",108,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_subcompositor","",110,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_subsurface","",112,[[["self"]],["resource"]]],[11,"as_ref","wayland_server","",98,[[["self"]],["resource"]]],[11,"cmp","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["dndaction"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["resize"]],["ordering"]]],[11,"cmp","","",85,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_seat","",88,[[["self"],["capability"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_output","",93,[[["self"],["mode"]],["ordering"]]],[11,"clone","wayland_server","",2,[[["self"]],["client"]]],[11,"clone","","",5,[[["self"]],["resource"]]],[11,"clone","wayland_server::protocol::wl_callback","",77,[[["self"]],["wlcallback"]]],[11,"clone","wayland_server::protocol::wl_compositor","",100,[[["self"]],["wlcompositor"]]],[11,"clone","wayland_server::protocol::wl_shm_pool","",102,[[["self"]],["wlshmpool"]]],[11,"clone","wayland_server::protocol::wl_shm","",13,[[["self"]],["error"]]],[11,"clone","","",14,[[["self"]],["format"]]],[11,"clone","","",78,[[["self"]],["wlshm"]]],[11,"clone","wayland_server::protocol::wl_buffer","",79,[[["self"]],["wlbuffer"]]],[11,"clone","wayland_server::protocol::wl_data_offer","",21,[[["self"]],["error"]]],[11,"clone","","",80,[[["self"]],["wldataoffer"]]],[11,"clone","wayland_server::protocol::wl_data_source","",25,[[["self"]],["error"]]],[11,"clone","","",81,[[["self"]],["wldatasource"]]],[11,"clone","wayland_server::protocol::wl_data_device","",29,[[["self"]],["error"]]],[11,"clone","","",82,[[["self"]],["wldatadevice"]]],[11,"clone","wayland_server::protocol::wl_data_device_manager","",83,[[["self"]],["dndaction"]]],[11,"clone","","",104,[[["self"]],["wldatadevicemanager"]]],[11,"clone","wayland_server::protocol::wl_shell","",35,[[["self"]],["error"]]],[11,"clone","","",106,[[["self"]],["wlshell"]]],[11,"clone","wayland_server::protocol::wl_shell_surface","",84,[[["self"]],["resize"]]],[11,"clone","","",85,[[["self"]],["transient"]]],[11,"clone","","",38,[[["self"]],["fullscreenmethod"]]],[11,"clone","","",86,[[["self"]],["wlshellsurface"]]],[11,"clone","wayland_server::protocol::wl_surface","",42,[[["self"]],["error"]]],[11,"clone","","",87,[[["self"]],["wlsurface"]]],[11,"clone","wayland_server::protocol::wl_seat","",88,[[["self"]],["capability"]]],[11,"clone","","",89,[[["self"]],["wlseat"]]],[11,"clone","wayland_server::protocol::wl_pointer","",49,[[["self"]],["error"]]],[11,"clone","","",50,[[["self"]],["buttonstate"]]],[11,"clone","","",51,[[["self"]],["axis"]]],[11,"clone","","",52,[[["self"]],["axissource"]]],[11,"clone","","",90,[[["self"]],["wlpointer"]]],[11,"clone","wayland_server::protocol::wl_keyboard","",56,[[["self"]],["keymapformat"]]],[11,"clone","","",57,[[["self"]],["keystate"]]],[11,"clone","","",91,[[["self"]],["wlkeyboard"]]],[11,"clone","wayland_server::protocol::wl_touch","",92,[[["self"]],["wltouch"]]],[11,"clone","wayland_server::protocol::wl_output","",64,[[["self"]],["subpixel"]]],[11,"clone","","",65,[[["self"]],["transform"]]],[11,"clone","","",93,[[["self"]],["mode"]]],[11,"clone","","",94,[[["self"]],["wloutput"]]],[11,"clone","wayland_server::protocol::wl_region","",108,[[["self"]],["wlregion"]]],[11,"clone","wayland_server::protocol::wl_subcompositor","",71,[[["self"]],["error"]]],[11,"clone","","",110,[[["self"]],["wlsubcompositor"]]],[11,"clone","wayland_server::protocol::wl_subsurface","",74,[[["self"]],["error"]]],[11,"clone","","",112,[[["self"]],["wlsubsurface"]]],[11,"clone","wayland_server","",98,[[["self"]],["anonymousobject"]]],[11,"extend","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["t"]]]],[11,"extend","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["t"]]]],[11,"extend","","",85,[[["self"],["t"]]]],[11,"extend","wayland_server::protocol::wl_seat","",88,[[["self"],["t"]]]],[11,"extend","wayland_server::protocol::wl_output","",93,[[["self"],["t"]]]],[11,"from","wayland_server::protocol::wl_callback","",77,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlcallback"]],["self"]]],[11,"from","wayland_server::protocol::wl_compositor","",100,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlcompositor"]],["self"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",102,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshmpool"]],["self"]]],[11,"from","wayland_server::protocol::wl_shm","",78,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshm"]],["self"]]],[11,"from","wayland_server::protocol::wl_buffer","",79,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlbuffer"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_offer","",80,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldataoffer"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_source","",81,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatasource"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_device","",82,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatadevice"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",104,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatadevicemanager"]],["self"]]],[11,"from","wayland_server::protocol::wl_shell","",106,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshell"]],["self"]]],[11,"from","wayland_server::protocol::wl_shell_surface","",86,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshellsurface"]],["self"]]],[11,"from","wayland_server::protocol::wl_surface","",87,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsurface"]],["self"]]],[11,"from","wayland_server::protocol::wl_seat","",89,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlseat"]],["self"]]],[11,"from","wayland_server::protocol::wl_pointer","",90,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlpointer"]],["self"]]],[11,"from","wayland_server::protocol::wl_keyboard","",91,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlkeyboard"]],["self"]]],[11,"from","wayland_server::protocol::wl_touch","",92,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wltouch"]],["self"]]],[11,"from","wayland_server::protocol::wl_output","",94,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wloutput"]],["self"]]],[11,"from","wayland_server::protocol::wl_region","",108,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlregion"]],["self"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",110,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsubcompositor"]],["self"]]],[11,"from","wayland_server::protocol::wl_subsurface","",112,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsubsurface"]],["self"]]],[11,"from","","",98,[[["resource"]],["self"]]],[11,"from","","",5,[[["anonymousobject"]],["self"]]],[11,"partial_cmp","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",83,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",83,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",83,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",83,[[["self"],["dndaction"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",84,[[["self"],["resize"]],["bool"]]],[11,"le","","",84,[[["self"],["resize"]],["bool"]]],[11,"gt","","",84,[[["self"],["resize"]],["bool"]]],[11,"ge","","",84,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",85,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",85,[[["self"],["transient"]],["bool"]]],[11,"le","","",85,[[["self"],["transient"]],["bool"]]],[11,"gt","","",85,[[["self"],["transient"]],["bool"]]],[11,"ge","","",85,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_seat","",88,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",88,[[["self"],["capability"]],["bool"]]],[11,"le","","",88,[[["self"],["capability"]],["bool"]]],[11,"gt","","",88,[[["self"],["capability"]],["bool"]]],[11,"ge","","",88,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_output","",93,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",93,[[["self"],["mode"]],["bool"]]],[11,"le","","",93,[[["self"],["mode"]],["bool"]]],[11,"gt","","",93,[[["self"],["mode"]],["bool"]]],[11,"ge","","",93,[[["self"],["mode"]],["bool"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shm","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_offer","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_source","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_surface","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_pointer","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_keyboard","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subcompositor","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subsurface","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",93,[[["self"],["formatter"]],["result"]]],[11,"hash","wayland_server::protocol::wl_data_device_manager","",83,N],[11,"hash","wayland_server::protocol::wl_shell_surface","",84,N],[11,"hash","","",85,N],[11,"hash","wayland_server::protocol::wl_seat","",88,N],[11,"hash","wayland_server::protocol::wl_output","",93,N],[11,"sub","wayland_server::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",83,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub","wayland_server::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",84,[[["self"],["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",85,[[["self"],["transient"]],["transient"]]],[11,"sub","wayland_server::protocol::wl_seat","Returns the set difference of the two sets of flags.",88,[[["self"],["capability"]],["capability"]]],[11,"sub","wayland_server::protocol::wl_output","Returns the set difference of the two sets of flags.",93,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags enabled in the set.",83,[[["self"],["dndaction"]]]],[11,"sub_assign","wayland_server::protocol::wl_shell_surface","Disables all flags enabled in the set.",84,[[["self"],["resize"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",85,[[["self"],["transient"]]]],[11,"sub_assign","wayland_server::protocol::wl_seat","Disables all flags enabled in the set.",88,[[["self"],["capability"]]]],[11,"sub_assign","wayland_server::protocol::wl_output","Disables all flags enabled in the set.",93,[[["self"],["mode"]]]],[11,"not","wayland_server::protocol::wl_data_device_manager","Returns the complement of this set of flags.",83,[[["self"]],["dndaction"]]],[11,"not","wayland_server::protocol::wl_shell_surface","Returns the complement of this set of flags.",84,[[["self"]],["resize"]]],[11,"not","","Returns the complement of this set of flags.",85,[[["self"]],["transient"]]],[11,"not","wayland_server::protocol::wl_seat","Returns the complement of this set of flags.",88,[[["self"]],["capability"]]],[11,"not","wayland_server::protocol::wl_output","Returns the complement of this set of flags.",93,[[["self"]],["mode"]]],[11,"bitand","wayland_server::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",83,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand","wayland_server::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",84,[[["self"],["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",85,[[["self"],["transient"]],["transient"]]],[11,"bitand","wayland_server::protocol::wl_seat","Returns the intersection between the two sets of flags.",88,[[["self"],["capability"]],["capability"]]],[11,"bitand","wayland_server::protocol::wl_output","Returns the intersection between the two sets of flags.",93,[[["self"],["mode"]],["mode"]]],[11,"bitor","wayland_server::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",83,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor","wayland_server::protocol::wl_shell_surface","Returns the union of the two sets of flags.",84,[[["self"],["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",85,[[["self"],["transient"]],["transient"]]],[11,"bitor","wayland_server::protocol::wl_seat","Returns the union of the two sets of flags.",88,[[["self"],["capability"]],["capability"]]],[11,"bitor","wayland_server::protocol::wl_output","Returns the union of the two sets of flags.",93,[[["self"],["mode"]],["mode"]]],[11,"bitxor","wayland_server::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",83,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_server::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",84,[[["self"],["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",85,[[["self"],["transient"]],["transient"]]],[11,"bitxor","wayland_server::protocol::wl_seat","Returns the left flags, but with all the right flags…",88,[[["self"],["capability"]],["capability"]]],[11,"bitxor","wayland_server::protocol::wl_output","Returns the left flags, but with all the right flags…",93,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags disabled in the set.",83,[[["self"],["dndaction"]]]],[11,"bitand_assign","wayland_server::protocol::wl_shell_surface","Disables all flags disabled in the set.",84,[[["self"],["resize"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",85,[[["self"],["transient"]]]],[11,"bitand_assign","wayland_server::protocol::wl_seat","Disables all flags disabled in the set.",88,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_server::protocol::wl_output","Disables all flags disabled in the set.",93,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_server::protocol::wl_data_device_manager","Adds the set of flags.",83,[[["self"],["dndaction"]]]],[11,"bitor_assign","wayland_server::protocol::wl_shell_surface","Adds the set of flags.",84,[[["self"],["resize"]]]],[11,"bitor_assign","","Adds the set of flags.",85,[[["self"],["transient"]]]],[11,"bitor_assign","wayland_server::protocol::wl_seat","Adds the set of flags.",88,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_server::protocol::wl_output","Adds the set of flags.",93,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_data_device_manager","Toggles the set of flags.",83,[[["self"],["dndaction"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_shell_surface","Toggles the set of flags.",84,[[["self"],["resize"]]]],[11,"bitxor_assign","","Toggles the set of flags.",85,[[["self"],["transient"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_seat","Toggles the set of flags.",88,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_output","Toggles the set of flags.",93,[[["self"],["mode"]]]],[11,"from_iter","wayland_server::protocol::wl_data_device_manager","",83,[[["t"]],["dndaction"]]],[11,"from_iter","wayland_server::protocol::wl_shell_surface","",84,[[["t"]],["resize"]]],[11,"from_iter","","",85,[[["t"]],["transient"]]],[11,"from_iter","wayland_server::protocol::wl_seat","",88,[[["t"]],["capability"]]],[11,"from_iter","wayland_server::protocol::wl_output","",93,[[["t"]],["mode"]]],[11,"is_destructor","wayland_server::protocol::wl_callback","",99,[[["self"]],["bool"]]],[11,"opcode","","",99,[[["self"]],["u16"]]],[11,"since","","",99,[[["self"]],["u32"]]],[11,"child","","",99,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",99,N],[11,"into_raw","","",99,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",8,[[["self"]],["bool"]]],[11,"opcode","","",8,[[["self"]],["u16"]]],[11,"since","","",8,[[["self"]],["u32"]]],[11,"child","","",8,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",8,N],[11,"into_raw","","",8,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_compositor","",9,[[["self"]],["bool"]]],[11,"opcode","","",9,[[["self"]],["u16"]]],[11,"since","","",9,[[["self"]],["u32"]]],[11,"child","","",9,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",9,N],[11,"into_raw","","",9,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",101,N],[11,"into_raw","","",101,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",11,[[["self"]],["bool"]]],[11,"opcode","","",11,[[["self"]],["u16"]]],[11,"since","","",11,[[["self"]],["u32"]]],[11,"child","","",11,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",11,N],[11,"into_raw","","",11,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",103,[[["self"]],["bool"]]],[11,"opcode","","",103,[[["self"]],["u16"]]],[11,"since","","",103,[[["self"]],["u32"]]],[11,"child","","",103,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",103,N],[11,"into_raw","","",103,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_shm","",15,[[["self"]],["bool"]]],[11,"opcode","","",15,[[["self"]],["u16"]]],[11,"since","","",15,[[["self"]],["u32"]]],[11,"child","","",15,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",15,N],[11,"into_raw","","",15,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",16,[[["self"]],["bool"]]],[11,"opcode","","",16,[[["self"]],["u16"]]],[11,"since","","",16,[[["self"]],["u32"]]],[11,"child","","",16,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",16,N],[11,"into_raw","","",16,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_buffer","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",19,[[["self"]],["bool"]]],[11,"opcode","","",19,[[["self"]],["u16"]]],[11,"since","","",19,[[["self"]],["u32"]]],[11,"child","","",19,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",19,N],[11,"into_raw","","",19,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_data_offer","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"since","","",22,[[["self"]],["u32"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"since","","",23,[[["self"]],["u32"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_data_source","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"since","","",26,[[["self"]],["u32"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"since","","",27,[[["self"]],["u32"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"since","","",30,[[["self"]],["u32"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"since","","",31,[[["self"]],["u32"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device_manager","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"since","","",33,[[["self"]],["u32"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",105,[[["self"]],["bool"]]],[11,"opcode","","",105,[[["self"]],["u16"]]],[11,"since","","",105,[[["self"]],["u32"]]],[11,"child","","",105,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",105,N],[11,"into_raw","","",105,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_shell","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"since","","",36,[[["self"]],["u32"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",36,N],[11,"into_raw","","",36,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",107,[[["self"]],["bool"]]],[11,"opcode","","",107,[[["self"]],["u16"]]],[11,"since","","",107,[[["self"]],["u32"]]],[11,"child","","",107,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",107,N],[11,"into_raw","","",107,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_shell_surface","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"since","","",39,[[["self"]],["u32"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"opcode","","",40,[[["self"]],["u16"]]],[11,"since","","",40,[[["self"]],["u32"]]],[11,"child","","",40,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",40,N],[11,"into_raw","","",40,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_surface","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"since","","",43,[[["self"]],["u32"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"since","","",44,[[["self"]],["u32"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_seat","",46,[[["self"]],["bool"]]],[11,"opcode","","",46,[[["self"]],["u16"]]],[11,"since","","",46,[[["self"]],["u32"]]],[11,"child","","",46,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",46,N],[11,"into_raw","","",46,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"since","","",47,[[["self"]],["u32"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",47,N],[11,"into_raw","","",47,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_pointer","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"since","","",53,[[["self"]],["u32"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",53,N],[11,"into_raw","","",53,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"since","","",54,[[["self"]],["u32"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",54,N],[11,"into_raw","","",54,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_keyboard","",58,[[["self"]],["bool"]]],[11,"opcode","","",58,[[["self"]],["u16"]]],[11,"since","","",58,[[["self"]],["u32"]]],[11,"child","","",58,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",58,N],[11,"into_raw","","",58,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",59,[[["self"]],["bool"]]],[11,"opcode","","",59,[[["self"]],["u16"]]],[11,"since","","",59,[[["self"]],["u32"]]],[11,"child","","",59,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",59,N],[11,"into_raw","","",59,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_touch","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"since","","",61,[[["self"]],["u32"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"since","","",62,[[["self"]],["u32"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",62,N],[11,"into_raw","","",62,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_output","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"since","","",66,[[["self"]],["u32"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",66,N],[11,"into_raw","","",66,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"since","","",67,[[["self"]],["u32"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_region","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"since","","",69,[[["self"]],["u32"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",69,N],[11,"into_raw","","",69,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",109,[[["self"]],["bool"]]],[11,"opcode","","",109,[[["self"]],["u16"]]],[11,"since","","",109,[[["self"]],["u32"]]],[11,"child","","",109,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",109,N],[11,"into_raw","","",109,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_subcompositor","",72,[[["self"]],["bool"]]],[11,"opcode","","",72,[[["self"]],["u16"]]],[11,"since","","",72,[[["self"]],["u32"]]],[11,"child","","",72,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",72,N],[11,"into_raw","","",72,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",111,[[["self"]],["bool"]]],[11,"opcode","","",111,[[["self"]],["u16"]]],[11,"since","","",111,[[["self"]],["u32"]]],[11,"child","","",111,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",111,N],[11,"into_raw","","",111,[[["self"],["u32"]],["message"]]],[11,"is_destructor","wayland_server::protocol::wl_subsurface","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"since","","",75,[[["self"]],["u32"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",75,N],[11,"into_raw","","",75,[[["self"],["u32"]],["message"]]],[11,"is_destructor","","",113,[[["self"]],["bool"]]],[11,"opcode","","",113,[[["self"]],["u16"]]],[11,"since","","",113,[[["self"]],["u32"]]],[11,"child","","",113,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",113,N],[11,"into_raw","","",113,[[["self"],["u32"]],["message"]]],[11,"new","wayland_server","Create a new map",96,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",96,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",96,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",96,[[["self"],["f"]],["bool"]]]],"paths":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"NewResource"],[3,"ResourceMap"],[4,"Event"],[4,"Request"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestHandler"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[4,"Error"],[4,"Request"],[8,"RequestHandler"],[3,"WlCallback"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[8,"HandledBy"],[3,"UserDataMap"],[4,"NoMessage"],[3,"AnonymousObject"],[4,"Request"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"Event"]]};
searchIndex["wl_clip"]={"doc":"","items":[],"paths":[]};
searchIndex["wl_clipboard_rs"]={"doc":"A safe Rust crate for working with the Wayland clipboard.","items":[[0,"copy","wl_clipboard_rs","Copying and clearing clipboard contents.",N,N],[3,"Options","wl_clipboard_rs::copy","Options and flags that are used to customize the copying.",N,N],[4,"ClipboardType","","The clipboard to operate on.",N,N],[13,"Regular","","The regular clipboard.",0,N],[13,"Primary","","The \"primary\" clipboard.",0,N],[13,"Both","","Operate on both clipboards at once.",0,N],[4,"MimeType","","MIME type to offer the copied data under.",N,N],[13,"Autodetect","","Detect the MIME type automatically from the data.",1,N],[13,"Text","","Offer a number of common plain text MIME types.",1,N],[13,"Specific","","Offer a specific MIME type.",1,N],[4,"Source","","Source for copying.",N,N],[13,"StdIn","","Copy contents of the standard input.",2,N],[13,"Bytes","","Copy the given bytes.",2,N],[4,"Seat","","Seat to operate on.",N,N],[13,"All","","Operate on all existing seats at once.",3,N],[13,"Specific","","Operate on a seat with the given name.",3,N],[4,"ServeRequests","","Number of paste requests to serve.",N,N],[13,"Unlimited","","Serve requests indefinitely.",4,N],[13,"Only","","Serve only the given number of requests.",4,N],[4,"SourceCreationError","","Errors that can occur for copying the source data to a…",N,N],[13,"TempDirCreate","","",5,N],[13,"TempFileCreate","","",5,N],[13,"DataCopy","","",5,N],[13,"TempFileWrite","","",5,N],[13,"TempFileOpen","","",5,N],[13,"TempFileMetadata","","",5,N],[13,"TempFileSeek","","",5,N],[13,"TempFileRead","","",5,N],[13,"TempFileTruncate","","",5,N],[4,"Error","","Errors that can occur for copying and clearing the…",N,N],[13,"NoSeats","","",6,N],[13,"WaylandConnection","","",6,N],[13,"WaylandCommunication","","",6,N],[13,"MissingProtocol","","",6,N],[12,"name","wl_clipboard_rs::copy::Error","",6,N],[12,"version","","",6,N],[13,"PrimarySelectionUnsupported","wl_clipboard_rs::copy","",6,N],[13,"SeatNotFound","","",6,N],[13,"Fork","","",6,N],[13,"TempCopy","","",6,N],[13,"TempFileRemove","","",6,N],[13,"TempDirRemove","","",6,N],[13,"Paste","","",6,N],[5,"clear","","Clears the clipboard for the given seat.",N,[[["clipboardtype"],["seat"]],["result",["error"]]]],[5,"copy","","Copies data to the clipboard.",N,[[["options"],["source"],["mimetype"]],["result",["error"]]]],[11,"new","","Creates a blank new set of options ready for configuration.",7,[[],["self"]]],[11,"clipboard","","Sets the clipboard to work with.",7,[[["self"],["clipboardtype"]],["self"]]],[11,"seat","","Sets the seat to use for copying.",7,[[["self"],["seat"]],["self"]]],[11,"trim_newline","","Sets the flag for trimming the trailing newline.",7,[[["self"],["bool"]],["self"]]],[11,"foreground","","Sets the flag for not forking.",7,[[["self"],["bool"]],["self"]]],[11,"serve_requests","","Sets the number of requests to serve.",7,[[["self"],["serverequests"]],["self"]]],[11,"copy","","Invokes the copy operation. See `copy()`.",7,[[["self"],["source"],["mimetype"]],["result",["error"]]]],[0,"paste","wl_clipboard_rs","Getting the offered MIME types and the clipboard contents.",N,N],[4,"ClipboardType","wl_clipboard_rs::paste","The clipboard to operate on.",N,N],[13,"Regular","","The regular clipboard.",8,N],[13,"Primary","","The \"primary\" clipboard.",8,N],[4,"MimeType","","MIME types that can be requested from the clipboard.",N,N],[13,"Any","","Request any available MIME type.",9,N],[13,"Text","","Request a plain text MIME type.",9,N],[13,"TextWithPriority","","Request the given MIME type, and if it's not available…",9,N],[13,"Specific","","Request a specific MIME type.",9,N],[4,"Seat","","Seat to operate on.",N,N],[13,"Unspecified","","Operate on one of the existing seats depending on the…",10,N],[13,"Specific","","Operate on a seat with the given name.",10,N],[4,"Error","","Errors that can occur for pasting and listing MIME types.",N,N],[13,"NoSeats","","",11,N],[13,"ClipboardEmpty","","",11,N],[13,"NoMimeType","","",11,N],[13,"WaylandConnection","","",11,N],[13,"WaylandCommunication","","",11,N],[13,"MissingProtocol","","",11,N],[12,"name","wl_clipboard_rs::paste::Error","",11,N],[12,"version","","",11,N],[13,"PrimarySelectionUnsupported","wl_clipboard_rs::paste","",11,N],[13,"SeatNotFound","","",11,N],[13,"PipeCreation","","",11,N],[5,"get_mime_types","","Retrieves the offered MIME types.",N,[[["clipboardtype"],["seat"]],["result",["hashset","error"]]]],[5,"get_contents","","Retrieves the clipboard contents.",N,[[["clipboardtype"],["seat"],["mimetype"]],["result",["error"]]]],[0,"utils","wl_clipboard_rs","Helper functions.",N,N],[4,"Error","wl_clipboard_rs::utils","Errors that can occur in `copy_data()`.",N,N],[13,"SetSourceFdFlags","","",12,N],[13,"SetTargetFdFlags","","",12,N],[13,"Fork","","",12,N],[13,"CloseSourceFd","","",12,N],[13,"CloseTargetFd","","",12,N],[13,"Wait","","",12,N],[13,"WaitUnexpected","","",12,N],[13,"ChildError","","",12,N],[5,"is_text","","Checks if the given MIME type represents plain text.",N,[[["str"]],["bool"]]],[5,"copy_data","","Copies data from one file to another.",N,[[["option",["rawfd"]],["rawfd"],["bool"]],["result",["error"]]]],[11,"from","wl_clipboard_rs::copy","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],["box",["any"]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_any","","",0,[[["box"]],["box",["any"]]]],[11,"as_any","","",0,[[["self"]],["any"]]],[11,"as_any_mut","","",0,[[["self"]],["any"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_any","","",1,[[["box"]],["box",["any"]]]],[11,"as_any","","",1,[[["self"]],["any"]]],[11,"as_any_mut","","",1,[[["self"]],["any"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],["box",["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],["box",["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],["box",["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_fail","","",5,[[["self"]],["fail"]]],[11,"into_any","","",5,[[["box"]],["box",["any"]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"as_fail","","",6,[[["self"]],["fail"]]],[11,"into_any","","",6,[[["box"]],["box",["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"from","wl_clipboard_rs::paste","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],["box",["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],["box",["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],["box",["any"]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"as_fail","","",11,[[["self"]],["fail"]]],[11,"into_any","","",11,[[["box"]],["box",["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"to_string","wl_clipboard_rs::utils","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"as_fail","","",12,[[["self"]],["fail"]]],[11,"into_any","","",12,[[["box"]],["box",["any"]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"eq","wl_clipboard_rs::copy","",0,[[["self"],["clipboardtype"]],["bool"]]],[11,"eq","","",1,[[["self"],["mimetype"]],["bool"]]],[11,"ne","","",1,[[["self"],["mimetype"]],["bool"]]],[11,"eq","","",2,[[["self"],["source"]],["bool"]]],[11,"ne","","",2,[[["self"],["source"]],["bool"]]],[11,"eq","","",3,[[["self"],["seat"]],["bool"]]],[11,"ne","","",3,[[["self"],["seat"]],["bool"]]],[11,"eq","","",4,[[["self"],["serverequests"]],["bool"]]],[11,"ne","","",4,[[["self"],["serverequests"]],["bool"]]],[11,"eq","","",7,[[["self"],["options"]],["bool"]]],[11,"ne","","",7,[[["self"],["options"]],["bool"]]],[11,"eq","wl_clipboard_rs::paste","",8,[[["self"],["clipboardtype"]],["bool"]]],[11,"eq","","",9,[[["self"],["mimetype"]],["bool"]]],[11,"ne","","",9,[[["self"],["mimetype"]],["bool"]]],[11,"eq","","",10,[[["self"],["seat"]],["bool"]]],[11,"ne","","",10,[[["self"],["seat"]],["bool"]]],[11,"default","wl_clipboard_rs::copy","",0,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",7,[[],["options"]]],[11,"default","wl_clipboard_rs::paste","",8,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"cmp","wl_clipboard_rs::copy","",0,[[["self"],["clipboardtype"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["mimetype"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["source"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["seat"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["serverequests"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["options"]],["ordering"]]],[11,"cmp","wl_clipboard_rs::paste","",8,[[["self"],["clipboardtype"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["mimetype"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["seat"]],["ordering"]]],[11,"clone","wl_clipboard_rs::copy","",0,[[["self"]],["clipboardtype"]]],[11,"clone","","",1,[[["self"]],["mimetype"]]],[11,"clone","","",2,[[["self"]],["source"]]],[11,"clone","","",3,[[["self"]],["seat"]]],[11,"clone","","",4,[[["self"]],["serverequests"]]],[11,"clone","","",7,[[["self"]],["options"]]],[11,"clone","wl_clipboard_rs::paste","",8,[[["self"]],["clipboardtype"]]],[11,"clone","","",9,[[["self"]],["mimetype"]]],[11,"clone","","",10,[[["self"]],["seat"]]],[11,"partial_cmp","wl_clipboard_rs::copy","",0,[[["self"],["clipboardtype"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["mimetype"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["mimetype"]],["bool"]]],[11,"le","","",1,[[["self"],["mimetype"]],["bool"]]],[11,"gt","","",1,[[["self"],["mimetype"]],["bool"]]],[11,"ge","","",1,[[["self"],["mimetype"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["source"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["source"]],["bool"]]],[11,"le","","",2,[[["self"],["source"]],["bool"]]],[11,"gt","","",2,[[["self"],["source"]],["bool"]]],[11,"ge","","",2,[[["self"],["source"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["seat"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["seat"]],["bool"]]],[11,"le","","",3,[[["self"],["seat"]],["bool"]]],[11,"gt","","",3,[[["self"],["seat"]],["bool"]]],[11,"ge","","",3,[[["self"],["seat"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["serverequests"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["serverequests"]],["bool"]]],[11,"le","","",4,[[["self"],["serverequests"]],["bool"]]],[11,"gt","","",4,[[["self"],["serverequests"]],["bool"]]],[11,"ge","","",4,[[["self"],["serverequests"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["options"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["options"]],["bool"]]],[11,"le","","",7,[[["self"],["options"]],["bool"]]],[11,"gt","","",7,[[["self"],["options"]],["bool"]]],[11,"ge","","",7,[[["self"],["options"]],["bool"]]],[11,"partial_cmp","wl_clipboard_rs::paste","",8,[[["self"],["clipboardtype"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["mimetype"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["mimetype"]],["bool"]]],[11,"le","","",9,[[["self"],["mimetype"]],["bool"]]],[11,"gt","","",9,[[["self"],["mimetype"]],["bool"]]],[11,"ge","","",9,[[["self"],["mimetype"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["seat"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["seat"]],["bool"]]],[11,"le","","",10,[[["self"],["seat"]],["bool"]]],[11,"gt","","",10,[[["self"],["seat"]],["bool"]]],[11,"ge","","",10,[[["self"],["seat"]],["bool"]]],[11,"fmt","wl_clipboard_rs::copy","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","wl_clipboard_rs::paste","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","wl_clipboard_rs::utils","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","wl_clipboard_rs::copy","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","wl_clipboard_rs::paste","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","wl_clipboard_rs::utils","",12,[[["self"],["formatter"]],["result"]]],[11,"hash","wl_clipboard_rs::copy","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",7,N],[11,"hash","wl_clipboard_rs::paste","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"name","wl_clipboard_rs::copy","",5,[[["self"]],["option",["str"]]]],[11,"cause","","",5,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",5,[[["self"]],["option",["backtrace"]]]],[11,"name","","",6,[[["self"]],["option",["str"]]]],[11,"cause","","",6,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",6,[[["self"]],["option",["backtrace"]]]],[11,"name","wl_clipboard_rs::paste","",11,[[["self"]],["option",["str"]]]],[11,"cause","","",11,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",11,[[["self"]],["option",["backtrace"]]]],[11,"name","wl_clipboard_rs::utils","",12,[[["self"]],["option",["str"]]]],[11,"cause","","",12,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",12,[[["self"]],["option",["backtrace"]]]]],"paths":[[4,"ClipboardType"],[4,"MimeType"],[4,"Source"],[4,"Seat"],[4,"ServeRequests"],[4,"SourceCreationError"],[4,"Error"],[3,"Options"],[4,"ClipboardType"],[4,"MimeType"],[4,"Seat"],[4,"Error"],[4,"Error"]]};
searchIndex["wl_copy"]={"doc":"","items":[],"paths":[]};
searchIndex["wl_paste"]={"doc":"","items":[],"paths":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);
